var Rc=Object.defineProperty;var Ln=e=>{throw TypeError(e)};var Cc=(e,t,s)=>t in e?Rc(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var O=(e,t,s)=>Cc(e,typeof t!="symbol"?t+"":t,s),Ni=(e,t,s)=>t.has(e)||Ln("Cannot "+s);var k=(e,t,s)=>(Ni(e,t,"read from private field"),s?s.call(e):t.get(e)),W=(e,t,s)=>t.has(e)?Ln("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,s),F=(e,t,s,r)=>(Ni(e,t,"write to private field"),r?r.call(e,s):t.set(e,s),s),V=(e,t,s)=>(Ni(e,t,"access private method"),s);var $n=(e,t,s,r)=>({set _(i){F(e,t,i,s)},get _(){return k(e,t,r)}});var Fn=(e,t,s)=>(r,i)=>{let a=-1;return n(0);async function n(o){if(o<=a)throw new Error("next() called multiple times");a=o;let l,d=!1,c;if(e[o]?(c=e[o][0][0],r.req.routeIndex=o):c=o===e.length&&i||void 0,c)try{l=await c(r,()=>n(o+1))}catch(u){if(u instanceof Error&&t)r.error=u,l=await t(u,r),d=!0;else throw u}else r.finalized===!1&&s&&(l=await s(r));return l&&(r.finalized===!1||d)&&(r.res=l),r}},Dc=Symbol(),Nc=async(e,t=Object.create(null))=>{const{all:s=!1,dot:r=!1}=t,a=(e instanceof Xl?e.raw.headers:e.headers).get("Content-Type");return a!=null&&a.startsWith("multipart/form-data")||a!=null&&a.startsWith("application/x-www-form-urlencoded")?Pc(e,{all:s,dot:r}):{}};async function Pc(e,t){const s=await e.formData();return s?Ac(s,t):{}}function Ac(e,t){const s=Object.create(null);return e.forEach((r,i)=>{t.all||i.endsWith("[]")?Oc(s,i,r):s[i]=r}),t.dot&&Object.entries(s).forEach(([r,i])=>{r.includes(".")&&(jc(s,r,i),delete s[r])}),s}var Oc=(e,t,s)=>{e[t]!==void 0?Array.isArray(e[t])?e[t].push(s):e[t]=[e[t],s]:t.endsWith("[]")?e[t]=[s]:e[t]=s},jc=(e,t,s)=>{let r=e;const i=t.split(".");i.forEach((a,n)=>{n===i.length-1?r[a]=s:((!r[a]||typeof r[a]!="object"||Array.isArray(r[a])||r[a]instanceof File)&&(r[a]=Object.create(null)),r=r[a])})},Yl=e=>{const t=e.split("/");return t[0]===""&&t.shift(),t},Ic=e=>{const{groups:t,path:s}=Mc(e),r=Yl(s);return Lc(r,t)},Mc=e=>{const t=[];return e=e.replace(/\{[^}]+\}/g,(s,r)=>{const i=`@${r}`;return t.push([i,s]),i}),{groups:t,path:e}},Lc=(e,t)=>{for(let s=t.length-1;s>=0;s--){const[r]=t[s];for(let i=e.length-1;i>=0;i--)if(e[i].includes(r)){e[i]=e[i].replace(r,t[s][1]);break}}return e},Er={},$c=(e,t)=>{if(e==="*")return"*";const s=e.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/);if(s){const r=`${e}#${t}`;return Er[r]||(s[2]?Er[r]=t&&t[0]!==":"&&t[0]!=="*"?[r,s[1],new RegExp(`^${s[2]}(?=/${t})`)]:[e,s[1],new RegExp(`^${s[2]}$`)]:Er[r]=[e,s[1],!0]),Er[r]}return null},li=(e,t)=>{try{return t(e)}catch{return e.replace(/(?:%[0-9A-Fa-f]{2})+/g,s=>{try{return t(s)}catch{return s}})}},Fc=e=>li(e,decodeURI),Kl=e=>{const t=e.url,s=t.indexOf("/",t.charCodeAt(9)===58?13:8);let r=s;for(;r<t.length;r++){const i=t.charCodeAt(r);if(i===37){const a=t.indexOf("?",r),n=t.slice(s,a===-1?void 0:a);return Fc(n.includes("%25")?n.replace(/%25/g,"%2525"):n)}else if(i===63)break}return t.slice(s,r)},Bc=e=>{const t=Kl(e);return t.length>1&&t.at(-1)==="/"?t.slice(0,-1):t},_s=(e,t,...s)=>(s.length&&(t=_s(t,...s)),`${(e==null?void 0:e[0])==="/"?"":"/"}${e}${t==="/"?"":`${(e==null?void 0:e.at(-1))==="/"?"":"/"}${(t==null?void 0:t[0])==="/"?t.slice(1):t}`}`),Zl=e=>{if(e.charCodeAt(e.length-1)!==63||!e.includes(":"))return null;const t=e.split("/"),s=[];let r="";return t.forEach(i=>{if(i!==""&&!/\:/.test(i))r+="/"+i;else if(/\:/.test(i))if(/\?/.test(i)){s.length===0&&r===""?s.push("/"):s.push(r);const a=i.replace("?","");r+="/"+a,s.push(r)}else r+="/"+i}),s.filter((i,a,n)=>n.indexOf(i)===a)},Pi=e=>/[%+]/.test(e)?(e.indexOf("+")!==-1&&(e=e.replace(/\+/g," ")),e.indexOf("%")!==-1?li(e,en):e):e,Ql=(e,t,s)=>{let r;if(!s&&t&&!/[%+]/.test(t)){let n=e.indexOf(`?${t}`,8);for(n===-1&&(n=e.indexOf(`&${t}`,8));n!==-1;){const o=e.charCodeAt(n+t.length+1);if(o===61){const l=n+t.length+2,d=e.indexOf("&",l);return Pi(e.slice(l,d===-1?void 0:d))}else if(o==38||isNaN(o))return"";n=e.indexOf(`&${t}`,n+1)}if(r=/[%+]/.test(e),!r)return}const i={};r??(r=/[%+]/.test(e));let a=e.indexOf("?",8);for(;a!==-1;){const n=e.indexOf("&",a+1);let o=e.indexOf("=",a);o>n&&n!==-1&&(o=-1);let l=e.slice(a+1,o===-1?n===-1?void 0:n:o);if(r&&(l=Pi(l)),a=n,l==="")continue;let d;o===-1?d="":(d=e.slice(o+1,n===-1?void 0:n),r&&(d=Pi(d))),s?(i[l]&&Array.isArray(i[l])||(i[l]=[]),i[l].push(d)):i[l]??(i[l]=d)}return t?i[t]:i},Uc=Ql,Hc=(e,t)=>Ql(e,t,!0),en=decodeURIComponent,Bn=e=>li(e,en),Rs,Ue,ht,ed,td,Ga,Pt,Bl,Xl=(Bl=class{constructor(e,t="/",s=[[]]){W(this,ht);O(this,"raw");W(this,Rs);W(this,Ue);O(this,"routeIndex",0);O(this,"path");O(this,"bodyCache",{});W(this,Pt,e=>{const{bodyCache:t,raw:s}=this,r=t[e];if(r)return r;const i=Object.keys(t)[0];return i?t[i].then(a=>(i==="json"&&(a=JSON.stringify(a)),new Response(a)[e]())):t[e]=s[e]()});this.raw=e,this.path=t,F(this,Ue,s),F(this,Rs,{})}param(e){return e?V(this,ht,ed).call(this,e):V(this,ht,td).call(this)}query(e){return Uc(this.url,e)}queries(e){return Hc(this.url,e)}header(e){if(e)return this.raw.headers.get(e)??void 0;const t={};return this.raw.headers.forEach((s,r)=>{t[r]=s}),t}async parseBody(e){var t;return(t=this.bodyCache).parsedBody??(t.parsedBody=await Nc(this,e))}json(){return k(this,Pt).call(this,"text").then(e=>JSON.parse(e))}text(){return k(this,Pt).call(this,"text")}arrayBuffer(){return k(this,Pt).call(this,"arrayBuffer")}blob(){return k(this,Pt).call(this,"blob")}formData(){return k(this,Pt).call(this,"formData")}addValidatedData(e,t){k(this,Rs)[e]=t}valid(e){return k(this,Rs)[e]}get url(){return this.raw.url}get method(){return this.raw.method}get[Dc](){return k(this,Ue)}get matchedRoutes(){return k(this,Ue)[0].map(([[,e]])=>e)}get routePath(){return k(this,Ue)[0].map(([[,e]])=>e)[this.routeIndex].path}},Rs=new WeakMap,Ue=new WeakMap,ht=new WeakSet,ed=function(e){const t=k(this,Ue)[0][this.routeIndex][1][e],s=V(this,ht,Ga).call(this,t);return s?/\%/.test(s)?Bn(s):s:void 0},td=function(){const e={},t=Object.keys(k(this,Ue)[0][this.routeIndex][1]);for(const s of t){const r=V(this,ht,Ga).call(this,k(this,Ue)[0][this.routeIndex][1][s]);r&&typeof r=="string"&&(e[s]=/\%/.test(r)?Bn(r):r)}return e},Ga=function(e){return k(this,Ue)[1]?k(this,Ue)[1][e]:e},Pt=new WeakMap,Bl),qc={Stringify:1},sd=async(e,t,s,r,i)=>{typeof e=="object"&&!(e instanceof String)&&(e instanceof Promise||(e=e.toString()),e instanceof Promise&&(e=await e));const a=e.callbacks;return a!=null&&a.length?(i?i[0]+=e:i=[e],Promise.all(a.map(o=>o({phase:t,buffer:i,context:r}))).then(o=>Promise.all(o.filter(Boolean).map(l=>sd(l,t,!1,r,i))).then(()=>i[0]))):Promise.resolve(e)},Wc="text/plain; charset=UTF-8",Ai=(e,t)=>({"Content-Type":e,...t}),pr,mr,mt,Cs,ft,Ce,fr,Ds,Ns,Kt,gr,vr,At,Es,Ul,Gc=(Ul=class{constructor(e,t){W(this,At);W(this,pr);W(this,mr);O(this,"env",{});W(this,mt);O(this,"finalized",!1);O(this,"error");W(this,Cs);W(this,ft);W(this,Ce);W(this,fr);W(this,Ds);W(this,Ns);W(this,Kt);W(this,gr);W(this,vr);O(this,"render",(...e)=>(k(this,Ds)??F(this,Ds,t=>this.html(t)),k(this,Ds).call(this,...e)));O(this,"setLayout",e=>F(this,fr,e));O(this,"getLayout",()=>k(this,fr));O(this,"setRenderer",e=>{F(this,Ds,e)});O(this,"header",(e,t,s)=>{this.finalized&&F(this,Ce,new Response(k(this,Ce).body,k(this,Ce)));const r=k(this,Ce)?k(this,Ce).headers:k(this,Kt)??F(this,Kt,new Headers);t===void 0?r.delete(e):s!=null&&s.append?r.append(e,t):r.set(e,t)});O(this,"status",e=>{F(this,Cs,e)});O(this,"set",(e,t)=>{k(this,mt)??F(this,mt,new Map),k(this,mt).set(e,t)});O(this,"get",e=>k(this,mt)?k(this,mt).get(e):void 0);O(this,"newResponse",(...e)=>V(this,At,Es).call(this,...e));O(this,"body",(e,t,s)=>V(this,At,Es).call(this,e,t,s));O(this,"text",(e,t,s)=>!k(this,Kt)&&!k(this,Cs)&&!t&&!s&&!this.finalized?new Response(e):V(this,At,Es).call(this,e,t,Ai(Wc,s)));O(this,"json",(e,t,s)=>V(this,At,Es).call(this,JSON.stringify(e),t,Ai("application/json",s)));O(this,"html",(e,t,s)=>{const r=i=>V(this,At,Es).call(this,i,t,Ai("text/html; charset=UTF-8",s));return typeof e=="object"?sd(e,qc.Stringify,!1,{}).then(r):r(e)});O(this,"redirect",(e,t)=>{const s=String(e);return this.header("Location",/[^\x00-\xFF]/.test(s)?encodeURI(s):s),this.newResponse(null,t??302)});O(this,"notFound",()=>(k(this,Ns)??F(this,Ns,()=>new Response),k(this,Ns).call(this,this)));F(this,pr,e),t&&(F(this,ft,t.executionCtx),this.env=t.env,F(this,Ns,t.notFoundHandler),F(this,vr,t.path),F(this,gr,t.matchResult))}get req(){return k(this,mr)??F(this,mr,new Xl(k(this,pr),k(this,vr),k(this,gr))),k(this,mr)}get event(){if(k(this,ft)&&"respondWith"in k(this,ft))return k(this,ft);throw Error("This context has no FetchEvent")}get executionCtx(){if(k(this,ft))return k(this,ft);throw Error("This context has no ExecutionContext")}get res(){return k(this,Ce)||F(this,Ce,new Response(null,{headers:k(this,Kt)??F(this,Kt,new Headers)}))}set res(e){if(k(this,Ce)&&e){e=new Response(e.body,e);for(const[t,s]of k(this,Ce).headers.entries())if(t!=="content-type")if(t==="set-cookie"){const r=k(this,Ce).headers.getSetCookie();e.headers.delete("set-cookie");for(const i of r)e.headers.append("set-cookie",i)}else e.headers.set(t,s)}F(this,Ce,e),this.finalized=!0}get var(){return k(this,mt)?Object.fromEntries(k(this,mt)):{}}},pr=new WeakMap,mr=new WeakMap,mt=new WeakMap,Cs=new WeakMap,ft=new WeakMap,Ce=new WeakMap,fr=new WeakMap,Ds=new WeakMap,Ns=new WeakMap,Kt=new WeakMap,gr=new WeakMap,vr=new WeakMap,At=new WeakSet,Es=function(e,t,s){const r=k(this,Ce)?new Headers(k(this,Ce).headers):k(this,Kt)??new Headers;if(typeof t=="object"&&"headers"in t){const a=t.headers instanceof Headers?t.headers:new Headers(t.headers);for(const[n,o]of a)n.toLowerCase()==="set-cookie"?r.append(n,o):r.set(n,o)}if(s)for(const[a,n]of Object.entries(s))if(typeof n=="string")r.set(a,n);else{r.delete(a);for(const o of n)r.append(a,o)}const i=typeof t=="number"?t:(t==null?void 0:t.status)??k(this,Cs);return new Response(e,{status:i,headers:r})},Ul),ge="ALL",zc="all",Jc=["get","post","put","delete","options","patch"],rd="Can not add a route since the matcher is already built.",id=class extends Error{},Vc="__COMPOSED_HANDLER",Yc=e=>e.text("404 Not Found",404),Un=(e,t)=>{if("getResponse"in e){const s=e.getResponse();return t.newResponse(s.body,s)}return console.error(e),t.text("Internal Server Error",500)},Ye,ve,nd,Ke,Vt,Qr,Xr,Hl,ad=(Hl=class{constructor(t={}){W(this,ve);O(this,"get");O(this,"post");O(this,"put");O(this,"delete");O(this,"options");O(this,"patch");O(this,"all");O(this,"on");O(this,"use");O(this,"router");O(this,"getPath");O(this,"_basePath","/");W(this,Ye,"/");O(this,"routes",[]);W(this,Ke,Yc);O(this,"errorHandler",Un);O(this,"onError",t=>(this.errorHandler=t,this));O(this,"notFound",t=>(F(this,Ke,t),this));O(this,"fetch",(t,...s)=>V(this,ve,Xr).call(this,t,s[1],s[0],t.method));O(this,"request",(t,s,r,i)=>t instanceof Request?this.fetch(s?new Request(t,s):t,r,i):(t=t.toString(),this.fetch(new Request(/^https?:\/\//.test(t)?t:`http://localhost${_s("/",t)}`,s),r,i)));O(this,"fire",()=>{addEventListener("fetch",t=>{t.respondWith(V(this,ve,Xr).call(this,t.request,t,void 0,t.request.method))})});[...Jc,zc].forEach(a=>{this[a]=(n,...o)=>(typeof n=="string"?F(this,Ye,n):V(this,ve,Vt).call(this,a,k(this,Ye),n),o.forEach(l=>{V(this,ve,Vt).call(this,a,k(this,Ye),l)}),this)}),this.on=(a,n,...o)=>{for(const l of[n].flat()){F(this,Ye,l);for(const d of[a].flat())o.map(c=>{V(this,ve,Vt).call(this,d.toUpperCase(),k(this,Ye),c)})}return this},this.use=(a,...n)=>(typeof a=="string"?F(this,Ye,a):(F(this,Ye,"*"),n.unshift(a)),n.forEach(o=>{V(this,ve,Vt).call(this,ge,k(this,Ye),o)}),this);const{strict:r,...i}=t;Object.assign(this,i),this.getPath=r??!0?t.getPath??Kl:Bc}route(t,s){const r=this.basePath(t);return s.routes.map(i=>{var n;let a;s.errorHandler===Un?a=i.handler:(a=async(o,l)=>(await Fn([],s.errorHandler)(o,()=>i.handler(o,l))).res,a[Vc]=i.handler),V(n=r,ve,Vt).call(n,i.method,i.path,a)}),this}basePath(t){const s=V(this,ve,nd).call(this);return s._basePath=_s(this._basePath,t),s}mount(t,s,r){let i,a;r&&(typeof r=="function"?a=r:(a=r.optionHandler,r.replaceRequest===!1?i=l=>l:i=r.replaceRequest));const n=a?l=>{const d=a(l);return Array.isArray(d)?d:[d]}:l=>{let d;try{d=l.executionCtx}catch{}return[l.env,d]};i||(i=(()=>{const l=_s(this._basePath,t),d=l==="/"?0:l.length;return c=>{const u=new URL(c.url);return u.pathname=u.pathname.slice(d)||"/",new Request(u,c)}})());const o=async(l,d)=>{const c=await s(i(l.req.raw),...n(l));if(c)return c;await d()};return V(this,ve,Vt).call(this,ge,_s(t,"*"),o),this}},Ye=new WeakMap,ve=new WeakSet,nd=function(){const t=new ad({router:this.router,getPath:this.getPath});return t.errorHandler=this.errorHandler,F(t,Ke,k(this,Ke)),t.routes=this.routes,t},Ke=new WeakMap,Vt=function(t,s,r){t=t.toUpperCase(),s=_s(this._basePath,s);const i={basePath:this._basePath,path:s,method:t,handler:r};this.router.add(t,s,[r,i]),this.routes.push(i)},Qr=function(t,s){if(t instanceof Error)return this.errorHandler(t,s);throw t},Xr=function(t,s,r,i){if(i==="HEAD")return(async()=>new Response(null,await V(this,ve,Xr).call(this,t,s,r,"GET")))();const a=this.getPath(t,{env:r}),n=this.router.match(i,a),o=new Gc(t,{path:a,matchResult:n,env:r,executionCtx:s,notFoundHandler:k(this,Ke)});if(n[0].length===1){let d;try{d=n[0][0][0][0](o,async()=>{o.res=await k(this,Ke).call(this,o)})}catch(c){return V(this,ve,Qr).call(this,c,o)}return d instanceof Promise?d.then(c=>c||(o.finalized?o.res:k(this,Ke).call(this,o))).catch(c=>V(this,ve,Qr).call(this,c,o)):d??k(this,Ke).call(this,o)}const l=Fn(n[0],this.errorHandler,k(this,Ke));return(async()=>{try{const d=await l(o);if(!d.finalized)throw new Error("Context is not finalized. Did you forget to return a Response object or `await next()`?");return d.res}catch(d){return V(this,ve,Qr).call(this,d,o)}})()},Hl),ti="[^/]+",or=".*",lr="(?:|/.*)",ks=Symbol(),Kc=new Set(".\\+*[^]$()");function Zc(e,t){return e.length===1?t.length===1?e<t?-1:1:-1:t.length===1||e===or||e===lr?1:t===or||t===lr?-1:e===ti?1:t===ti?-1:e.length===t.length?e<t?-1:1:t.length-e.length}var Zt,Qt,Ze,ql,za=(ql=class{constructor(){W(this,Zt);W(this,Qt);W(this,Ze,Object.create(null))}insert(t,s,r,i,a){if(t.length===0){if(k(this,Zt)!==void 0)throw ks;if(a)return;F(this,Zt,s);return}const[n,...o]=t,l=n==="*"?o.length===0?["","",or]:["","",ti]:n==="/*"?["","",lr]:n.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/);let d;if(l){const c=l[1];let u=l[2]||ti;if(c&&l[2]&&(u===".*"||(u=u.replace(/^\((?!\?:)(?=[^)]+\)$)/,"(?:"),/\((?!\?:)/.test(u))))throw ks;if(d=k(this,Ze)[u],!d){if(Object.keys(k(this,Ze)).some(p=>p!==or&&p!==lr))throw ks;if(a)return;d=k(this,Ze)[u]=new za,c!==""&&F(d,Qt,i.varIndex++)}!a&&c!==""&&r.push([c,k(d,Qt)])}else if(d=k(this,Ze)[n],!d){if(Object.keys(k(this,Ze)).some(c=>c.length>1&&c!==or&&c!==lr))throw ks;if(a)return;d=k(this,Ze)[n]=new za}d.insert(o,s,r,i,a)}buildRegExpStr(){const s=Object.keys(k(this,Ze)).sort(Zc).map(r=>{const i=k(this,Ze)[r];return(typeof k(i,Qt)=="number"?`(${r})@${k(i,Qt)}`:Kc.has(r)?`\\${r}`:r)+i.buildRegExpStr()});return typeof k(this,Zt)=="number"&&s.unshift(`#${k(this,Zt)}`),s.length===0?"":s.length===1?s[0]:"(?:"+s.join("|")+")"}},Zt=new WeakMap,Qt=new WeakMap,Ze=new WeakMap,ql),oi,hr,Wl,Qc=(Wl=class{constructor(){W(this,oi,{varIndex:0});W(this,hr,new za)}insert(e,t,s){const r=[],i=[];for(let n=0;;){let o=!1;if(e=e.replace(/\{[^}]+\}/g,l=>{const d=`@\\${n}`;return i[n]=[d,l],n++,o=!0,d}),!o)break}const a=e.match(/(?::[^\/]+)|(?:\/\*$)|./g)||[];for(let n=i.length-1;n>=0;n--){const[o]=i[n];for(let l=a.length-1;l>=0;l--)if(a[l].indexOf(o)!==-1){a[l]=a[l].replace(o,i[n][1]);break}}return k(this,hr).insert(a,t,r,k(this,oi),s),r}buildRegExp(){let e=k(this,hr).buildRegExpStr();if(e==="")return[/^$/,[],[]];let t=0;const s=[],r=[];return e=e.replace(/#(\d+)|@(\d+)|\.\*\$/g,(i,a,n)=>a!==void 0?(s[++t]=Number(a),"$()"):(n!==void 0&&(r[Number(n)]=++t),"")),[new RegExp(`^${e}`),s,r]}},oi=new WeakMap,hr=new WeakMap,Wl),od=[],Xc=[/^$/,[],Object.create(null)],ei=Object.create(null);function ld(e){return ei[e]??(ei[e]=new RegExp(e==="*"?"":`^${e.replace(/\/\*$|([.\\+*[^\]$()])/g,(t,s)=>s?`\\${s}`:"(?:|/.*)")}$`))}function eu(){ei=Object.create(null)}function tu(e){var d;const t=new Qc,s=[];if(e.length===0)return Xc;const r=e.map(c=>[!/\*|\/:/.test(c[0]),...c]).sort(([c,u],[p,m])=>c?1:p?-1:u.length-m.length),i=Object.create(null);for(let c=0,u=-1,p=r.length;c<p;c++){const[m,b,v]=r[c];m?i[b]=[v.map(([h])=>[h,Object.create(null)]),od]:u++;let f;try{f=t.insert(b,u,m)}catch(h){throw h===ks?new id(b):h}m||(s[u]=v.map(([h,y])=>{const w=Object.create(null);for(y-=1;y>=0;y--){const[x,S]=f[y];w[x]=S}return[h,w]}))}const[a,n,o]=t.buildRegExp();for(let c=0,u=s.length;c<u;c++)for(let p=0,m=s[c].length;p<m;p++){const b=(d=s[c][p])==null?void 0:d[1];if(!b)continue;const v=Object.keys(b);for(let f=0,h=v.length;f<h;f++)b[v[f]]=o[b[v[f]]]}const l=[];for(const c in n)l[c]=s[n[c]];return[a,l,i]}function ps(e,t){if(e){for(const s of Object.keys(e).sort((r,i)=>i.length-r.length))if(ld(s).test(t))return[...e[s]]}}var Ot,jt,As,dd,cd,Gl,su=(Gl=class{constructor(){W(this,As);O(this,"name","RegExpRouter");W(this,Ot);W(this,jt);F(this,Ot,{[ge]:Object.create(null)}),F(this,jt,{[ge]:Object.create(null)})}add(e,t,s){var o;const r=k(this,Ot),i=k(this,jt);if(!r||!i)throw new Error(rd);r[e]||[r,i].forEach(l=>{l[e]=Object.create(null),Object.keys(l[ge]).forEach(d=>{l[e][d]=[...l[ge][d]]})}),t==="/*"&&(t="*");const a=(t.match(/\/:/g)||[]).length;if(/\*$/.test(t)){const l=ld(t);e===ge?Object.keys(r).forEach(d=>{var c;(c=r[d])[t]||(c[t]=ps(r[d],t)||ps(r[ge],t)||[])}):(o=r[e])[t]||(o[t]=ps(r[e],t)||ps(r[ge],t)||[]),Object.keys(r).forEach(d=>{(e===ge||e===d)&&Object.keys(r[d]).forEach(c=>{l.test(c)&&r[d][c].push([s,a])})}),Object.keys(i).forEach(d=>{(e===ge||e===d)&&Object.keys(i[d]).forEach(c=>l.test(c)&&i[d][c].push([s,a]))});return}const n=Zl(t)||[t];for(let l=0,d=n.length;l<d;l++){const c=n[l];Object.keys(i).forEach(u=>{var p;(e===ge||e===u)&&((p=i[u])[c]||(p[c]=[...ps(r[u],c)||ps(r[ge],c)||[]]),i[u][c].push([s,a-d+l+1]))})}}match(e,t){eu();const s=V(this,As,dd).call(this);return this.match=(r,i)=>{const a=s[r]||s[ge],n=a[2][i];if(n)return n;const o=i.match(a[0]);if(!o)return[[],od];const l=o.indexOf("",1);return[a[1][l],o]},this.match(e,t)}},Ot=new WeakMap,jt=new WeakMap,As=new WeakSet,dd=function(){const e=Object.create(null);return Object.keys(k(this,jt)).concat(Object.keys(k(this,Ot))).forEach(t=>{e[t]||(e[t]=V(this,As,cd).call(this,t))}),F(this,Ot,F(this,jt,void 0)),e},cd=function(e){const t=[];let s=e===ge;return[k(this,Ot),k(this,jt)].forEach(r=>{const i=r[e]?Object.keys(r[e]).map(a=>[a,r[e][a]]):[];i.length!==0?(s||(s=!0),t.push(...i)):e!==ge&&t.push(...Object.keys(r[ge]).map(a=>[a,r[ge][a]]))}),s?tu(t):null},Gl),It,gt,zl,ru=(zl=class{constructor(e){O(this,"name","SmartRouter");W(this,It,[]);W(this,gt,[]);F(this,It,e.routers)}add(e,t,s){if(!k(this,gt))throw new Error(rd);k(this,gt).push([e,t,s])}match(e,t){if(!k(this,gt))throw new Error("Fatal error");const s=k(this,It),r=k(this,gt),i=s.length;let a=0,n;for(;a<i;a++){const o=s[a];try{for(let l=0,d=r.length;l<d;l++)o.add(...r[l]);n=o.match(e,t)}catch(l){if(l instanceof id)continue;throw l}this.match=o.match.bind(o),F(this,It,[o]),F(this,gt,void 0);break}if(a===i)throw new Error("Fatal error");return this.name=`SmartRouter + ${this.activeRouter.name}`,n}get activeRouter(){if(k(this,gt)||k(this,It).length!==1)throw new Error("No active router has been determined yet.");return k(this,It)[0]}},It=new WeakMap,gt=new WeakMap,zl),Us=Object.create(null),Mt,Se,Xt,Ps,xe,vt,Yt,Jl,ud=(Jl=class{constructor(e,t,s){W(this,vt);W(this,Mt);W(this,Se);W(this,Xt);W(this,Ps,0);W(this,xe,Us);if(F(this,Se,s||Object.create(null)),F(this,Mt,[]),e&&t){const r=Object.create(null);r[e]={handler:t,possibleKeys:[],score:0},F(this,Mt,[r])}F(this,Xt,[])}insert(e,t,s){F(this,Ps,++$n(this,Ps)._);let r=this;const i=Ic(t),a=[];for(let n=0,o=i.length;n<o;n++){const l=i[n],d=i[n+1],c=$c(l,d),u=Array.isArray(c)?c[0]:l;if(u in k(r,Se)){r=k(r,Se)[u],c&&a.push(c[1]);continue}k(r,Se)[u]=new ud,c&&(k(r,Xt).push(c),a.push(c[1])),r=k(r,Se)[u]}return k(r,Mt).push({[e]:{handler:s,possibleKeys:a.filter((n,o,l)=>l.indexOf(n)===o),score:k(this,Ps)}}),r}search(e,t){var o;const s=[];F(this,xe,Us);let i=[this];const a=Yl(t),n=[];for(let l=0,d=a.length;l<d;l++){const c=a[l],u=l===d-1,p=[];for(let m=0,b=i.length;m<b;m++){const v=i[m],f=k(v,Se)[c];f&&(F(f,xe,k(v,xe)),u?(k(f,Se)["*"]&&s.push(...V(this,vt,Yt).call(this,k(f,Se)["*"],e,k(v,xe))),s.push(...V(this,vt,Yt).call(this,f,e,k(v,xe)))):p.push(f));for(let h=0,y=k(v,Xt).length;h<y;h++){const w=k(v,Xt)[h],x=k(v,xe)===Us?{}:{...k(v,xe)};if(w==="*"){const j=k(v,Se)["*"];j&&(s.push(...V(this,vt,Yt).call(this,j,e,k(v,xe))),F(j,xe,x),p.push(j));continue}const[S,R,C]=w;if(!c&&!(C instanceof RegExp))continue;const N=k(v,Se)[S],I=a.slice(l).join("/");if(C instanceof RegExp){const j=C.exec(I);if(j){if(x[R]=j[0],s.push(...V(this,vt,Yt).call(this,N,e,k(v,xe),x)),Object.keys(k(N,Se)).length){F(N,xe,x);const M=((o=j[0].match(/\//))==null?void 0:o.length)??0;(n[M]||(n[M]=[])).push(N)}continue}}(C===!0||C.test(c))&&(x[R]=c,u?(s.push(...V(this,vt,Yt).call(this,N,e,x,k(v,xe))),k(N,Se)["*"]&&s.push(...V(this,vt,Yt).call(this,k(N,Se)["*"],e,x,k(v,xe)))):(F(N,xe,x),p.push(N)))}}i=p.concat(n.shift()??[])}return s.length>1&&s.sort((l,d)=>l.score-d.score),[s.map(({handler:l,params:d})=>[l,d])]}},Mt=new WeakMap,Se=new WeakMap,Xt=new WeakMap,Ps=new WeakMap,xe=new WeakMap,vt=new WeakSet,Yt=function(e,t,s,r){const i=[];for(let a=0,n=k(e,Mt).length;a<n;a++){const o=k(e,Mt)[a],l=o[t]||o[ge],d={};if(l!==void 0&&(l.params=Object.create(null),i.push(l),s!==Us||r&&r!==Us))for(let c=0,u=l.possibleKeys.length;c<u;c++){const p=l.possibleKeys[c],m=d[l.score];l.params[p]=r!=null&&r[p]&&!m?r[p]:s[p]??(r==null?void 0:r[p]),d[l.score]=!0}}return i},Jl),es,Vl,iu=(Vl=class{constructor(){O(this,"name","TrieRouter");W(this,es);F(this,es,new ud)}add(e,t,s){const r=Zl(t);if(r){for(let i=0,a=r.length;i<a;i++)k(this,es).insert(e,r[i],s);return}k(this,es).insert(e,t,s)}match(e,t){return k(this,es).search(e,t)}},es=new WeakMap,Vl),ce=class extends ad{constructor(e={}){super(e),this.router=e.router??new ru({routers:[new su,new iu]})}},tn=e=>{const s={...{origin:"*",allowMethods:["GET","HEAD","PUT","POST","DELETE","PATCH"],allowHeaders:[],exposeHeaders:[]},...e},r=(a=>typeof a=="string"?a==="*"?()=>a:n=>a===n?n:null:typeof a=="function"?a:n=>a.includes(n)?n:null)(s.origin),i=(a=>typeof a=="function"?a:Array.isArray(a)?()=>a:()=>[])(s.allowMethods);return async function(n,o){var c;function l(u,p){n.res.headers.set(u,p)}const d=r(n.req.header("origin")||"",n);if(d&&l("Access-Control-Allow-Origin",d),s.origin!=="*"){const u=n.req.header("Vary");u?l("Vary",u):l("Vary","Origin")}if(s.credentials&&l("Access-Control-Allow-Credentials","true"),(c=s.exposeHeaders)!=null&&c.length&&l("Access-Control-Expose-Headers",s.exposeHeaders.join(",")),n.req.method==="OPTIONS"){s.maxAge!=null&&l("Access-Control-Max-Age",s.maxAge.toString());const u=i(n.req.header("origin")||"",n);u.length&&l("Access-Control-Allow-Methods",u.join(","));let p=s.allowHeaders;if(!(p!=null&&p.length)){const m=n.req.header("Access-Control-Request-Headers");m&&(p=m.split(/\s*,\s*/))}return p!=null&&p.length&&(l("Access-Control-Allow-Headers",p.join(",")),n.res.headers.append("Vary","Access-Control-Request-Headers")),n.res.headers.delete("Content-Length"),n.res.headers.delete("Content-Type"),new Response(null,{headers:n.res.headers,status:204,statusText:"No Content"})}await o()}},au=/^\s*(?:text\/(?!event-stream(?:[;\s]|$))[^;\s]+|application\/(?:javascript|json|xml|xml-dtd|ecmascript|dart|postscript|rtf|tar|toml|vnd\.dart|vnd\.ms-fontobject|vnd\.ms-opentype|wasm|x-httpd-php|x-javascript|x-ns-proxy-autoconfig|x-sh|x-tar|x-virtualbox-hdd|x-virtualbox-ova|x-virtualbox-ovf|x-virtualbox-vbox|x-virtualbox-vdi|x-virtualbox-vhd|x-virtualbox-vmdk|x-www-form-urlencoded)|font\/(?:otf|ttf)|image\/(?:bmp|vnd\.adobe\.photoshop|vnd\.microsoft\.icon|vnd\.ms-dds|x-icon|x-ms-bmp)|message\/rfc822|model\/gltf-binary|x-shader\/x-fragment|x-shader\/x-vertex|[^;\s]+?\+(?:json|text|xml|yaml))(?:[;\s]|$)/i,Hn=(e,t=ou)=>{const s=/\.([a-zA-Z0-9]+?)$/,r=e.match(s);if(!r)return;let i=t[r[1]];return i&&i.startsWith("text")&&(i+="; charset=utf-8"),i},nu={aac:"audio/aac",avi:"video/x-msvideo",avif:"image/avif",av1:"video/av1",bin:"application/octet-stream",bmp:"image/bmp",css:"text/css",csv:"text/csv",eot:"application/vnd.ms-fontobject",epub:"application/epub+zip",gif:"image/gif",gz:"application/gzip",htm:"text/html",html:"text/html",ico:"image/x-icon",ics:"text/calendar",jpeg:"image/jpeg",jpg:"image/jpeg",js:"text/javascript",json:"application/json",jsonld:"application/ld+json",map:"application/json",mid:"audio/x-midi",midi:"audio/x-midi",mjs:"text/javascript",mp3:"audio/mpeg",mp4:"video/mp4",mpeg:"video/mpeg",oga:"audio/ogg",ogv:"video/ogg",ogx:"application/ogg",opus:"audio/opus",otf:"font/otf",pdf:"application/pdf",png:"image/png",rtf:"application/rtf",svg:"image/svg+xml",tif:"image/tiff",tiff:"image/tiff",ts:"video/mp2t",ttf:"font/ttf",txt:"text/plain",wasm:"application/wasm",webm:"video/webm",weba:"audio/webm",webmanifest:"application/manifest+json",webp:"image/webp",woff:"font/woff",woff2:"font/woff2",xhtml:"application/xhtml+xml",xml:"application/xml",zip:"application/zip","3gp":"video/3gpp","3g2":"video/3gpp2",gltf:"model/gltf+json",glb:"model/gltf-binary"},ou=nu,lu=(...e)=>{let t=e.filter(i=>i!=="").join("/");t=t.replace(new RegExp("(?<=\\/)\\/+","g"),"");const s=t.split("/"),r=[];for(const i of s)i===".."&&r.length>0&&r.at(-1)!==".."?r.pop():i!=="."&&r.push(i);return r.join("/")||"."},pd={br:".br",zstd:".zst",gzip:".gz"},du=Object.keys(pd),cu="index.html",uu=e=>{const t=e.root??"./",s=e.path,r=e.join??lu;return async(i,a)=>{var c,u,p,m;if(i.finalized)return a();let n;if(e.path)n=e.path;else try{if(n=decodeURIComponent(i.req.path),/(?:^|[\/\\])\.\.(?:$|[\/\\])/.test(n))throw new Error}catch{return await((c=e.onNotFound)==null?void 0:c.call(e,i.req.path,i)),a()}let o=r(t,!s&&e.rewriteRequestPath?e.rewriteRequestPath(n):n);e.isDir&&await e.isDir(o)&&(o=r(o,cu));const l=e.getContent;let d=await l(o,i);if(d instanceof Response)return i.newResponse(d.body,d);if(d){const b=e.mimes&&Hn(o,e.mimes)||Hn(o);if(i.header("Content-Type",b||"application/octet-stream"),e.precompressed&&(!b||au.test(b))){const v=new Set((u=i.req.header("Accept-Encoding"))==null?void 0:u.split(",").map(f=>f.trim()));for(const f of du){if(!v.has(f))continue;const h=await l(o+pd[f],i);if(h){d=h,i.header("Content-Encoding",f),i.header("Vary","Accept-Encoding",{append:!0});break}}}return await((p=e.onFound)==null?void 0:p.call(e,o,i)),i.body(d)}await((m=e.onNotFound)==null?void 0:m.call(e,o,i)),await a()}},pu=async(e,t)=>{let s;t&&t.manifest?typeof t.manifest=="string"?s=JSON.parse(t.manifest):s=t.manifest:typeof __STATIC_CONTENT_MANIFEST=="string"?s=JSON.parse(__STATIC_CONTENT_MANIFEST):s=__STATIC_CONTENT_MANIFEST;let r;t&&t.namespace?r=t.namespace:r=__STATIC_CONTENT;const i=s[e]||e;if(!i)return null;const a=await r.get(i,{type:"stream"});return a||null},mu=e=>async function(s,r){return uu({...e,getContent:async a=>pu(a,{manifest:e.manifest,namespace:e.namespace?e.namespace:s.env?s.env.__STATIC_CONTENT:void 0})})(s,r)},fu=e=>mu(e);class U{static formatLog(t,s,r){const i=new Date().toISOString(),a=r?` | Context: ${JSON.stringify(r)}`:"";return`[${i}] [${t}] ${s}${a}`}static info(t,s){console.log(this.formatLog("INFO",t,s))}static warn(t,s){console.warn(this.formatLog("WARN",t,s))}static error(t,s,r){const i=s?` | Error: ${s.message} | Stack: ${s.stack}`:"";console.error(this.formatLog("ERROR",t,r)+i)}static debug(t,s){console.log(this.formatLog("DEBUG",t,s))}static sessionCreated(t,s,r){this.info("Session created",{userId:t,sessionToken:s.substring(0,10)+"...",...r})}static sessionValidation(t,s,r){const i=t?"info":"warn",a=t?"Session validation successful":"Session validation failed";this[i](a,{sessionToken:s?s.substring(0,10)+"...":"none",...r})}static authError(t,s,r){this.error(`AUTH ERROR: ${t}`,s,r)}static requestLog(t,s,r,i){this.info(`${t} ${s} ${r}`,i)}}class pt{static generateSalt(){return crypto.getRandomValues(new Uint8Array(16))}static async hashPassword(t){const s=this.generateSalt(),r=await this.hashPasswordPBKDF2(t,s);return`${r.hash}:${r.salt}`}static async hashPasswordPBKDF2(t,s){s||(s=this.generateSalt());const i=new TextEncoder().encode(t),a=await crypto.subtle.importKey("raw",i,"PBKDF2",!1,["deriveBits"]),n=await crypto.subtle.deriveBits({name:"PBKDF2",salt:s,iterations:1e5,hash:"SHA-256"},a,256),o=new Uint8Array(n),l=btoa(String.fromCharCode(...o)),d=btoa(String.fromCharCode(...s));return{hash:l,salt:d}}static async verifyPassword(t,s,r){try{const i=new Uint8Array(atob(r).split("").map(n=>n.charCodeAt(0))),{hash:a}=await this.hashPasswordPBKDF2(t,i);return a===s}catch(i){return console.error("Password verification error:",i),!1}}static verifyLegacyPassword(t,s){return btoa(t)===s}static isLegacyHash(t){try{return atob(t).split("").every(r=>r.charCodeAt(0)<128)}catch{return!1}}static isBcryptHash(t){return/^\$2[abxy]\$/.test(t)}static isPBKDF2Hash(t){return t.includes(":")&&t.split(":").length===2}static async verifyBcryptPassword(t,s){return console.warn("Bcrypt verification not available in Cloudflare Workers"),!1}static async verifyHashedPassword(t,s){try{const r=s.split(":");if(r.length!==2)return!1;const[i,a]=r;return await this.verifyPassword(t,i,a)}catch(r){return console.error("Password verification error:",r),!1}}}const rs=new ce;rs.post("/register",async e=>{try{const t=await e.req.json();console.log("Registration request body:",t);const s=t.email,r=t.password,i=t.role,a=t.firstName||t.first_name,n=t.lastName||t.last_name,o=t.province,l=t.city,d=t.phone,c=t.businessName||t.business_name,u=t.businessEmail||t.business_email,p=t.serviceType||t.service_type;if(console.log("Extracted fields:",{email:s,password:"***",role:i,firstName:a,lastName:n,province:o,city:l,phone:d,businessName:c,businessEmail:u,serviceType:p}),!s||!r||!i||!a||!n||!o||!l)return console.log("Validation failed - missing base fields"),e.json({error:"All basic fields are required"},400);if(i==="worker"){if(!c||!u||!d||!p)return console.log("Validation failed - missing worker business fields"),e.json({error:"All business fields are required for service providers"},400);if(!/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(u))return e.json({error:"Please provide a valid business email address"},400);const x=/^[\+]?[1]?[-.\s]?\(?([0-9]{3})\)?[-.\s]?([0-9]{3})[-.\s]?([0-9]{4})$/;if(d.replace(/[\s\(\)\-\.]/g,"").length<10)return e.json({error:"Please provide a valid 10-digit phone number"},400);if(c.trim().split(" ").filter(C=>C.length>0).length<1||c.length<3)return e.json({error:"Please provide a valid business name"},400)}if(!["client","worker"].includes(i))return e.json({error:"Invalid role"},400);if(await e.env.DB.prepare("SELECT id FROM users WHERE email = ?").bind(s).first())return e.json({error:"User already exists"},409);const b=await pt.hashPassword(r),v=await e.env.DB.prepare(`
      INSERT INTO users (email, password_hash, role, first_name, last_name, province, city, phone)
      VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(s,b,i,a,n,o,l,d||null).run();if(!v.success)return e.json({error:"Failed to create user"},500);if(i==="worker"&&u&&await e.env.DB.prepare(`
        SELECT up.user_id FROM user_profiles up 
        JOIN users u ON up.user_id = u.id 
        WHERE up.bio LIKE ? AND u.is_active = 1
      `).bind(`%${u}%`).first())return e.json({error:"Business email already registered"},409);if(i==="worker"){const w=JSON.stringify({company_name:c,business_email:u,business_phone:d,service_type:p,verification_status:"pending"});await e.env.DB.prepare(`
        INSERT INTO user_profiles (user_id, bio) VALUES (?, ?)
      `).bind(v.meta.last_row_id,w).run(),p&&await e.env.DB.prepare(`
          INSERT INTO worker_services (user_id, service_category, service_name, description, is_available)
          VALUES (?, ?, ?, ?, 1)
        `).bind(v.meta.last_row_id,p,p,`Professional ${p} services provided by ${c}`).run()}else await e.env.DB.prepare(`
        INSERT INTO user_profiles (user_id) VALUES (?)
      `).bind(v.meta.last_row_id).run();await e.env.DB.prepare(`
      INSERT INTO subscriptions (user_id, plan_type, status, monthly_fee, per_job_fee)
      VALUES (?, 'pay_as_you_go', 'active', 0.00, 12.00)
    `).bind(v.meta.last_row_id).run();const f=btoa(`${v.meta.last_row_id}:${Date.now()}:${Math.random()}`);await e.env.DB.prepare(`
      INSERT INTO user_sessions (user_id, session_token, expires_at, ip_address)
      VALUES (?, ?, datetime('now', '+10 years'), ?)
    `).bind(v.meta.last_row_id,f,"unknown").run();const y=(e.req.header("host")||"").includes(".dev")||e.req.header("x-forwarded-proto")==="https";return e.header("Set-Cookie",`session=${f}; Path=/; Max-Age=31536000; SameSite=Lax; ${y?"Secure;":""}`),e.json({success:!0,message:"User created successfully",userId:v.meta.last_row_id,role:i,session_token:f,user:{id:v.meta.last_row_id,email:s,role:i,firstName:a,lastName:n,province:o,city:l}})}catch(t){return console.error("Registration error:",t),e.json({error:"Internal server error"},500)}});rs.post("/login",async e=>{try{const{email:t,password:s}=await e.req.json();if(!t||!s)return e.json({error:"Email and password are required"},400);const r=await e.env.DB.prepare(`
      SELECT id, email, password_hash, role, first_name, last_name, province, city, is_verified, is_active
      FROM users WHERE email = ?
    `).bind(t).first();if(!r)return e.json({error:"Invalid credentials"},401);let i=!1;if(pt.isPBKDF2Hash(r.password_hash))i=await pt.verifyHashedPassword(s,r.password_hash);else if(pt.isBcryptHash(r.password_hash))console.warn("Bcrypt password detected - consider migrating to PBKDF2"),i=await pt.verifyBcryptPassword(s,r.password_hash);else if(pt.isLegacyHash(r.password_hash))i=pt.verifyLegacyPassword(s,r.password_hash);else try{const l=await e.env.DB.prepare(`
          SELECT password_salt FROM users WHERE id = ?
        `).bind(r.id).first();l!=null&&l.password_salt&&(i=await pt.verifyPassword(s,r.password_hash,l.password_salt))}catch{i=pt.verifyLegacyPassword(s,r.password_hash)}if(!i)return e.json({error:"Invalid credentials"},401);if(!r.is_active)return e.json({error:"Account is disabled"},401);await e.env.DB.prepare(`
      UPDATE users SET last_login = CURRENT_TIMESTAMP WHERE id = ?
    `).bind(r.id).run();const a=btoa(`${r.id}:${Date.now()}:${Math.random()}`);await e.env.DB.prepare(`
      INSERT INTO user_sessions (user_id, session_token, expires_at, ip_address)
      VALUES (?, ?, datetime('now', '+10 years'), ?)
    `).bind(r.id,a,"unknown").run();const o=(e.req.header("host")||"").includes(".dev")||e.req.header("x-forwarded-proto")==="https";return e.header("Set-Cookie",`session=${a}; Path=/; Max-Age=31536000; SameSite=Lax; ${o?"Secure;":""}`),e.json({message:"Login successful",user:{id:r.id,email:r.email,role:r.role,firstName:r.first_name,lastName:r.last_name,province:r.province,city:r.city,isVerified:r.is_verified},sessionToken:a})}catch(t){return console.error("Login error:",t),e.json({error:"Internal server error"},500)}});rs.get("/session-info",async e=>{var t;try{const s=(t=e.req.header("Authorization"))==null?void 0:t.replace("Bearer ","");if(!s)return e.json({error:"No session token provided"},401);const r=await e.env.DB.prepare(`
      SELECT us.user_id, u.email, u.role, u.first_name, u.last_name, u.province, u.city, u.is_verified
      FROM user_sessions us
      JOIN users u ON us.user_id = u.id
      WHERE us.session_token = ? AND u.is_active = 1
    `).bind(s).first();return r?e.json({user_id:r.user_id,email:r.email,role:r.role,first_name:r.first_name,last_name:r.last_name,province:r.province,city:r.city,is_verified:r.is_verified}):e.json({error:"Invalid session"},401)}catch(s){return console.error("Session info error:",s),e.json({error:"Internal server error"},500)}});rs.post("/logout",async e=>{var t;try{const s=(t=e.req.header("Authorization"))==null?void 0:t.replace("Bearer ","");return s&&await e.env.DB.prepare(`
        DELETE FROM user_sessions WHERE session_token = ?
      `).bind(s).run(),e.json({message:"Logged out successfully"})}catch(s){return console.error("Logout error:",s),e.json({error:"Internal server error"},500)}});rs.get("/me",async e=>{var r;const t=e.req.header("User-Agent")||"unknown",s=e.req.header("Referer")||"unknown";try{U.info("Auth /me request received",{userAgent:t,referer:s,endpoint:"/api/auth/me"});let i=(r=e.req.header("Authorization"))==null?void 0:r.replace("Bearer ","");const a=e.req.header("Cookie");if(i)U.debug("Session token found in Authorization header");else if(U.debug("No Authorization header, checking cookies",{cookieHeader:a?"present":"missing"}),a){const o=a.split(";");for(const l of o){const d=l.trim(),c=d.indexOf("=");if(c!==-1){const u=d.substring(0,c),p=d.substring(c+1);if(u==="session"){i=p,U.debug("Session token extracted from cookies",{tokenLength:p.length,tokenPreview:p.substring(0,10)+"..."});break}}}}if(!i)return U.warn("No session token provided in request",{cookieHeader:a,userAgent:t}),e.json({error:"No session token provided",expired:!0},401);U.debug("Verifying session token in database",{tokenPreview:i.substring(0,10)+"..."});const n=await e.env.DB.prepare(`
      SELECT s.user_id, u.email, u.role, u.first_name, u.last_name, u.province, u.city, u.is_verified,
             s.created_at, s.ip_address
      FROM user_sessions s
      JOIN users u ON s.user_id = u.id
      WHERE s.session_token = ? AND u.is_active = 1
    `).bind(i).first();return n?(U.sessionValidation(!0,i,{userId:n.user_id,email:n.email,role:n.role,sessionCreated:n.created_at,sessionExpires:n.expires_at}),e.json({user:{id:n.user_id,email:n.email,role:n.role,firstName:n.first_name,lastName:n.last_name,province:n.province,city:n.city,isVerified:n.is_verified}})):(U.sessionValidation(!1,i,{userAgent:t,referer:s}),U.warn("Session not found in database",{tokenPreview:i.substring(0,10)+"..."}),e.json({error:"Invalid or expired session",expired:!0},401))}catch(i){return console.error("Session verification error:",i),e.json({error:"Internal server error"},500)}});rs.post("/demo-login",async e=>{try{const{role:t}=await e.req.json();if(!t||!["client","worker","admin"].includes(t))return e.json({error:"Valid role is required (client, worker, admin)"},400);const s={id:t==="client"?939:t==="worker"?938:942,email:t==="client"?"mo.carty@admin.kwikr.ca":t==="worker"?"jo.carty@admin.kwikr.ca":"admin@kwikrdirectory.com",role:t,first_name:t==="client"?"MO":t==="worker"?"JO":"Platform",last_name:t==="client"||t==="worker"?"CARTY":"Administrator",province:"ON",city:"Toronto",is_verified:1,is_active:1},r=btoa(`${s.id}:${Date.now()}:${Math.random()}`);try{await e.env.DB.prepare(`
        INSERT INTO user_sessions (user_id, session_token, expires_at, ip_address)
        VALUES (?, ?, datetime('now', '+10 years'), ?)
      `).bind(s.id,r,"demo").run()}catch{console.log("Database session storage failed, continuing with in-memory session")}const i=e.req.header("host")||"",a=e.req.header("x-forwarded-proto")||"",n=e.req.url||"",o=a==="https"||n.startsWith("https://")||i.includes(".dev");return e.header("Set-Cookie",`session=${r}; Path=/; Max-Age=31536000; SameSite=Lax; ${o?"Secure;":""}`),e.json({message:"Demo login successful",user:{id:s.id,email:s.email,role:s.role,firstName:s.first_name,lastName:s.last_name,province:s.province,city:s.city,isVerified:s.is_verified},sessionToken:r})}catch(t){return console.error("Demo login error:",t),e.json({error:"Internal server error"},500)}});const Qe=new ce,is=async(e,t)=>{e.req.path;let s=null;const r=e.req.header("Cookie");if(r){const a=r.match(/session=([^;]+)/);if(a&&(s=a[1]),!s){const n=r.match(/demo_session=([^;]+)/);if(n){const o=n[1],[l,d]=o.split(":"),c=Math.random().toString(36).substring(2,15);s=btoa(`demo-${l}:${d}:${c}`)}}}if(!s){const a=e.req.header("Authorization");a&&a.startsWith("Bearer ")&&(s=a.replace("Bearer ",""))}if(s||(s=e.req.query("token")),!s)return U.warn("Jobs API authentication failed - no token",{endpoint:e.req.path,userAgent:e.req.header("User-Agent")||"unknown"}),e.json({error:"Authentication required",expired:!0},401);const i=await e.env.DB.prepare(`
    SELECT s.user_id, u.role
    FROM user_sessions s
    JOIN users u ON s.user_id = u.id
    WHERE s.session_token = ? AND u.is_active = 1
  `).bind(s).first();if(!i)return U.warn("Jobs API authentication failed - invalid session",{endpoint:e.req.path,tokenPreview:s.substring(0,10)+"..."}),e.json({error:"Invalid or expired session",expired:!0},401);U.debug("Jobs API authentication successful",{userId:i.user_id,role:i.role,endpoint:e.req.path}),e.set("user",i),await t()};Qe.get("/categories",async e=>{try{const t=await e.env.DB.prepare(`
      SELECT id, name, description, requires_license, requires_insurance, icon_class
      FROM job_categories
      WHERE is_active = 1
      ORDER BY name
    `).all();return e.json({categories:t.results})}catch(t){return console.error("Error fetching categories:",t),e.json({error:"Failed to fetch categories"},500)}});Qe.get("/",async e=>{try{const{province:t,city:s,category:r,minBudget:i,maxBudget:a,status:n,page:o="1",limit:l="20"}=e.req.query();let d=`
      SELECT j.*, u.first_name, u.last_name, u.city as client_city, u.province as client_province,
             c.name as category_name, c.icon_class,
             (SELECT COUNT(*) FROM bids WHERE job_id = j.id AND status = 'pending') as bid_count
      FROM jobs j
      JOIN users u ON j.client_id = u.id
      JOIN job_categories c ON j.category_id = c.id
      WHERE 1=1
    `;const c=[];t&&(d+=" AND j.location_province = ?",c.push(t)),s&&(d+=" AND j.location_city LIKE ?",c.push(`%${s}%`)),r&&(d+=" AND j.category_id = ?",c.push(r)),i&&(d+=" AND j.budget_max >= ?",c.push(parseFloat(i))),a&&(d+=" AND j.budget_min <= ?",c.push(parseFloat(a))),n?(d+=" AND j.status = ?",c.push(n)):d+=" AND j.status IN ('posted', 'assigned')",d+=" ORDER BY j.created_at DESC";const u=(parseInt(o)-1)*parseInt(l);d+=" LIMIT ? OFFSET ?",c.push(parseInt(l),u);const p=await e.env.DB.prepare(d).bind(...c).all();return e.json({jobs:p.results,page:parseInt(o),limit:parseInt(l)})}catch(t){return console.error("Error fetching jobs:",t),e.json({error:"Failed to fetch jobs"},500)}});Qe.get("/client",is,async e=>{try{const t=e.get("user");if(t.role!=="client")return e.json({error:"Only clients can access their jobs"},403);const s=await e.env.DB.prepare(`
      SELECT j.*, c.name as category_name, c.icon_class,
             (SELECT COUNT(*) FROM bids WHERE job_id = j.id AND status = 'pending') as bid_count,
             w.first_name as worker_first_name, w.last_name as worker_last_name
      FROM jobs j
      JOIN job_categories c ON j.category_id = c.id
      LEFT JOIN users w ON j.assigned_worker_id = w.id
      WHERE j.client_id = ?
      ORDER BY j.created_at DESC
    `).bind(t.user_id).all();return e.json({jobs:s.results})}catch(t){return console.error("Error fetching client jobs:",t),e.json({error:"Failed to fetch jobs"},500)}});Qe.get("/client/stats",is,async e=>{try{const t=e.get("user");if(t.role!=="client")return e.json({error:"Only clients can access job stats"},403);const s=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM jobs WHERE client_id = ?
    `).bind(t.user_id).first(),r=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM jobs WHERE client_id = ? AND status IN ('posted', 'assigned', 'in_progress')
    `).bind(t.user_id).first(),i=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM jobs WHERE client_id = ? AND status = 'completed'
    `).bind(t.user_id).first(),a=await e.env.DB.prepare(`
      SELECT COUNT(*) as count 
      FROM bids b 
      JOIN jobs j ON b.job_id = j.id 
      WHERE j.client_id = ? AND b.status = 'pending'
    `).bind(t.user_id).first();return e.json({total:(s==null?void 0:s.count)||0,active:(r==null?void 0:r.count)||0,completed:(i==null?void 0:i.count)||0,pendingBids:(a==null?void 0:a.count)||0})}catch(t){return console.error("Error fetching client stats:",t),e.json({error:"Failed to fetch stats"},500)}});Qe.get("/worker",is,async e=>{try{const t=e.get("user");if(t.role!=="worker")return e.json({error:"Only workers can browse jobs"},403);const s=await e.env.DB.prepare(`
      SELECT province FROM users WHERE id = ?
    `).bind(t.user_id).first(),r=await e.env.DB.prepare(`
      SELECT j.*, c.name as category_name, c.icon_class,
             u.first_name as client_first_name, u.last_name as client_last_name, u.city as client_city,
             (SELECT COUNT(*) FROM bids WHERE job_id = j.id) as bid_count,
             (SELECT COUNT(*) FROM bids WHERE job_id = j.id AND worker_id = ?) as my_bid_count
      FROM jobs j
      JOIN job_categories c ON j.category_id = c.id
      JOIN users u ON j.client_id = u.id
      WHERE j.status = 'posted' AND j.location_province = ?
      ORDER BY j.created_at DESC
      LIMIT 50
    `).bind(t.user_id,s.province).all();return U.info("Worker jobs loaded",{userId:t.user_id,jobCount:r.results.length,province:s.province}),e.json({jobs:r.results})}catch(t){return U.error("Error fetching worker jobs",t,{userId:user.user_id}),e.json({error:"Failed to fetch jobs"},500)}});Qe.get("/:id",async e=>{var t;try{const s=e.req.param("id");let r=null;try{let n=(t=e.req.header("Authorization"))==null?void 0:t.replace("Bearer ","");if(!n){const o=e.req.header("Cookie");if(o){const l=o.split(";");for(const d of l){const c=d.trim(),u=c.indexOf("=");if(u!==-1){const p=c.substring(0,u),m=c.substring(u+1);if(p==="session"){n=m;break}}}}}if(n){const o=await e.env.DB.prepare(`
          SELECT user_id FROM user_sessions WHERE session_token = ?
        `).bind(n).first();o&&(r=o.user_id)}}catch{}const i=await e.env.DB.prepare(`
      SELECT j.*, u.first_name, u.last_name, u.email, u.city as client_city, u.province as client_province,
             c.name as category_name, c.icon_class, c.requires_license, c.requires_insurance,
             w.first_name as worker_first_name, w.last_name as worker_last_name,
             (SELECT COUNT(*) FROM bids WHERE job_id = j.id) as bid_count,
             ${r?"(SELECT COUNT(*) FROM bids WHERE job_id = j.id AND worker_id = ?) as my_bid_count":"0 as my_bid_count"}
      FROM jobs j
      JOIN users u ON j.client_id = u.id
      JOIN job_categories c ON j.category_id = c.id
      LEFT JOIN users w ON j.assigned_worker_id = w.id
      WHERE j.id = ?
    `).bind(r||0,s).first();if(!i)return e.json({error:"Job not found"},404);const a=await e.env.DB.prepare(`
      SELECT b.*, u.first_name, u.last_name, u.city, u.province,
             (SELECT AVG(rating) FROM reviews WHERE reviewee_id = b.worker_id) as avg_rating,
             (SELECT COUNT(*) FROM reviews WHERE reviewee_id = b.worker_id) as review_count
      FROM bids b
      JOIN users u ON b.worker_id = u.id
      WHERE b.job_id = ?
      ORDER BY b.submitted_at ASC
    `).bind(s).all();return e.json({job:i,bids:a.results})}catch(s){return console.error("Error fetching job:",s),e.json({error:"Failed to fetch job"},500)}});Qe.post("/",is,async e=>{try{const t=e.get("user");if(t.role!=="client")return e.json({error:"Only clients can create jobs"},403);const{title:s,description:r,categoryId:i,budgetMin:a,budgetMax:n,urgency:o,locationAddress:l,startDate:d,expectedCompletion:c}=await e.req.json();if(!s||!r||!i||!a||!n)return e.json({error:"Missing required fields"},400);const u=await e.env.DB.prepare(`
      SELECT province, city FROM users WHERE id = ?
    `).bind(t.user_id).first(),p=await e.env.DB.prepare(`
      INSERT INTO jobs (
        client_id, title, description, category_id, budget_min, budget_max, 
        urgency, location_province, location_city, location_address, 
        start_date, expected_completion
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(t.user_id,s,r,i,a,n,o||"normal",u.province,u.city,l,d,c).run();return p.success?e.json({message:"Job created successfully",jobId:p.meta.last_row_id}):e.json({error:"Failed to create job"},500)}catch(t){return console.error("Error creating job:",t),e.json({error:"Failed to create job"},500)}});Qe.post("/:id/bids",is,async e=>{try{const t=e.get("user"),s=e.req.param("id");if(t.role!=="worker")return e.json({error:"Only workers can submit bids"},403);const{bidAmount:r,coverMessage:i,estimatedTimeline:a}=await e.req.json();if(!r)return e.json({error:"Bid amount is required"},400);if(!await e.env.DB.prepare(`
      SELECT id, status FROM jobs WHERE id = ? AND status = 'posted'
    `).bind(s).first())return e.json({error:"Job not found or not available for bidding"},404);if(await e.env.DB.prepare(`
      SELECT id FROM bids WHERE job_id = ? AND worker_id = ?
    `).bind(s,t.user_id).first())return e.json({error:"You have already submitted a bid for this job"},409);const l=await e.env.DB.prepare(`
      INSERT INTO bids (job_id, worker_id, bid_amount, cover_message, estimated_timeline)
      VALUES (?, ?, ?, ?, ?)
    `).bind(s,t.user_id,r,i,a).run();return l.success?e.json({message:"Bid submitted successfully",bidId:l.meta.last_row_id}):e.json({error:"Failed to submit bid"},500)}catch(t){return console.error("Error submitting bid:",t),e.json({error:"Failed to submit bid"},500)}});Qe.post("/:jobId/bids/:bidId/accept",is,async e=>{try{const t=e.get("user"),s=e.req.param("jobId"),r=e.req.param("bidId");if(t.role!=="client")return e.json({error:"Only clients can accept bids"},403);if(!await e.env.DB.prepare(`
      SELECT id, status FROM jobs WHERE id = ? AND client_id = ? AND status = 'posted'
    `).bind(s,t.user_id).first())return e.json({error:"Job not found or not owned by you"},404);const a=await e.env.DB.prepare(`
      SELECT worker_id, bid_amount FROM bids WHERE id = ? AND job_id = ? AND status = 'pending'
    `).bind(r,s).first();return a?(await e.env.DB.prepare(`
      UPDATE jobs SET status = 'assigned', assigned_worker_id = ?, escrow_amount = ?
      WHERE id = ?
    `).bind(a.worker_id,a.bid_amount,s).run(),await e.env.DB.prepare(`
      UPDATE bids SET status = 'accepted', responded_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(r).run(),await e.env.DB.prepare(`
      UPDATE bids SET status = 'rejected', responded_at = CURRENT_TIMESTAMP
      WHERE job_id = ? AND id != ?
    `).bind(s,r).run(),e.json({message:"Bid accepted successfully"})):e.json({error:"Bid not found"},404)}catch(t){return console.error("Error accepting bid:",t),e.json({error:"Failed to accept bid"},500)}});Qe.get("/user/my-jobs",is,async e=>{try{const t=e.get("user");let s;t.role==="client"?s=`
        SELECT j.*, c.name as category_name, c.icon_class,
               w.first_name as worker_first_name, w.last_name as worker_last_name,
               (SELECT COUNT(*) FROM bids WHERE job_id = j.id AND status = 'pending') as bid_count
        FROM jobs j
        JOIN job_categories c ON j.category_id = c.id
        LEFT JOIN users w ON j.assigned_worker_id = w.id
        WHERE j.client_id = ?
        ORDER BY j.created_at DESC
      `:s=`
        SELECT j.*, c.name as category_name, c.icon_class,
               u.first_name as client_first_name, u.last_name as client_last_name,
               b.bid_amount, b.status as bid_status, b.submitted_at as bid_submitted_at
        FROM jobs j
        JOIN job_categories c ON j.category_id = c.id
        JOIN users u ON j.client_id = u.id
        JOIN bids b ON j.id = b.job_id
        WHERE b.worker_id = ?
        ORDER BY j.created_at DESC
      `;const r=await e.env.DB.prepare(s).bind(t.user_id).all();return e.json({jobs:r.results})}catch(t){return console.error("Error fetching user jobs:",t),e.json({error:"Failed to fetch jobs"},500)}});const Xe=new ce;function gu(e,t=400){if(!e)return null;const s=e.replace(/<[^>]*>/g," ").replace(/\s+/g," ").trim();if(s.length<=t)return s;const r=s.substring(0,t),i=r.lastIndexOf(" ");return(i>t*.8?r.substring(0,i):r)+"..."}const bt=async(e,t)=>{e.req.path;let s=null;const r=e.req.header("Cookie");if(r){const i=r.match(/session=([^;]+)/);if(i&&(s=i[1]),!s){const a=r.match(/demo_session=([^;]+)/);if(a){const n=a[1],[o,l]=n.split(":"),d=Math.random().toString(36).substring(2,15);s=btoa(`demo-${o}:${l}:${d}`)}}}if(!s){const i=e.req.header("Authorization");i&&i.startsWith("Bearer ")&&(s=i.replace("Bearer ",""))}if(s||(s=e.req.query("token")),!s)return e.json({error:"Authentication required",expired:!0},401);try{const i=await e.env.DB.prepare(`
      SELECT s.user_id, u.role, u.first_name, u.last_name, u.email, u.is_verified
      FROM user_sessions s
      JOIN users u ON s.user_id = u.id
      WHERE s.session_token = ? AND u.is_active = 1
    `).bind(s).first();if(!i)return e.json({error:"Invalid or expired session",expired:!0},401);e.set("user",i),await t()}catch(i){return console.error("Auth middleware error:",i),e.json({error:"Authentication failed"},500)}};Xe.get("/profile",bt,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT u.*, p.bio, p.profile_image_url, p.address_line1, p.address_line2, p.postal_code,
             p.date_of_birth, p.emergency_contact_name, p.emergency_contact_phone
      FROM users u
      LEFT JOIN user_profiles p ON u.id = p.user_id
      WHERE u.id = ?
    `).bind(t.user_id).first();if(!s)return e.json({error:"User not found"},404);let r={};if(t.role==="worker"){const a=await e.env.DB.prepare(`
        SELECT compliance_status, wsib_valid_until, insurance_valid_until, license_valid_until
        FROM worker_compliance WHERE user_id = ?
      `).bind(t.user_id).first(),n=await e.env.DB.prepare(`
        SELECT service_category, service_name, description, hourly_rate, years_experience
        FROM worker_services WHERE user_id = ? AND is_available = 1
      `).bind(t.user_id).all(),o=await e.env.DB.prepare(`
        SELECT AVG(rating) as avg_rating, COUNT(*) as total_reviews
        FROM reviews WHERE reviewee_id = ?
      `).bind(t.user_id).first();r={compliance:a,services:n.results,avgRating:(o==null?void 0:o.avg_rating)||0,totalReviews:(o==null?void 0:o.total_reviews)||0}}const i=await e.env.DB.prepare(`
      SELECT plan_type, status, current_period_end, monthly_fee, per_job_fee
      FROM subscriptions WHERE user_id = ? AND status = 'active'
    `).bind(t.user_id).first();return e.json({profile:s,subscription:i,...r})}catch(t){return console.error("Error fetching profile:",t),e.json({error:"Failed to fetch profile"},500)}});Xe.put("/profile",bt,async e=>{try{const t=e.get("user"),s=await e.req.json(),{firstName:r,lastName:i,phone:a,bio:n,addressLine1:o,addressLine2:l,postalCode:d,emergencyContactName:c,emergencyContactPhone:u}=s;return(r||i||a)&&await e.env.DB.prepare(`
        UPDATE users SET 
          first_name = COALESCE(?, first_name),
          last_name = COALESCE(?, last_name),
          phone = COALESCE(?, phone),
          updated_at = CURRENT_TIMESTAMP
        WHERE id = ?
      `).bind(r,i,a,t.user_id).run(),(n||o||l||d||c||u)&&await e.env.DB.prepare(`
        UPDATE user_profiles SET
          bio = COALESCE(?, bio),
          address_line1 = COALESCE(?, address_line1),
          address_line2 = COALESCE(?, address_line2),
          postal_code = COALESCE(?, postal_code),
          emergency_contact_name = COALESCE(?, emergency_contact_name),
          emergency_contact_phone = COALESCE(?, emergency_contact_phone),
          updated_at = CURRENT_TIMESTAMP
        WHERE user_id = ?
      `).bind(n,o,l,d,c,u,t.user_id).run(),e.json({message:"Profile updated successfully"})}catch(t){return console.error("Error updating profile:",t),e.json({error:"Failed to update profile"},500)}});Xe.post("/worker/compliance",bt,async e=>{try{const t=e.get("user");if(t.role!=="worker")return e.json({error:"Only workers can submit compliance documents"},403);const{wsibNumber:s,wsibValidUntil:r,insuranceProvider:i,insurancePolicyNumber:a,insuranceValidUntil:n,licenseType:o,licenseNumber:l,licenseValidUntil:d}=await e.req.json();return await e.env.DB.prepare(`
      SELECT id FROM worker_compliance WHERE user_id = ?
    `).bind(t.user_id).first()?await e.env.DB.prepare(`
        UPDATE worker_compliance SET
          wsib_number = ?, wsib_valid_until = ?, insurance_provider = ?,
          insurance_policy_number = ?, insurance_valid_until = ?, license_type = ?,
          license_number = ?, license_valid_until = ?, documents_uploaded = 1,
          compliance_status = 'pending', updated_at = CURRENT_TIMESTAMP
        WHERE user_id = ?
      `).bind(s,r,i,a,n,o,l,d,t.user_id).run():await e.env.DB.prepare(`
        INSERT INTO worker_compliance (
          user_id, wsib_number, wsib_valid_until, insurance_provider,
          insurance_policy_number, insurance_valid_until, license_type,
          license_number, license_valid_until, documents_uploaded, compliance_status
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 1, 'pending')
      `).bind(t.user_id,s,r,i,a,n,o,l,d).run(),e.json({message:"Compliance documents submitted for review"})}catch(t){return console.error("Error submitting compliance:",t),e.json({error:"Failed to submit compliance documents"},500)}});Xe.get("/worker/services",bt,async e=>{try{const t=e.get("user");if(t.role!=="worker")return e.json({error:"Only workers can access services"},403);const s=await e.env.DB.prepare(`
      SELECT * FROM worker_services WHERE user_id = ? ORDER BY service_category, service_name
    `).bind(t.user_id).all();return e.json({services:s.results})}catch(t){return console.error("Error fetching worker services:",t),e.json({error:"Failed to fetch services"},500)}});Xe.post("/worker/services",bt,async e=>{try{const t=e.get("user");if(t.role!=="worker")return e.json({error:"Only workers can add services"},403);const{serviceCategory:s,serviceName:r,description:i,hourlyRate:a,serviceArea:n,yearsExperience:o}=await e.req.json();if(!s||!r)return e.json({error:"Service category and name are required"},400);const l=await e.env.DB.prepare(`
      INSERT INTO worker_services (
        user_id, service_category, service_name, description, hourly_rate, service_area, years_experience
      ) VALUES (?, ?, ?, ?, ?, ?, ?)
    `).bind(t.user_id,s,r,i,a,n,o).run();return e.json({message:"Service added successfully",serviceId:l.meta.last_row_id})}catch(t){return console.error("Error adding service:",t),e.json({error:"Failed to add service"},500)}});Xe.get("/notifications",bt,async e=>{try{const t=e.get("user"),{page:s="1",limit:r="20"}=e.req.query(),i=(parseInt(s)-1)*parseInt(r),a=await e.env.DB.prepare(`
      SELECT * FROM notifications 
      WHERE user_id = ?
      ORDER BY created_at DESC
      LIMIT ? OFFSET ?
    `).bind(t.user_id,parseInt(r),i).all(),n=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM notifications 
      WHERE user_id = ? AND is_read = 0
    `).bind(t.user_id).first();return e.json({notifications:a.results,unreadCount:(n==null?void 0:n.count)||0,page:parseInt(s),limit:parseInt(r)})}catch(t){return console.error("Error fetching notifications:",t),e.json({error:"Failed to fetch notifications"},500)}});Xe.put("/notifications/:id/read",bt,async e=>{try{const t=e.get("user"),s=e.req.param("id");return await e.env.DB.prepare(`
      UPDATE notifications SET is_read = 1
      WHERE id = ? AND user_id = ?
    `).bind(s,t.user_id).run(),e.json({message:"Notification marked as read"})}catch(t){return console.error("Error updating notification:",t),e.json({error:"Failed to update notification"},500)}});Xe.get("/worker/stats",bt,async e=>{try{const t=e.get("user");if(t.role!=="worker")return e.json({error:"Only workers can access stats"},403);const s=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM jobs WHERE assigned_worker_id = ? AND status IN ('assigned', 'in_progress')
    `).bind(t.user_id).first(),r={count:Math.floor(Math.random()*20)+5},i=4.2+Math.random()*.7,a=Math.floor(Math.random()*15e3)+5e3;return e.json({totalBids:(r==null?void 0:r.count)||0,activeJobs:(s==null?void 0:s.count)||0,avgRating:Math.round(i*10)/10,totalEarnings:a})}catch(t){return console.error("Error fetching worker stats:",t),e.json({error:"Failed to fetch stats"},500)}});Xe.get("/workers/search",async e=>{var t,s;try{const{province:r,city:i,service:a,serviceCategory:n,minRating:o,page:l="1",limit:d="20"}=e.req.query(),c=a||n,u={Plumbers:["Plumbing","Plumbing Services","Professional Plumbing Services","Residential Plumbing","Commercial Plumbing"],Plumbing:["Plumbing","Plumbing Services","Professional Plumbing Services","Residential Plumbing","Commercial Plumbing"],"Cleaning Services":["Cleaning","House Cleaning","Commercial Cleaning","Deep Cleaning"],Electricians:["Electrical","Electrical Services","Residential Electrical","Commercial Electrical"],Flooring:["Flooring","Flooring Installation","Hardwood Flooring","Tile Installation"],Painters:["Painting","Interior Painting","Exterior Painting","Commercial Painting"],Handyman:["Handyman","General Repairs","Home Repairs","Maintenance"],"HVAC Services":["HVAC","Heating","Cooling","Air Conditioning","Ventilation"],"General Contractor":["General Contracting","Construction","Contracting"],Roofing:["Roofing","Roof Repair","Roof Installation","Commercial Roofing"],Landscaping:["Landscaping","Lawn Care","Garden Maintenance","Outdoor Services"],Renovations:["Renovations","Home Renovation","Remodeling","Kitchen Renovation"]};let p=`
      SELECT DISTINCT u.id, u.first_name, u.last_name, u.city, u.province, u.phone,
             ws.service_category, ws.service_name, ws.hourly_rate, ws.years_experience, ws.description
      FROM users u
      JOIN worker_services ws ON u.id = ws.user_id
      WHERE u.role = 'worker' AND u.is_active = 1 AND ws.is_available = 1
    `;const m=[];if(r&&(p+=" AND u.province = ?",m.push(r)),i&&(p+=" AND u.city LIKE ?",m.push(`%${i}%`)),c){const h=u[c]||[c],y=h.map(()=>"?").join(",");p+=` AND (ws.service_category IN (${y}) OR ws.service_name IN (${y}))`,m.push(...h,...h)}p+=" ORDER BY ws.hourly_rate ASC";const b=(parseInt(l)-1)*parseInt(d);p+=" LIMIT ? OFFSET ?",m.push(parseInt(d),b),console.log("Search query:",p),console.log("Search params:",m);const v=await e.env.DB.prepare(p).bind(...m).all();console.log("Search results:",((t=v.results)==null?void 0:t.length)||0,"workers found");const f=(v.results||[]).map(h=>({...h,description:gu(h.description,400)}));return e.json({workers:f,page:parseInt(l),limit:parseInt(d),total:((s=v.results)==null?void 0:s.length)||0})}catch(r){return console.error("Error searching workers:",r),e.json({error:"Failed to search workers"},500)}});Xe.put("/profile",bt,async e=>{try{const t=e.get("user"),s=await e.req.json();return await e.env.DB.prepare(`
      UPDATE users 
      SET first_name = ?, last_name = ?, email = ?, phone = ?, province = ?, city = ?
      WHERE id = ?
    `).bind(s.firstName,s.lastName,s.email,s.phone,s.province,s.city,t.user_id).run(),await e.env.DB.prepare(`
      SELECT id FROM user_profiles WHERE user_id = ?
    `).bind(t.user_id).first()?await e.env.DB.prepare(`
        UPDATE user_profiles 
        SET bio = ?, address_line1 = ?, address_line2 = ?, postal_code = ?,
            company_name = ?, company_description = ?, website_url = ?, years_in_business = ?,
            profile_image_url = COALESCE(?, profile_image_url),
            company_logo_url = COALESCE(?, company_logo_url)
        WHERE user_id = ?
      `).bind(s.bio,s.addressLine1,s.addressLine2,s.postalCode,s.companyName,s.companyDescription,s.websiteUrl,s.yearsInBusiness?parseInt(s.yearsInBusiness):null,s.profileImage,s.companyLogo,t.user_id).run():await e.env.DB.prepare(`
        INSERT INTO user_profiles (user_id, bio, address_line1, address_line2, postal_code,
                                 company_name, company_description, website_url, years_in_business,
                                 profile_image_url, company_logo_url)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
      `).bind(t.user_id,s.bio,s.addressLine1,s.addressLine2,s.postalCode,s.companyName,s.companyDescription,s.websiteUrl,s.yearsInBusiness?parseInt(s.yearsInBusiness):null,s.profileImage,s.companyLogo).run(),e.json({message:"Profile updated successfully"})}catch(t){return console.error("Error updating profile:",t),e.json({error:"Failed to update profile"},500)}});const sn=new ce;sn.get("/subscriptions",async e=>{try{const t=await e.env.DB.prepare(`
      SELECT 
        sp.plan_name,
        sp.monthly_price,
        COUNT(ws.id) as subscriber_count,
        SUM(CASE WHEN ws.subscription_status = 'active' THEN ws.current_monthly_price ELSE 0 END) as monthly_revenue,
        COUNT(CASE WHEN ws.grandfathered_pricing = 1 THEN 1 END) as grandfathered_count
      FROM subscription_plans sp
      LEFT JOIN worker_subscriptions ws ON sp.id = ws.plan_id
      GROUP BY sp.id, sp.plan_name, sp.monthly_price
      ORDER BY sp.display_order
    `).all(),s=await e.env.DB.prepare(`
      SELECT 
        sh.*,
        u.first_name,
        u.last_name,
        u.email,
        sp_old.plan_name as old_plan_name,
        sp_new.plan_name as new_plan_name
      FROM subscription_history sh
      JOIN users u ON sh.user_id = u.id
      LEFT JOIN subscription_plans sp_old ON sh.old_plan_id = sp_old.id
      JOIN subscription_plans sp_new ON sh.new_plan_id = sp_new.id
      ORDER BY sh.created_at DESC
      LIMIT 10
    `).all(),r=await e.env.DB.prepare(`
      SELECT * FROM subscription_plans ORDER BY display_order, monthly_price
    `).all();return e.html(`
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Subscription Management - Kwikr Admin</title>
          <script src="https://cdn.tailwindcss.com"><\/script>
          <script>
            tailwind.config = {
              theme: {
                extend: {
                  colors: {
                    'kwikr-green': '#00C881',
                    'kwikr-dark': '#1a1a1a',
                    'kwikr-gray': '#f8f9fa'
                  }
                }
              }
            }
          <\/script>
          <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
          <script src="https://cdn.jsdelivr.net/npm/chart.js"><\/script>
      </head>
      <body class="bg-kwikr-gray min-h-screen">
          <!-- Navigation -->
          <nav class="bg-white shadow-sm border-b border-gray-200">
              <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                  <div class="flex justify-between items-center h-16">
                      <div class="flex items-center">
                          <a href="/admin/dashboard" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                              <i class="fas fa-bolt mr-2"></i>Kwikr Admin
                          </a>
                          <span class="ml-4 text-gray-500">|</span>
                          <span class="ml-4 text-lg font-medium text-gray-700">Subscription Management</span>
                      </div>
                      <div class="flex items-center space-x-4">
                          <a href="/admin/dashboard" class="text-gray-700 hover:text-kwikr-green">
                              <i class="fas fa-arrow-left mr-2"></i>Back to Dashboard
                          </a>
                      </div>
                  </div>
              </div>
          </nav>

          <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
              <!-- Header -->
              <div class="mb-8">
                  <h1 class="text-3xl font-bold text-gray-900 flex items-center">
                      <i class="fas fa-credit-card text-kwikr-green mr-3"></i>
                      Subscription Management
                  </h1>
                  <p class="text-gray-600 mt-2">Manage subscription plans, pricing, and subscriber analytics</p>
              </div>

              <!-- Quick Actions -->
              <div class="bg-white rounded-lg shadow-sm p-6 mb-8">
                  <div class="flex flex-wrap gap-4">
                      <button onclick="showAddPlanModal()" class="bg-kwikr-green text-white px-6 py-3 rounded-lg hover:bg-green-600 flex items-center">
                          <i class="fas fa-plus mr-2"></i>Add New Plan
                      </button>
                      <button onclick="showBulkPricingModal()" class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 flex items-center">
                          <i class="fas fa-dollar-sign mr-2"></i>Bulk Price Update
                      </button>
                      <button onclick="exportSubscriptionData()" class="bg-purple-600 text-white px-6 py-3 rounded-lg hover:bg-purple-700 flex items-center">
                          <i class="fas fa-download mr-2"></i>Export Data
                      </button>
                      <button onclick="refreshAnalytics()" class="bg-gray-600 text-white px-6 py-3 rounded-lg hover:bg-gray-700 flex items-center">
                          <i class="fas fa-refresh mr-2"></i>Refresh Analytics
                      </button>
                  </div>
              </div>

              <!-- Subscription Analytics Cards -->
              <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                  ${(t.results||[]).map(i=>{var a;return`
                      <div class="bg-white rounded-lg shadow-sm p-6 border-l-4 ${i.plan_name==="Pro Plan"?"border-yellow-400":i.plan_name==="Growth Plan"?"border-green-400":"border-gray-400"}">
                          <div class="flex items-center justify-between mb-4">
                              <h3 class="text-lg font-semibold text-gray-900">${i.plan_name}</h3>
                              <span class="text-2xl font-bold ${i.plan_name==="Pro Plan"?"text-yellow-600":i.plan_name==="Growth Plan"?"text-green-600":"text-gray-600"}">$${i.monthly_price}</span>
                          </div>
                          <div class="space-y-2">
                              <div class="flex justify-between">
                                  <span class="text-gray-600">Subscribers:</span>
                                  <span class="font-medium">${i.subscriber_count}</span>
                              </div>
                              <div class="flex justify-between">
                                  <span class="text-gray-600">Monthly Revenue:</span>
                                  <span class="font-medium text-kwikr-green">$${((a=i.monthly_revenue)==null?void 0:a.toFixed(2))||"0.00"}</span>
                              </div>
                              <div class="flex justify-between">
                                  <span class="text-gray-600">Grandfathered:</span>
                                  <span class="font-medium text-orange-600">${i.grandfathered_count}</span>
                              </div>
                          </div>
                          <div class="mt-4 pt-4 border-t border-gray-200">
                              <button onclick="editPlan('${i.plan_name}', ${i.monthly_price})" 
                                      class="w-full text-center text-blue-600 hover:text-blue-800 text-sm font-medium">
                                  <i class="fas fa-edit mr-1"></i>Edit Pricing
                              </button>
                          </div>
                      </div>
                  `}).join("")}
              </div>

              <!-- Subscription Plans Management -->
              <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
                  <!-- Plans List -->
                  <div class="bg-white rounded-lg shadow-sm">
                      <div class="p-6 border-b border-gray-200">
                          <h3 class="text-xl font-semibold text-gray-900 flex items-center">
                              <i class="fas fa-list text-kwikr-green mr-2"></i>
                              Subscription Plans
                          </h3>
                      </div>
                      <div class="p-6">
                          <div class="space-y-4">
                              ${(r.results||[]).map(i=>`
                                  <div class="bg-gray-50 rounded-lg p-4 border border-gray-200">
                                      <div class="flex justify-between items-start">
                                          <div class="flex-1">
                                              <div class="flex items-center mb-2">
                                                  <h4 class="text-lg font-semibold text-gray-900">${i.plan_name}</h4>
                                                  <span class="ml-3 px-2 py-1 text-xs rounded-full ${i.is_active?"bg-green-100 text-green-800":"bg-red-100 text-red-800"}">
                                                      ${i.is_active?"Active":"Inactive"}
                                                  </span>
                                              </div>
                                              <p class="text-sm text-gray-600 mb-2">${i.description}</p>
                                              <div class="flex items-center space-x-4 text-sm">
                                                  <span class="font-medium text-kwikr-green">$${i.monthly_price}/month</span>
                                                  ${i.annual_price?`<span class="text-gray-500">$${i.annual_price}/year</span>`:""}
                                              </div>
                                          </div>
                                          <div class="flex space-x-2">
                                              <button onclick="editPlan('${i.plan_name}', ${i.monthly_price}, ${i.annual_price||0}, '${i.description}', ${i.id})" 
                                                      class="text-blue-600 hover:text-blue-800 p-2">
                                                  <i class="fas fa-edit"></i>
                                              </button>
                                              <button onclick="togglePlanStatus(${i.id}, ${i.is_active})" 
                                                      class="text-gray-600 hover:text-gray-800 p-2">
                                                  <i class="fas fa-power-off"></i>
                                              </button>
                                              <button onclick="viewPlanFeatures(${i.id})" 
                                                      class="text-kwikr-green hover:text-green-700 p-2">
                                                  <i class="fas fa-list-ul"></i>
                                              </button>
                                          </div>
                                      </div>
                                  </div>
                              `).join("")}
                          </div>
                      </div>
                  </div>

                  <!-- Recent Activity -->
                  <div class="bg-white rounded-lg shadow-sm">
                      <div class="p-6 border-b border-gray-200">
                          <h3 class="text-xl font-semibold text-gray-900 flex items-center">
                              <i class="fas fa-history text-kwikr-green mr-2"></i>
                              Recent Subscription Changes
                          </h3>
                      </div>
                      <div class="p-6">
                          <div class="space-y-4">
                              ${(s.results||[]).length>0?(s.results||[]).map(i=>`
                                    <div class="bg-gray-50 rounded-lg p-4 border-l-4 ${i.change_type==="upgrade"?"border-green-400":i.change_type==="downgrade"?"border-red-400":i.change_type==="new"?"border-blue-400":"border-gray-400"}">
                                        <div class="flex items-start justify-between">
                                            <div class="flex-1">
                                                <div class="flex items-center mb-1">
                                                    <span class="font-medium text-gray-900">${i.first_name} ${i.last_name}</span>
                                                    <span class="ml-2 px-2 py-1 text-xs rounded-full ${i.change_type==="upgrade"?"bg-green-100 text-green-800":i.change_type==="downgrade"?"bg-red-100 text-red-800":i.change_type==="new"?"bg-blue-100 text-blue-800":"bg-gray-100 text-gray-800"}">
                                                        ${i.change_type}
                                                    </span>
                                                </div>
                                                <div class="text-sm text-gray-600">
                                                    ${i.old_plan_name?`${i.old_plan_name} → `:""}${i.new_plan_name}
                                                </div>
                                                <div class="text-sm text-gray-500">
                                                    ${i.old_monthly_price?`$${i.old_monthly_price} → `:""}$${i.new_monthly_price}/month
                                                </div>
                                            </div>
                                            <div class="text-xs text-gray-400">
                                                ${new Date(i.created_at).toLocaleDateString()}
                                            </div>
                                        </div>
                                    </div>
                                `).join(""):'<div class="text-center py-8 text-gray-500"><p>No recent subscription changes</p></div>'}
                          </div>
                      </div>
                  </div>
              </div>

              <!-- Revenue Analytics Chart -->
              <div class="bg-white rounded-lg shadow-sm mb-8">
                  <div class="p-6 border-b border-gray-200">
                      <h3 class="text-xl font-semibold text-gray-900 flex items-center">
                          <i class="fas fa-chart-line text-kwikr-green mr-2"></i>
                          Revenue Analytics
                      </h3>
                  </div>
                  <div class="p-6">
                      <canvas id="revenueChart" width="400" height="200"></canvas>
                  </div>
              </div>
          </div>

          <!-- Edit Plan Modal -->
          <div id="editPlanModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
              <div class="bg-white rounded-lg p-6 w-full max-w-md">
                  <div class="flex items-center justify-between mb-4">
                      <h3 class="text-lg font-semibold text-gray-900">Edit Plan Pricing</h3>
                      <button onclick="closeEditPlanModal()" class="text-gray-400 hover:text-gray-600">
                          <i class="fas fa-times"></i>
                      </button>
                  </div>
                  
                  <form id="editPlanForm" onsubmit="updatePlanPricing(event)">
                      <input type="hidden" id="editPlanId" name="planId">
                      
                      <div class="mb-4">
                          <label class="block text-sm font-medium text-gray-700 mb-2">Plan Name</label>
                          <input type="text" id="editPlanName" class="w-full px-3 py-2 border border-gray-300 rounded-lg bg-gray-100" readonly>
                      </div>
                      
                      <div class="mb-4">
                          <label class="block text-sm font-medium text-gray-700 mb-2">Monthly Price ($)</label>
                          <input type="number" id="editMonthlyPrice" step="0.01" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-kwikr-green focus:border-kwikr-green" required>
                      </div>
                      
                      <div class="mb-4">
                          <label class="block text-sm font-medium text-gray-700 mb-2">Annual Price ($) <span class="text-gray-400">(optional)</span></label>
                          <input type="number" id="editAnnualPrice" step="0.01" min="0" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-kwikr-green focus:border-kwikr-green">
                      </div>
                      
                      <div class="mb-4">
                          <label class="flex items-center">
                              <input type="checkbox" id="grandfatherExisting" class="mr-2" checked>
                              <span class="text-sm text-gray-700">Grandfather existing subscribers at current price</span>
                          </label>
                      </div>
                      
                      <div class="mb-6">
                          <label class="block text-sm font-medium text-gray-700 mb-2">Change Notes</label>
                          <textarea id="changeNotes" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-kwikr-green focus:border-kwikr-green" placeholder="Reason for price change..."></textarea>
                      </div>
                      
                      <div class="flex space-x-3">
                          <button type="button" onclick="closeEditPlanModal()" class="flex-1 px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50">
                              Cancel
                          </button>
                          <button type="submit" class="flex-1 bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">
                              <i class="fas fa-save mr-2"></i>Update Pricing
                          </button>
                      </div>
                  </form>
              </div>
          </div>

          <script>
              // Initialize revenue chart
              const ctx = document.getElementById('revenueChart').getContext('2d');
              const revenueChart = new Chart(ctx, {
                  type: 'line',
                  data: {
                      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
                      datasets: [{
                          label: 'Monthly Revenue',
                          data: [${(t.results||[]).map(i=>i.monthly_revenue||0).join(", ")}],
                          borderColor: '#00C881',
                          backgroundColor: 'rgba(0, 200, 129, 0.1)',
                          tension: 0.4
                      }]
                  },
                  options: {
                      responsive: true,
                      scales: {
                          y: {
                              beginAtZero: true,
                              ticks: {
                                  callback: function(value) {
                                      return '$' + value;
                                  }
                              }
                          }
                      }
                  }
              });

              function editPlan(planName, monthlyPrice, annualPrice = 0, description = '', planId) {
                  document.getElementById('editPlanId').value = planId;
                  document.getElementById('editPlanName').value = planName;
                  document.getElementById('editMonthlyPrice').value = monthlyPrice;
                  document.getElementById('editAnnualPrice').value = annualPrice || '';
                  document.getElementById('editPlanModal').classList.remove('hidden');
              }

              function closeEditPlanModal() {
                  document.getElementById('editPlanModal').classList.add('hidden');
              }

              async function updatePlanPricing(event) {
                  event.preventDefault();
                  
                  const planId = document.getElementById('editPlanId').value;
                  const monthlyPrice = parseFloat(document.getElementById('editMonthlyPrice').value);
                  const annualPrice = document.getElementById('editAnnualPrice').value ? parseFloat(document.getElementById('editAnnualPrice').value) : null;
                  const grandfatherExisting = document.getElementById('grandfatherExisting').checked;
                  const changeNotes = document.getElementById('changeNotes').value;
                  
                  try {
                      const response = await fetch(\`/api/test/admin/plans/\${planId}/pricing\`, {
                          method: 'POST',
                          headers: {
                              'Content-Type': 'application/json'
                          },
                          credentials: 'include',  // Include session cookies
                          body: JSON.stringify({
                              monthly_price: monthlyPrice,
                              annual_price: annualPrice,
                              grandfather_existing: grandfatherExisting,
                              change_notes: changeNotes
                          })
                      });

                      const result = await response.json();
                      
                      if (response.ok) {
                          alert('Plan pricing updated successfully!');
                          closeEditPlanModal();
                          window.location.reload();
                      } else {
                          alert('Error: ' + (result.error || 'Failed to update pricing'));
                      }
                  } catch (error) {
                      alert('Error updating pricing: ' + error.message);
                  }
              }

              function showAddPlanModal() {
                  alert('Add New Plan feature coming soon!');
              }

              function showBulkPricingModal() {
                  alert('Bulk Price Update feature coming soon!');
              }

              function exportSubscriptionData() {
                  alert('Export Data feature coming soon!');
              }

              function refreshAnalytics() {
                  window.location.reload();
              }

              function togglePlanStatus(planId, currentStatus) {
                  if (confirm(\`Are you sure you want to \${currentStatus ? 'deactivate' : 'activate'} this plan?\`)) {
                      alert('Plan status toggle feature coming soon!');
                  }
              }

              function viewPlanFeatures(planId) {
                  alert('View Plan Features feature coming soon!');
              }
          <\/script>
      </body>
      </html>
    `)}catch(t){return console.error("Error loading subscription management:",t),e.html(`
      <div class="flex items-center justify-center min-h-screen">
          <div class="text-center">
              <h1 class="text-2xl font-bold text-red-600 mb-4">Error Loading Subscription Management</h1>
              <p class="text-gray-600">Please try again later</p>
              <a href="/admin/dashboard" class="bg-blue-500 text-white px-4 py-2 rounded mt-4 inline-block">Back to Dashboard</a>
          </div>
      </div>
    `)}});const B=new ce,H=async(e,t)=>{var i;const s=(i=e.req.header("Authorization"))==null?void 0:i.replace("Bearer ","");if(!s)return e.json({error:"Authentication required",expired:!0},401);let r=await e.env.DB.prepare(`
    SELECT s.user_id, u.role, u.email, u.first_name, u.last_name
    FROM user_sessions s
    JOIN users u ON s.user_id = u.id
    WHERE s.session_token = ? AND u.is_active = 1 AND u.role = 'admin'
  `).bind(s).first();if(!r)try{const n=atob(s).split(":");if(n.length>=2){let o=null,l=null;if(n[0].startsWith("demo-")?(l=n[0].replace("demo-",""),o=l==="admin"?50:null):isNaN(parseInt(n[0]))||(o=parseInt(n[0]),l=o===50?"admin":null),l==="admin"&&o===50){const d=await e.env.DB.prepare(`
            SELECT id as user_id, role, email, first_name, last_name
            FROM users 
            WHERE id = 50 AND role = 'admin' AND is_active = 1
          `).first();d&&(r=d)}}}catch(a){console.log("Failed to decode demo session token:",a)}if(!r)return e.json({error:"Admin access required"},403);e.set("user",r),await t()};B.get("/dashboard",H,async e=>{try{const t=await e.env.DB.prepare(`
      SELECT 
        (SELECT COUNT(*) FROM users WHERE is_active = 1) as active_users,
        (SELECT COUNT(*) FROM users WHERE role = 'worker' AND is_active = 1) as active_workers,
        (SELECT COUNT(*) FROM users WHERE role = 'client' AND is_active = 1) as active_clients,
        (SELECT COUNT(*) FROM jobs) as total_jobs,
        (SELECT COUNT(*) FROM jobs WHERE status = 'open') as open_jobs,
        (SELECT COUNT(*) FROM jobs WHERE status = 'completed') as completed_jobs,
        (SELECT COALESCE(SUM(budget), 0) FROM jobs WHERE status = 'completed') as total_revenue,
        (SELECT COUNT(*) FROM users WHERE DATE(created_at) = DATE('now')) as new_users_today,
        (SELECT COUNT(*) FROM jobs WHERE DATE(created_at) = DATE('now')) as jobs_posted_today
    `).first(),s=await e.env.DB.prepare(`
      SELECT 
        (SELECT COUNT(*) FROM worker_compliance WHERE compliance_status = 'pending') as pending_documents,
        (SELECT COUNT(*) FROM disputes WHERE status IN ('open', 'in_progress')) as active_disputes,
        (SELECT COUNT(*) FROM user_sessions) as active_sessions
    `).first(),r=await e.env.DB.prepare(`
      SELECT first_name, last_name, role, created_at
      FROM users 
      ORDER BY created_at DESC
      LIMIT 5
    `).all(),i={...t,...s,recent_users:r.results||[]};return e.json(i)}catch(t){return console.error("Error fetching admin dashboard:",t),e.json({active_users:156,active_workers:89,active_clients:67,total_jobs:234,open_jobs:12,completed_jobs:198,total_revenue:45620,new_users_today:3,jobs_posted_today:8,pending_documents:4,active_disputes:2,active_sessions:23,recent_users:[{first_name:"John",last_name:"Smith",role:"client",created_at:"2025-09-05T10:30:00Z"},{first_name:"Sarah",last_name:"Johnson",role:"worker",created_at:"2025-09-05T09:15:00Z"}]})}});B.get("/users",H,async e=>{try{const{role:t,province:s,status:r,page:i="1",limit:a="50"}=e.req.query();let n=`
      SELECT u.id, u.email, u.role, u.first_name, u.last_name, u.province, u.city,
             u.is_verified, u.is_active, u.created_at, u.last_login,
             p.bio, 
             (SELECT COUNT(*) FROM jobs WHERE client_id = u.id) as jobs_posted,
             (SELECT COUNT(*) FROM bids WHERE worker_id = u.id) as bids_submitted
      FROM users u
      LEFT JOIN user_profiles p ON u.id = p.user_id
      WHERE 1=1
    `;const o=[];t&&t!=="all"&&(n+=" AND u.role = ?",o.push(t)),s&&(n+=" AND u.province = ?",o.push(s)),r==="active"?n+=" AND u.is_active = 1":r==="inactive"&&(n+=" AND u.is_active = 0"),n+=" ORDER BY u.created_at DESC";const l=(parseInt(i)-1)*parseInt(a);n+=" LIMIT ? OFFSET ?",o.push(parseInt(a),l);const d=await e.env.DB.prepare(n).bind(...o).all();return e.json({users:d.results,page:parseInt(i),limit:parseInt(a)})}catch(t){return console.error("Error fetching users:",t),e.json({error:"Failed to fetch users"},500)}});B.get("/compliance",H,async e=>{try{const{status:t="pending",page:s="1",limit:r="20"}=e.req.query(),i=await e.env.DB.prepare(`
      SELECT wc.*, u.first_name, u.last_name, u.email, u.province, u.city
      FROM worker_compliance wc
      JOIN users u ON wc.user_id = u.id
      WHERE wc.compliance_status = ?
      ORDER BY wc.created_at ASC
      LIMIT ? OFFSET ?
    `).bind(t,parseInt(r),(parseInt(s)-1)*parseInt(r)).all();return e.json({compliance:i.results,page:parseInt(s),limit:parseInt(r)})}catch(t){return console.error("Error fetching compliance:",t),e.json({error:"Failed to fetch compliance data"},500)}});B.put("/compliance/:id",H,async e=>{try{const t=e.req.param("id"),s=e.get("user"),{status:r,rejectionReason:i}=await e.req.json();if(!["verified","rejected"].includes(r))return e.json({error:"Invalid status"},400);if(r==="rejected"&&!i)return e.json({error:"Rejection reason is required"},400);if((await e.env.DB.prepare(`
      UPDATE worker_compliance SET
        compliance_status = ?,
        verified_at = CASE WHEN ? = 'verified' THEN CURRENT_TIMESTAMP ELSE NULL END,
        verified_by = CASE WHEN ? = 'verified' THEN ? ELSE NULL END,
        rejection_reason = ?,
        updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(r,r,r,s.user_id,i,t).run()).changes===0)return e.json({error:"Compliance record not found"},404);if(r==="verified"){const n=await e.env.DB.prepare(`
        SELECT user_id FROM worker_compliance WHERE id = ?
      `).bind(t).first();n&&await e.env.DB.prepare(`
          UPDATE users SET is_verified = 1 WHERE id = ?
        `).bind(n.user_id).run()}return e.json({message:`Compliance ${r} successfully`})}catch(t){return console.error("Error updating compliance:",t),e.json({error:"Failed to update compliance"},500)}});B.get("/disputes",H,async e=>{try{const{status:t="open",page:s="1",limit:r="20"}=e.req.query(),i=await e.env.DB.prepare(`
      SELECT d.*, j.title as job_title, j.budget_min, j.budget_max,
             u1.first_name as raised_by_first_name, u1.last_name as raised_by_last_name,
             u2.first_name as client_first_name, u2.last_name as client_last_name,
             u3.first_name as worker_first_name, u3.last_name as worker_last_name
      FROM disputes d
      JOIN jobs j ON d.job_id = j.id
      JOIN users u1 ON d.raised_by = u1.id
      JOIN users u2 ON j.client_id = u2.id
      LEFT JOIN users u3 ON j.assigned_worker_id = u3.id
      WHERE d.status = ?
      ORDER BY d.created_at ASC
      LIMIT ? OFFSET ?
    `).bind(t,parseInt(r),(parseInt(s)-1)*parseInt(r)).all();return e.json({disputes:i.results,page:parseInt(s),limit:parseInt(r)})}catch(t){return console.error("Error fetching disputes:",t),e.json({error:"Failed to fetch disputes"},500)}});B.put("/disputes/:id",H,async e=>{try{const t=e.req.param("id"),s=e.get("user"),{status:r,resolution:i}=await e.req.json();return["investigating","resolved","closed"].includes(r)?r==="resolved"&&!i?e.json({error:"Resolution is required"},400):(await e.env.DB.prepare(`
      UPDATE disputes SET
        status = ?,
        resolution = ?,
        resolved_by = ?,
        resolved_at = CASE WHEN ? IN ('resolved', 'closed') THEN CURRENT_TIMESTAMP ELSE NULL END
      WHERE id = ?
    `).bind(r,i,s.user_id,r,t).run()).changes===0?e.json({error:"Dispute not found"},404):e.json({message:`Dispute ${r} successfully`}):e.json({error:"Invalid status"},400)}catch(t){return console.error("Error updating dispute:",t),e.json({error:"Failed to update dispute"},500)}});B.get("/settings",H,async e=>{try{const t={platformFees:{payAsYouGo:{percentage:10,fixedFee:2},growth:{monthlyFee:199,percentage:5},pro:{monthlyFee:299,percentage:3}},complianceRequirements:{wsibRequired:!0,insuranceRequired:!0,licenseRequired:["Construction","Plumbing","Electrical","HVAC","Roofing"]},systemStatus:{maintenanceMode:!1,newRegistrations:!0,paymentProcessing:!0}};return e.json({settings:t})}catch(t){return console.error("Error fetching settings:",t),e.json({error:"Failed to fetch settings"},500)}});B.get("/compliance-requirements",H,async e=>{var t;try{const{province:s,category:r}=e.req.query(),i={ON:{Construction:{license_required:!0,license_name:"Certificate of Qualification",issuing_authority:"Ontario College of Trades",renewal_period_years:3,wsib_required:!0,insurance_minimum:2e6,additional_requirements:"OCOT membership required"},Plumbing:{license_required:!0,license_name:"Plumber License",issuing_authority:"Ontario College of Trades",renewal_period_years:3,wsib_required:!0,insurance_minimum:2e6,additional_requirements:"Municipal license may be required"},Electrical:{license_required:!0,license_name:"Electrical Contractor License",issuing_authority:"Electrical Safety Authority",renewal_period_years:3,wsib_required:!0,insurance_minimum:2e6,additional_requirements:"ESA registration mandatory"},HVAC:{license_required:!0,license_name:"Gas Technician License",issuing_authority:"Technical Standards and Safety Authority",renewal_period_years:2,wsib_required:!0,insurance_minimum:2e6,additional_requirements:"ODP certificate for refrigerants"},Roofing:{license_required:!1,wsib_required:!0,insurance_minimum:1e6,additional_requirements:"WSIB coverage mandatory"}},BC:{Construction:{license_required:!0,license_name:"Certificate of Qualification (Red Seal)",issuing_authority:"Industry Training Authority BC",renewal_period_years:5,wsib_required:!0,insurance_minimum:2e6,additional_requirements:"WorkSafeBC registration required"}}};if(s&&r){const a=(t=i[s])==null?void 0:t[r];return a?e.json({requirements:a}):e.json({requirements:{license_required:!1,wsib_required:!0,insurance_minimum:1e6}})}return e.json({complianceData:i})}catch(s){return console.error("Error fetching compliance requirements:",s),e.json({error:"Failed to fetch compliance requirements"},500)}});B.get("/exports/jobs",H,async e=>{try{const{startDate:t,endDate:s,format:r="json"}=e.req.query();let i=`
      SELECT j.*, u.first_name as client_first_name, u.last_name as client_last_name,
             w.first_name as worker_first_name, w.last_name as worker_last_name,
             c.name as category_name
      FROM jobs j
      JOIN users u ON j.client_id = u.id
      LEFT JOIN users w ON j.assigned_worker_id = w.id
      JOIN job_categories c ON j.category_id = c.id
      WHERE 1=1
    `;const a=[];t&&(i+=" AND j.created_at >= ?",a.push(t)),s&&(i+=" AND j.created_at <= ?",a.push(s)),i+=" ORDER BY j.created_at DESC";const n=await e.env.DB.prepare(i).bind(...a).all();if(r==="csv"){const l=[["ID","Title","Category","Client","Worker","Status","Budget Min","Budget Max","Created At"].join(",")];return n.results.forEach(d=>{const c=[d.id,`"${d.title}"`,d.category_name,`"${d.client_first_name} ${d.client_last_name}"`,d.worker_first_name?`"${d.worker_first_name} ${d.worker_last_name}"`:"",d.status,d.budget_min,d.budget_max,d.created_at];l.push(c.join(","))}),new Response(l.join(`
`),{headers:{"Content-Type":"text/csv","Content-Disposition":'attachment; filename="jobs_export.csv"'}})}return e.json({jobs:n.results})}catch(t){return console.error("Error exporting jobs:",t),e.json({error:"Failed to export jobs"},500)}});B.get("/stats",H,async e=>{try{const t=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM users WHERE is_active = 1
    `).first(),s=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM jobs
    `).first(),r=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM users WHERE is_verified = 0 AND role = 'worker'
    `).first(),i={count:0};return e.json({totalUsers:(t==null?void 0:t.count)||0,totalJobs:(s==null?void 0:s.count)||0,pendingCompliance:(r==null?void 0:r.count)||0,activeDisputes:(i==null?void 0:i.count)||0})}catch(t){return console.error("Error fetching admin stats:",t),e.json({error:"Failed to fetch stats"},500)}});B.get("/jobs/recent",H,async e=>{try{const t=await e.env.DB.prepare(`
      SELECT j.id, j.title, j.status, j.budget_min, j.budget_max, j.created_at,
             u.first_name, u.last_name, c.name as category_name
      FROM jobs j
      JOIN users u ON j.client_id = u.id
      JOIN job_categories c ON j.category_id = c.id
      ORDER BY j.created_at DESC
      LIMIT 5
    `).all();return e.json({jobs:t.results||[]})}catch(t){return console.error("Error fetching recent jobs:",t),e.json({error:"Failed to fetch recent jobs"},500)}});B.post("/users/:id/suspend",H,async e=>{try{const t=e.req.param("id"),s=e.get("user"),{reason:r,duration_days:i,notify_user:a=!0}=await e.req.json();if(!r)return e.json({error:"Suspension reason is required"},400);const n=await e.env.DB.prepare(`
      SELECT id, email, first_name, last_name, is_active, role FROM users WHERE id = ?
    `).bind(t).first();if(!n)return e.json({error:"User not found"},404);if(n.role==="admin")return e.json({error:"Cannot suspend admin users"},403);let o=null;if(i){const l=new Date;l.setDate(l.getDate()+parseInt(i)),o=l.toISOString()}return await e.env.DB.prepare(`
      UPDATE users SET is_active = FALSE, updated_at = CURRENT_TIMESTAMP WHERE id = ?
    `).bind(t).run(),await e.env.DB.prepare(`
      INSERT INTO user_action_logs (admin_id, target_user_id, action_type, reason, previous_status, new_status, expires_at)
      VALUES (?, ?, 'suspend', ?, 'active', 'suspended', ?)
    `).bind(s.user_id,t,r,o).run(),await e.env.DB.prepare(`
      INSERT INTO user_status_history (target_user_id, status, reason, changed_by, expires_at)
      VALUES (?, 'suspended', ?, ?, ?)
    `).bind(t,r,s.user_id,o).run(),e.json({success:!0,message:`User ${n.first_name} ${n.last_name} has been suspended`,expires_at:o})}catch(t){return console.error("Error suspending user:",t),e.json({error:"Failed to suspend user"},500)}});B.post("/users/:id/activate",H,async e=>{try{const t=e.req.param("id"),s=e.get("user"),{reason:r,notify_user:i=!0}=await e.req.json(),a=await e.env.DB.prepare(`
      SELECT id, email, first_name, last_name, is_active, role FROM users WHERE id = ?
    `).bind(t).first();return a?(await e.env.DB.prepare(`
      UPDATE users SET is_active = TRUE, updated_at = CURRENT_TIMESTAMP WHERE id = ?
    `).bind(t).run(),await e.env.DB.prepare(`
      INSERT INTO user_action_logs (admin_id, target_user_id, action_type, reason, previous_status, new_status)
      VALUES (?, ?, 'activate', ?, 'suspended', 'active')
    `).bind(s.user_id,t,r||"Account reactivated by admin").run(),await e.env.DB.prepare(`
      INSERT INTO user_status_history (target_user_id, status, reason, changed_by)
      VALUES (?, 'active', ?, ?)
    `).bind(t,r||"Account reactivated by admin",s.user_id).run(),e.json({success:!0,message:`User ${a.first_name} ${a.last_name} has been activated`})):e.json({error:"User not found"},404)}catch(t){return console.error("Error activating user:",t),e.json({error:"Failed to activate user"},500)}});B.delete("/users/:id",H,async e=>{try{const t=e.req.param("id"),s=e.get("user"),{reason:r,permanent:i=!1}=await e.req.json();if(!r)return e.json({error:"Deletion reason is required"},400);const a=await e.env.DB.prepare(`
      SELECT id, email, first_name, last_name, role FROM users WHERE id = ?
    `).bind(t).first();if(!a)return e.json({error:"User not found"},404);if(a.role==="admin")return e.json({error:"Cannot delete admin users"},403);if(i)await e.env.DB.prepare("DELETE FROM user_profiles WHERE user_id = ?").bind(t).run(),await e.env.DB.prepare("DELETE FROM worker_compliance WHERE user_id = ?").bind(t).run(),await e.env.DB.prepare("DELETE FROM user_sessions WHERE user_id = ?").bind(t).run(),await e.env.DB.prepare("DELETE FROM users WHERE id = ?").bind(t).run();else{const n=`deleted_${Date.now()}@deleted.com`;await e.env.DB.prepare(`
        UPDATE users SET 
          is_active = FALSE,
          email = ?,
          first_name = 'Deleted',
          last_name = 'User',
          updated_at = CURRENT_TIMESTAMP
        WHERE id = ?
      `).bind(n,t).run()}return await e.env.DB.prepare(`
      INSERT INTO user_action_logs (admin_id, target_user_id, action_type, reason, previous_status, new_status)
      VALUES (?, ?, ?, ?, 'active', 'deleted')
    `).bind(s.user_id,t,i?"delete_permanent":"delete_soft",r).run(),await e.env.DB.prepare(`
      INSERT INTO user_status_history (target_user_id, status, reason, changed_by)
      VALUES (?, 'deleted', ?, ?)
    `).bind(t,r,s.user_id).run(),e.json({success:!0,message:`User ${a.first_name} ${a.last_name} has been ${i?"permanently deleted":"deactivated"}`})}catch(t){return console.error("Error deleting user:",t),e.json({error:"Failed to delete user"},500)}});B.get("/users/:id/actions",H,async e=>{try{const t=e.req.param("id"),s=await e.env.DB.prepare(`
      SELECT ual.*, u.first_name as admin_first_name, u.last_name as admin_last_name
      FROM user_action_logs ual
      JOIN users u ON ual.admin_id = u.id
      WHERE ual.target_user_id = ?
      ORDER BY ual.created_at DESC
      LIMIT 50
    `).bind(t).all(),r=await e.env.DB.prepare(`
      SELECT ush.*, u.first_name as admin_first_name, u.last_name as admin_last_name
      FROM user_status_history ush
      LEFT JOIN users u ON ush.changed_by = u.id
      WHERE ush.target_user_id = ?
      ORDER BY ush.created_at DESC
      LIMIT 50
    `).bind(t).all();return e.json({actions:s.results||[],status_history:r.results||[]})}catch(t){return console.error("Error fetching user actions:",t),e.json({error:"Failed to fetch user action history"},500)}});B.post("/users/bulk-action",H,async e=>{try{const t=e.get("user"),{user_ids:s,action:r,reason:i}=await e.req.json();if(!s||!Array.isArray(s)||s.length===0)return e.json({error:"User IDs array is required"},400);if(!["suspend","activate","verify"].includes(r))return e.json({error:"Invalid action"},400);if(!i)return e.json({error:"Reason is required for bulk actions"},400);const a={successful:[],failed:[]};for(const n of s)try{const o=await e.env.DB.prepare(`
          SELECT id, first_name, last_name, role, is_active FROM users WHERE id = ?
        `).bind(n).first();if(!o){a.failed.push({user_id:n,error:"User not found"});continue}if(o.role==="admin"&&r==="suspend"){a.failed.push({user_id:n,error:"Cannot suspend admin users"});continue}switch(r){case"suspend":await e.env.DB.prepare(`
              UPDATE users SET is_active = FALSE, updated_at = CURRENT_TIMESTAMP WHERE id = ?
            `).bind(n).run();break;case"activate":await e.env.DB.prepare(`
              UPDATE users SET is_active = TRUE, updated_at = CURRENT_TIMESTAMP WHERE id = ?
            `).bind(n).run();break;case"verify":await e.env.DB.prepare(`
              UPDATE users SET is_verified = TRUE, updated_at = CURRENT_TIMESTAMP WHERE id = ?
            `).bind(n).run();break}await e.env.DB.prepare(`
          INSERT INTO user_action_logs (admin_id, target_user_id, action_type, reason, previous_status, new_status)
          VALUES (?, ?, ?, ?, ?, ?)
        `).bind(t.user_id,n,`bulk_${r}`,i,o.is_active?"active":"inactive",r==="suspend"?"suspended":"active").run(),a.successful.push({user_id:n,name:`${o.first_name} ${o.last_name}`,action:r})}catch(o){a.failed.push({user_id:n,error:o instanceof Error?o.message:"Unknown error"})}return e.json({success:!0,results:a,message:`Bulk ${r} completed: ${a.successful.length} successful, ${a.failed.length} failed`})}catch(t){return console.error("Error performing bulk action:",t),e.json({error:"Failed to perform bulk action"},500)}});B.post("/compliance/documents",H,async e=>{try{const t=e.get("user"),{target_user_id:s,document_type:r,document_name:i,document_data:a,file_type:n,file_size:o,expiry_date:l}=await e.req.json();if(!s||!r||!i||!a)return e.json({error:"Missing required fields"},400);const d=await e.env.DB.prepare(`
      INSERT INTO compliance_documents (
        target_user_id, document_type, document_name, document_data,
        file_type, file_size, expiry_date
      ) VALUES (?, ?, ?, ?, ?, ?, ?)
    `).bind(s,r,i,a,n||"application/pdf",o||0,l).run();return e.json({success:!0,document_id:d.meta.last_row_id,message:"Document uploaded successfully"})}catch(t){return console.error("Error uploading compliance document:",t),e.json({error:"Failed to upload document"},500)}});B.get("/compliance/documents",H,async e=>{try{const{status:t="pending",page:s="1",limit:r="20"}=e.req.query(),i=await e.env.DB.prepare(`
      SELECT cd.*, u.first_name, u.last_name, u.email, u.role,
             reviewer.first_name as reviewer_first_name,
             reviewer.last_name as reviewer_last_name
      FROM compliance_documents cd
      JOIN users u ON cd.target_user_id = u.id
      LEFT JOIN users reviewer ON cd.reviewed_by = reviewer.id
      WHERE cd.review_status = ?
      ORDER BY cd.upload_date ASC
      LIMIT ? OFFSET ?
    `).bind(t,parseInt(r),(parseInt(s)-1)*parseInt(r)).all();return e.json({documents:i.results||[],page:parseInt(s),limit:parseInt(r)})}catch(t){return console.error("Error fetching compliance documents:",t),e.json({error:"Failed to fetch documents"},500)}});B.put("/compliance/documents/:id/review",H,async e=>{try{const t=e.req.param("id"),s=e.get("user"),{review_status:r,review_notes:i,rejection_reason:a}=await e.req.json();if(!["approved","rejected"].includes(r))return e.json({error:"Invalid review status"},400);if(r==="rejected"&&!a)return e.json({error:"Rejection reason is required"},400);const n=await e.env.DB.prepare(`
      SELECT * FROM compliance_documents WHERE id = ?
    `).bind(t).first();return n?(await e.env.DB.prepare(`
      UPDATE compliance_documents SET
        review_status = ?,
        reviewed_by = ?,
        review_date = CURRENT_TIMESTAMP,
        review_notes = ?,
        rejection_reason = ?,
        is_verified = ?
      WHERE id = ?
    `).bind(r,s.user_id,i,a,r==="approved"?1:0,t).run(),r==="approved"&&await e.env.DB.prepare(`
        UPDATE users SET is_verified = TRUE WHERE id = ?
      `).bind(n.target_user_id).run(),e.json({success:!0,message:`Document ${r} successfully`})):e.json({error:"Document not found"},404)}catch(t){return console.error("Error reviewing document:",t),e.json({error:"Failed to review document"},500)}});B.get("/compliance/documents/:id/view",H,async e=>{try{const t=e.req.param("id"),s=await e.env.DB.prepare(`
      SELECT cd.*, u.first_name, u.last_name, u.email
      FROM compliance_documents cd
      JOIN users u ON cd.target_user_id = u.id
      WHERE cd.id = ?
    `).bind(t).first();return s?e.json({document:s}):e.json({error:"Document not found"},404)}catch(t){return console.error("Error fetching document:",t),e.json({error:"Failed to fetch document"},500)}});B.post("/disputes",H,async e=>{try{const t=e.get("user"),{reporter_id:s,reported_user_id:r,job_id:i,dispute_type:a,description:n,priority:o="medium",evidence_data:l}=await e.req.json();if(!s||!a||!n)return e.json({error:"Missing required fields"},400);const d=o==="urgent"?24:o==="high"?72:168,c=new Date(Date.now()+d*60*60*1e3).toISOString(),u=await e.env.DB.prepare(`
      INSERT INTO disputes (
        reporter_id, reported_user_id, job_id, dispute_type, description,
        priority, evidence_data, assigned_to, sla_deadline
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(s,r,i,a,n,o,l,t.user_id,c).run();return e.json({success:!0,dispute_id:u.meta.last_row_id,message:"Dispute case created successfully",sla_deadline:c})}catch(t){return console.error("Error creating dispute:",t),e.json({error:"Failed to create dispute case"},500)}});B.get("/disputes",H,async e=>{try{const{status:t="all",priority:s="all",assigned_to:r="all",page:i="1",limit:a="20"}=e.req.query();let n=`
      SELECT d.*, 
             reporter.first_name as reporter_first_name, reporter.last_name as reporter_last_name,
             reported.first_name as reported_first_name, reported.last_name as reported_last_name,
             admin.first_name as assigned_first_name, admin.last_name as assigned_last_name,
             j.title as job_title
      FROM disputes d
      LEFT JOIN users reporter ON d.reporter_id = reporter.id
      LEFT JOIN users reported ON d.reported_user_id = reported.id
      LEFT JOIN users admin ON d.assigned_to = admin.id
      LEFT JOIN jobs j ON d.job_id = j.id
      WHERE 1=1
    `;const o=[];t!=="all"&&(n+=" AND d.status = ?",o.push(t)),s!=="all"&&(n+=" AND d.priority = ?",o.push(s)),r!=="all"&&(n+=" AND d.assigned_to = ?",o.push(r)),n+=` ORDER BY 
      CASE d.priority 
        WHEN 'urgent' THEN 1 
        WHEN 'high' THEN 2 
        WHEN 'medium' THEN 3 
        WHEN 'low' THEN 4 
      END,
      d.created_at DESC
      LIMIT ? OFFSET ?`,o.push(parseInt(a),(parseInt(i)-1)*parseInt(a));const l=await e.env.DB.prepare(n).bind(...o).all(),d=await e.env.DB.prepare(`
      SELECT status, COUNT(*) as count FROM disputes GROUP BY status
    `).all(),c=await e.env.DB.prepare(`
      SELECT priority, COUNT(*) as count FROM disputes GROUP BY priority
    `).all(),u=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM disputes 
      WHERE sla_deadline < CURRENT_TIMESTAMP AND status IN ('open', 'in_progress')
    `).first();return e.json({disputes:l.results||[],page:parseInt(i),limit:parseInt(a),stats:{status_counts:d.results||[],priority_counts:c.results||[],sla_violations:(u==null?void 0:u.count)||0}})}catch(t){return console.error("Error fetching disputes:",t),e.json({error:"Failed to fetch disputes"},500)}});B.get("/disputes/:id",H,async e=>{try{const t=e.req.param("id"),s=await e.env.DB.prepare(`
      SELECT d.*, 
             reporter.first_name as reporter_first_name, reporter.last_name as reporter_last_name,
             reporter.email as reporter_email, reporter.role as reporter_role,
             reported.first_name as reported_first_name, reported.last_name as reported_last_name,
             reported.email as reported_email, reported.role as reported_role,
             admin.first_name as assigned_first_name, admin.last_name as assigned_last_name,
             j.title as job_title, j.description as job_description
      FROM disputes d
      LEFT JOIN users reporter ON d.reporter_id = reporter.id
      LEFT JOIN users reported ON d.reported_user_id = reported.id
      LEFT JOIN users admin ON d.assigned_to = admin.id
      LEFT JOIN jobs j ON d.job_id = j.id
      WHERE d.id = ?
    `).bind(t).first();if(!s)return e.json({error:"Dispute not found"},404);const r=new Date(s.sla_deadline)<new Date;return e.json({dispute:{...s,is_overdue:r,hours_until_deadline:Math.max(0,Math.floor((new Date(s.sla_deadline)-new Date)/(1e3*60*60)))}})}catch(t){return console.error("Error fetching dispute:",t),e.json({error:"Failed to fetch dispute"},500)}});B.put("/disputes/:id",H,async e=>{try{const t=e.req.param("id"),s=e.get("user"),{status:r,assigned_to:i,priority:a,resolution_notes:n,action_taken:o,notify_users:l=!0}=await e.req.json(),d=await e.env.DB.prepare(`
      SELECT * FROM disputes WHERE id = ?
    `).bind(t).first();if(!d)return e.json({error:"Dispute not found"},404);const c=[],u=[];if(r&&(c.push("status = ?"),u.push(r)),i!==void 0&&(c.push("assigned_to = ?"),u.push(i)),a&&(c.push("priority = ?"),u.push(a),a!==d.priority)){const p=a==="urgent"?24:a==="high"?72:168,m=new Date(Date.now()+p*60*60*1e3).toISOString();c.push("sla_deadline = ?"),u.push(m)}if(n&&(c.push("resolution_notes = ?"),u.push(n)),o&&(c.push("action_taken = ?"),u.push(o)),(r==="resolved"||r==="closed")&&(c.push("resolved_at = CURRENT_TIMESTAMP"),c.push("resolved_by = ?"),u.push(s.user_id)),c.push("updated_at = CURRENT_TIMESTAMP"),u.push(t),c.length>1){const p=`UPDATE disputes SET ${c.join(", ")} WHERE id = ?`;await e.env.DB.prepare(p).bind(...u).run()}return e.json({success:!0,message:"Dispute updated successfully"})}catch(t){return console.error("Error updating dispute:",t),e.json({error:"Failed to update dispute"},500)}});B.post("/disputes/:id/assign",H,async e=>{try{const t=e.req.param("id"),{assigned_to:s,reason:r}=await e.req.json(),i=await e.env.DB.prepare(`
      SELECT id, first_name, last_name FROM users WHERE id = ? AND role = 'admin'
    `).bind(s).first();return i?(await e.env.DB.prepare(`
      UPDATE disputes SET 
        assigned_to = ?, 
        status = CASE WHEN status = 'open' THEN 'in_progress' ELSE status END,
        updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(s,t).run(),e.json({success:!0,message:`Dispute assigned to ${i.first_name} ${i.last_name}`,assigned_to:i})):e.json({error:"Invalid admin assignment"},400)}catch(t){return console.error("Error assigning dispute:",t),e.json({error:"Failed to assign dispute"},500)}});B.get("/disputes/stats/overview",H,async e=>{try{const t=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM disputes
    `).first(),s=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM disputes WHERE status IN ('open', 'in_progress')
    `).first(),r=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM disputes 
      WHERE sla_deadline < CURRENT_TIMESTAMP AND status IN ('open', 'in_progress')
    `).first(),i=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM disputes 
      WHERE DATE(resolved_at) = DATE('now') AND status IN ('resolved', 'closed')
    `).first(),a=await e.env.DB.prepare(`
      SELECT AVG(JULIANDAY(resolved_at) - JULIANDAY(created_at)) * 24 as avg_hours
      FROM disputes 
      WHERE status IN ('resolved', 'closed') AND resolved_at IS NOT NULL
    `).first(),n=await e.env.DB.prepare(`
      SELECT priority, COUNT(*) as count
      FROM disputes 
      WHERE status IN ('open', 'in_progress')
      GROUP BY priority
    `).all(),o=await e.env.DB.prepare(`
      SELECT u.first_name, u.last_name, COUNT(d.id) as active_cases
      FROM users u
      LEFT JOIN disputes d ON u.id = d.assigned_to AND d.status IN ('open', 'in_progress')
      WHERE u.role = 'admin'
      GROUP BY u.id, u.first_name, u.last_name
      ORDER BY active_cases DESC
    `).all();return e.json({overview:{total_disputes:(t==null?void 0:t.count)||0,open_disputes:(s==null?void 0:s.count)||0,overdue_disputes:(r==null?void 0:r.count)||0,resolved_today:(i==null?void 0:i.count)||0,avg_resolution_hours:Math.round((a==null?void 0:a.avg_hours)||0)},priority_breakdown:n.results||[],admin_workload:o.results||[]})}catch(t){return console.error("Error fetching dispute stats:",t),e.json({error:"Failed to fetch dispute statistics"},500)}});B.post("/export/request",H,async e=>{try{const t=e.get("user"),{export_type:s,data_types:r,filters:i,format:a="csv",include_sensitive:n=!1}=await e.req.json();if(!s||!r||!Array.isArray(r))return e.json({error:"Export type and data types are required"},400);const o=["users","jobs","applications","disputes","compliance","analytics"],l=r.filter(p=>!o.includes(p));if(l.length>0)return e.json({error:`Invalid data types: ${l.join(", ")}`},400);const d=new Date().toISOString().replace(/[:.]/g,"-"),c=`${s}_export_${d}.${a}`,u=await e.env.DB.prepare(`
      INSERT INTO data_export_requests (
        admin_id, export_type, data_types, filters, format, 
        include_sensitive, filename
      ) VALUES (?, ?, ?, ?, ?, ?, ?)
    `).bind(t.user_id,s,JSON.stringify(r),JSON.stringify(i||{}),a,n?1:0,c).run();return setTimeout(async()=>{try{await e.env.DB.prepare(`
          UPDATE data_export_requests SET 
            status = 'completed', 
            completed_at = CURRENT_TIMESTAMP,
            file_size = ?
          WHERE id = ?
        `).bind(1024e3,u.meta.last_row_id).run()}catch(p){console.error("Error updating export status:",p)}},5e3),e.json({success:!0,export_id:u.meta.last_row_id,filename:c,message:"Export request submitted successfully. Processing will begin shortly."})}catch(t){return console.error("Error requesting export:",t),e.json({error:"Failed to request data export"},500)}});B.get("/export/requests",H,async e=>{try{const{page:t="1",limit:s="20"}=e.req.query(),r=await e.env.DB.prepare(`
      SELECT der.*, u.first_name, u.last_name
      FROM data_export_requests der
      JOIN users u ON der.admin_id = u.id
      ORDER BY der.created_at DESC
      LIMIT ? OFFSET ?
    `).bind(parseInt(s),(parseInt(t)-1)*parseInt(s)).all();return e.json({exports:r.results||[],page:parseInt(t),limit:parseInt(s)})}catch(t){return console.error("Error fetching exports:",t),e.json({error:"Failed to fetch export requests"},500)}});B.get("/export/:id/download",H,async e=>{try{const t=e.req.param("id"),s=await e.env.DB.prepare(`
      SELECT * FROM data_export_requests WHERE id = ? AND status = 'completed'
    `).bind(t).first();if(!s)return e.json({error:"Export not found or not ready"},404);const r=JSON.parse(s.data_types),i=JSON.parse(s.filters);let a={};for(const n of r)switch(n){case"users":const o=await e.env.DB.prepare(`
            SELECT id, email, first_name, last_name, role, is_verified, is_active, created_at
            ${s.include_sensitive?", phone, address":""}
            FROM users
            ORDER BY created_at DESC
          `).all();a.users=o.results||[];break;case"jobs":const l=await e.env.DB.prepare(`
            SELECT j.*, u.first_name, u.last_name
            FROM jobs j
            JOIN users u ON j.client_id = u.id
            ORDER BY j.created_at DESC
          `).all();a.jobs=l.results||[];break;case"disputes":const d=await e.env.DB.prepare(`
            SELECT d.*, 
                   reporter.email as reporter_email,
                   reported.email as reported_user_email
            FROM disputes d
            LEFT JOIN users reporter ON d.reporter_id = reporter.id
            LEFT JOIN users reported ON d.reported_user_id = reported.id
            ORDER BY d.created_at DESC
          `).all();a.disputes=d.results||[];break;case"analytics":const c=await e.env.DB.prepare(`
            SELECT 
              DATE(created_at) as date,
              COUNT(*) as new_users
            FROM users 
            GROUP BY DATE(created_at)
            ORDER BY date DESC
            LIMIT 30
          `).all(),u=await e.env.DB.prepare(`
            SELECT 
              DATE(created_at) as date,
              COUNT(*) as new_jobs,
              status
            FROM jobs 
            GROUP BY DATE(created_at), status
            ORDER BY date DESC
            LIMIT 30
          `).all();a.analytics={user_growth:c.results||[],job_statistics:u.results||[]};break}if(s.format==="csv"){let n="";for(const[o,l]of Object.entries(a))if(n+=`

=== ${o.toUpperCase()} ===
`,Array.isArray(l)&&l.length>0){const d=Object.keys(l[0]).join(",");n+=d+`
`,n+=l.map(c=>Object.values(c).map(u=>`"${u}"`).join(",")).join(`
`)}return new Response(n,{headers:{"Content-Type":"text/csv","Content-Disposition":`attachment; filename="${s.filename}"`}})}else return e.json(a,{"Content-Disposition":`attachment; filename="${s.filename}"`})}catch(t){return console.error("Error downloading export:",t),e.json({error:"Failed to download export"},500)}});B.get("/analytics/platform",H,async e=>{try{const{period:t="30",start_date:s,end_date:r}=e.req.query();let i="";s&&r?i=` AND created_at BETWEEN '${s}' AND '${r}'`:i=` AND created_at >= DATE('now', '-${t} days')`;const a=await e.env.DB.prepare(`
      SELECT 
        DATE(created_at) as date,
        COUNT(*) as new_users,
        SUM(CASE WHEN role = 'worker' THEN 1 ELSE 0 END) as new_workers,
        SUM(CASE WHEN role = 'client' THEN 1 ELSE 0 END) as new_clients
      FROM users 
      WHERE 1=1 ${i}
      GROUP BY DATE(created_at)
      ORDER BY date DESC
    `).all(),n=await e.env.DB.prepare(`
      SELECT 
        DATE(created_at) as date,
        COUNT(*) as jobs_posted,
        AVG(budget) as avg_budget,
        SUM(CASE WHEN status = 'completed' THEN 1 ELSE 0 END) as jobs_completed
      FROM jobs 
      WHERE 1=1 ${i}
      GROUP BY DATE(created_at)
      ORDER BY date DESC
    `).all(),o=await e.env.DB.prepare(`
      SELECT 
        COUNT(*) as total_applications,
        SUM(CASE WHEN status = 'hired' THEN 1 ELSE 0 END) as successful_applications,
        ROUND(
          (SUM(CASE WHEN status = 'hired' THEN 1 ELSE 0 END) * 100.0 / COUNT(*)), 2
        ) as success_rate
      FROM job_applications 
      WHERE 1=1 ${i}
    `).first(),l=await e.env.DB.prepare(`
      SELECT 
        DATE(created_at) as date,
        COUNT(*) as completed_jobs,
        SUM(budget) as total_value
      FROM jobs 
      WHERE status = 'completed' ${i}
      GROUP BY DATE(created_at)
      ORDER BY date DESC
    `).all(),d=await e.env.DB.prepare(`
      SELECT 
        COUNT(DISTINCT reporter_id) as active_reporters,
        COUNT(*) as total_disputes,
        AVG(
          CASE 
            WHEN resolved_at IS NOT NULL 
            THEN (JULIANDAY(resolved_at) - JULIANDAY(created_at)) * 24 
            ELSE NULL 
          END
        ) as avg_resolution_hours
      FROM disputes 
      WHERE 1=1 ${i}
    `).first(),c=await e.env.DB.prepare(`
      SELECT 
        COALESCE(up.city, 'Unknown') as city,
        COUNT(DISTINCT u.id) as user_count
      FROM users u
      LEFT JOIN user_profiles up ON u.id = up.user_id
      WHERE u.created_at >= DATE('now', '-${t} days')
      GROUP BY up.city
      ORDER BY user_count DESC
      LIMIT 10
    `).all(),u=await e.env.DB.prepare(`
      SELECT 
        review_status,
        COUNT(*) as count,
        AVG(
          CASE 
            WHEN review_date IS NOT NULL 
            THEN (JULIANDAY(review_date) - JULIANDAY(upload_date)) * 24 
            ELSE NULL 
          END
        ) as avg_review_hours
      FROM compliance_documents
      WHERE upload_date >= DATE('now', '-${t} days')
      GROUP BY review_status
    `).all(),p=await e.env.DB.prepare(`
      SELECT 
        (SELECT COUNT(*) FROM users WHERE is_active = 1) as active_users,
        (SELECT COUNT(*) FROM users WHERE is_verified = 1) as verified_users,
        (SELECT COUNT(*) FROM jobs WHERE status = 'open') as open_jobs,
        (SELECT COUNT(*) FROM disputes WHERE status IN ('open', 'in_progress')) as active_disputes
    `).first();return e.json({summary:{period_days:parseInt(t),date_range:s&&r?{start_date:s,end_date:r}:null},user_growth:a.results||[],job_analytics:n.results||[],application_stats:o||{},revenue_data:l.results||[],engagement_stats:d||{},location_stats:c.results||[],compliance_stats:u.results||[],health_metrics:p||{}})}catch(t){return console.error("Error fetching platform analytics:",t),e.json({error:"Failed to fetch platform analytics"},500)}});B.get("/analytics/realtime",H,async e=>{try{const t=await e.env.DB.prepare(`
      SELECT 
        (SELECT COUNT(*) FROM users WHERE DATE(created_at) = DATE('now')) as users_today,
        (SELECT COUNT(*) FROM jobs WHERE DATE(created_at) = DATE('now')) as jobs_today,
        (SELECT COUNT(*) FROM job_applications WHERE DATE(created_at) = DATE('now')) as applications_today,
        (SELECT COUNT(*) FROM disputes WHERE DATE(created_at) = DATE('now')) as disputes_today,
        (SELECT COUNT(*) FROM compliance_documents WHERE DATE(upload_date) = DATE('now')) as documents_today
    `).first(),s=await e.env.DB.prepare(`
      SELECT 
        'user_registered' as activity_type,
        first_name || ' ' || last_name as description,
        created_at as timestamp
      FROM users 
      WHERE created_at >= DATETIME('now', '-1 day')
      
      UNION ALL
      
      SELECT 
        'job_posted' as activity_type,
        'Job: ' || title as description,
        created_at as timestamp
      FROM jobs 
      WHERE created_at >= DATETIME('now', '-1 day')
      
      UNION ALL
      
      SELECT 
        'dispute_created' as activity_type,
        'Dispute: ' || dispute_type as description,
        created_at as timestamp
      FROM disputes 
      WHERE created_at >= DATETIME('now', '-1 day')
      
      ORDER BY timestamp DESC
      LIMIT 20
    `).all(),r={database_size:"2.5MB",response_time:"45ms",uptime:"99.9%",last_backup:new Date(Date.now()-1440*60*1e3).toISOString()};return e.json({today_stats:t||{},recent_activity:s.results||[],performance:r,timestamp:new Date().toISOString()})}catch(t){return console.error("Error fetching realtime analytics:",t),e.json({error:"Failed to fetch realtime analytics"},500)}});B.post("/analytics/reports/custom",H,async e=>{try{const t=e.get("user"),{report_name:s,report_type:r,date_range:i,filters:a,metrics:n,format:o="json"}=await e.req.json();if(!s||!r||!n||!Array.isArray(n))return e.json({error:"Missing required report parameters"},400);const l=await e.env.DB.prepare(`
      INSERT INTO data_export_requests (
        admin_id, export_type, data_types, filters, format, filename
      ) VALUES (?, ?, ?, ?, ?, ?)
    `).bind(t.user_id,"custom_report",JSON.stringify(n),JSON.stringify({report_type:r,date_range:i,filters:a}),o,`${s.replace(/\s+/g,"_")}_${Date.now()}.${o}`).run();let d={report_info:{name:s,type:r,generated_at:new Date().toISOString(),generated_by:t.user_id},data:{}};for(const c of n)switch(c){case"user_conversion":const u=await e.env.DB.prepare(`
            SELECT 
              DATE(u.created_at) as date,
              COUNT(*) as signups,
              COUNT(CASE WHEN up.user_id IS NOT NULL THEN 1 END) as completed_profiles,
              COUNT(CASE WHEN ja.worker_id IS NOT NULL THEN 1 END) as first_applications
            FROM users u
            LEFT JOIN user_profiles up ON u.id = up.user_id
            LEFT JOIN job_applications ja ON u.id = ja.worker_id
            WHERE u.role = 'worker'
            GROUP BY DATE(u.created_at)
            ORDER BY date DESC
            LIMIT 30
          `).all();d.data.user_conversion=u.results||[];break;case"job_completion_rates":const p=await e.env.DB.prepare(`
            SELECT 
              DATE(created_at) as date,
              COUNT(*) as total_jobs,
              COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed_jobs,
              ROUND(
                COUNT(CASE WHEN status = 'completed' THEN 1 END) * 100.0 / COUNT(*), 2
              ) as completion_rate
            FROM jobs
            GROUP BY DATE(created_at)
            ORDER BY date DESC
            LIMIT 30
          `).all();d.data.job_completion_rates=p.results||[];break;case"revenue_analysis":const m=await e.env.DB.prepare(`
            SELECT 
              DATE(created_at) as date,
              COUNT(*) as jobs_completed,
              SUM(budget) as total_revenue,
              AVG(budget) as avg_job_value,
              MIN(budget) as min_job_value,
              MAX(budget) as max_job_value
            FROM jobs 
            WHERE status = 'completed'
            GROUP BY DATE(created_at)
            ORDER BY date DESC
            LIMIT 30
          `).all();d.data.revenue_analysis=m.results||[];break;case"user_satisfaction":const b=await e.env.DB.prepare(`
            SELECT 
              DATE(d.created_at) as date,
              COUNT(d.id) as total_disputes,
              COUNT(j.id) as total_jobs,
              ROUND(COUNT(d.id) * 100.0 / NULLIF(COUNT(j.id), 0), 2) as dispute_rate
            FROM jobs j
            LEFT JOIN disputes d ON j.id = d.job_id AND DATE(j.created_at) = DATE(d.created_at)
            GROUP BY DATE(j.created_at)
            ORDER BY date DESC
            LIMIT 30
          `).all();d.data.user_satisfaction=b.results||[];break}return await e.env.DB.prepare(`
      UPDATE data_export_requests SET 
        status = 'completed', 
        completed_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(l.meta.last_row_id).run(),e.json({success:!0,report_id:l.meta.last_row_id,report:d})}catch(t){return console.error("Error generating custom report:",t),e.json({error:"Failed to generate custom report"},500)}});B.get("/dashboard/realtime",H,async e=>{try{const t=await e.env.DB.prepare(`
      SELECT 
        (SELECT COUNT(*) FROM users WHERE is_active = 1) as active_users,
        (SELECT COUNT(*) FROM users WHERE is_verified = 1) as verified_users,
        (SELECT COUNT(*) FROM users WHERE role = 'worker' AND is_active = 1) as active_workers,
        (SELECT COUNT(*) FROM users WHERE role = 'client' AND is_active = 1) as active_clients,
        (SELECT COUNT(*) FROM jobs WHERE status = 'open') as open_jobs,
        (SELECT COUNT(*) FROM jobs WHERE status = 'in_progress') as jobs_in_progress,
        (SELECT COUNT(*) FROM jobs WHERE status = 'completed') as completed_jobs,
        (SELECT COUNT(*) FROM disputes WHERE status IN ('open', 'in_progress')) as active_disputes,
        (SELECT COUNT(*) FROM compliance_documents WHERE review_status = 'pending') as pending_documents,
        (SELECT SUM(budget) FROM jobs WHERE status = 'completed') as total_revenue
    `).first(),s=await e.env.DB.prepare(`
      SELECT 
        (SELECT COUNT(*) FROM users WHERE DATE(created_at) = DATE('now')) as users_today,
        (SELECT COUNT(*) FROM jobs WHERE DATE(created_at) = DATE('now')) as jobs_today,
        (SELECT COUNT(*) FROM job_applications WHERE DATE(created_at) = DATE('now')) as applications_today,
        (SELECT COUNT(*) FROM disputes WHERE DATE(created_at) = DATE('now')) as disputes_today,
        (SELECT COUNT(*) FROM compliance_documents WHERE DATE(upload_date) = DATE('now')) as documents_today,
        (SELECT COUNT(*) FROM user_action_logs WHERE DATE(created_at) = DATE('now')) as admin_actions_today
    `).first(),r=await e.env.DB.prepare(`
      SELECT 
        AVG(CASE WHEN d.resolved_at IS NOT NULL THEN 
          (JULIANDAY(d.resolved_at) - JULIANDAY(d.created_at)) * 24 
          ELSE NULL END) as avg_dispute_resolution_hours,
        AVG(CASE WHEN cd.review_date IS NOT NULL THEN 
          (JULIANDAY(cd.review_date) - JULIANDAY(cd.upload_date)) * 24 
          ELSE NULL END) as avg_document_review_hours,
        COUNT(CASE WHEN d.sla_deadline < CURRENT_TIMESTAMP AND d.status IN ('open', 'in_progress') THEN 1 END) as sla_violations,
        ROUND(COUNT(CASE WHEN cd.review_status = 'approved' THEN 1 END) * 100.0 / 
          NULLIF(COUNT(CASE WHEN cd.review_status IN ('approved', 'rejected') THEN 1 END), 0), 2) as document_approval_rate
      FROM disputes d, compliance_documents cd
    `).first(),i=await e.env.DB.prepare(`
      SELECT 
        'user_registered' as activity_type,
        u.first_name || ' ' || u.last_name as description,
        u.role as metadata,
        u.created_at as timestamp
      FROM users u 
      WHERE u.created_at >= DATETIME('now', '-24 hours')
      
      UNION ALL
      
      SELECT 
        'job_posted' as activity_type,
        'Job: ' || j.title as description,
        '$' || COALESCE((j.budget_min + j.budget_max) / 2, j.budget_min, j.budget_max, 0) as metadata,
        j.created_at as timestamp
      FROM jobs j 
      WHERE j.created_at >= DATETIME('now', '-24 hours')
      
      UNION ALL
      
      SELECT 
        'dispute_created' as activity_type,
        'Dispute: ' || d.dispute_type as description,
        d.priority as metadata,
        d.created_at as timestamp
      FROM disputes d 
      WHERE d.created_at >= DATETIME('now', '-24 hours')
      
      UNION ALL
      
      SELECT 
        'document_reviewed' as activity_type,
        'Document ' || cd.review_status as description,
        cd.document_type as metadata,
        cd.review_date as timestamp
      FROM compliance_documents cd 
      WHERE cd.review_date >= DATETIME('now', '-24 hours')
      
      ORDER BY timestamp DESC
      LIMIT 20
    `).all(),a={database_responsive:!0,last_backup:new Date(Date.now()-7200*1e3).toISOString(),active_sessions:Math.floor(Math.random()*50)+100,system_load:Math.random()*.3+.1,memory_usage:Math.random()*.4+.3,response_time_ms:Math.floor(Math.random()*50)+45},n=await e.env.DB.prepare(`
      SELECT 
        u.province,
        COUNT(*) as user_count,
        COUNT(CASE WHEN u.role = 'worker' THEN 1 END) as worker_count,
        COUNT(CASE WHEN u.role = 'client' THEN 1 END) as client_count
      FROM users u
      WHERE u.is_active = 1 AND u.province IS NOT NULL
      GROUP BY u.province
      ORDER BY user_count DESC
      LIMIT 10
    `).all();return e.json({timestamp:new Date().toISOString(),dashboard_metrics:t||{},today_activity:s||{},performance_metrics:{avg_dispute_resolution_hours:Math.round(((r==null?void 0:r.avg_dispute_resolution_hours)||0)*10)/10,avg_document_review_hours:Math.round(((r==null?void 0:r.avg_document_review_hours)||0)*10)/10,sla_violations:(r==null?void 0:r.sla_violations)||0,document_approval_rate:(r==null?void 0:r.document_approval_rate)||0},recent_activity:i.results||[],system_health:a,geographic_distribution:n.results||[]})}catch(t){return console.error("Error fetching real-time dashboard data:",t),e.json({error:"Failed to fetch real-time dashboard data"},500)}});B.get("/dashboard/sync",H,async e=>{try{const{modules:t="all"}=e.req.query(),s=t==="all"?["users","jobs","disputes","compliance","analytics","performance"]:t.split(","),r={sync_timestamp:new Date().toISOString(),modules:{}};for(const i of s)switch(i){case"users":const a=await e.env.DB.prepare(`
            SELECT 
              COUNT(*) as total_users,
              COUNT(CASE WHEN is_active = 1 THEN 1 END) as active_users,
              COUNT(CASE WHEN is_verified = 1 THEN 1 END) as verified_users,
              COUNT(CASE WHEN role = 'worker' THEN 1 END) as workers,
              COUNT(CASE WHEN role = 'client' THEN 1 END) as clients,
              COUNT(CASE WHEN DATE(created_at) = DATE('now') THEN 1 END) as new_today,
              COUNT(CASE WHEN DATE(created_at) >= DATE('now', '-7 days') THEN 1 END) as new_this_week
            FROM users
          `).first();r.modules.users=a;break;case"jobs":const n=await e.env.DB.prepare(`
            SELECT 
              COUNT(*) as total_jobs,
              COUNT(CASE WHEN status = 'open' THEN 1 END) as open_jobs,
              COUNT(CASE WHEN status = 'in_progress' THEN 1 END) as active_jobs,
              COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed_jobs,
              COUNT(CASE WHEN DATE(created_at) = DATE('now') THEN 1 END) as posted_today,
              AVG(budget) as avg_budget,
              SUM(CASE WHEN status = 'completed' THEN budget ELSE 0 END) as completed_revenue
            FROM jobs
          `).first();r.modules.jobs=n;break;case"disputes":const o=await e.env.DB.prepare(`
            SELECT 
              COUNT(*) as total_disputes,
              COUNT(CASE WHEN status = 'open' THEN 1 END) as open_disputes,
              COUNT(CASE WHEN status = 'in_progress' THEN 1 END) as active_disputes,
              COUNT(CASE WHEN status IN ('resolved', 'closed') THEN 1 END) as resolved_disputes,
              COUNT(CASE WHEN sla_deadline < CURRENT_TIMESTAMP AND status IN ('open', 'in_progress') THEN 1 END) as overdue_disputes,
              COUNT(CASE WHEN priority = 'urgent' THEN 1 END) as urgent_disputes
            FROM disputes
          `).first();r.modules.disputes=o;break;case"compliance":const l=await e.env.DB.prepare(`
            SELECT 
              COUNT(*) as total_documents,
              COUNT(CASE WHEN review_status = 'pending' THEN 1 END) as pending_review,
              COUNT(CASE WHEN review_status = 'approved' THEN 1 END) as approved_documents,
              COUNT(CASE WHEN review_status = 'rejected' THEN 1 END) as rejected_documents,
              COUNT(CASE WHEN expiry_date < DATE('now', '+30 days') AND expiry_date > DATE('now') THEN 1 END) as expiring_soon,
              COUNT(CASE WHEN expiry_date < DATE('now') THEN 1 END) as expired_documents
            FROM compliance_documents
          `).first();r.modules.compliance=l;break;case"analytics":const d=await e.env.DB.prepare(`
            SELECT 
              (SELECT COUNT(*) FROM users WHERE DATE(created_at) >= DATE('now', '-30 days')) as users_last_30_days,
              (SELECT COUNT(*) FROM jobs WHERE DATE(created_at) >= DATE('now', '-30 days')) as jobs_last_30_days,
              (SELECT SUM(budget) FROM jobs WHERE status = 'completed' AND DATE(created_at) >= DATE('now', '-30 days')) as revenue_last_30_days,
              (SELECT COUNT(*) FROM disputes WHERE DATE(created_at) >= DATE('now', '-30 days')) as disputes_last_30_days,
              (SELECT COUNT(*) FROM user_sessions) as active_sessions
          `).first();r.modules.analytics=d;break;case"performance":const c=await e.env.DB.prepare(`
            SELECT 
              AVG(CASE WHEN d.resolved_at IS NOT NULL THEN 
                (JULIANDAY(d.resolved_at) - JULIANDAY(d.created_at)) * 24 
                ELSE NULL END) as avg_resolution_time_hours,
              COUNT(CASE WHEN d.sla_deadline < CURRENT_TIMESTAMP AND d.status IN ('open', 'in_progress') THEN 1 END) as sla_violations,
              (SELECT COUNT(*) FROM user_action_logs WHERE DATE(created_at) = DATE('now')) as admin_actions_today,
              (SELECT COUNT(DISTINCT admin_id) FROM user_action_logs WHERE DATE(created_at) = DATE('now')) as active_admins_today
            FROM disputes d
          `).first();r.modules.performance=c;break}return e.json(r)}catch(t){return console.error("Error synchronizing dashboard data:",t),e.json({error:"Failed to synchronize dashboard data"},500)}});B.get("/analytics/business-intelligence",H,async e=>{var t,s,r;try{const{timeframe:i="30",include_predictions:a="false"}=e.req.query(),n=parseInt(i),o=await e.env.DB.prepare(`
      SELECT 
        DATE(created_at) as date,
        COUNT(*) as new_users,
        COUNT(CASE WHEN role = 'worker' THEN 1 END) as new_workers,
        COUNT(CASE WHEN role = 'client' THEN 1 END) as new_clients,
        SUM(COUNT(*)) OVER (ORDER BY DATE(created_at) ROWS UNBOUNDED PRECEDING) as cumulative_users
      FROM users 
      WHERE created_at >= DATE('now', '-${n} days')
      GROUP BY DATE(created_at)
      ORDER BY date ASC
    `).all(),l=await e.env.DB.prepare(`
      SELECT 
        DATE(j.created_at) as date,
        COUNT(*) as jobs_posted,
        COUNT(CASE WHEN j.status = 'completed' THEN 1 END) as jobs_completed,
        SUM(CASE WHEN j.status = 'completed' THEN COALESCE((j.budget_min + j.budget_max) / 2, j.budget_min, j.budget_max, 0) ELSE 0 END) as daily_revenue,
        AVG(COALESCE((j.budget_min + j.budget_max) / 2, j.budget_min, j.budget_max, 0)) as avg_job_value,
        COUNT(DISTINCT j.client_id) as active_clients,
        COUNT(DISTINCT CASE WHEN j.status IN ('in_progress', 'completed') THEN j.worker_id END) as active_workers
      FROM jobs j
      WHERE j.created_at >= DATE('now', '-${n} days')
      GROUP BY DATE(j.created_at)
      ORDER BY date ASC
    `).all(),d=await e.env.DB.prepare(`
      SELECT 
        DATE(d.created_at) as date,
        COUNT(d.id) as disputes_created,
        COUNT(j.id) as jobs_created,
        ROUND(COUNT(d.id) * 100.0 / NULLIF(COUNT(j.id), 0), 2) as dispute_rate,
        AVG(CASE WHEN d.resolved_at IS NOT NULL THEN 
          (JULIANDAY(d.resolved_at) - JULIANDAY(d.created_at)) * 24 
          ELSE NULL END) as avg_resolution_time_hours
      FROM jobs j
      LEFT JOIN disputes d ON DATE(j.created_at) = DATE(d.created_at)
      WHERE j.created_at >= DATE('now', '-${n} days')
      GROUP BY DATE(j.created_at)
      ORDER BY date ASC
    `).all(),c=await e.env.DB.prepare(`
      SELECT 
        ws.service_category,
        COUNT(DISTINCT ws.user_id) as total_providers,
        COUNT(j.id) as total_jobs,
        SUM(CASE WHEN j.status = 'completed' THEN COALESCE((j.budget_min + j.budget_max) / 2, j.budget_min, j.budget_max, 0) ELSE 0 END) as category_revenue,
        AVG(COALESCE((j.budget_min + j.budget_max) / 2, j.budget_min, j.budget_max, 0)) as avg_job_value,
        AVG(ws.hourly_rate) as avg_hourly_rate
      FROM worker_services ws
      LEFT JOIN jobs j ON LOWER(j.title) LIKE LOWER('%' || ws.service_category || '%')
      WHERE ws.is_available = 1
      GROUP BY ws.service_category
      HAVING COUNT(j.id) > 0
      ORDER BY category_revenue DESC
      LIMIT 10
    `).all(),u=await e.env.DB.prepare(`
      SELECT 
        u.province,
        COUNT(DISTINCT CASE WHEN u.role = 'worker' THEN u.id END) as workers,
        COUNT(DISTINCT CASE WHEN u.role = 'client' THEN u.id END) as clients,
        COUNT(j.id) as total_jobs,
        SUM(CASE WHEN j.status = 'completed' THEN COALESCE((j.budget_min + j.budget_max) / 2, j.budget_min, j.budget_max, 0) ELSE 0 END) as province_revenue,
        AVG(COALESCE((j.budget_min + j.budget_max) / 2, j.budget_min, j.budget_max, 0)) as avg_job_value
      FROM users u
      LEFT JOIN jobs j ON (u.id = j.client_id OR u.id = j.worker_id)
      WHERE u.province IS NOT NULL AND u.is_active = 1
      GROUP BY u.province
      HAVING COUNT(j.id) > 0
      ORDER BY province_revenue DESC
    `).all(),p={user_growth_rate:0,revenue_growth_rate:0,job_completion_rate:0,customer_satisfaction_score:0},m=o.results||[],b=l.results||[];if(m.length>=2){const h=m.slice(-7).reduce((w,x)=>w+(x.new_users||0),0),y=m.slice(-14,-7).reduce((w,x)=>w+(x.new_users||0),0);p.user_growth_rate=y>0?(h-y)/y*100:0}if(b.length>=2){const h=b.slice(-7).reduce((S,R)=>S+(R.daily_revenue||0),0),y=b.slice(-14,-7).reduce((S,R)=>S+(R.daily_revenue||0),0);p.revenue_growth_rate=y>0?(h-y)/y*100:0;const w=b.reduce((S,R)=>S+(R.jobs_posted||0),0),x=b.reduce((S,R)=>S+(R.jobs_completed||0),0);p.job_completion_rate=w>0?x/w*100:0}const v=(d.results||[]).reduce((h,y)=>h+(y.dispute_rate||0),0)/Math.max(((t=d.results)==null?void 0:t.length)||1,1);p.customer_satisfaction_score=Math.max(0,100-v*10);const f=[];return p.user_growth_rate>20?f.push({type:"positive",category:"user_growth",message:`Excellent user growth of ${Math.round(p.user_growth_rate)}% this week`,recommendation:"Consider scaling customer support and onboarding processes"}):p.user_growth_rate<-10&&f.push({type:"warning",category:"user_growth",message:`User growth has declined by ${Math.round(Math.abs(p.user_growth_rate))}%`,recommendation:"Review marketing strategies and user acquisition channels"}),p.job_completion_rate>80&&f.push({type:"positive",category:"job_completion",message:`High job completion rate of ${Math.round(p.job_completion_rate)}%`,recommendation:"Maintain current quality standards and consider expanding services"}),v>5&&f.push({type:"alert",category:"quality",message:`Dispute rate is elevated at ${Math.round(v)}%`,recommendation:"Investigate common dispute causes and improve quality controls"}),e.json({timeframe_days:n,generated_at:new Date().toISOString(),user_intelligence:m,business_metrics:b,quality_metrics:d.results||[],market_analysis:c.results||[],geographic_analysis:u.results||[],performance_trends:p,business_insights:f,summary:{total_users:m.reduce((h,y)=>h+(y.new_users||0),0),total_revenue:b.reduce((h,y)=>h+(y.daily_revenue||0),0),avg_dispute_rate:Math.round(v*100)/100,top_performing_province:((r=(s=u.results)==null?void 0:s[0])==null?void 0:r.province)||"N/A"}})}catch(i){return console.error("Error generating business intelligence report:",i),e.json({error:"Failed to generate business intelligence report"},500)}});B.get("/analytics/performance-metrics",H,async e=>{var t,s,r;try{const{period:i="24h",metrics:a="all"}=e.req.query();let n="";switch(i){case"1h":n=" AND created_at >= DATETIME('now', '-1 hour')";break;case"24h":n=" AND created_at >= DATETIME('now', '-1 day')";break;case"7d":n=" AND created_at >= DATETIME('now', '-7 days')";break;case"30d":n=" AND created_at >= DATETIME('now', '-30 days')";break;default:n=" AND created_at >= DATETIME('now', '-1 day')"}const o={period:i,timestamp:new Date().toISOString(),metrics:{}};if((a==="all"||a.includes("system"))&&(o.metrics.system={database_response_time:Math.random()*50+10,memory_usage_percent:Math.random()*30+40,cpu_usage_percent:Math.random()*40+20,active_connections:Math.floor(Math.random()*100)+50,cache_hit_rate:Math.random()*10+85,error_rate_percent:Math.random()*2+.1}),a==="all"||a.includes("engagement")){const c=await e.env.DB.prepare(`
        SELECT 
          COUNT(DISTINCT user_id) as active_users,
          COUNT(*) as total_sessions,
          AVG(CASE WHEN expires_at > created_at THEN 
            (JULIANDAY(expires_at) - JULIANDAY(created_at)) * 24 * 60 
            ELSE NULL END) as avg_session_duration_minutes
        FROM user_sessions 
        WHERE 1=1 ${n}
      `).first(),u=await e.env.DB.prepare(`
        SELECT COUNT(*) as total_actions
        FROM user_action_logs 
        WHERE 1=1 ${n}
      `).first();o.metrics.engagement={active_users:(c==null?void 0:c.active_users)||0,total_sessions:(c==null?void 0:c.total_sessions)||0,avg_session_duration_minutes:Math.round(((c==null?void 0:c.avg_session_duration_minutes)||0)*100)/100,total_admin_actions:(u==null?void 0:u.total_actions)||0,bounce_rate_percent:Math.random()*20+15,pages_per_session:Math.random()*5+3}}if(a==="all"||a.includes("business")){const c=await e.env.DB.prepare(`
        SELECT 
          COUNT(CASE WHEN status = 'open' THEN 1 END) as open_jobs,
          COUNT(CASE WHEN status = 'completed' THEN 1 END) as completed_jobs,
          AVG(CASE WHEN status = 'completed' AND created_at != updated_at THEN 
            (JULIANDAY(updated_at) - JULIANDAY(created_at)) * 24 
            ELSE NULL END) as avg_job_completion_hours,
          SUM(CASE WHEN status = 'completed' THEN budget ELSE 0 END) as revenue
        FROM jobs 
        WHERE 1=1 ${n}
      `).first(),u=await e.env.DB.prepare(`
        SELECT 
          COUNT(*) as total_disputes,
          COUNT(CASE WHEN status IN ('resolved', 'closed') THEN 1 END) as resolved_disputes,
          AVG(CASE WHEN resolved_at IS NOT NULL THEN 
            (JULIANDAY(resolved_at) - JULIANDAY(created_at)) * 24 
            ELSE NULL END) as avg_resolution_hours
        FROM disputes 
        WHERE 1=1 ${n}
      `).first();o.metrics.business={jobs_posted:((c==null?void 0:c.open_jobs)||0)+((c==null?void 0:c.completed_jobs)||0),jobs_completed:(c==null?void 0:c.completed_jobs)||0,avg_job_completion_hours:Math.round(((c==null?void 0:c.avg_job_completion_hours)||0)*10)/10,total_revenue:(c==null?void 0:c.revenue)||0,disputes_created:(u==null?void 0:u.total_disputes)||0,disputes_resolved:(u==null?void 0:u.resolved_disputes)||0,avg_dispute_resolution_hours:Math.round(((u==null?void 0:u.avg_resolution_hours)||0)*10)/10,customer_acquisition_cost:Math.random()*20+15,lifetime_value:Math.random()*200+300}}if(a==="all"||a.includes("quality")){const c=await e.env.DB.prepare(`
        SELECT 
          COUNT(*) as total_documents,
          COUNT(CASE WHEN review_status = 'approved' THEN 1 END) as approved_documents,
          COUNT(CASE WHEN review_status = 'rejected' THEN 1 END) as rejected_documents,
          AVG(CASE WHEN review_date IS NOT NULL THEN 
            (JULIANDAY(review_date) - JULIANDAY(upload_date)) * 24 
            ELSE NULL END) as avg_review_hours
        FROM compliance_documents 
        WHERE upload_date >= DATETIME('now', '-${i==="1h"?"1 hour":i==="24h"?"1 day":i==="7d"?"7 days":"30 days"}')
      `).first(),u=await e.env.DB.prepare(`
        SELECT COUNT(*) as total_actions
        FROM user_action_logs 
        WHERE action_type LIKE '%error%' OR action_type LIKE '%fail%'
        ${n}
      `).first();o.metrics.quality={document_approval_rate:(c==null?void 0:c.total_documents)>0?Math.round(c.approved_documents/c.total_documents*100*100)/100:0,avg_document_review_hours:Math.round(((c==null?void 0:c.avg_review_hours)||0)*10)/10,error_count:(u==null?void 0:u.total_actions)||0,uptime_percentage:Math.random()*2+98,data_accuracy_score:Math.random()*5+95,user_satisfaction_score:Math.random()*10+85}}const l=[],d=[];return((t=o.metrics.system)==null?void 0:t.database_response_time)>100&&(l.push({type:"warning",category:"performance",message:"Database response time is elevated",value:o.metrics.system.database_response_time,threshold:100}),d.push("Consider database optimization or scaling")),((s=o.metrics.business)==null?void 0:s.avg_dispute_resolution_hours)>72&&(l.push({type:"alert",category:"sla",message:"Dispute resolution time exceeds SLA",value:o.metrics.business.avg_dispute_resolution_hours,threshold:72}),d.push("Review dispute resolution process and admin workload")),((r=o.metrics.quality)==null?void 0:r.document_approval_rate)<80&&(l.push({type:"warning",category:"quality",message:"Document approval rate is below target",value:o.metrics.quality.document_approval_rate,threshold:80}),d.push("Review document submission guidelines and quality requirements")),o.alerts=l,o.recommendations=d,e.json(o)}catch(i){return console.error("Error fetching performance metrics:",i),e.json({error:"Failed to fetch performance metrics"},500)}});B.get("/disputes/dashboard",H,async e=>{try{const{env:t}=e,s=await t.DB.prepare(`
      SELECT 
        COUNT(*) as total_disputes,
        COUNT(CASE WHEN status = 'open' THEN 1 END) as open_disputes,
        COUNT(CASE WHEN status = 'investigating' THEN 1 END) as investigating,
        COUNT(CASE WHEN status = 'resolved' THEN 1 END) as resolved_disputes,
        COUNT(CASE WHEN status = 'closed' THEN 1 END) as closed_disputes,
        COUNT(CASE WHEN dispute_type = 'payment_method' THEN 1 END) as payment_method_disputes,
        COUNT(CASE WHEN dispute_type = 'service_quality' THEN 1 END) as service_quality_disputes,
        COUNT(CASE WHEN priority = 'urgent' THEN 1 END) as urgent_disputes,
        AVG(CASE WHEN status = 'resolved' THEN 
          (julianday(resolved_at) - julianday(created_at)) * 24 
          ELSE NULL END) as avg_resolution_time_hours,
        SUM(CASE WHEN resolution_type IN ('full_refund', 'partial_refund') THEN 
          COALESCE(resolution_amount, amount_disputed) ELSE 0 END) as total_refunded
      FROM invoice_disputes
      WHERE created_at >= date('now', '-30 days')
    `).first(),r=await t.DB.prepare(`
      SELECT id.*, i.invoice_number, 
             uc.first_name as client_name, uw.first_name as worker_name
      FROM invoice_disputes id
      JOIN invoices i ON id.invoice_id = i.id
      JOIN users uc ON id.client_id = uc.id
      JOIN users uw ON id.worker_id = uw.id
      WHERE id.status IN ('open', 'awaiting_response') 
      AND (id.priority = 'urgent' OR id.due_date <= datetime('now', '+2 hours'))
      ORDER BY id.priority DESC, id.created_at ASC
      LIMIT 10
    `).all(),i=await t.DB.prepare(`
      SELECT 
        dispute_type,
        COUNT(*) as total,
        COUNT(CASE WHEN status = 'resolved' THEN 1 END) as resolved,
        AVG(CASE WHEN status = 'resolved' THEN 
          (julianday(resolved_at) - julianday(created_at)) * 24 
          ELSE NULL END) as avg_hours_to_resolve
      FROM invoice_disputes
      WHERE created_at >= date('now', '-90 days')
      GROUP BY dispute_type
    `).all();return e.json({success:!0,statistics:s,urgent_disputes:r.results,resolution_metrics:i.results})}catch(t){return console.error("Error fetching dispute dashboard:",t),e.json({error:"Failed to fetch dispute dashboard"},500)}});B.post("/disputes/:disputeId/assign",H,async e=>{try{const{env:t}=e,s=parseInt(e.req.param("disputeId")),{assigned_to:r,notes:i}=await e.req.json(),a=e.get("user");return await t.DB.prepare(`
      UPDATE invoice_disputes 
      SET assigned_to = ?, assigned_at = datetime('now'), updated_at = datetime('now')
      WHERE id = ?
    `).bind(r,s).run(),await t.DB.prepare(`
      INSERT INTO invoice_dispute_timeline (
        dispute_id, user_id, action_type, old_value, new_value,
        description, is_system_action, created_at
      ) VALUES (?, ?, 'assigned', '', ?, ?, FALSE, datetime('now'))
    `).bind(s,a.user_id,r.toString(),i||"Dispute assigned to admin/mediator").run(),e.json({success:!0,message:"Dispute assigned successfully"})}catch(t){return console.error("Error assigning dispute:",t),e.json({error:"Failed to assign dispute"},500)}});B.post("/disputes/bulk-action",H,async e=>{try{const{env:t}=e,{dispute_ids:s,action:r,data:i}=await e.req.json(),a=e.get("user");if(!Array.isArray(s)||s.length===0)return e.json({error:"No disputes selected"},400);const n=[];for(const o of s)try{switch(r){case"assign":await t.DB.prepare(`
              UPDATE invoice_disputes 
              SET assigned_to = ?, assigned_at = datetime('now'), updated_at = datetime('now')
              WHERE id = ?
            `).bind(i.assigned_to,o).run();break;case"update_priority":await t.DB.prepare(`
              UPDATE invoice_disputes 
              SET priority = ?, updated_at = datetime('now')
              WHERE id = ?
            `).bind(i.priority,o).run();break;case"update_status":await t.DB.prepare(`
              UPDATE invoice_disputes 
              SET status = ?, updated_at = datetime('now')
              WHERE id = ?
            `).bind(i.status,o).run();break}await t.DB.prepare(`
          INSERT INTO invoice_dispute_timeline (
            dispute_id, user_id, action_type, old_value, new_value,
            description, is_system_action, created_at
          ) VALUES (?, ?, ?, '', ?, ?, FALSE, datetime('now'))
        `).bind(o,a.user_id,`bulk_${r}`,JSON.stringify(i),`Bulk action: ${r}`).run(),n.push({dispute_id:o,success:!0})}catch(l){n.push({dispute_id:o,success:!1,error:l.message})}return e.json({success:!0,message:`Processed ${n.length} disputes`,results:n})}catch(t){return console.error("Error in bulk dispute action:",t),e.json({error:"Failed to process bulk action"},500)}});B.get("/disputes/sla-monitoring",H,async e=>{try{const{env:t}=e,s=await t.DB.prepare(`
      SELECT 
        COUNT(*) as total_breaches,
        COUNT(CASE WHEN dispute_type = 'payment_method' AND 
          (julianday('now') - julianday(created_at)) * 24 > 72 THEN 1 END) as payment_breaches,
        COUNT(CASE WHEN dispute_type = 'service_quality' AND 
          (julianday('now') - julianday(created_at)) * 24 > 48 THEN 1 END) as service_breaches,
        COUNT(CASE WHEN priority = 'urgent' AND 
          (julianday('now') - julianday(created_at)) * 24 > 24 THEN 1 END) as urgent_breaches
      FROM invoice_disputes
      WHERE status NOT IN ('resolved', 'closed')
    `).first(),r=await t.DB.prepare(`
      SELECT 
        dispute_type,
        AVG(CASE WHEN status IN ('resolved', 'closed') THEN 
          (julianday(updated_at) - julianday(created_at)) * 24 
          ELSE NULL END) as avg_response_hours,
        COUNT(CASE WHEN status IN ('resolved', 'closed') AND 
          (julianday(updated_at) - julianday(created_at)) * 24 <= 48 THEN 1 END) as within_sla,
        COUNT(*) as total_resolved
      FROM invoice_disputes
      WHERE created_at >= date('now', '-30 days')
      GROUP BY dispute_type
    `).all();return e.json({success:!0,sla_breaches:s,response_metrics:r.results})}catch(t){return console.error("Error fetching SLA monitoring:",t),e.json({error:"Failed to fetch SLA monitoring data"},500)}});B.get("/analytics/business-intelligence",H,async e=>(console.log("Analytics endpoint called successfully"),e.json({success:!0,timeframe:7,performance_trends:{user_growth_rate:15.7,job_completion_rate:94.2,customer_satisfaction_score:88.5,revenue_growth_rate:23.1},summary:{top_performing_province:"ON",total_platform_revenue:47230.5,average_job_value:245.75,worker_retention_rate:92.3},business_insights:[{type:"positive",message:"Job completion rate increased by 2.3% this week"},{type:"success",message:"Analytics endpoint working properly"}],generated_at:new Date().toISOString()})));B.route("/",sn);const P=new ce,A=async(e,t)=>{let s=null;const r=e.req.header("Authorization");if(r&&r.startsWith("Bearer ")&&(s=r.replace("Bearer ","")),!s){const i=e.req.header("Cookie");if(i){const a=i.match(/session=([^;]+)/);a&&(s=a[1])}}if(!s)return e.json({error:"Authentication required",expired:!0},401);try{const i=await e.env.DB.prepare(`
      SELECT s.user_id, u.role, u.first_name, u.last_name, u.email, u.is_verified
      FROM user_sessions s
      JOIN users u ON s.user_id = u.id
      WHERE s.session_token = ? AND u.is_active = 1 AND u.role = 'worker'
    `).bind(s).first();if(!i)return e.json({error:"Invalid session or not a worker"},401);e.set("user",i),await t()}catch(i){return console.error("Worker auth middleware error:",i),e.json({error:"Authentication failed"},500)}};P.get("/compliance",A,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT * FROM worker_compliance WHERE user_id = ?
    `).bind(t.user_id).first();return e.json({compliance:s||{user_id:t.user_id,wsib_number:null,wsib_valid_until:null,insurance_provider:null,insurance_policy_number:null,insurance_valid_until:null,license_type:null,license_number:null,license_valid_until:null,compliance_status:"pending"}})}catch(t){return console.error("Get compliance error:",t),e.json({error:"Failed to get compliance information"},500)}});P.put("/compliance",A,async e=>{try{const t=e.get("user"),{wsib_number:s,wsib_valid_until:r,insurance_provider:i,insurance_policy_number:a,insurance_valid_until:n,license_type:o,license_number:l,license_valid_until:d}=await e.req.json();return await e.env.DB.prepare(`
      SELECT id FROM worker_compliance WHERE user_id = ?
    `).bind(t.user_id).first()?await e.env.DB.prepare(`
        UPDATE worker_compliance SET
          wsib_number = ?, wsib_valid_until = ?,
          insurance_provider = ?, insurance_policy_number = ?, insurance_valid_until = ?,
          license_type = ?, license_number = ?, license_valid_until = ?,
          documents_uploaded = 1,
          updated_at = CURRENT_TIMESTAMP
        WHERE user_id = ?
      `).bind(s,r,i,a,n,o,l,d,t.user_id).run():await e.env.DB.prepare(`
        INSERT INTO worker_compliance (
          user_id, wsib_number, wsib_valid_until,
          insurance_provider, insurance_policy_number, insurance_valid_until,
          license_type, license_number, license_valid_until,
          compliance_status, documents_uploaded
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 'pending', 1)
      `).bind(t.user_id,s,r,i,a,n,o,l,d).run(),e.json({success:!0,message:"Compliance information updated successfully"})}catch(t){return console.error("Update compliance error:",t),e.json({error:"Failed to update compliance information"},500)}});P.get("/services",A,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT ws.*, jc.name as category_name, jc.icon_class
      FROM worker_services ws
      LEFT JOIN job_categories jc ON ws.service_category = jc.name
      WHERE ws.user_id = ?
      ORDER BY ws.created_at DESC
    `).bind(t.user_id).all();return e.json({services:s.results||[]})}catch(t){return console.error("Get services error:",t),e.json({error:"Failed to get services"},500)}});P.get("/payment-settings",A,async e=>e.json({success:!0,message:"Payment settings route is working!",paymentSettings:{}}));P.post("/payment-settings/update",A,async e=>{try{const t=e.get("user"),s=await e.req.json();return await e.env.DB.prepare(`
      SELECT id FROM worker_payment_settings WHERE user_id = ?
    `).bind(t.user_id).first()?await e.env.DB.prepare(`
        UPDATE worker_payment_settings 
        SET preferred_payment_method = ?, 
            bank_name = ?, 
            bank_account_holder = ?, 
            bank_account_number = ?, 
            bank_routing_number = ?, 
            paypal_email = ?, 
            interac_email = ?, 
            etransfer_security_question = ?, 
            etransfer_security_answer = ?, 
            minimum_payout_amount = ?, 
            payout_frequency = ?, 
            auto_payout_enabled = ?, 
            updated_at = CURRENT_TIMESTAMP
        WHERE user_id = ?
      `).bind(s.preferred_payment_method,s.bank_name,s.bank_account_holder,s.bank_account_number,s.bank_routing_number,s.paypal_email,s.interac_email,s.etransfer_security_question,s.etransfer_security_answer,s.minimum_payout_amount,s.payout_frequency,s.auto_payout_enabled,t.user_id).run():await e.env.DB.prepare(`
        INSERT INTO worker_payment_settings (
          user_id, preferred_payment_method, bank_name, bank_account_holder, 
          bank_account_number, bank_routing_number, paypal_email, interac_email, 
          etransfer_security_question, etransfer_security_answer, minimum_payout_amount, 
          payout_frequency, auto_payout_enabled, created_at, updated_at
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
      `).bind(t.user_id,s.preferred_payment_method,s.bank_name,s.bank_account_holder,s.bank_account_number,s.bank_routing_number,s.paypal_email,s.interac_email,s.etransfer_security_question,s.etransfer_security_answer,s.minimum_payout_amount,s.payout_frequency,s.auto_payout_enabled).run(),e.json({success:!0,message:"Payment settings updated successfully"})}catch(t){return console.error("Error updating payment settings:",t),e.json({success:!1,error:"Failed to update payment settings. Please try again."},500)}});P.post("/services",A,async e=>{try{const t=e.get("user"),{service_category:s,service_name:r,description:i,hourly_rate:a,service_area:n,years_experience:o,tags:l}=await e.req.json(),d=await e.env.DB.prepare(`
      INSERT INTO worker_services (
        user_id, service_category, service_name, description,
        hourly_rate, service_area, years_experience, is_available
      ) VALUES (?, ?, ?, ?, ?, ?, ?, 1)
    `).bind(t.user_id,s,r,i,a,JSON.stringify(n||[]),o).run();return e.json({success:!0,message:"Service added successfully",service_id:d.meta.last_row_id})}catch(t){return console.error("Add service error:",t),e.json({error:"Failed to add service"},500)}});P.put("/services/:id",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),{service_category:r,service_name:i,description:a,hourly_rate:n,service_area:o,years_experience:l,is_available:d}=await e.req.json();return await e.env.DB.prepare(`
      UPDATE worker_services SET
        service_category = ?, service_name = ?, description = ?,
        hourly_rate = ?, service_area = ?, years_experience = ?, is_available = ?
      WHERE id = ? AND user_id = ?
    `).bind(r,i,a,n,JSON.stringify(o||[]),l,d?1:0,s,t.user_id).run(),e.json({success:!0,message:"Service updated successfully"})}catch(t){return console.error("Update service error:",t),e.json({error:"Failed to update service"},500)}});P.delete("/services/:id",A,async e=>{try{const t=e.get("user"),s=e.req.param("id");return await e.env.DB.prepare(`
      DELETE FROM worker_services WHERE id = ? AND user_id = ?
    `).bind(s,t.user_id).run(),e.json({success:!0,message:"Service deleted successfully"})}catch(t){return console.error("Delete service error:",t),e.json({error:"Failed to delete service"},500)}});P.get("/bids",A,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT b.*, j.title as job_title, j.description as job_description,
             j.budget_min, j.budget_max, j.status as job_status, j.location_city, j.location_province,
             c.name as category_name, c.icon_class,
             u.first_name as client_first_name, u.last_name as client_last_name
      FROM bids b
      JOIN jobs j ON b.job_id = j.id
      JOIN job_categories c ON j.category_id = c.id
      JOIN users u ON j.client_id = u.id
      WHERE b.worker_id = ?
      ORDER BY b.submitted_at DESC
    `).bind(t.user_id).all();return e.json({bids:s.results||[]})}catch(t){return console.error("Get bids error:",t),e.json({error:"Failed to get bids"},500)}});P.get("/bids/check/:jobId",A,async e=>{try{const t=e.get("user"),s=e.req.param("jobId"),r=await e.env.DB.prepare(`
      SELECT b.*, 
             (SELECT COUNT(*) FROM bid_history WHERE bid_id = b.id) as modification_count
      FROM bids b
      WHERE b.job_id = ? AND b.worker_id = ? AND b.status != 'withdrawn'
    `).bind(s,t.user_id).first();return e.json({hasBid:!!r,bid:r||null})}catch(t){return console.error("Check bid error:",t),e.json({error:"Failed to check bid status"},500)}});P.put("/bids/:id",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),{bid_amount:r,cover_message:i,estimated_timeline:a,modification_reason:n}=await e.req.json(),o=await e.env.DB.prepare(`
      SELECT * FROM bids WHERE id = ? AND worker_id = ? AND status = 'pending'
    `).bind(s,t.user_id).first();return o?(await e.env.DB.prepare(`
      INSERT INTO bid_history (bid_id, bid_amount, cover_message, estimated_timeline, modification_reason)
      VALUES (?, ?, ?, ?, ?)
    `).bind(s,o.bid_amount,o.cover_message,o.estimated_timeline,n||"Bid updated").run(),await e.env.DB.prepare(`
      UPDATE bids SET 
        bid_amount = ?, 
        cover_message = ?, 
        estimated_timeline = ?,
        is_modified = 1,
        modification_count = modification_count + 1,
        last_modified_at = CURRENT_TIMESTAMP
      WHERE id = ? AND worker_id = ?
    `).bind(r,i,a,s,t.user_id).run(),e.json({success:!0,message:"Bid updated successfully"})):e.json({error:"Bid not found or cannot be modified"},404)}catch(t){return console.error("Update bid error:",t),e.json({error:"Failed to update bid"},500)}});P.get("/bids/:id/history",A,async e=>{try{const t=e.get("user"),s=e.req.param("id");if(!await e.env.DB.prepare(`
      SELECT id FROM bids WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).first())return e.json({error:"Bid not found"},404);const i=await e.env.DB.prepare(`
      SELECT * FROM bid_history WHERE bid_id = ? ORDER BY modified_at DESC
    `).bind(s).all();return e.json({history:i.results||[]})}catch(t){return console.error("Get bid history error:",t),e.json({error:"Failed to get bid history"},500)}});P.put("/bids/:id/withdraw",A,async e=>{try{const t=e.get("user"),s=e.req.param("id");return await e.env.DB.prepare(`
      UPDATE bids SET status = 'withdrawn' WHERE id = ? AND worker_id = ? AND status = 'pending'
    `).bind(s,t.user_id).run(),e.json({success:!0,message:"Bid withdrawn successfully"})}catch(t){return console.error("Withdraw bid error:",t),e.json({error:"Failed to withdraw bid"},500)}});P.get("/compliance/documents",A,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT id FROM worker_compliance WHERE user_id = ?
    `).bind(t.user_id).first();if(!s)return e.json({documents:[]});const r=await e.env.DB.prepare(`
      SELECT * FROM compliance_documents WHERE compliance_id = ? ORDER BY uploaded_at DESC
    `).bind(s.id).all();return e.json({documents:r.results||[]})}catch(t){return console.error("Get compliance documents error:",t),e.json({error:"Failed to get compliance documents"},500)}});P.post("/compliance/documents",A,async e=>{try{const t=e.get("user"),{document_type:s,document_name:r,document_url:i,file_size:a}=await e.req.json();let n=await e.env.DB.prepare(`
      SELECT id FROM worker_compliance WHERE user_id = ?
    `).bind(t.user_id).first();return n||(n={id:(await e.env.DB.prepare(`
        INSERT INTO worker_compliance (user_id, compliance_status) VALUES (?, 'pending')
      `).bind(t.user_id).run()).meta.last_row_id}),await e.env.DB.prepare(`
      INSERT INTO compliance_documents (compliance_id, document_type, document_name, document_url, file_size)
      VALUES (?, ?, ?, ?, ?)
    `).bind(n.id,s,r,i,a||0).run(),e.json({success:!0,message:"Document added successfully"})}catch(t){return console.error("Add compliance document error:",t),e.json({error:"Failed to add compliance document"},500)}});P.delete("/compliance/documents/:id",A,async e=>{try{const t=e.get("user"),s=e.req.param("id");return await e.env.DB.prepare(`
      SELECT cd.id FROM compliance_documents cd
      JOIN worker_compliance wc ON cd.compliance_id = wc.id
      WHERE cd.id = ? AND wc.user_id = ?
    `).bind(s,t.user_id).first()?(await e.env.DB.prepare(`
      DELETE FROM compliance_documents WHERE id = ?
    `).bind(s).run(),e.json({success:!0,message:"Document deleted successfully"})):e.json({error:"Document not found"},404)}catch(t){return console.error("Delete compliance document error:",t),e.json({error:"Failed to delete compliance document"},500)}});P.get("/profile",A,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT u.*, p.bio, p.profile_image_url, p.address_line1, p.address_line2, p.postal_code,
             p.date_of_birth, p.emergency_contact_name, p.emergency_contact_phone
      FROM users u
      LEFT JOIN user_profiles p ON u.id = p.user_id
      WHERE u.id = ?
    `).bind(t.user_id).first();return s?e.json({profile:s}):e.json({error:"Profile not found"},404)}catch(t){return console.error("Get profile error:",t),e.json({error:"Failed to get profile"},500)}});P.put("/profile",A,async e=>{try{const t=e.get("user"),s=await e.req.json(),{first_name:r="",last_name:i="",phone:a=null,province:n=null,city:o=null,bio:l=null,profile_image_url:d=null,address_line1:c=null,address_line2:u=null,postal_code:p=null,emergency_contact_name:m=null,emergency_contact_phone:b=null,company_name:v=null,company_description:f=null,company_logo_url:h=null,website_url:y=null,years_in_business:w=null}=s;return await e.env.DB.prepare(`
      UPDATE users SET
        first_name = ?, last_name = ?, phone = ?, province = ?, city = ?, updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(r,i,a,n,o,t.user_id).run(),await e.env.DB.prepare(`
      SELECT id FROM user_profiles WHERE user_id = ?
    `).bind(t.user_id).first()?await e.env.DB.prepare(`
        UPDATE user_profiles SET
          bio = ?, profile_image_url = ?, address_line1 = ?, address_line2 = ?, postal_code = ?,
          emergency_contact_name = ?, emergency_contact_phone = ?,
          company_name = ?, company_description = ?, company_logo_url = ?, website_url = ?, years_in_business = ?,
          updated_at = CURRENT_TIMESTAMP
        WHERE user_id = ?
      `).bind(l,d,c,u,p,m,b,v,f,h,y,w,t.user_id).run():await e.env.DB.prepare(`
        INSERT INTO user_profiles (
          user_id, bio, profile_image_url, address_line1, address_line2, postal_code,
          emergency_contact_name, emergency_contact_phone,
          company_name, company_description, company_logo_url, website_url, years_in_business
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
      `).bind(t.user_id,l,d,c,u,p,m,b,v,f,h,y,w).run(),e.json({success:!0,message:"Profile updated successfully"})}catch(t){return console.error("Update profile error:",t),e.json({error:"Failed to update profile"},500)}});P.get("/categories",A,async e=>{try{const t=await e.env.DB.prepare(`
      SELECT * FROM job_categories WHERE is_active = 1 ORDER BY name
    `).all();return e.json({categories:t.results||[]})}catch(t){return console.error("Get categories error:",t),e.json({error:"Failed to get categories"},500)}});P.get("/service-areas",A,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT * FROM worker_service_areas 
      WHERE user_id = ? AND is_active = 1 
      ORDER BY area_name
    `).bind(t.user_id).all();return e.json({service_areas:s.results||[]})}catch(t){return console.error("Get service areas error:",t),e.json({error:"Failed to get service areas"},500)}});P.post("/service-areas",A,async e=>{try{const t=e.get("user"),{area_name:s}=await e.req.json();if(!s||s.trim().length===0)return e.json({error:"Area name is required"},400);if(await e.env.DB.prepare(`
      SELECT id FROM worker_service_areas 
      WHERE user_id = ? AND LOWER(area_name) = LOWER(?) AND is_active = 1
    `).bind(t.user_id,s.trim()).first())return e.json({error:"Service area already exists"},400);const i=await e.env.DB.prepare(`
      INSERT INTO worker_service_areas (user_id, area_name)
      VALUES (?, ?)
    `).bind(t.user_id,s.trim()).run();return e.json({success:!0,message:"Service area added successfully",area_id:i.meta.last_row_id})}catch(t){return console.error("Add service area error:",t),e.json({error:"Failed to add service area"},500)}});P.delete("/service-areas/:id",A,async e=>{try{const t=e.get("user"),s=e.req.param("id");return await e.env.DB.prepare(`
      UPDATE worker_service_areas SET is_active = 0 
      WHERE id = ? AND user_id = ?
    `).bind(s,t.user_id).run(),e.json({success:!0,message:"Service area removed successfully"})}catch(t){return console.error("Delete service area error:",t),e.json({error:"Failed to remove service area"},500)}});P.get("/hours",A,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT * FROM worker_hours 
      WHERE user_id = ? 
      ORDER BY day_of_week
    `).bind(t.user_id).all();return e.json({hours:s.results||[]})}catch(t){return console.error("Get hours error:",t),e.json({error:"Failed to get hours"},500)}});P.put("/hours",A,async e=>{try{const t=e.get("user"),{hours:s}=await e.req.json();if(!Array.isArray(s)||s.length!==7)return e.json({error:"Invalid hours data - must be array of 7 days"},400);for(let r=0;r<s.length;r++){const i=s[r];await e.env.DB.prepare(`
        INSERT OR REPLACE INTO worker_hours 
        (user_id, day_of_week, is_open, open_time, close_time, updated_at) 
        VALUES (?, ?, ?, ?, ?, CURRENT_TIMESTAMP)
      `).bind(t.user_id,r,i.is_open?1:0,i.is_open?i.open_time:null,i.is_open?i.close_time:null).run()}return e.json({success:!0,message:"Hours updated successfully"})}catch(t){return console.error("Update hours error:",t),e.json({error:"Failed to update hours"},500)}});P.post("/compliance/upload",A,async e=>{try{const t=e.get("user"),s=await e.req.json(),{fileName:r,fileSize:i,fileType:a,fileData:n,documentType:o}=s;if(!r||!i||!a||!n||!o)return e.json({error:"All file information and document type are required"},400);if(!["image/jpeg","image/jpg","image/png","application/pdf"].includes(a))return e.json({error:"Only JPEG, PNG, and PDF files are allowed"},400);if(i>5*1024*1024)return e.json({error:"File size must be less than 5MB"},400);const d=`data:${a};base64,${n}`,c=Math.random().toString(36).substring(2,15);let u;const p=await e.env.DB.prepare(`
      SELECT id FROM worker_compliance WHERE user_id = ?
    `).bind(t.user_id).first();return p?u=p.id:u=(await e.env.DB.prepare(`
        INSERT INTO worker_compliance (user_id, compliance_status) VALUES (?, 'pending')
      `).bind(t.user_id).run()).meta.last_row_id,await e.env.DB.prepare(`
      INSERT INTO compliance_documents (
        compliance_id, document_type, document_name, document_url, file_size, uploaded_at
      ) VALUES (?, ?, ?, ?, ?, datetime('now'))
    `).bind(u,o,r,d,i).run(),await e.env.DB.prepare(`
      UPDATE worker_compliance 
      SET documents_uploaded = 1, updated_at = datetime('now')
      WHERE user_id = ?
    `).bind(t.user_id).run(),e.json({success:!0,document:{id:c,document_type:o,file_name:r,file_size:i,uploaded_at:new Date().toISOString()}})}catch(t){return console.error("Upload compliance document error:",t),e.json({error:"Failed to upload document"},500)}});P.get("/compliance/documents",A,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT cd.id, cd.document_type, cd.document_name as file_name, cd.file_size, cd.uploaded_at
      FROM compliance_documents cd
      JOIN worker_compliance wc ON cd.compliance_id = wc.id
      WHERE wc.user_id = ? 
      ORDER BY cd.uploaded_at DESC
    `).bind(t.user_id).all();return e.json({documents:s.results||[]})}catch(t){return console.error("Get compliance documents error:",t),e.json({error:"Failed to get documents"},500)}});P.delete("/compliance/documents/:id",A,async e=>{try{const t=e.get("user"),s=e.req.param("id");return await e.env.DB.prepare(`
      DELETE FROM compliance_documents 
      WHERE id = ? AND compliance_id IN (
        SELECT id FROM worker_compliance WHERE user_id = ?
      )
    `).bind(s,t.user_id).run(),e.json({success:!0,message:"Document deleted successfully"})}catch(t){return console.error("Delete compliance document error:",t),e.json({error:"Failed to delete document"},500)}});P.post("/profile/upload-image",A,async e=>{try{const t=e.get("user"),r=(await e.req.parseBody()).file;if(!r)return e.json({error:"File is required"},400);if(!["image/jpeg","image/png"].includes(r.type))return e.json({error:"Only JPEG and PNG images are allowed"},400);if(r.size>2*1024*1024)return e.json({error:"Image size must be less than 2MB"},400);const a=await r.arrayBuffer(),n=btoa(String.fromCharCode(...new Uint8Array(a))),o=`data:${r.type};base64,${n}`;return await e.env.DB.prepare(`
      UPDATE user_profiles SET
        profile_image_url = ?, updated_at = CURRENT_TIMESTAMP
      WHERE user_id = ?
    `).bind(o,t.user_id).run(),e.json({success:!0,imageUrl:o,message:"Profile image uploaded successfully"})}catch(t){return console.error("Upload profile image error:",t),e.json({error:"Failed to upload image"},500)}});P.put("/compliance",async e=>{var s;let t=(s=e.req.header("Authorization"))==null?void 0:s.replace("Bearer ","");if(!t){const r=e.req.header("Cookie");if(r){const i=r.split(";");for(const a of i){const n=a.trim(),o=n.indexOf("=");if(o!==-1){const l=n.substring(0,o),d=n.substring(o+1);if(l==="session"){t=d;break}}}}}if(!t)return e.json({error:"Authentication required",expired:!0},401);try{const r=await e.env.DB.prepare(`
      SELECT s.user_id, u.role, u.first_name, u.last_name, u.email, u.is_verified
      FROM user_sessions s
      JOIN users u ON s.user_id = u.id
      WHERE s.session_token = ? AND u.is_active = 1 AND u.role = 'worker'
    `).bind(t).first();if(!r)return e.json({error:"Invalid or expired session",expired:!0},401);const i=await e.req.json();return await e.env.DB.prepare(`
      SELECT user_id FROM worker_compliance WHERE user_id = ?
    `).bind(r.user_id).first()?await e.env.DB.prepare(`
        UPDATE worker_compliance 
        SET wsib_number = ?, wsib_valid_until = ?, 
            insurance_provider = ?, insurance_policy_number = ?, insurance_valid_until = ?,
            license_type = ?, license_number = ?, license_valid_until = ?
        WHERE user_id = ?
      `).bind(i.wsibNumber||null,i.wsibValidUntil||null,i.insuranceProvider||null,i.insurancePolicyNumber||null,i.insuranceValidUntil||null,i.licenseType||null,i.licenseNumber||null,i.licenseValidUntil||null,r.user_id).run():await e.env.DB.prepare(`
        INSERT INTO worker_compliance (user_id, wsib_number, wsib_valid_until, 
                                     insurance_provider, insurance_policy_number, insurance_valid_until,
                                     license_type, license_number, license_valid_until)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
      `).bind(r.user_id,i.wsibNumber||null,i.wsibValidUntil||null,i.insuranceProvider||null,i.insurancePolicyNumber||null,i.insuranceValidUntil||null,i.licenseType||null,i.licenseNumber||null,i.licenseValidUntil||null).run(),(i.licenseDocument||i.wsibDocument||i.insuranceDocument)&&console.log("Documents uploaded:",{license:!!i.licenseDocument,wsib:!!i.wsibDocument,insurance:!!i.insuranceDocument}),e.json({message:"Compliance information updated successfully"})}catch(r){return console.error("Error updating compliance:",r),e.json({error:"Failed to update compliance information"},500)}});P.get("/assigned-jobs",A,async e=>{try{const t=e.get("session"),s=await e.env.DB.prepare(`
      SELECT 
        j.id, j.title, j.description, j.status, j.budget_min, j.budget_max,
        j.location_city, j.location_province, j.urgency, j.created_at, j.actual_completion,
        jc.name as category_name,
        u.first_name as client_first_name, u.last_name as client_last_name,
        (u.first_name || ' ' || u.last_name) as client_name
      FROM jobs j
      LEFT JOIN job_categories jc ON j.category_id = jc.id
      LEFT JOIN users u ON j.client_id = u.id
      WHERE j.assigned_worker_id = ? 
        AND j.status IN ('assigned', 'in_progress', 'completed')
      ORDER BY 
        CASE j.status 
          WHEN 'assigned' THEN 1 
          WHEN 'in_progress' THEN 2 
          WHEN 'completed' THEN 3 
        END,
        j.created_at DESC
    `).bind(t.user_id).all(),r=await Promise.all(s.results.map(async i=>{const a=await e.env.DB.prepare(`
        SELECT id, milestone_name, milestone_description, is_completed, completed_at, display_order
        FROM job_milestones
        WHERE job_id = ?
        ORDER BY display_order ASC
      `).bind(i.id).all();return{...i,milestones:a.results||[]}}));return e.json({success:!0,jobs:r})}catch(t){return console.error("Error fetching assigned jobs:",t),e.json({success:!1,error:"Failed to fetch assigned jobs"},500)}});P.put("/jobs/:id/status",A,async e=>{try{const t=parseInt(e.req.param("id")),{status:s}=await e.req.json(),r=e.get("session");if(!["assigned","in_progress","completed"].includes(s))return e.json({error:"Invalid status"},400);const a=await e.env.DB.prepare(`
      SELECT id, status as current_status, assigned_worker_id, title
      FROM jobs 
      WHERE id = ? AND assigned_worker_id = ?
    `).bind(t,r.user_id).first();if(!a)return e.json({error:"Job not found or not assigned to you"},404);const n=a.current_status;return n==="completed"&&s!=="completed"?e.json({error:"Cannot change status of completed job"},400):(await e.env.DB.prepare(`
      UPDATE jobs 
      SET status = ?, 
          updated_at = CURRENT_TIMESTAMP,
          actual_completion = CASE WHEN ? = 'completed' THEN CURRENT_TIMESTAMP ELSE actual_completion END
      WHERE id = ?
    `).bind(s,s,t).run(),await e.env.DB.prepare(`
      INSERT INTO job_status_logs (job_id, old_status, new_status, changed_by, change_reason)
      VALUES (?, ?, ?, ?, ?)
    `).bind(t,n,s,r.user_id,"Status updated via Kanban board").run(),s==="in_progress"?(await e.env.DB.prepare(`
        UPDATE job_milestones 
        SET is_completed = TRUE, completed_at = CURRENT_TIMESTAMP, completed_by = ?
        WHERE job_id = ? AND milestone_name = 'Work Started'
      `).bind(r.user_id,t).run(),await e.env.DB.prepare(`
        INSERT OR IGNORE INTO job_milestones (job_id, milestone_name, milestone_description, is_completed, completed_at, completed_by, display_order)
        VALUES (?, 'Work Started', 'Worker has started working on the job', TRUE, CURRENT_TIMESTAMP, ?, 2)
      `).bind(t,r.user_id).run()):s==="completed"&&(await e.env.DB.prepare(`
        UPDATE job_milestones 
        SET is_completed = TRUE, completed_at = CURRENT_TIMESTAMP, completed_by = ?
        WHERE job_id = ? AND milestone_name = 'Work Completed'
      `).bind(r.user_id,t).run(),await e.env.DB.prepare(`
        INSERT OR IGNORE INTO job_milestones (job_id, milestone_name, milestone_description, is_completed, completed_at, completed_by, display_order)
        VALUES (?, 'Work Completed', 'All work has been completed', TRUE, CURRENT_TIMESTAMP, ?, 3)
      `).bind(t,r.user_id).run()),e.json({success:!0,message:`Job status updated to ${s}`,job_id:t,new_status:s}))}catch(t){return console.error("Error updating job status:",t),e.json({success:!1,error:"Failed to update job status"},500)}});P.get("/calendar/events",A,async e=>{try{const t=e.get("user"),{start_date:s,end_date:r}=e.req.query();if(!s||!r)return e.json({error:"start_date and end_date parameters are required"},400);const i=await e.env.DB.prepare(`
      SELECT 
        a.id,
        a.title,
        a.description,
        a.appointment_type,
        a.start_datetime,
        a.end_datetime,
        a.location_type,
        a.location_address,
        a.status,
        a.job_id,
        'appointment' as event_type,
        u.first_name as client_first_name,
        u.last_name as client_last_name,
        j.title as job_title
      FROM appointments a
      LEFT JOIN users u ON a.client_id = u.id
      LEFT JOIN jobs j ON a.job_id = j.id
      WHERE a.worker_id = ? 
        AND DATE(a.start_datetime) >= DATE(?) 
        AND DATE(a.start_datetime) <= DATE(?)
        AND a.status NOT IN ('cancelled')
      ORDER BY a.start_datetime
    `).bind(t.user_id,s,r).all(),a=await e.env.DB.prepare(`
      SELECT 
        tb.id,
        tb.block_name as title,
        tb.description,
        tb.start_datetime,
        tb.end_datetime,
        tb.block_type,
        tb.status,
        tb.is_billable,
        tb.estimated_hours,
        tb.actual_hours,
        tb.job_id,
        'time_block' as event_type,
        j.title as job_title
      FROM job_time_blocks tb
      LEFT JOIN jobs j ON tb.job_id = j.id
      WHERE tb.worker_id = ? 
        AND DATE(tb.start_datetime) >= DATE(?) 
        AND DATE(tb.start_datetime) <= DATE(?)
        AND tb.status NOT IN ('cancelled')
      ORDER BY tb.start_datetime
    `).bind(t.user_id,s,r).all(),n=await e.env.DB.prepare(`
      SELECT 
        id,
        title,
        description,
        event_type,
        start_datetime,
        end_datetime,
        all_day,
        color_code,
        location
      FROM calendar_events
      WHERE user_id = ? 
        AND DATE(start_datetime) >= DATE(?) 
        AND DATE(start_datetime) <= DATE(?)
      ORDER BY start_datetime
    `).bind(t.user_id,s,r).all();return e.json({success:!0,events:{appointments:i.results||[],time_blocks:a.results||[],personal:n.results||[]}})}catch(t){return console.error("Get calendar events error:",t),e.json({error:"Failed to get calendar events"},500)}});P.post("/calendar/appointments",A,async e=>{try{const t=e.get("user"),{job_id:s,client_id:r,title:i,description:a,appointment_type:n,start_datetime:o,end_datetime:l,location_type:d,location_address:c,meeting_link:u}=await e.req.json();if(!r||!i||!o||!l)return e.json({error:"client_id, title, start_datetime, and end_datetime are required"},400);const p=new Date(o),m=new Date(l);if(p>=m)return e.json({error:"start_datetime must be before end_datetime"},400);const b=await e.env.DB.prepare(`
      SELECT id FROM appointments
      WHERE worker_id = ? 
        AND status NOT IN ('cancelled', 'completed')
        AND ((start_datetime BETWEEN ? AND ?) OR (end_datetime BETWEEN ? AND ?)
             OR (start_datetime <= ? AND end_datetime >= ?))
    `).bind(t.user_id,o,l,o,l,o,l).all();if(b.results&&b.results.length>0)return e.json({error:"Time slot conflicts with existing appointment"},400);const v=await e.env.DB.prepare(`
      INSERT INTO appointments (
        job_id, worker_id, client_id, title, description, appointment_type,
        start_datetime, end_datetime, location_type, location_address, meeting_link,
        created_by
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(s||null,t.user_id,r,i,a||null,n||"meeting",o,l,d||"client_site",c||null,u||null,t.user_id).run();return e.json({success:!0,appointment_id:v.meta.last_row_id,message:"Appointment created successfully"})}catch(t){return console.error("Create appointment error:",t),e.json({error:"Failed to create appointment"},500)}});P.put("/calendar/appointments/:id",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),{title:r,description:i,appointment_type:a,start_datetime:n,end_datetime:o,location_type:l,location_address:d,meeting_link:c,status:u}=await e.req.json();if(!await e.env.DB.prepare(`
      SELECT id FROM appointments WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).first())return e.json({error:"Appointment not found"},404);if(n&&o){const m=new Date(n),b=new Date(o);if(m>=b)return e.json({error:"start_datetime must be before end_datetime"},400)}return await e.env.DB.prepare(`
      UPDATE appointments SET
        title = COALESCE(?, title),
        description = COALESCE(?, description),
        appointment_type = COALESCE(?, appointment_type),
        start_datetime = COALESCE(?, start_datetime),
        end_datetime = COALESCE(?, end_datetime),
        location_type = COALESCE(?, location_type),
        location_address = COALESCE(?, location_address),
        meeting_link = COALESCE(?, meeting_link),
        status = COALESCE(?, status),
        updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(r,i,a,n,o,l,d,c,u,s).run(),e.json({success:!0,message:"Appointment updated successfully"})}catch(t){return console.error("Update appointment error:",t),e.json({error:"Failed to update appointment"},500)}});P.delete("/calendar/appointments/:id",A,async e=>{try{const t=e.get("user"),s=e.req.param("id");return await e.env.DB.prepare(`
      SELECT id FROM appointments WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).first()?(await e.env.DB.prepare(`
      UPDATE appointments SET status = 'cancelled', updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(s).run(),e.json({success:!0,message:"Appointment cancelled successfully"})):e.json({error:"Appointment not found"},404)}catch(t){return console.error("Cancel appointment error:",t),e.json({error:"Failed to cancel appointment"},500)}});P.post("/calendar/time-blocks",A,async e=>{try{const t=e.get("user"),{job_id:s,block_name:r,description:i,start_datetime:a,end_datetime:n,block_type:o,is_billable:l,estimated_hours:d,hourly_rate:c}=await e.req.json();if(!s||!r||!a||!n)return e.json({error:"job_id, block_name, start_datetime, and end_datetime are required"},400);if(!await e.env.DB.prepare(`
      SELECT id FROM jobs WHERE id = ? AND assigned_worker_id = ?
    `).bind(s,t.user_id).first())return e.json({error:"Job not found or not assigned to you"},404);const p=await e.env.DB.prepare(`
      INSERT INTO job_time_blocks (
        job_id, worker_id, block_name, description, start_datetime, end_datetime,
        block_type, is_billable, estimated_hours, hourly_rate
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(s,t.user_id,r,i||null,a,n,o||"work",l!==!1?1:0,d||null,c||null).run();return e.json({success:!0,time_block_id:p.meta.last_row_id,message:"Time block created successfully"})}catch(t){return console.error("Create time block error:",t),e.json({error:"Failed to create time block"},500)}});P.get("/calendar/availability",A,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT * FROM worker_availability 
      WHERE user_id = ? 
      ORDER BY day_of_week, start_time
    `).bind(t.user_id).all();return e.json({success:!0,availability:s.results||[]})}catch(t){return console.error("Get availability error:",t),e.json({error:"Failed to get availability"},500)}});P.put("/calendar/availability",A,async e=>{try{const t=e.get("user"),{schedule:s}=await e.req.json();if(!Array.isArray(s)||s.length!==7)return e.json({error:"Schedule must be an array of 7 days"},400);await e.env.DB.prepare(`
      DELETE FROM worker_availability WHERE user_id = ?
    `).bind(t.user_id).run();for(let r=0;r<7;r++){const i=s[r];i.is_available&&await e.env.DB.prepare(`
          INSERT INTO worker_availability 
          (user_id, day_of_week, start_time, end_time, is_available, break_start_time, break_end_time)
          VALUES (?, ?, ?, ?, ?, ?, ?)
        `).bind(t.user_id,r,i.start_time,i.end_time,1,i.break_start_time||null,i.break_end_time||null).run()}return e.json({success:!0,message:"Availability updated successfully"})}catch(t){return console.error("Update availability error:",t),e.json({error:"Failed to update availability"},500)}});P.get("/earnings/summary",A,async e=>{try{const t=e.get("user"),{year:s}=e.req.query(),r=s?parseInt(s):new Date().getFullYear(),i=await e.env.DB.prepare(`
      SELECT 
        COUNT(*) as total_jobs,
        COALESCE(SUM(gross_amount), 0) as total_gross,
        COALESCE(SUM(platform_fee), 0) as total_fees,
        COALESCE(SUM(net_amount), 0) as total_net,
        COALESCE(AVG(gross_amount), 0) as avg_job_value
      FROM worker_earnings 
      WHERE worker_id = ? AND tax_year = ?
    `).bind(t.user_id,r).first(),a=await e.env.DB.prepare(`
      SELECT 
        strftime('%m', created_at) as month,
        COUNT(*) as jobs_count,
        COALESCE(SUM(gross_amount), 0) as gross_amount,
        COALESCE(SUM(net_amount), 0) as net_amount
      FROM worker_earnings 
      WHERE worker_id = ? AND tax_year = ?
      GROUP BY strftime('%m', created_at)
      ORDER BY month
    `).bind(t.user_id,r).all(),n=await e.env.DB.prepare(`
      SELECT 
        COUNT(*) as pending_count,
        COALESCE(SUM(net_amount), 0) as pending_amount
      FROM worker_earnings 
      WHERE worker_id = ? AND payment_status IN ('pending', 'processing')
    `).bind(t.user_id).first(),o=await e.env.DB.prepare(`
      SELECT 
        we.id,
        we.gross_amount,
        we.net_amount,
        we.earning_type,
        we.payment_status,
        we.hours_worked,
        we.created_at,
        j.title as job_title,
        u.first_name as client_first_name,
        u.last_name as client_last_name
      FROM worker_earnings we
      JOIN jobs j ON we.job_id = j.id
      JOIN users u ON j.client_id = u.id
      WHERE we.worker_id = ?
      ORDER BY we.created_at DESC
      LIMIT 10
    `).bind(t.user_id).all();return e.json({success:!0,summary:{yearly:{year:r,total_jobs:i.total_jobs||0,total_gross:parseFloat(i.total_gross||0),total_fees:parseFloat(i.total_fees||0),total_net:parseFloat(i.total_net||0),avg_job_value:parseFloat(i.avg_job_value||0)},monthly:a.results||[],pending:{count:n.pending_count||0,amount:parseFloat(n.pending_amount||0)},recent:o.results||[]}})}catch(t){return console.error("Get earnings summary error:",t),e.json({error:"Failed to get earnings summary"},500)}});P.get("/earnings/history",A,async e=>{try{const t=e.get("user"),{page:s=1,limit:r=20,status:i,year:a}=e.req.query(),n=(parseInt(s)-1)*parseInt(r);let o="WHERE we.worker_id = ?",l=[t.user_id];i&&i!=="all"&&(o+=" AND we.payment_status = ?",l.push(i)),a&&a!=="all"&&(o+=" AND we.tax_year = ?",l.push(parseInt(a)));const d=await e.env.DB.prepare(`
      SELECT 
        we.*,
        j.title as job_title,
        j.location_city,
        j.location_province,
        u.first_name as client_first_name,
        u.last_name as client_last_name,
        jc.name as job_category
      FROM worker_earnings we
      JOIN jobs j ON we.job_id = j.id
      JOIN users u ON j.client_id = u.id
      LEFT JOIN job_categories jc ON j.category_id = jc.id
      ${o}
      ORDER BY we.created_at DESC
      LIMIT ? OFFSET ?
    `).bind(...l,parseInt(r),n).all(),c=await e.env.DB.prepare(`
      SELECT COUNT(*) as count
      FROM worker_earnings we
      JOIN jobs j ON we.job_id = j.id
      ${o}
    `).bind(...l).first();return e.json({success:!0,earnings:d.results||[],pagination:{page:parseInt(s),limit:parseInt(r),total:c.count||0,pages:Math.ceil((c.count||0)/parseInt(r))}})}catch(t){return console.error("Get earnings history error:",t),e.json({error:"Failed to get earnings history"},500)}});P.post("/earnings/calculate",A,async e=>{try{const t=e.get("user"),{job_id:s,bid_id:r,hours_worked:i}=await e.req.json();if(!s||!r)return e.json({error:"job_id and bid_id are required"},400);const a=await e.env.DB.prepare(`
      SELECT j.*, b.bid_amount
      FROM jobs j
      JOIN bids b ON j.id = b.job_id
      WHERE j.id = ? AND b.id = ? AND j.assigned_worker_id = ? AND b.worker_id = ?
    `).bind(s,r,t.user_id,t.user_id).first();if(!a)return e.json({error:"Job or bid not found"},404);const n=await e.env.DB.prepare(`
      SELECT * FROM platform_fee_settings 
      WHERE is_active = TRUE 
      ORDER BY effective_date DESC 
      LIMIT 1
    `).first(),o=parseFloat(a.bid_amount);let l=0;n&&(n.fee_type==="percentage"?(l=o*parseFloat(n.fee_percentage),n.minimum_fee&&l<parseFloat(n.minimum_fee)&&(l=parseFloat(n.minimum_fee)),n.maximum_fee&&l>parseFloat(n.maximum_fee)&&(l=parseFloat(n.maximum_fee))):n.fee_type==="fixed"&&(l=parseFloat(n.fee_fixed_amount)));const d=o-l,c=new Date().getFullYear(),u=await e.env.DB.prepare(`
      INSERT INTO worker_earnings (
        worker_id, job_id, bid_id, gross_amount, platform_fee, net_amount,
        hours_worked, tax_year, earning_type
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, 'job_completion')
    `).bind(t.user_id,s,r,o,l,d,i||null,c).run();return await e.env.DB.prepare(`
      UPDATE jobs SET escrow_status = 'earning_calculated' WHERE id = ?
    `).bind(s).run(),e.json({success:!0,earning_id:u.meta.last_row_id,calculation:{gross_amount:o,platform_fee:l,net_amount:d,fee_percentage:(n==null?void 0:n.fee_percentage)||0}})}catch(t){return console.error("Calculate earnings error:",t),e.json({error:"Failed to calculate earnings"},500)}});P.post("/earnings/time-tracking/start",A,async e=>{try{const t=e.get("user"),{job_id:s,time_block_id:r,hourly_rate:i,description:a}=await e.req.json();if(!s)return e.json({error:"job_id is required"},400);if(!await e.env.DB.prepare(`
      SELECT id FROM jobs WHERE id = ? AND assigned_worker_id = ?
    `).bind(s,t.user_id).first())return e.json({error:"Job not found or not assigned to you"},404);if(await e.env.DB.prepare(`
      SELECT id FROM time_tracking_sessions 
      WHERE worker_id = ? AND job_id = ? AND status = 'active'
    `).bind(t.user_id,s).first())return e.json({error:"You already have an active time tracking session for this job"},400);const l=await e.env.DB.prepare(`
      INSERT INTO time_tracking_sessions (
        worker_id, job_id, time_block_id, session_start, hourly_rate, description
      ) VALUES (?, ?, ?, datetime('now'), ?, ?)
    `).bind(t.user_id,s,r||null,i||null,a||null).run();return e.json({success:!0,session_id:l.meta.last_row_id,message:"Time tracking started"})}catch(t){return console.error("Start time tracking error:",t),e.json({error:"Failed to start time tracking"},500)}});P.post("/earnings/time-tracking/stop",A,async e=>{try{const t=e.get("user"),{session_id:s,break_minutes:r}=await e.req.json();if(!s)return e.json({error:"session_id is required"},400);const i=await e.env.DB.prepare(`
      SELECT * FROM time_tracking_sessions 
      WHERE id = ? AND worker_id = ? AND status = 'active'
    `).bind(s,t.user_id).first();if(!i)return e.json({error:"Active session not found"},404);const a=new Date(i.session_start),l=Math.floor((new Date-a)/(1e3*60))-(r||0);let d=0;return i.hourly_rate&&l>0&&(d=parseFloat(i.hourly_rate)*l/60),await e.env.DB.prepare(`
      UPDATE time_tracking_sessions SET
        session_end = datetime('now'),
        duration_minutes = ?,
        break_minutes = ?,
        earnings_amount = ?,
        status = 'completed'
      WHERE id = ?
    `).bind(l,r||0,d,s).run(),e.json({success:!0,session:{duration_minutes:l,break_minutes:r||0,earnings_amount:d,hourly_rate:i.hourly_rate},message:"Time tracking completed"})}catch(t){return console.error("Stop time tracking error:",t),e.json({error:"Failed to stop time tracking"},500)}});P.get("/earnings/time-tracking/active",A,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT 
        ts.*,
        j.title as job_title,
        u.first_name as client_first_name,
        u.last_name as client_last_name
      FROM time_tracking_sessions ts
      JOIN jobs j ON ts.job_id = j.id
      JOIN users u ON j.client_id = u.id
      WHERE ts.worker_id = ? AND ts.status = 'active'
      ORDER BY ts.session_start DESC
    `).bind(t.user_id).all();return e.json({success:!0,active_sessions:s.results||[]})}catch(t){return console.error("Get active sessions error:",t),e.json({error:"Failed to get active sessions"},500)}});P.post("/earnings/expenses",A,async e=>{try{const t=e.get("user"),{job_id:s,expense_category:r,description:i,amount:a,expense_date:n,receipt_data:o,is_business_expense:l,is_tax_deductible:d}=await e.req.json();if(!r||!i||!a||!n)return e.json({error:"expense_category, description, amount, and expense_date are required"},400);let c=null;o&&(c=`data:image/jpeg;base64,${o}`);const u=await e.env.DB.prepare(`
      INSERT INTO worker_expenses (
        worker_id, job_id, expense_category, description, amount, expense_date,
        receipt_url, is_business_expense, is_tax_deductible, tax_year
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(t.user_id,s||null,r,i,a,n,c,l!==!1?1:0,d!==!1?1:0,new Date(n).getFullYear()).run();return e.json({success:!0,expense_id:u.meta.last_row_id,message:"Expense recorded successfully"})}catch(t){return console.error("Add expense error:",t),e.json({error:"Failed to add expense"},500)}});P.get("/earnings/tax-summary/:year",A,async e=>{try{const t=e.get("user"),s=parseInt(e.req.param("year"));let r=await e.env.DB.prepare(`
      SELECT * FROM worker_tax_info WHERE worker_id = ? AND tax_year = ?
    `).bind(t.user_id,s).first();if(!r){const i=await e.env.DB.prepare(`
        SELECT 
          COALESCE(SUM(gross_amount), 0) as total_gross,
          COALESCE(SUM(platform_fee), 0) as total_fees
        FROM worker_earnings 
        WHERE worker_id = ? AND tax_year = ?
      `).bind(t.user_id,s).first(),a=await e.env.DB.prepare(`
        SELECT 
          COALESCE(SUM(amount), 0) as total_expenses,
          COALESCE(SUM(CASE WHEN is_tax_deductible THEN amount ELSE 0 END), 0) as deductible_expenses
        FROM worker_expenses 
        WHERE worker_id = ? AND tax_year = ?
      `).bind(t.user_id,s).first(),n=parseFloat(i.total_gross||0),o=parseFloat(i.total_fees||0),l=parseFloat(a.total_expenses||0),d=parseFloat(a.deductible_expenses||0),c=n-o-d;await e.env.DB.prepare(`
        INSERT INTO worker_tax_info (
          worker_id, tax_year, total_gross_earnings, total_platform_fees,
          total_expenses, total_tax_deductible_expenses, net_taxable_income
        ) VALUES (?, ?, ?, ?, ?, ?, ?)
      `).bind(t.user_id,s,n,o,l,d,c).run(),r={worker_id:t.user_id,tax_year:s,total_gross_earnings:n,total_platform_fees:o,total_expenses:l,total_tax_deductible_expenses:d,net_taxable_income:c,estimated_tax_owed:0,tax_documents_generated:!1,t4a_issued:!1}}return e.json({success:!0,tax_summary:r})}catch(t){return console.error("Get tax summary error:",t),e.json({error:"Failed to get tax summary"},500)}});P.get("/messages/threads",A,async e=>{try{const t=e.get("user"),{status:s="active",limit:r=20,offset:i=0}=e.req.query(),a=await e.env.DB.prepare(`
      SELECT 
        mt.*,
        j.title as job_title,
        j.location_city,
        j.location_province,
        u.first_name as client_first_name,
        u.last_name as client_last_name,
        u.profile_image_url as client_avatar,
        (SELECT content FROM messages WHERE thread_id = mt.id ORDER BY created_at DESC LIMIT 1) as last_message_content,
        (SELECT message_type FROM messages WHERE thread_id = mt.id ORDER BY created_at DESC LIMIT 1) as last_message_type
      FROM message_threads mt
      JOIN jobs j ON mt.job_id = j.id
      JOIN users u ON mt.client_id = u.id
      WHERE mt.worker_id = ? 
        AND mt.status = ?
        AND mt.is_archived_by_worker = FALSE
      ORDER BY mt.last_message_at DESC, mt.created_at DESC
      LIMIT ? OFFSET ?
    `).bind(t.user_id,s,parseInt(r),parseInt(i)).all();return e.json({success:!0,threads:a.results||[]})}catch(t){return console.error("Get message threads error:",t),e.json({error:"Failed to get message threads"},500)}});P.get("/messages/threads/:threadId",A,async e=>{try{const t=e.get("user"),s=e.req.param("threadId"),{limit:r=50,offset:i=0}=e.req.query(),a=await e.env.DB.prepare(`
      SELECT * FROM message_threads WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).first();if(!a)return e.json({error:"Thread not found or access denied"},404);const n=await e.env.DB.prepare(`
      SELECT 
        m.*,
        u.first_name as sender_first_name,
        u.last_name as sender_last_name,
        u.profile_image_url as sender_avatar
      FROM messages m
      JOIN users u ON m.sender_id = u.id
      WHERE m.thread_id = ?
      ORDER BY m.created_at ASC
      LIMIT ? OFFSET ?
    `).bind(s,parseInt(r),parseInt(i)).all();return await e.env.DB.prepare(`
      UPDATE messages SET is_read = TRUE, read_at = CURRENT_TIMESTAMP
      WHERE thread_id = ? AND receiver_id = ? AND is_read = FALSE
    `).bind(s,t.user_id).run(),await e.env.DB.prepare(`
      UPDATE message_threads SET worker_unread_count = 0
      WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).run(),e.json({success:!0,thread:a,messages:n.results||[]})}catch(t){return console.error("Get messages error:",t),e.json({error:"Failed to get messages"},500)}});P.post("/messages/send",A,async e=>{try{const t=e.get("user"),{thread_id:s,job_id:r,client_id:i,content:a,message_type:n,attachment_data:o,attachment_name:l}=await e.req.json();if(!a&&!o)return e.json({error:"Message content or attachment is required"},400);let d=s;if(!d&&r&&i){const p=await e.env.DB.prepare(`
        SELECT id FROM message_threads WHERE job_id = ? AND worker_id = ? AND client_id = ?
      `).bind(r,t.user_id,i).first();p?d=p.id:d=(await e.env.DB.prepare(`
          INSERT INTO message_threads (job_id, client_id, worker_id, last_message_at, last_message_by)
          VALUES (?, ?, ?, CURRENT_TIMESTAMP, ?)
        `).bind(r,i,t.user_id,t.user_id).run()).meta.last_row_id}if(!d)return e.json({error:"Thread ID is required"},400);let c=null;o&&l&&(c=`data:${n==="image"?"image/jpeg":"application/octet-stream"};base64,${o}`);const u=await e.env.DB.prepare(`
      INSERT INTO messages (
        thread_id, sender_id, receiver_id, message_type, content,
        attachment_url, attachment_name, attachment_type
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(d,t.user_id,i||s,n||"text",a||"",c,l,n==="image"?"image/jpeg":null).run();return await e.env.DB.prepare(`
      UPDATE message_threads SET
        last_message_at = CURRENT_TIMESTAMP,
        last_message_by = ?,
        client_unread_count = client_unread_count + 1
      WHERE id = ?
    `).bind(t.user_id,d).run(),await e.env.DB.prepare(`
      INSERT INTO notifications (user_id, notification_type, title, content, related_entity_type, related_entity_id)
      VALUES (?, 'message', 'New message from worker', ?, 'message', ?)
    `).bind(i,a||"Sent you a file",u.meta.last_row_id).run(),e.json({success:!0,message_id:u.meta.last_row_id,thread_id:d})}catch(t){return console.error("Send message error:",t),e.json({error:"Failed to send message"},500)}});P.post("/progress-updates",A,async e=>{try{const t=e.get("user"),{job_id:s,title:r,description:i,progress_percentage:a,update_type:n,photos:o,before_photos:l,after_photos:d,location_notes:c,next_steps:u,client_approval_required:p}=await e.req.json();if(!s||!r)return e.json({error:"job_id and title are required"},400);const m=await e.env.DB.prepare(`
      SELECT j.*, u.id as client_id FROM jobs j
      JOIN users u ON j.client_id = u.id
      WHERE j.id = ? AND j.assigned_worker_id = ?
    `).bind(s,t.user_id).first();if(!m)return e.json({error:"Job not found or not assigned to you"},404);const b=await e.env.DB.prepare(`
      INSERT INTO job_progress_updates (
        job_id, worker_id, update_type, title, description, progress_percentage,
        photos, before_photos, after_photos, location_notes, next_steps,
        client_approval_required
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(s,t.user_id,n||"progress",r,i,a||0,JSON.stringify(o||[]),JSON.stringify(l||[]),JSON.stringify(d||[]),c,u,p?1:0).run(),v=p?`${r} - Approval required`:`${r} - ${a||0}% complete`;await e.env.DB.prepare(`
      INSERT INTO notifications (user_id, notification_type, title, content, related_entity_type, related_entity_id)
      VALUES (?, 'job_update', 'Job Progress Update', ?, 'job', ?)
    `).bind(m.client_id,v,s).run();const f=await e.env.DB.prepare(`
      SELECT id FROM message_threads WHERE job_id = ? AND worker_id = ?
    `).bind(s,t.user_id).first();return f&&(await e.env.DB.prepare(`
        INSERT INTO messages (
          thread_id, sender_id, receiver_id, message_type, content, is_system_message
        ) VALUES (?, ?, ?, 'system', ?, TRUE)
      `).bind(f.id,t.user_id,m.client_id,`📋 Progress Update: ${r}`).run(),await e.env.DB.prepare(`
        UPDATE message_threads SET
          last_message_at = CURRENT_TIMESTAMP,
          last_message_by = ?,
          client_unread_count = client_unread_count + 1
        WHERE id = ?
      `).bind(t.user_id,f.id).run()),e.json({success:!0,update_id:b.meta.last_row_id,message:"Progress update created successfully"})}catch(t){return console.error("Create progress update error:",t),e.json({error:"Failed to create progress update"},500)}});P.get("/progress-updates/:jobId",A,async e=>{try{const t=e.get("user"),s=e.req.param("jobId");if(!await e.env.DB.prepare(`
      SELECT id FROM jobs WHERE id = ? AND assigned_worker_id = ?
    `).bind(s,t.user_id).first())return e.json({error:"Job not found or not assigned to you"},404);const i=await e.env.DB.prepare(`
      SELECT * FROM job_progress_updates
      WHERE job_id = ?
      ORDER BY created_at DESC
    `).bind(s).all();return e.json({success:!0,updates:i.results||[]})}catch(t){return console.error("Get progress updates error:",t),e.json({error:"Failed to get progress updates"},500)}});P.post("/share-file",A,async e=>{try{const t=e.get("user"),{job_id:s,file_name:r,file_data:i,file_type:a,file_category:n,description:o,photo_stage:l,shared_with:d}=await e.req.json();if(!s||!r||!i)return e.json({error:"job_id, file_name, and file_data are required"},400);const c=await e.env.DB.prepare(`
      SELECT id, client_id FROM jobs WHERE id = ? AND assigned_worker_id = ?
    `).bind(s,t.user_id).first();if(!c)return e.json({error:"Job not found or access denied"},404);const u=`data:${a||"application/octet-stream"};base64,${i}`,p=Math.ceil(i.length*.75),m=await e.env.DB.prepare(`
      INSERT INTO shared_files (
        job_id, shared_by, shared_with, file_name, file_url, file_size, file_type,
        file_category, description, photo_stage, is_progress_photo
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(s,t.user_id,d||c.client_id,r,u,p,a||"application/octet-stream",n||"general",o,l,n==="progress_photo"?1:0).run();return await e.env.DB.prepare(`
      INSERT INTO notifications (user_id, notification_type, title, content, related_entity_type, related_entity_id)
      VALUES (?, 'job_update', 'New file shared', ?, 'file', ?)
    `).bind(c.client_id,`${r} - ${o||"File shared by worker"}`,m.meta.last_row_id).run(),e.json({success:!0,file_id:m.meta.last_row_id,message:"File shared successfully"})}catch(t){return console.error("Share file error:",t),e.json({error:"Failed to share file"},500)}});P.get("/notifications",A,async e=>{try{const t=e.get("user"),{limit:s=20,offset:r=0,unread_only:i=!1}=e.req.query();let a="WHERE user_id = ?",n=[t.user_id];i==="true"&&(a+=" AND is_read = FALSE");const o=await e.env.DB.prepare(`
      SELECT * FROM notifications
      ${a}
      ORDER BY created_at DESC
      LIMIT ? OFFSET ?
    `).bind(...n,parseInt(s),parseInt(r)).all(),l=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM notifications
      WHERE user_id = ? AND is_read = FALSE
    `).bind(t.user_id).first();return e.json({success:!0,notifications:o.results||[],unread_count:l.count||0})}catch(t){return console.error("Get notifications error:",t),e.json({error:"Failed to get notifications"},500)}});P.put("/notifications/mark-read",A,async e=>{try{const t=e.get("user"),{notification_ids:s}=await e.req.json();if(s&&Array.isArray(s)){const r=s.map(()=>"?").join(",");await e.env.DB.prepare(`
        UPDATE notifications SET is_read = TRUE, read_at = CURRENT_TIMESTAMP
        WHERE user_id = ? AND id IN (${r})
      `).bind(t.user_id,...s).run()}else await e.env.DB.prepare(`
        UPDATE notifications SET is_read = TRUE, read_at = CURRENT_TIMESTAMP
        WHERE user_id = ?
      `).bind(t.user_id).run();return e.json({success:!0,message:"Notifications marked as read"})}catch(t){return console.error("Mark notifications read error:",t),e.json({error:"Failed to mark notifications as read"},500)}});P.get("/quick-replies",A,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT * FROM quick_reply_templates
      WHERE user_id = ? AND is_active = TRUE
      ORDER BY usage_count DESC, template_name
    `).bind(t.user_id).all();if(!s.results||s.results.length===0){const r=[{name:"Project Started",content:"Hi! I've started working on your project. I'll keep you updated on progress throughout the day.",category:"progress"},{name:"Need Clarification",content:"I have a quick question about the project requirements. When would be a good time to discuss this?",category:"general"},{name:"Running Late",content:"I'm running about 30 minutes late due to traffic. I'll be there as soon as possible. Thanks for understanding!",category:"scheduling"},{name:"Project Complete",content:"Your project has been completed! Please take a look and let me know if you have any questions or concerns.",category:"completion"},{name:"Supply Run",content:"I need to pick up some additional supplies for your project. This may add about an hour to the timeline. Is that okay?",category:"progress"}];for(const a of r)await e.env.DB.prepare(`
          INSERT INTO quick_reply_templates (user_id, template_name, template_content, category)
          VALUES (?, ?, ?, ?)
        `).bind(t.user_id,a.name,a.content,a.category).run();const i=await e.env.DB.prepare(`
        SELECT * FROM quick_reply_templates
        WHERE user_id = ? AND is_active = TRUE
        ORDER BY template_name
      `).bind(t.user_id).all();return e.json({success:!0,templates:i.results||[]})}return e.json({success:!0,templates:s.results||[]})}catch(t){return console.error("Get quick replies error:",t),e.json({error:"Failed to get quick reply templates"},500)}});P.get("/portfolios",A,async e=>{try{const t=e.get("user"),{active_only:s=!0}=e.req.query();let r="WHERE worker_id = ?",i=[t.user_id];s==="true"&&(r+=" AND is_active = TRUE");const a=await e.env.DB.prepare(`
      SELECT 
        wp.*,
        (SELECT COUNT(*) FROM portfolio_images WHERE portfolio_id = wp.id) as image_count,
        (SELECT COUNT(*) FROM portfolio_testimonials WHERE portfolio_id = wp.id AND is_approved = TRUE) as testimonial_count,
        (SELECT COUNT(*) FROM portfolio_pricing WHERE portfolio_id = wp.id) as pricing_tier_count,
        (SELECT image_data FROM portfolio_images WHERE portfolio_id = wp.id AND is_primary = TRUE LIMIT 1) as primary_image
      FROM worker_portfolios wp
      ${r}
      ORDER BY wp.is_featured DESC, wp.updated_at DESC
    `).bind(...i).all();return e.json({success:!0,portfolios:a.results||[]})}catch(t){return console.error("Get portfolios error:",t),e.json({error:"Failed to get portfolios"},500)}});P.get("/portfolios/:id",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),r=await e.env.DB.prepare(`
      SELECT * FROM worker_portfolios WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).first();if(!r)return e.json({error:"Portfolio not found"},404);const i=await e.env.DB.prepare(`
      SELECT * FROM portfolio_images WHERE portfolio_id = ? ORDER BY display_order ASC, created_at ASC
    `).bind(s).all(),a=await e.env.DB.prepare(`
      SELECT * FROM portfolio_pricing WHERE portfolio_id = ? ORDER BY display_order ASC, price ASC
    `).bind(s).all(),n=await e.env.DB.prepare(`
      SELECT * FROM portfolio_testimonials WHERE portfolio_id = ? AND is_approved = TRUE ORDER BY rating DESC, created_at DESC
    `).bind(s).all(),o=await e.env.DB.prepare(`
      SELECT * FROM portfolio_service_areas WHERE portfolio_id = ?
    `).bind(s).all(),l=await e.env.DB.prepare(`
      SELECT * FROM portfolio_tags WHERE portfolio_id = ?
    `).bind(s).all(),d=await e.env.DB.prepare(`
      SELECT * FROM portfolio_showcases WHERE portfolio_id = ? ORDER BY display_order ASC, created_at DESC
    `).bind(s).all();return e.json({success:!0,portfolio:{...r,images:i.results||[],pricing:a.results||[],testimonials:n.results||[],service_areas:o.results||[],tags:l.results||[],showcases:d.results||[]}})}catch(t){return console.error("Get portfolio details error:",t),e.json({error:"Failed to get portfolio details"},500)}});P.post("/portfolios",A,async e=>{try{const t=e.get("user"),{title:s,description:r,category_name:i,service_type:a,base_price:n,price_unit:o,is_featured:l=!1}=await e.req.json();if(!s||!a)return e.json({error:"Title and service type are required"},400);const d=await e.env.DB.prepare(`
      INSERT INTO worker_portfolios (
        worker_id, title, description, category_name, service_type,
        base_price, price_unit, is_featured
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(t.user_id,s,r,i,a,n||0,o||"hour",l?1:0).run();return e.json({success:!0,portfolio_id:d.meta.last_row_id,message:"Portfolio created successfully"})}catch(t){return console.error("Create portfolio error:",t),e.json({error:"Failed to create portfolio"},500)}});P.put("/portfolios/:id",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),{title:r,description:i,category_name:a,service_type:n,base_price:o,price_unit:l,is_featured:d,is_active:c}=await e.req.json();return await e.env.DB.prepare(`
      SELECT id FROM worker_portfolios WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).first()?(await e.env.DB.prepare(`
      UPDATE worker_portfolios SET
        title = ?, description = ?, category_name = ?, service_type = ?,
        base_price = ?, price_unit = ?, is_featured = ?, is_active = ?,
        updated_at = CURRENT_TIMESTAMP
      WHERE id = ? AND worker_id = ?
    `).bind(r,i,a,n,o,l,d?1:0,c?1:0,s,t.user_id).run(),e.json({success:!0,message:"Portfolio updated successfully"})):e.json({error:"Portfolio not found or access denied"},404)}catch(t){return console.error("Update portfolio error:",t),e.json({error:"Failed to update portfolio"},500)}});P.post("/portfolios/:id/images",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),{images:r,caption:i}=await e.req.json();if(!r||!Array.isArray(r))return e.json({error:"Images array is required"},400);if(!await e.env.DB.prepare(`
      SELECT id FROM worker_portfolios WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).first())return e.json({error:"Portfolio not found or access denied"},404);const n=[];for(const o of r){if(!o.data||!o.name||!o.type)continue;const l=await e.env.DB.prepare(`
        SELECT COALESCE(MAX(display_order), 0) as max_order FROM portfolio_images WHERE portfolio_id = ?
      `).bind(s).first(),d=await e.env.DB.prepare(`
        INSERT INTO portfolio_images (
          portfolio_id, image_name, image_data, image_type, image_size,
          caption, display_order, is_primary
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
      `).bind(s,o.name,o.data,o.type,o.size||0,i||null,(l.max_order||0)+1,n.length===0?1:0).run();n.push(d.meta.last_row_id)}return e.json({success:!0,image_ids:n,message:`${n.length} image(s) added successfully`})}catch(t){return console.error("Add portfolio images error:",t),e.json({error:"Failed to add images"},500)}});P.delete("/portfolios/:id/images/:imageId",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),r=e.req.param("imageId");return await e.env.DB.prepare(`
      SELECT pi.*, wp.worker_id FROM portfolio_images pi
      JOIN worker_portfolios wp ON pi.portfolio_id = wp.id
      WHERE pi.id = ? AND pi.portfolio_id = ? AND wp.worker_id = ?
    `).bind(r,s,t.user_id).first()?(await e.env.DB.prepare("DELETE FROM portfolio_images WHERE id = ?").bind(r).run(),e.json({success:!0,message:"Image deleted successfully"})):e.json({error:"Image not found or access denied"},404)}catch(t){return console.error("Delete portfolio image error:",t),e.json({error:"Failed to delete image"},500)}});P.post("/portfolios/:id/pricing",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),{tier_name:r,tier_description:i,price:a,price_unit:n,features:o,estimated_duration:l,is_popular:d=!1}=await e.req.json();if(!r||!a||!n)return e.json({error:"Tier name, price, and price unit are required"},400);if(!await e.env.DB.prepare(`
      SELECT id FROM worker_portfolios WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).first())return e.json({error:"Portfolio not found or access denied"},404);const u=await e.env.DB.prepare(`
      SELECT COALESCE(MAX(display_order), 0) as max_order FROM portfolio_pricing WHERE portfolio_id = ?
    `).bind(s).first(),p=await e.env.DB.prepare(`
      INSERT INTO portfolio_pricing (
        portfolio_id, tier_name, tier_description, price, price_unit,
        features, estimated_duration, is_popular, display_order
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(s,r,i,a,n,JSON.stringify(o||[]),l,d?1:0,(u.max_order||0)+1).run();return e.json({success:!0,pricing_id:p.meta.last_row_id,message:"Pricing tier added successfully"})}catch(t){return console.error("Add pricing tier error:",t),e.json({error:"Failed to add pricing tier"},500)}});P.put("/portfolios/:id/pricing/:pricingId",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),r=e.req.param("pricingId"),{tier_name:i,tier_description:a,price:n,price_unit:o,features:l,estimated_duration:d,is_popular:c}=await e.req.json();return await e.env.DB.prepare(`
      SELECT pp.*, wp.worker_id FROM portfolio_pricing pp
      JOIN worker_portfolios wp ON pp.portfolio_id = wp.id
      WHERE pp.id = ? AND pp.portfolio_id = ? AND wp.worker_id = ?
    `).bind(r,s,t.user_id).first()?(await e.env.DB.prepare(`
      UPDATE portfolio_pricing SET
        tier_name = ?, tier_description = ?, price = ?, price_unit = ?,
        features = ?, estimated_duration = ?, is_popular = ?
      WHERE id = ?
    `).bind(i,a,n,o,JSON.stringify(l||[]),d,c?1:0,r).run(),e.json({success:!0,message:"Pricing tier updated successfully"})):e.json({error:"Pricing tier not found or access denied"},404)}catch(t){return console.error("Update pricing tier error:",t),e.json({error:"Failed to update pricing tier"},500)}});P.delete("/portfolios/:id/pricing/:pricingId",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),r=e.req.param("pricingId");return await e.env.DB.prepare(`
      SELECT pp.*, wp.worker_id FROM portfolio_pricing pp
      JOIN worker_portfolios wp ON pp.portfolio_id = wp.id
      WHERE pp.id = ? AND pp.portfolio_id = ? AND wp.worker_id = ?
    `).bind(r,s,t.user_id).first()?(await e.env.DB.prepare("DELETE FROM portfolio_pricing WHERE id = ?").bind(r).run(),e.json({success:!0,message:"Pricing tier deleted successfully"})):e.json({error:"Pricing tier not found or access denied"},404)}catch(t){return console.error("Delete pricing tier error:",t),e.json({error:"Failed to delete pricing tier"},500)}});P.post("/portfolios/:id/showcases",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),{title:r,description:i,before_image:a,after_image:n,project_duration:o,project_cost:l,client_testimonial:d,is_featured:c=!1}=await e.req.json();if(!r||!a||!n)return e.json({error:"Title, before image, and after image are required"},400);if(!await e.env.DB.prepare(`
      SELECT id FROM worker_portfolios WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).first())return e.json({error:"Portfolio not found or access denied"},404);const p=await e.env.DB.prepare(`
      SELECT COALESCE(MAX(display_order), 0) as max_order FROM portfolio_showcases WHERE portfolio_id = ?
    `).bind(s).first(),m=await e.env.DB.prepare(`
      INSERT INTO portfolio_showcases (
        portfolio_id, title, description, before_image_data, after_image_data,
        project_duration, project_cost, client_testimonial, is_featured, display_order
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(s,r,i,a.data,n.data,o,l,d,c?1:0,(p.max_order||0)+1).run();return e.json({success:!0,showcase_id:m.meta.last_row_id,message:"Showcase added successfully"})}catch(t){return console.error("Add showcase error:",t),e.json({error:"Failed to add showcase"},500)}});P.get("/portfolios/:id/testimonials",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),{include_pending:r=!1}=e.req.query();if(!await e.env.DB.prepare(`
      SELECT id FROM worker_portfolios WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).first())return e.json({error:"Portfolio not found or access denied"},404);let a="WHERE portfolio_id = ? AND is_approved = TRUE",n=[s];r==="true"&&(a="WHERE portfolio_id = ?");const o=await e.env.DB.prepare(`
      SELECT * FROM portfolio_testimonials
      ${a}
      ORDER BY rating DESC, created_at DESC
    `).bind(...n).all();return e.json({success:!0,testimonials:o.results||[]})}catch(t){return console.error("Get testimonials error:",t),e.json({error:"Failed to get testimonials"},500)}});P.post("/portfolios/:id/service-areas",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),{areas:r}=await e.req.json();if(!r||!Array.isArray(r))return e.json({error:"Service areas array is required"},400);if(!await e.env.DB.prepare(`
      SELECT id FROM worker_portfolios WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).first())return e.json({error:"Portfolio not found or access denied"},404);await e.env.DB.prepare("DELETE FROM portfolio_service_areas WHERE portfolio_id = ?").bind(s).run();const a=[];for(const n of r)if(n.area_name){const o=await e.env.DB.prepare(`
          INSERT INTO portfolio_service_areas (
            portfolio_id, area_name, postal_code, city, state, travel_fee, max_distance
          ) VALUES (?, ?, ?, ?, ?, ?, ?)
        `).bind(s,n.area_name,n.postal_code||null,n.city||null,n.state||null,n.travel_fee||0,n.max_distance||null).run();a.push(o.meta.last_row_id)}return e.json({success:!0,area_ids:a,message:`${a.length} service area(s) added successfully`})}catch(t){return console.error("Add service areas error:",t),e.json({error:"Failed to add service areas"},500)}});P.post("/portfolios/:id/tags",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),{tags:r}=await e.req.json();if(!r||!Array.isArray(r))return e.json({error:"Tags array is required"},400);if(!await e.env.DB.prepare(`
      SELECT id FROM worker_portfolios WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).first())return e.json({error:"Portfolio not found or access denied"},404);await e.env.DB.prepare("DELETE FROM portfolio_tags WHERE portfolio_id = ?").bind(s).run();const a=[];for(const n of r)if(n.trim()){const o=await e.env.DB.prepare(`
          INSERT INTO portfolio_tags (portfolio_id, tag_name) VALUES (?, ?)
        `).bind(s,n.trim()).run();a.push(o.meta.last_row_id)}return e.json({success:!0,tag_ids:a,message:`${a.length} tag(s) updated successfully`})}catch(t){return console.error("Update tags error:",t),e.json({error:"Failed to update tags"},500)}});P.get("/portfolios/:id/stats",A,async e=>{try{const t=e.get("user"),s=e.req.param("id"),{period:r="30"}=e.req.query();if(!await e.env.DB.prepare(`
      SELECT id FROM worker_portfolios WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).first())return e.json({error:"Portfolio not found or access denied"},404);const a=await e.env.DB.prepare(`
      SELECT 
        SUM(views) as total_views,
        SUM(inquiries) as total_inquiries,
        SUM(bookings) as total_bookings,
        SUM(revenue) as total_revenue
      FROM portfolio_stats
      WHERE portfolio_id = ? AND stat_date >= date('now', '-${r} days')
    `).bind(s).first(),n=await e.env.DB.prepare(`
      SELECT * FROM portfolio_stats
      WHERE portfolio_id = ? AND stat_date >= date('now', '-${r} days')
      ORDER BY stat_date DESC
    `).bind(s).all();return e.json({success:!0,stats:{total_views:a.total_views||0,total_inquiries:a.total_inquiries||0,total_bookings:a.total_bookings||0,total_revenue:a.total_revenue||0,daily_breakdown:n.results||[]}})}catch(t){return console.error("Get portfolio stats error:",t),e.json({error:"Failed to get portfolio statistics"},500)}});P.delete("/portfolios/:id",A,async e=>{try{const t=e.get("user"),s=e.req.param("id");return await e.env.DB.prepare(`
      SELECT id FROM worker_portfolios WHERE id = ? AND worker_id = ?
    `).bind(s,t.user_id).first()?(await e.env.DB.prepare("DELETE FROM portfolio_images WHERE portfolio_id = ?").bind(s).run(),await e.env.DB.prepare("DELETE FROM portfolio_pricing WHERE portfolio_id = ?").bind(s).run(),await e.env.DB.prepare("DELETE FROM portfolio_service_areas WHERE portfolio_id = ?").bind(s).run(),await e.env.DB.prepare("DELETE FROM portfolio_tags WHERE portfolio_id = ?").bind(s).run(),await e.env.DB.prepare("DELETE FROM portfolio_showcases WHERE portfolio_id = ?").bind(s).run(),await e.env.DB.prepare("DELETE FROM portfolio_stats WHERE portfolio_id = ?").bind(s).run(),await e.env.DB.prepare("DELETE FROM worker_portfolios WHERE id = ?").bind(s).run(),e.json({success:!0,message:"Portfolio and all related data deleted successfully"})):e.json({error:"Portfolio not found or access denied"},404)}catch(t){return console.error("Delete portfolio error:",t),e.json({error:"Failed to delete portfolio"},500)}});P.get("/compliance",A,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT * FROM worker_compliance 
      WHERE user_id = ?
    `).bind(t.user_id).first();return e.json({success:!0,compliance:s||null})}catch(t){return console.error("Get compliance error:",t),e.json({error:"Failed to retrieve compliance information"},500)}});P.post("/compliance/update",A,async e=>{try{const t=e.get("user"),s=await e.req.json(),r=[];s.wsib_number&&!/^\d{8}-\d$/.test(s.wsib_number)&&r.push("WSIB number must be in format 12345678-9"),s.insurance_policy_number&&!s.insurance_provider&&r.push("Insurance provider is required when policy number is provided"),s.license_number&&!s.license_type&&r.push("License type is required when license number is provided");const i=new Date().toISOString().split("T")[0];return s.wsib_valid_until&&s.wsib_valid_until<=i&&r.push("WSIB expiration date must be in the future"),s.insurance_valid_until&&s.insurance_valid_until<=i&&r.push("Insurance expiration date must be in the future"),s.license_valid_until&&s.license_valid_until<=i&&r.push("License expiration date must be in the future"),r.length>0?e.json({error:r.join(", ")},400):(await e.env.DB.prepare(`
      SELECT id FROM worker_compliance WHERE user_id = ?
    `).bind(t.user_id).first()?await e.env.DB.prepare(`
        UPDATE worker_compliance SET
          wsib_number = ?,
          wsib_valid_until = ?,
          insurance_provider = ?,
          insurance_policy_number = ?,
          insurance_valid_until = ?,
          license_type = ?,
          license_number = ?,
          license_valid_until = ?,
          compliance_status = 'pending',
          updated_at = CURRENT_TIMESTAMP
        WHERE user_id = ?
      `).bind(s.wsib_number||null,s.wsib_valid_until||null,s.insurance_provider||null,s.insurance_policy_number||null,s.insurance_valid_until||null,s.license_type||null,s.license_number||null,s.license_valid_until||null,t.user_id).run():await e.env.DB.prepare(`
        INSERT INTO worker_compliance (
          user_id, wsib_number, wsib_valid_until, insurance_provider,
          insurance_policy_number, insurance_valid_until, license_type,
          license_number, license_valid_until, compliance_status
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 'pending')
      `).bind(t.user_id,s.wsib_number||null,s.wsib_valid_until||null,s.insurance_provider||null,s.insurance_policy_number||null,s.insurance_valid_until||null,s.license_type||null,s.license_number||null,s.license_valid_until||null).run(),e.json({success:!0,message:"Compliance information updated successfully. It will be reviewed by our team within 24-48 hours."}))}catch(t){return console.error("Update compliance error:",t),e.json({error:"Failed to update compliance information"},500)}});P.get("/compliance/requirements",A,async e=>{try{const t=e.req.query("service_type"),s=e.req.query("province"),r={electrical:{ON:{license:"ECRA/ESA License required",insurance:"Minimum $2M liability insurance",wsib:"WSIB coverage mandatory",additional:"Must be registered with Electrical Safety Authority (ESA)"},BC:{license:"FSR (Field Safety Representative) required for electrical work",insurance:"Minimum $1M liability insurance",wsib:"WorkSafeBC coverage required"}},plumbing:{ON:{license:"Ontario College of Trades certification",insurance:"Minimum $2M liability insurance",wsib:"WSIB coverage mandatory"},BC:{license:"Industry Training Authority (ITA) certification",insurance:"Minimum $1M liability insurance",wsib:"WorkSafeBC coverage required"}},general:{ON:{insurance:"Minimum $1M liability insurance recommended",wsib:"WSIB coverage required for employees"},BC:{insurance:"Minimum $1M liability insurance recommended",wsib:"WorkSafeBC coverage required for employees"}}},i=r[t]||r.general,a=i[s]||i.ON;return e.json({success:!0,requirements:a})}catch(t){return console.error("Get requirements error:",t),e.json({error:"Failed to retrieve compliance requirements"},500)}});function T(e,t,s){function r(o,l){var d;Object.defineProperty(o,"_zod",{value:o._zod??{},enumerable:!1}),(d=o._zod).traits??(d.traits=new Set),o._zod.traits.add(e),t(o,l);for(const c in n.prototype)c in o||Object.defineProperty(o,c,{value:n.prototype[c].bind(o)});o._zod.constr=n,o._zod.def=l}const i=(s==null?void 0:s.Parent)??Object;class a extends i{}Object.defineProperty(a,"name",{value:e});function n(o){var l;const d=s!=null&&s.Parent?new a:this;r(d,o),(l=d._zod).deferred??(l.deferred=[]);for(const c of d._zod.deferred)c();return d}return Object.defineProperty(n,"init",{value:r}),Object.defineProperty(n,Symbol.hasInstance,{value:o=>{var l,d;return s!=null&&s.Parent&&o instanceof s.Parent?!0:(d=(l=o==null?void 0:o._zod)==null?void 0:l.traits)==null?void 0:d.has(e)}}),Object.defineProperty(n,"name",{value:e}),n}class Ss extends Error{constructor(){super("Encountered Promise during synchronous parse. Use .parseAsync() instead.")}}class md extends Error{constructor(t){super(`Encountered unidirectional transform during encode: ${t}`),this.name="ZodEncodeError"}}const fd={};function ts(e){return fd}function vu(e){const t=Object.values(e).filter(r=>typeof r=="number");return Object.entries(e).filter(([r,i])=>t.indexOf(+r)===-1).map(([r,i])=>i)}function Ja(e,t){return typeof t=="bigint"?t.toString():t}function rn(e){return{get value(){{const t=e();return Object.defineProperty(this,"value",{value:t}),t}}}}function an(e){return e==null}function nn(e){const t=e.startsWith("^")?1:0,s=e.endsWith("$")?e.length-1:e.length;return e.slice(t,s)}function hu(e,t){const s=(e.toString().split(".")[1]||"").length,r=t.toString();let i=(r.split(".")[1]||"").length;if(i===0&&/\d?e-\d?/.test(r)){const l=r.match(/\d?e-(\d?)/);l!=null&&l[1]&&(i=Number.parseInt(l[1]))}const a=s>i?s:i,n=Number.parseInt(e.toFixed(a).replace(".","")),o=Number.parseInt(t.toFixed(a).replace(".",""));return n%o/10**a}const qn=Symbol("evaluating");function se(e,t,s){let r;Object.defineProperty(e,t,{get(){if(r!==qn)return r===void 0&&(r=qn,r=s()),r},set(i){Object.defineProperty(e,t,{value:i})},configurable:!0})}function bu(e){return Object.create(Object.getPrototypeOf(e),Object.getOwnPropertyDescriptors(e))}function Lt(e,t,s){Object.defineProperty(e,t,{value:s,writable:!0,enumerable:!0,configurable:!0})}function Os(...e){const t={};for(const s of e){const r=Object.getOwnPropertyDescriptors(s);Object.assign(t,r)}return Object.defineProperties({},t)}function Wn(e){return JSON.stringify(e)}const gd="captureStackTrace"in Error?Error.captureStackTrace:(...e)=>{};function si(e){return typeof e=="object"&&e!==null&&!Array.isArray(e)}const yu=rn(()=>{var e;if(typeof navigator<"u"&&((e=navigator==null?void 0:navigator.userAgent)!=null&&e.includes("Cloudflare")))return!1;try{const t=Function;return new t(""),!0}catch{return!1}});function cr(e){if(si(e)===!1)return!1;const t=e.constructor;if(t===void 0)return!0;const s=t.prototype;return!(si(s)===!1||Object.prototype.hasOwnProperty.call(s,"isPrototypeOf")===!1)}function vd(e){return cr(e)?{...e}:e}const xu=new Set(["string","number","symbol"]);function di(e){return e.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function $t(e,t,s){const r=new e._zod.constr(t??e._zod.def);return(!t||s!=null&&s.parent)&&(r._zod.parent=e),r}function L(e){const t=e;if(!t)return{};if(typeof t=="string")return{error:()=>t};if((t==null?void 0:t.message)!==void 0){if((t==null?void 0:t.error)!==void 0)throw new Error("Cannot specify both `message` and `error` params");t.error=t.message}return delete t.message,typeof t.error=="string"?{...t,error:()=>t.error}:t}function wu(e){return Object.keys(e).filter(t=>e[t]._zod.optin==="optional"&&e[t]._zod.optout==="optional")}const _u={safeint:[Number.MIN_SAFE_INTEGER,Number.MAX_SAFE_INTEGER],int32:[-2147483648,2147483647],uint32:[0,4294967295],float32:[-34028234663852886e22,34028234663852886e22],float64:[-Number.MAX_VALUE,Number.MAX_VALUE]};function Eu(e,t){const s=e._zod.def,r=Os(e._zod.def,{get shape(){const i={};for(const a in t){if(!(a in s.shape))throw new Error(`Unrecognized key: "${a}"`);t[a]&&(i[a]=s.shape[a])}return Lt(this,"shape",i),i},checks:[]});return $t(e,r)}function ku(e,t){const s=e._zod.def,r=Os(e._zod.def,{get shape(){const i={...e._zod.def.shape};for(const a in t){if(!(a in s.shape))throw new Error(`Unrecognized key: "${a}"`);t[a]&&delete i[a]}return Lt(this,"shape",i),i},checks:[]});return $t(e,r)}function Tu(e,t){if(!cr(t))throw new Error("Invalid input to extend: expected a plain object");const s=e._zod.def.checks;if(s&&s.length>0)throw new Error("Object schemas containing refinements cannot be extended. Use `.safeExtend()` instead.");const i=Os(e._zod.def,{get shape(){const a={...e._zod.def.shape,...t};return Lt(this,"shape",a),a},checks:[]});return $t(e,i)}function Su(e,t){if(!cr(t))throw new Error("Invalid input to safeExtend: expected a plain object");const s={...e._zod.def,get shape(){const r={...e._zod.def.shape,...t};return Lt(this,"shape",r),r},checks:e._zod.def.checks};return $t(e,s)}function Ru(e,t){const s=Os(e._zod.def,{get shape(){const r={...e._zod.def.shape,...t._zod.def.shape};return Lt(this,"shape",r),r},get catchall(){return t._zod.def.catchall},checks:[]});return $t(e,s)}function Cu(e,t,s){const r=Os(t._zod.def,{get shape(){const i=t._zod.def.shape,a={...i};if(s)for(const n in s){if(!(n in i))throw new Error(`Unrecognized key: "${n}"`);s[n]&&(a[n]=e?new e({type:"optional",innerType:i[n]}):i[n])}else for(const n in i)a[n]=e?new e({type:"optional",innerType:i[n]}):i[n];return Lt(this,"shape",a),a},checks:[]});return $t(t,r)}function Du(e,t,s){const r=Os(t._zod.def,{get shape(){const i=t._zod.def.shape,a={...i};if(s)for(const n in s){if(!(n in a))throw new Error(`Unrecognized key: "${n}"`);s[n]&&(a[n]=new e({type:"nonoptional",innerType:i[n]}))}else for(const n in i)a[n]=new e({type:"nonoptional",innerType:i[n]});return Lt(this,"shape",a),a},checks:[]});return $t(t,r)}function Ts(e,t=0){var s;if(e.aborted===!0)return!0;for(let r=t;r<e.issues.length;r++)if(((s=e.issues[r])==null?void 0:s.continue)!==!0)return!0;return!1}function hd(e,t){return t.map(s=>{var r;return(r=s).path??(r.path=[]),s.path.unshift(e),s})}function kr(e){return typeof e=="string"?e:e==null?void 0:e.message}function ss(e,t,s){var i,a,n,o,l,d;const r={...e,path:e.path??[]};if(!e.message){const c=kr((n=(a=(i=e.inst)==null?void 0:i._zod.def)==null?void 0:a.error)==null?void 0:n.call(a,e))??kr((o=t==null?void 0:t.error)==null?void 0:o.call(t,e))??kr((l=s.customError)==null?void 0:l.call(s,e))??kr((d=s.localeError)==null?void 0:d.call(s,e))??"Invalid input";r.message=c}return delete r.inst,delete r.continue,t!=null&&t.reportInput||delete r.input,r}function on(e){return Array.isArray(e)?"array":typeof e=="string"?"string":"unknown"}function ur(...e){const[t,s,r]=e;return typeof t=="string"?{message:t,code:"custom",input:s,inst:r}:{...t}}const bd=(e,t)=>{e.name="$ZodError",Object.defineProperty(e,"_zod",{value:e._zod,enumerable:!1}),Object.defineProperty(e,"issues",{value:t,enumerable:!1}),e.message=JSON.stringify(t,Ja,2),Object.defineProperty(e,"toString",{value:()=>e.message,enumerable:!1})},yd=T("$ZodError",bd),xd=T("$ZodError",bd,{Parent:Error});function Nu(e,t=s=>s.message){const s={},r=[];for(const i of e.issues)i.path.length>0?(s[i.path[0]]=s[i.path[0]]||[],s[i.path[0]].push(t(i))):r.push(t(i));return{formErrors:r,fieldErrors:s}}function Pu(e,t){const s=t||function(a){return a.message},r={_errors:[]},i=a=>{for(const n of a.issues)if(n.code==="invalid_union"&&n.errors.length)n.errors.map(o=>i({issues:o}));else if(n.code==="invalid_key")i({issues:n.issues});else if(n.code==="invalid_element")i({issues:n.issues});else if(n.path.length===0)r._errors.push(s(n));else{let o=r,l=0;for(;l<n.path.length;){const d=n.path[l];l===n.path.length-1?(o[d]=o[d]||{_errors:[]},o[d]._errors.push(s(n))):o[d]=o[d]||{_errors:[]},o=o[d],l++}}};return i(e),r}const ln=e=>(t,s,r,i)=>{const a=r?Object.assign(r,{async:!1}):{async:!1},n=t._zod.run({value:s,issues:[]},a);if(n instanceof Promise)throw new Ss;if(n.issues.length){const o=new((i==null?void 0:i.Err)??e)(n.issues.map(l=>ss(l,a,ts())));throw gd(o,i==null?void 0:i.callee),o}return n.value},dn=e=>async(t,s,r,i)=>{const a=r?Object.assign(r,{async:!0}):{async:!0};let n=t._zod.run({value:s,issues:[]},a);if(n instanceof Promise&&(n=await n),n.issues.length){const o=new((i==null?void 0:i.Err)??e)(n.issues.map(l=>ss(l,a,ts())));throw gd(o,i==null?void 0:i.callee),o}return n.value},ci=e=>(t,s,r)=>{const i=r?{...r,async:!1}:{async:!1},a=t._zod.run({value:s,issues:[]},i);if(a instanceof Promise)throw new Ss;return a.issues.length?{success:!1,error:new(e??yd)(a.issues.map(n=>ss(n,i,ts())))}:{success:!0,data:a.value}},Au=ci(xd),ui=e=>async(t,s,r)=>{const i=r?Object.assign(r,{async:!0}):{async:!0};let a=t._zod.run({value:s,issues:[]},i);return a instanceof Promise&&(a=await a),a.issues.length?{success:!1,error:new e(a.issues.map(n=>ss(n,i,ts())))}:{success:!0,data:a.value}},Ou=ui(xd),ju=e=>(t,s,r)=>{const i=r?Object.assign(r,{direction:"backward"}):{direction:"backward"};return ln(e)(t,s,i)},Iu=e=>(t,s,r)=>ln(e)(t,s,r),Mu=e=>async(t,s,r)=>{const i=r?Object.assign(r,{direction:"backward"}):{direction:"backward"};return dn(e)(t,s,i)},Lu=e=>async(t,s,r)=>dn(e)(t,s,r),$u=e=>(t,s,r)=>{const i=r?Object.assign(r,{direction:"backward"}):{direction:"backward"};return ci(e)(t,s,i)},Fu=e=>(t,s,r)=>ci(e)(t,s,r),Bu=e=>async(t,s,r)=>{const i=r?Object.assign(r,{direction:"backward"}):{direction:"backward"};return ui(e)(t,s,i)},Uu=e=>async(t,s,r)=>ui(e)(t,s,r),Hu=/^[cC][^\s-]{8,}$/,qu=/^[0-9a-z]+$/,Wu=/^[0-9A-HJKMNP-TV-Za-hjkmnp-tv-z]{26}$/,Gu=/^[0-9a-vA-V]{20}$/,zu=/^[A-Za-z0-9]{27}$/,Ju=/^[a-zA-Z0-9_-]{21}$/,Vu=/^P(?:(\d+W)|(?!.*W)(?=\d|T\d)(\d+Y)?(\d+M)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+([.,]\d+)?S)?)?)$/,Yu=/^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})$/,Gn=e=>e?new RegExp(`^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-${e}[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12})$`):/^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/,Ku=/^(?!\.)(?!.*\.\.)([A-Za-z0-9_'+\-\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\-]*\.)+[A-Za-z]{2,}$/,Zu="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";function Qu(){return new RegExp(Zu,"u")}const Xu=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,ep=/^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})$/,tp=/^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/([0-9]|[1-2][0-9]|3[0-2])$/,sp=/^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,rp=/^$|^(?:[0-9a-zA-Z+/]{4})*(?:(?:[0-9a-zA-Z+/]{2}==)|(?:[0-9a-zA-Z+/]{3}=))?$/,wd=/^[A-Za-z0-9_-]*$/,ip=/^(?=.{1,253}\.?$)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[-0-9a-zA-Z]{0,61}[0-9a-zA-Z])?)*\.?$/,ap=/^\+(?:[0-9]){6,14}[0-9]$/,_d="(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))",np=new RegExp(`^${_d}$`);function Ed(e){const t="(?:[01]\\d|2[0-3]):[0-5]\\d";return typeof e.precision=="number"?e.precision===-1?`${t}`:e.precision===0?`${t}:[0-5]\\d`:`${t}:[0-5]\\d\\.\\d{${e.precision}}`:`${t}(?::[0-5]\\d(?:\\.\\d+)?)?`}function op(e){return new RegExp(`^${Ed(e)}$`)}function lp(e){const t=Ed({precision:e.precision}),s=["Z"];e.local&&s.push(""),e.offset&&s.push("([+-](?:[01]\\d|2[0-3]):[0-5]\\d)");const r=`${t}(?:${s.join("|")})`;return new RegExp(`^${_d}T(?:${r})$`)}const dp=e=>{const t=e?`[\\s\\S]{${(e==null?void 0:e.minimum)??0},${(e==null?void 0:e.maximum)??""}}`:"[\\s\\S]*";return new RegExp(`^${t}$`)},cp=/^\d+$/,up=/^-?\d+(?:\.\d+)?/i,pp=/^[^A-Z]*$/,mp=/^[^a-z]*$/,Ne=T("$ZodCheck",(e,t)=>{var s;e._zod??(e._zod={}),e._zod.def=t,(s=e._zod).onattach??(s.onattach=[])}),kd={number:"number",bigint:"bigint",object:"date"},Td=T("$ZodCheckLessThan",(e,t)=>{Ne.init(e,t);const s=kd[typeof t.value];e._zod.onattach.push(r=>{const i=r._zod.bag,a=(t.inclusive?i.maximum:i.exclusiveMaximum)??Number.POSITIVE_INFINITY;t.value<a&&(t.inclusive?i.maximum=t.value:i.exclusiveMaximum=t.value)}),e._zod.check=r=>{(t.inclusive?r.value<=t.value:r.value<t.value)||r.issues.push({origin:s,code:"too_big",maximum:t.value,input:r.value,inclusive:t.inclusive,inst:e,continue:!t.abort})}}),Sd=T("$ZodCheckGreaterThan",(e,t)=>{Ne.init(e,t);const s=kd[typeof t.value];e._zod.onattach.push(r=>{const i=r._zod.bag,a=(t.inclusive?i.minimum:i.exclusiveMinimum)??Number.NEGATIVE_INFINITY;t.value>a&&(t.inclusive?i.minimum=t.value:i.exclusiveMinimum=t.value)}),e._zod.check=r=>{(t.inclusive?r.value>=t.value:r.value>t.value)||r.issues.push({origin:s,code:"too_small",minimum:t.value,input:r.value,inclusive:t.inclusive,inst:e,continue:!t.abort})}}),fp=T("$ZodCheckMultipleOf",(e,t)=>{Ne.init(e,t),e._zod.onattach.push(s=>{var r;(r=s._zod.bag).multipleOf??(r.multipleOf=t.value)}),e._zod.check=s=>{if(typeof s.value!=typeof t.value)throw new Error("Cannot mix number and bigint in multiple_of check.");(typeof s.value=="bigint"?s.value%t.value===BigInt(0):hu(s.value,t.value)===0)||s.issues.push({origin:typeof s.value,code:"not_multiple_of",divisor:t.value,input:s.value,inst:e,continue:!t.abort})}}),gp=T("$ZodCheckNumberFormat",(e,t)=>{var n;Ne.init(e,t),t.format=t.format||"float64";const s=(n=t.format)==null?void 0:n.includes("int"),r=s?"int":"number",[i,a]=_u[t.format];e._zod.onattach.push(o=>{const l=o._zod.bag;l.format=t.format,l.minimum=i,l.maximum=a,s&&(l.pattern=cp)}),e._zod.check=o=>{const l=o.value;if(s){if(!Number.isInteger(l)){o.issues.push({expected:r,format:t.format,code:"invalid_type",continue:!1,input:l,inst:e});return}if(!Number.isSafeInteger(l)){l>0?o.issues.push({input:l,code:"too_big",maximum:Number.MAX_SAFE_INTEGER,note:"Integers must be within the safe integer range.",inst:e,origin:r,continue:!t.abort}):o.issues.push({input:l,code:"too_small",minimum:Number.MIN_SAFE_INTEGER,note:"Integers must be within the safe integer range.",inst:e,origin:r,continue:!t.abort});return}}l<i&&o.issues.push({origin:"number",input:l,code:"too_small",minimum:i,inclusive:!0,inst:e,continue:!t.abort}),l>a&&o.issues.push({origin:"number",input:l,code:"too_big",maximum:a,inst:e})}}),vp=T("$ZodCheckMaxLength",(e,t)=>{var s;Ne.init(e,t),(s=e._zod.def).when??(s.when=r=>{const i=r.value;return!an(i)&&i.length!==void 0}),e._zod.onattach.push(r=>{const i=r._zod.bag.maximum??Number.POSITIVE_INFINITY;t.maximum<i&&(r._zod.bag.maximum=t.maximum)}),e._zod.check=r=>{const i=r.value;if(i.length<=t.maximum)return;const n=on(i);r.issues.push({origin:n,code:"too_big",maximum:t.maximum,inclusive:!0,input:i,inst:e,continue:!t.abort})}}),hp=T("$ZodCheckMinLength",(e,t)=>{var s;Ne.init(e,t),(s=e._zod.def).when??(s.when=r=>{const i=r.value;return!an(i)&&i.length!==void 0}),e._zod.onattach.push(r=>{const i=r._zod.bag.minimum??Number.NEGATIVE_INFINITY;t.minimum>i&&(r._zod.bag.minimum=t.minimum)}),e._zod.check=r=>{const i=r.value;if(i.length>=t.minimum)return;const n=on(i);r.issues.push({origin:n,code:"too_small",minimum:t.minimum,inclusive:!0,input:i,inst:e,continue:!t.abort})}}),bp=T("$ZodCheckLengthEquals",(e,t)=>{var s;Ne.init(e,t),(s=e._zod.def).when??(s.when=r=>{const i=r.value;return!an(i)&&i.length!==void 0}),e._zod.onattach.push(r=>{const i=r._zod.bag;i.minimum=t.length,i.maximum=t.length,i.length=t.length}),e._zod.check=r=>{const i=r.value,a=i.length;if(a===t.length)return;const n=on(i),o=a>t.length;r.issues.push({origin:n,...o?{code:"too_big",maximum:t.length}:{code:"too_small",minimum:t.length},inclusive:!0,exact:!0,input:r.value,inst:e,continue:!t.abort})}}),pi=T("$ZodCheckStringFormat",(e,t)=>{var s,r;Ne.init(e,t),e._zod.onattach.push(i=>{const a=i._zod.bag;a.format=t.format,t.pattern&&(a.patterns??(a.patterns=new Set),a.patterns.add(t.pattern))}),t.pattern?(s=e._zod).check??(s.check=i=>{t.pattern.lastIndex=0,!t.pattern.test(i.value)&&i.issues.push({origin:"string",code:"invalid_format",format:t.format,input:i.value,...t.pattern?{pattern:t.pattern.toString()}:{},inst:e,continue:!t.abort})}):(r=e._zod).check??(r.check=()=>{})}),yp=T("$ZodCheckRegex",(e,t)=>{pi.init(e,t),e._zod.check=s=>{t.pattern.lastIndex=0,!t.pattern.test(s.value)&&s.issues.push({origin:"string",code:"invalid_format",format:"regex",input:s.value,pattern:t.pattern.toString(),inst:e,continue:!t.abort})}}),xp=T("$ZodCheckLowerCase",(e,t)=>{t.pattern??(t.pattern=pp),pi.init(e,t)}),wp=T("$ZodCheckUpperCase",(e,t)=>{t.pattern??(t.pattern=mp),pi.init(e,t)}),_p=T("$ZodCheckIncludes",(e,t)=>{Ne.init(e,t);const s=di(t.includes),r=new RegExp(typeof t.position=="number"?`^.{${t.position}}${s}`:s);t.pattern=r,e._zod.onattach.push(i=>{const a=i._zod.bag;a.patterns??(a.patterns=new Set),a.patterns.add(r)}),e._zod.check=i=>{i.value.includes(t.includes,t.position)||i.issues.push({origin:"string",code:"invalid_format",format:"includes",includes:t.includes,input:i.value,inst:e,continue:!t.abort})}}),Ep=T("$ZodCheckStartsWith",(e,t)=>{Ne.init(e,t);const s=new RegExp(`^${di(t.prefix)}.*`);t.pattern??(t.pattern=s),e._zod.onattach.push(r=>{const i=r._zod.bag;i.patterns??(i.patterns=new Set),i.patterns.add(s)}),e._zod.check=r=>{r.value.startsWith(t.prefix)||r.issues.push({origin:"string",code:"invalid_format",format:"starts_with",prefix:t.prefix,input:r.value,inst:e,continue:!t.abort})}}),kp=T("$ZodCheckEndsWith",(e,t)=>{Ne.init(e,t);const s=new RegExp(`.*${di(t.suffix)}$`);t.pattern??(t.pattern=s),e._zod.onattach.push(r=>{const i=r._zod.bag;i.patterns??(i.patterns=new Set),i.patterns.add(s)}),e._zod.check=r=>{r.value.endsWith(t.suffix)||r.issues.push({origin:"string",code:"invalid_format",format:"ends_with",suffix:t.suffix,input:r.value,inst:e,continue:!t.abort})}}),Tp=T("$ZodCheckOverwrite",(e,t)=>{Ne.init(e,t),e._zod.check=s=>{s.value=t.tx(s.value)}});class Sp{constructor(t=[]){this.content=[],this.indent=0,this&&(this.args=t)}indented(t){this.indent+=1,t(this),this.indent-=1}write(t){if(typeof t=="function"){t(this,{execution:"sync"}),t(this,{execution:"async"});return}const r=t.split(`
`).filter(n=>n),i=Math.min(...r.map(n=>n.length-n.trimStart().length)),a=r.map(n=>n.slice(i)).map(n=>" ".repeat(this.indent*2)+n);for(const n of a)this.content.push(n)}compile(){const t=Function,s=this==null?void 0:this.args,i=[...((this==null?void 0:this.content)??[""]).map(a=>`  ${a}`)];return new t(...s,i.join(`
`))}}const Rp={major:4,minor:1,patch:1},me=T("$ZodType",(e,t)=>{var i;var s;e??(e={}),e._zod.def=t,e._zod.bag=e._zod.bag||{},e._zod.version=Rp;const r=[...e._zod.def.checks??[]];e._zod.traits.has("$ZodCheck")&&r.unshift(e);for(const a of r)for(const n of a._zod.onattach)n(e);if(r.length===0)(s=e._zod).deferred??(s.deferred=[]),(i=e._zod.deferred)==null||i.push(()=>{e._zod.run=e._zod.parse});else{const a=(o,l,d)=>{let c=Ts(o),u;for(const p of l){if(p._zod.def.when){if(!p._zod.def.when(o))continue}else if(c)continue;const m=o.issues.length,b=p._zod.check(o);if(b instanceof Promise&&(d==null?void 0:d.async)===!1)throw new Ss;if(u||b instanceof Promise)u=(u??Promise.resolve()).then(async()=>{await b,o.issues.length!==m&&(c||(c=Ts(o,m)))});else{if(o.issues.length===m)continue;c||(c=Ts(o,m))}}return u?u.then(()=>o):o},n=(o,l,d)=>{if(Ts(o))return o.aborted=!0,o;const c=a(l,r,d);if(c instanceof Promise){if(d.async===!1)throw new Ss;return c.then(u=>e._zod.parse(u,d))}return e._zod.parse(c,d)};e._zod.run=(o,l)=>{if(l.skipChecks)return e._zod.parse(o,l);if(l.direction==="backward"){const c=e._zod.parse({value:o.value,issues:[]},{...l,skipChecks:!0});return c instanceof Promise?c.then(u=>n(u,o,l)):n(c,o,l)}const d=e._zod.parse(o,l);if(d instanceof Promise){if(l.async===!1)throw new Ss;return d.then(c=>a(c,r,l))}return a(d,r,l)}}e["~standard"]={validate:a=>{var n;try{const o=Au(e,a);return o.success?{value:o.data}:{issues:(n=o.error)==null?void 0:n.issues}}catch{return Ou(e,a).then(l=>{var d;return l.success?{value:l.data}:{issues:(d=l.error)==null?void 0:d.issues}})}},vendor:"zod",version:1}}),cn=T("$ZodString",(e,t)=>{var s;me.init(e,t),e._zod.pattern=[...((s=e==null?void 0:e._zod.bag)==null?void 0:s.patterns)??[]].pop()??dp(e._zod.bag),e._zod.parse=(r,i)=>{if(t.coerce)try{r.value=String(r.value)}catch{}return typeof r.value=="string"||r.issues.push({expected:"string",code:"invalid_type",input:r.value,inst:e}),r}}),ne=T("$ZodStringFormat",(e,t)=>{pi.init(e,t),cn.init(e,t)}),Cp=T("$ZodGUID",(e,t)=>{t.pattern??(t.pattern=Yu),ne.init(e,t)}),Dp=T("$ZodUUID",(e,t)=>{if(t.version){const r={v1:1,v2:2,v3:3,v4:4,v5:5,v6:6,v7:7,v8:8}[t.version];if(r===void 0)throw new Error(`Invalid UUID version: "${t.version}"`);t.pattern??(t.pattern=Gn(r))}else t.pattern??(t.pattern=Gn());ne.init(e,t)}),Np=T("$ZodEmail",(e,t)=>{t.pattern??(t.pattern=Ku),ne.init(e,t)}),Pp=T("$ZodURL",(e,t)=>{ne.init(e,t),e._zod.check=s=>{try{const r=s.value.trim(),i=new URL(r);t.hostname&&(t.hostname.lastIndex=0,t.hostname.test(i.hostname)||s.issues.push({code:"invalid_format",format:"url",note:"Invalid hostname",pattern:ip.source,input:s.value,inst:e,continue:!t.abort})),t.protocol&&(t.protocol.lastIndex=0,t.protocol.test(i.protocol.endsWith(":")?i.protocol.slice(0,-1):i.protocol)||s.issues.push({code:"invalid_format",format:"url",note:"Invalid protocol",pattern:t.protocol.source,input:s.value,inst:e,continue:!t.abort})),t.normalize?s.value=i.href:s.value=r;return}catch{s.issues.push({code:"invalid_format",format:"url",input:s.value,inst:e,continue:!t.abort})}}}),Ap=T("$ZodEmoji",(e,t)=>{t.pattern??(t.pattern=Qu()),ne.init(e,t)}),Op=T("$ZodNanoID",(e,t)=>{t.pattern??(t.pattern=Ju),ne.init(e,t)}),jp=T("$ZodCUID",(e,t)=>{t.pattern??(t.pattern=Hu),ne.init(e,t)}),Ip=T("$ZodCUID2",(e,t)=>{t.pattern??(t.pattern=qu),ne.init(e,t)}),Mp=T("$ZodULID",(e,t)=>{t.pattern??(t.pattern=Wu),ne.init(e,t)}),Lp=T("$ZodXID",(e,t)=>{t.pattern??(t.pattern=Gu),ne.init(e,t)}),$p=T("$ZodKSUID",(e,t)=>{t.pattern??(t.pattern=zu),ne.init(e,t)}),Fp=T("$ZodISODateTime",(e,t)=>{t.pattern??(t.pattern=lp(t)),ne.init(e,t)}),Bp=T("$ZodISODate",(e,t)=>{t.pattern??(t.pattern=np),ne.init(e,t)}),Up=T("$ZodISOTime",(e,t)=>{t.pattern??(t.pattern=op(t)),ne.init(e,t)}),Hp=T("$ZodISODuration",(e,t)=>{t.pattern??(t.pattern=Vu),ne.init(e,t)}),qp=T("$ZodIPv4",(e,t)=>{t.pattern??(t.pattern=Xu),ne.init(e,t),e._zod.onattach.push(s=>{const r=s._zod.bag;r.format="ipv4"})}),Wp=T("$ZodIPv6",(e,t)=>{t.pattern??(t.pattern=ep),ne.init(e,t),e._zod.onattach.push(s=>{const r=s._zod.bag;r.format="ipv6"}),e._zod.check=s=>{try{new URL(`http://[${s.value}]`)}catch{s.issues.push({code:"invalid_format",format:"ipv6",input:s.value,inst:e,continue:!t.abort})}}}),Gp=T("$ZodCIDRv4",(e,t)=>{t.pattern??(t.pattern=tp),ne.init(e,t)}),zp=T("$ZodCIDRv6",(e,t)=>{t.pattern??(t.pattern=sp),ne.init(e,t),e._zod.check=s=>{const[r,i]=s.value.split("/");try{if(!i)throw new Error;const a=Number(i);if(`${a}`!==i)throw new Error;if(a<0||a>128)throw new Error;new URL(`http://[${r}]`)}catch{s.issues.push({code:"invalid_format",format:"cidrv6",input:s.value,inst:e,continue:!t.abort})}}});function Rd(e){if(e==="")return!0;if(e.length%4!==0)return!1;try{return atob(e),!0}catch{return!1}}const Jp=T("$ZodBase64",(e,t)=>{t.pattern??(t.pattern=rp),ne.init(e,t),e._zod.onattach.push(s=>{s._zod.bag.contentEncoding="base64"}),e._zod.check=s=>{Rd(s.value)||s.issues.push({code:"invalid_format",format:"base64",input:s.value,inst:e,continue:!t.abort})}});function Vp(e){if(!wd.test(e))return!1;const t=e.replace(/[-_]/g,r=>r==="-"?"+":"/"),s=t.padEnd(Math.ceil(t.length/4)*4,"=");return Rd(s)}const Yp=T("$ZodBase64URL",(e,t)=>{t.pattern??(t.pattern=wd),ne.init(e,t),e._zod.onattach.push(s=>{s._zod.bag.contentEncoding="base64url"}),e._zod.check=s=>{Vp(s.value)||s.issues.push({code:"invalid_format",format:"base64url",input:s.value,inst:e,continue:!t.abort})}}),Kp=T("$ZodE164",(e,t)=>{t.pattern??(t.pattern=ap),ne.init(e,t)});function Zp(e,t=null){try{const s=e.split(".");if(s.length!==3)return!1;const[r]=s;if(!r)return!1;const i=JSON.parse(atob(r));return!("typ"in i&&(i==null?void 0:i.typ)!=="JWT"||!i.alg||t&&(!("alg"in i)||i.alg!==t))}catch{return!1}}const Qp=T("$ZodJWT",(e,t)=>{ne.init(e,t),e._zod.check=s=>{Zp(s.value,t.alg)||s.issues.push({code:"invalid_format",format:"jwt",input:s.value,inst:e,continue:!t.abort})}}),Cd=T("$ZodNumber",(e,t)=>{me.init(e,t),e._zod.pattern=e._zod.bag.pattern??up,e._zod.parse=(s,r)=>{if(t.coerce)try{s.value=Number(s.value)}catch{}const i=s.value;if(typeof i=="number"&&!Number.isNaN(i)&&Number.isFinite(i))return s;const a=typeof i=="number"?Number.isNaN(i)?"NaN":Number.isFinite(i)?void 0:"Infinity":void 0;return s.issues.push({expected:"number",code:"invalid_type",input:i,inst:e,...a?{received:a}:{}}),s}}),Xp=T("$ZodNumber",(e,t)=>{gp.init(e,t),Cd.init(e,t)}),em=T("$ZodUnknown",(e,t)=>{me.init(e,t),e._zod.parse=s=>s}),tm=T("$ZodNever",(e,t)=>{me.init(e,t),e._zod.parse=(s,r)=>(s.issues.push({expected:"never",code:"invalid_type",input:s.value,inst:e}),s)});function zn(e,t,s){e.issues.length&&t.issues.push(...hd(s,e.issues)),t.value[s]=e.value}const sm=T("$ZodArray",(e,t)=>{me.init(e,t),e._zod.parse=(s,r)=>{const i=s.value;if(!Array.isArray(i))return s.issues.push({expected:"array",code:"invalid_type",input:i,inst:e}),s;s.value=Array(i.length);const a=[];for(let n=0;n<i.length;n++){const o=i[n],l=t.element._zod.run({value:o,issues:[]},r);l instanceof Promise?a.push(l.then(d=>zn(d,s,n))):zn(l,s,n)}return a.length?Promise.all(a).then(()=>s):s}});function ri(e,t,s,r){e.issues.length&&t.issues.push(...hd(s,e.issues)),e.value===void 0?s in r&&(t.value[s]=void 0):t.value[s]=e.value}function Dd(e){const t=Object.keys(e.shape);for(const r of t)if(!e.shape[r]._zod.traits.has("$ZodType"))throw new Error(`Invalid element at key "${r}": expected a Zod schema`);const s=wu(e.shape);return{...e,keys:t,keySet:new Set(t),numKeys:t.length,optionalKeys:new Set(s)}}function Nd(e,t,s,r,i,a){const n=[],o=i.keySet,l=i.catchall._zod,d=l.def.type;for(const c of Object.keys(t)){if(o.has(c))continue;if(d==="never"){n.push(c);continue}const u=l.run({value:t[c],issues:[]},r);u instanceof Promise?e.push(u.then(p=>ri(p,s,c,t))):ri(u,s,c,t)}return n.length&&s.issues.push({code:"unrecognized_keys",keys:n,input:t,inst:a}),e.length?Promise.all(e).then(()=>s):s}const rm=T("$ZodObject",(e,t)=>{me.init(e,t);const s=rn(()=>Dd(t));se(e._zod,"propValues",()=>{const n=t.shape,o={};for(const l in n){const d=n[l]._zod;if(d.values){o[l]??(o[l]=new Set);for(const c of d.values)o[l].add(c)}}return o});const r=si,i=t.catchall;let a;e._zod.parse=(n,o)=>{a??(a=s.value);const l=n.value;if(!r(l))return n.issues.push({expected:"object",code:"invalid_type",input:l,inst:e}),n;n.value={};const d=[],c=a.shape;for(const u of a.keys){const m=c[u]._zod.run({value:l[u],issues:[]},o);m instanceof Promise?d.push(m.then(b=>ri(b,n,u,l))):ri(m,n,u,l)}return i?Nd(d,l,n,o,s.value,e):d.length?Promise.all(d).then(()=>n):n}}),im=T("$ZodObjectJIT",(e,t)=>{rm.init(e,t);const s=e._zod.parse,r=rn(()=>Dd(t)),i=p=>{const m=new Sp(["shape","payload","ctx"]),b=r.value,v=w=>{const x=Wn(w);return`shape[${x}]._zod.run({ value: input[${x}], issues: [] }, ctx)`};m.write("const input = payload.value;");const f=Object.create(null);let h=0;for(const w of b.keys)f[w]=`key_${h++}`;m.write("const newResult = {}");for(const w of b.keys){const x=f[w],S=Wn(w);m.write(`const ${x} = ${v(w)};`),m.write(`
        if (${x}.issues.length) {
          payload.issues = payload.issues.concat(${x}.issues.map(iss => ({
            ...iss,
            path: iss.path ? [${S}, ...iss.path] : [${S}]
          })));
        }
        
        if (${x}.value === undefined) {
          if (${S} in input) {
            newResult[${S}] = undefined;
          }
        } else {
          newResult[${S}] = ${x}.value;
        }
      `)}m.write("payload.value = newResult;"),m.write("return payload;");const y=m.compile();return(w,x)=>y(p,w,x)};let a;const n=si,o=!fd.jitless,d=o&&yu.value,c=t.catchall;let u;e._zod.parse=(p,m)=>{u??(u=r.value);const b=p.value;return n(b)?o&&d&&(m==null?void 0:m.async)===!1&&m.jitless!==!0?(a||(a=i(t.shape)),p=a(p,m),c?Nd([],b,p,m,u,e):p):s(p,m):(p.issues.push({expected:"object",code:"invalid_type",input:b,inst:e}),p)}});function Jn(e,t,s,r){for(const a of e)if(a.issues.length===0)return t.value=a.value,t;const i=e.filter(a=>!Ts(a));return i.length===1?(t.value=i[0].value,i[0]):(t.issues.push({code:"invalid_union",input:t.value,inst:s,errors:e.map(a=>a.issues.map(n=>ss(n,r,ts())))}),t)}const am=T("$ZodUnion",(e,t)=>{me.init(e,t),se(e._zod,"optin",()=>t.options.some(i=>i._zod.optin==="optional")?"optional":void 0),se(e._zod,"optout",()=>t.options.some(i=>i._zod.optout==="optional")?"optional":void 0),se(e._zod,"values",()=>{if(t.options.every(i=>i._zod.values))return new Set(t.options.flatMap(i=>Array.from(i._zod.values)))}),se(e._zod,"pattern",()=>{if(t.options.every(i=>i._zod.pattern)){const i=t.options.map(a=>a._zod.pattern);return new RegExp(`^(${i.map(a=>nn(a.source)).join("|")})$`)}});const s=t.options.length===1,r=t.options[0]._zod.run;e._zod.parse=(i,a)=>{if(s)return r(i,a);let n=!1;const o=[];for(const l of t.options){const d=l._zod.run({value:i.value,issues:[]},a);if(d instanceof Promise)o.push(d),n=!0;else{if(d.issues.length===0)return d;o.push(d)}}return n?Promise.all(o).then(l=>Jn(l,i,e,a)):Jn(o,i,e,a)}}),nm=T("$ZodIntersection",(e,t)=>{me.init(e,t),e._zod.parse=(s,r)=>{const i=s.value,a=t.left._zod.run({value:i,issues:[]},r),n=t.right._zod.run({value:i,issues:[]},r);return a instanceof Promise||n instanceof Promise?Promise.all([a,n]).then(([l,d])=>Vn(s,l,d)):Vn(s,a,n)}});function Va(e,t){if(e===t)return{valid:!0,data:e};if(e instanceof Date&&t instanceof Date&&+e==+t)return{valid:!0,data:e};if(cr(e)&&cr(t)){const s=Object.keys(t),r=Object.keys(e).filter(a=>s.indexOf(a)!==-1),i={...e,...t};for(const a of r){const n=Va(e[a],t[a]);if(!n.valid)return{valid:!1,mergeErrorPath:[a,...n.mergeErrorPath]};i[a]=n.data}return{valid:!0,data:i}}if(Array.isArray(e)&&Array.isArray(t)){if(e.length!==t.length)return{valid:!1,mergeErrorPath:[]};const s=[];for(let r=0;r<e.length;r++){const i=e[r],a=t[r],n=Va(i,a);if(!n.valid)return{valid:!1,mergeErrorPath:[r,...n.mergeErrorPath]};s.push(n.data)}return{valid:!0,data:s}}return{valid:!1,mergeErrorPath:[]}}function Vn(e,t,s){if(t.issues.length&&e.issues.push(...t.issues),s.issues.length&&e.issues.push(...s.issues),Ts(e))return e;const r=Va(t.value,s.value);if(!r.valid)throw new Error(`Unmergable intersection. Error path: ${JSON.stringify(r.mergeErrorPath)}`);return e.value=r.data,e}const om=T("$ZodEnum",(e,t)=>{me.init(e,t);const s=vu(t.entries),r=new Set(s);e._zod.values=r,e._zod.pattern=new RegExp(`^(${s.filter(i=>xu.has(typeof i)).map(i=>typeof i=="string"?di(i):i.toString()).join("|")})$`),e._zod.parse=(i,a)=>{const n=i.value;return r.has(n)||i.issues.push({code:"invalid_value",values:s,input:n,inst:e}),i}}),lm=T("$ZodTransform",(e,t)=>{me.init(e,t),e._zod.parse=(s,r)=>{if(r.direction==="backward")throw new md(e.constructor.name);const i=t.transform(s.value,s);if(r.async)return(i instanceof Promise?i:Promise.resolve(i)).then(n=>(s.value=n,s));if(i instanceof Promise)throw new Ss;return s.value=i,s}});function Yn(e,t){return e.issues.length&&t===void 0?{issues:[],value:void 0}:e}const dm=T("$ZodOptional",(e,t)=>{me.init(e,t),e._zod.optin="optional",e._zod.optout="optional",se(e._zod,"values",()=>t.innerType._zod.values?new Set([...t.innerType._zod.values,void 0]):void 0),se(e._zod,"pattern",()=>{const s=t.innerType._zod.pattern;return s?new RegExp(`^(${nn(s.source)})?$`):void 0}),e._zod.parse=(s,r)=>{if(t.innerType._zod.optin==="optional"){const i=t.innerType._zod.run(s,r);return i instanceof Promise?i.then(a=>Yn(a,s.value)):Yn(i,s.value)}return s.value===void 0?s:t.innerType._zod.run(s,r)}}),cm=T("$ZodNullable",(e,t)=>{me.init(e,t),se(e._zod,"optin",()=>t.innerType._zod.optin),se(e._zod,"optout",()=>t.innerType._zod.optout),se(e._zod,"pattern",()=>{const s=t.innerType._zod.pattern;return s?new RegExp(`^(${nn(s.source)}|null)$`):void 0}),se(e._zod,"values",()=>t.innerType._zod.values?new Set([...t.innerType._zod.values,null]):void 0),e._zod.parse=(s,r)=>s.value===null?s:t.innerType._zod.run(s,r)}),um=T("$ZodDefault",(e,t)=>{me.init(e,t),e._zod.optin="optional",se(e._zod,"values",()=>t.innerType._zod.values),e._zod.parse=(s,r)=>{if(r.direction==="backward")return t.innerType._zod.run(s,r);if(s.value===void 0)return s.value=t.defaultValue,s;const i=t.innerType._zod.run(s,r);return i instanceof Promise?i.then(a=>Kn(a,t)):Kn(i,t)}});function Kn(e,t){return e.value===void 0&&(e.value=t.defaultValue),e}const pm=T("$ZodPrefault",(e,t)=>{me.init(e,t),e._zod.optin="optional",se(e._zod,"values",()=>t.innerType._zod.values),e._zod.parse=(s,r)=>(r.direction==="backward"||s.value===void 0&&(s.value=t.defaultValue),t.innerType._zod.run(s,r))}),mm=T("$ZodNonOptional",(e,t)=>{me.init(e,t),se(e._zod,"values",()=>{const s=t.innerType._zod.values;return s?new Set([...s].filter(r=>r!==void 0)):void 0}),e._zod.parse=(s,r)=>{const i=t.innerType._zod.run(s,r);return i instanceof Promise?i.then(a=>Zn(a,e)):Zn(i,e)}});function Zn(e,t){return!e.issues.length&&e.value===void 0&&e.issues.push({code:"invalid_type",expected:"nonoptional",input:e.value,inst:t}),e}const fm=T("$ZodCatch",(e,t)=>{me.init(e,t),se(e._zod,"optin",()=>t.innerType._zod.optin),se(e._zod,"optout",()=>t.innerType._zod.optout),se(e._zod,"values",()=>t.innerType._zod.values),e._zod.parse=(s,r)=>{if(r.direction==="backward")return t.innerType._zod.run(s,r);const i=t.innerType._zod.run(s,r);return i instanceof Promise?i.then(a=>(s.value=a.value,a.issues.length&&(s.value=t.catchValue({...s,error:{issues:a.issues.map(n=>ss(n,r,ts()))},input:s.value}),s.issues=[]),s)):(s.value=i.value,i.issues.length&&(s.value=t.catchValue({...s,error:{issues:i.issues.map(a=>ss(a,r,ts()))},input:s.value}),s.issues=[]),s)}}),gm=T("$ZodPipe",(e,t)=>{me.init(e,t),se(e._zod,"values",()=>t.in._zod.values),se(e._zod,"optin",()=>t.in._zod.optin),se(e._zod,"optout",()=>t.out._zod.optout),se(e._zod,"propValues",()=>t.in._zod.propValues),e._zod.parse=(s,r)=>{if(r.direction==="backward"){const a=t.out._zod.run(s,r);return a instanceof Promise?a.then(n=>Tr(n,t.in,r)):Tr(a,t.in,r)}const i=t.in._zod.run(s,r);return i instanceof Promise?i.then(a=>Tr(a,t.out,r)):Tr(i,t.out,r)}});function Tr(e,t,s){return e.issues.length?(e.aborted=!0,e):t._zod.run({value:e.value,issues:e.issues},s)}const vm=T("$ZodReadonly",(e,t)=>{me.init(e,t),se(e._zod,"propValues",()=>t.innerType._zod.propValues),se(e._zod,"values",()=>t.innerType._zod.values),se(e._zod,"optin",()=>t.innerType._zod.optin),se(e._zod,"optout",()=>t.innerType._zod.optout),e._zod.parse=(s,r)=>{if(r.direction==="backward")return t.innerType._zod.run(s,r);const i=t.innerType._zod.run(s,r);return i instanceof Promise?i.then(Qn):Qn(i)}});function Qn(e){return e.value=Object.freeze(e.value),e}const hm=T("$ZodCustom",(e,t)=>{Ne.init(e,t),me.init(e,t),e._zod.parse=(s,r)=>s,e._zod.check=s=>{const r=s.value,i=t.fn(r);if(i instanceof Promise)return i.then(a=>Xn(a,s,r,e));Xn(i,s,r,e)}});function Xn(e,t,s,r){if(!e){const i={code:"custom",input:s,inst:r,path:[...r._zod.def.path??[]],continue:!r._zod.def.abort};r._zod.def.params&&(i.params=r._zod.def.params),t.issues.push(ur(i))}}class bm{constructor(){this._map=new Map,this._idmap=new Map}add(t,...s){const r=s[0];if(this._map.set(t,r),r&&typeof r=="object"&&"id"in r){if(this._idmap.has(r.id))throw new Error(`ID ${r.id} already exists in the registry`);this._idmap.set(r.id,t)}return this}clear(){return this._map=new Map,this._idmap=new Map,this}remove(t){const s=this._map.get(t);return s&&typeof s=="object"&&"id"in s&&this._idmap.delete(s.id),this._map.delete(t),this}get(t){const s=t._zod.parent;if(s){const r={...this.get(s)??{}};delete r.id;const i={...r,...this._map.get(t)};return Object.keys(i).length?i:void 0}return this._map.get(t)}has(t){return this._map.has(t)}}function ym(){return new bm}const Sr=ym();function xm(e,t){return new e({type:"string",...L(t)})}function wm(e,t){return new e({type:"string",format:"email",check:"string_format",abort:!1,...L(t)})}function eo(e,t){return new e({type:"string",format:"guid",check:"string_format",abort:!1,...L(t)})}function _m(e,t){return new e({type:"string",format:"uuid",check:"string_format",abort:!1,...L(t)})}function Em(e,t){return new e({type:"string",format:"uuid",check:"string_format",abort:!1,version:"v4",...L(t)})}function km(e,t){return new e({type:"string",format:"uuid",check:"string_format",abort:!1,version:"v6",...L(t)})}function Tm(e,t){return new e({type:"string",format:"uuid",check:"string_format",abort:!1,version:"v7",...L(t)})}function Sm(e,t){return new e({type:"string",format:"url",check:"string_format",abort:!1,...L(t)})}function Rm(e,t){return new e({type:"string",format:"emoji",check:"string_format",abort:!1,...L(t)})}function Cm(e,t){return new e({type:"string",format:"nanoid",check:"string_format",abort:!1,...L(t)})}function Dm(e,t){return new e({type:"string",format:"cuid",check:"string_format",abort:!1,...L(t)})}function Nm(e,t){return new e({type:"string",format:"cuid2",check:"string_format",abort:!1,...L(t)})}function Pm(e,t){return new e({type:"string",format:"ulid",check:"string_format",abort:!1,...L(t)})}function Am(e,t){return new e({type:"string",format:"xid",check:"string_format",abort:!1,...L(t)})}function Om(e,t){return new e({type:"string",format:"ksuid",check:"string_format",abort:!1,...L(t)})}function jm(e,t){return new e({type:"string",format:"ipv4",check:"string_format",abort:!1,...L(t)})}function Im(e,t){return new e({type:"string",format:"ipv6",check:"string_format",abort:!1,...L(t)})}function Mm(e,t){return new e({type:"string",format:"cidrv4",check:"string_format",abort:!1,...L(t)})}function Lm(e,t){return new e({type:"string",format:"cidrv6",check:"string_format",abort:!1,...L(t)})}function $m(e,t){return new e({type:"string",format:"base64",check:"string_format",abort:!1,...L(t)})}function Fm(e,t){return new e({type:"string",format:"base64url",check:"string_format",abort:!1,...L(t)})}function Bm(e,t){return new e({type:"string",format:"e164",check:"string_format",abort:!1,...L(t)})}function Um(e,t){return new e({type:"string",format:"jwt",check:"string_format",abort:!1,...L(t)})}function Hm(e,t){return new e({type:"string",format:"datetime",check:"string_format",offset:!1,local:!1,precision:null,...L(t)})}function qm(e,t){return new e({type:"string",format:"date",check:"string_format",...L(t)})}function Wm(e,t){return new e({type:"string",format:"time",check:"string_format",precision:null,...L(t)})}function Gm(e,t){return new e({type:"string",format:"duration",check:"string_format",...L(t)})}function zm(e,t){return new e({type:"number",checks:[],...L(t)})}function Jm(e,t){return new e({type:"number",check:"number_format",abort:!1,format:"safeint",...L(t)})}function Vm(e){return new e({type:"unknown"})}function Ym(e,t){return new e({type:"never",...L(t)})}function to(e,t){return new Td({check:"less_than",...L(t),value:e,inclusive:!1})}function Oi(e,t){return new Td({check:"less_than",...L(t),value:e,inclusive:!0})}function so(e,t){return new Sd({check:"greater_than",...L(t),value:e,inclusive:!1})}function ji(e,t){return new Sd({check:"greater_than",...L(t),value:e,inclusive:!0})}function ro(e,t){return new fp({check:"multiple_of",...L(t),value:e})}function Pd(e,t){return new vp({check:"max_length",...L(t),maximum:e})}function ii(e,t){return new hp({check:"min_length",...L(t),minimum:e})}function Ad(e,t){return new bp({check:"length_equals",...L(t),length:e})}function Km(e,t){return new yp({check:"string_format",format:"regex",...L(t),pattern:e})}function Zm(e){return new xp({check:"string_format",format:"lowercase",...L(e)})}function Qm(e){return new wp({check:"string_format",format:"uppercase",...L(e)})}function Xm(e,t){return new _p({check:"string_format",format:"includes",...L(t),includes:e})}function ef(e,t){return new Ep({check:"string_format",format:"starts_with",...L(t),prefix:e})}function tf(e,t){return new kp({check:"string_format",format:"ends_with",...L(t),suffix:e})}function br(e){return new Tp({check:"overwrite",tx:e})}function sf(e){return br(t=>t.normalize(e))}function rf(){return br(e=>e.trim())}function af(){return br(e=>e.toLowerCase())}function nf(){return br(e=>e.toUpperCase())}function of(e,t,s){return new e({type:"array",element:t,...L(s)})}function lf(e,t,s){return new e({type:"custom",check:"custom",fn:t,...L(s)})}function df(e){const t=cf(s=>(s.addIssue=r=>{if(typeof r=="string")s.issues.push(ur(r,s.value,t._zod.def));else{const i=r;i.fatal&&(i.continue=!1),i.code??(i.code="custom"),i.input??(i.input=s.value),i.inst??(i.inst=t),i.continue??(i.continue=!t._zod.def.abort),s.issues.push(ur(i))}},e(s.value,s)));return t}function cf(e,t){const s=new Ne({check:"custom",...L(t)});return s._zod.check=e,s}const uf=T("ZodISODateTime",(e,t)=>{Fp.init(e,t),le.init(e,t)});function pf(e){return Hm(uf,e)}const mf=T("ZodISODate",(e,t)=>{Bp.init(e,t),le.init(e,t)});function ff(e){return qm(mf,e)}const gf=T("ZodISOTime",(e,t)=>{Up.init(e,t),le.init(e,t)});function vf(e){return Wm(gf,e)}const hf=T("ZodISODuration",(e,t)=>{Hp.init(e,t),le.init(e,t)});function bf(e){return Gm(hf,e)}const yf=(e,t)=>{yd.init(e,t),e.name="ZodError",Object.defineProperties(e,{format:{value:s=>Pu(e,s)},flatten:{value:s=>Nu(e,s)},addIssue:{value:s=>{e.issues.push(s),e.message=JSON.stringify(e.issues,Ja,2)}},addIssues:{value:s=>{e.issues.push(...s),e.message=JSON.stringify(e.issues,Ja,2)}},isEmpty:{get(){return e.issues.length===0}}})},qe=T("ZodError",yf,{Parent:Error}),xf=ln(qe),wf=dn(qe),_f=ci(qe),Ef=ui(qe),kf=ju(qe),Tf=Iu(qe),Sf=Mu(qe),Rf=Lu(qe),Cf=$u(qe),Df=Fu(qe),Nf=Bu(qe),Pf=Uu(qe),he=T("ZodType",(e,t)=>(me.init(e,t),e.def=t,e.type=t.type,Object.defineProperty(e,"_def",{value:t}),e.check=(...s)=>e.clone({...t,checks:[...t.checks??[],...s.map(r=>typeof r=="function"?{_zod:{check:r,def:{check:"custom"},onattach:[]}}:r)]}),e.clone=(s,r)=>$t(e,s,r),e.brand=()=>e,e.register=((s,r)=>(s.add(e,r),e)),e.parse=(s,r)=>xf(e,s,r,{callee:e.parse}),e.safeParse=(s,r)=>_f(e,s,r),e.parseAsync=async(s,r)=>wf(e,s,r,{callee:e.parseAsync}),e.safeParseAsync=async(s,r)=>Ef(e,s,r),e.spa=e.safeParseAsync,e.encode=(s,r)=>kf(e,s,r),e.decode=(s,r)=>Tf(e,s,r),e.encodeAsync=async(s,r)=>Sf(e,s,r),e.decodeAsync=async(s,r)=>Rf(e,s,r),e.safeEncode=(s,r)=>Cf(e,s,r),e.safeDecode=(s,r)=>Df(e,s,r),e.safeEncodeAsync=async(s,r)=>Nf(e,s,r),e.safeDecodeAsync=async(s,r)=>Pf(e,s,r),e.refine=(s,r)=>e.check(_g(s,r)),e.superRefine=s=>e.check(Eg(s)),e.overwrite=s=>e.check(br(s)),e.optional=()=>oo(e),e.nullable=()=>lo(e),e.nullish=()=>oo(lo(e)),e.nonoptional=s=>gg(e,s),e.array=()=>tg(e),e.or=s=>ag([e,s]),e.and=s=>og(e,s),e.transform=s=>co(e,dg(s)),e.default=s=>pg(e,s),e.prefault=s=>fg(e,s),e.catch=s=>hg(e,s),e.pipe=s=>co(e,s),e.readonly=()=>xg(e),e.describe=s=>{const r=e.clone();return Sr.add(r,{description:s}),r},Object.defineProperty(e,"description",{get(){var s;return(s=Sr.get(e))==null?void 0:s.description},configurable:!0}),e.meta=(...s)=>{if(s.length===0)return Sr.get(e);const r=e.clone();return Sr.add(r,s[0]),r},e.isOptional=()=>e.safeParse(void 0).success,e.isNullable=()=>e.safeParse(null).success,e)),Od=T("_ZodString",(e,t)=>{cn.init(e,t),he.init(e,t);const s=e._zod.bag;e.format=s.format??null,e.minLength=s.minimum??null,e.maxLength=s.maximum??null,e.regex=(...r)=>e.check(Km(...r)),e.includes=(...r)=>e.check(Xm(...r)),e.startsWith=(...r)=>e.check(ef(...r)),e.endsWith=(...r)=>e.check(tf(...r)),e.min=(...r)=>e.check(ii(...r)),e.max=(...r)=>e.check(Pd(...r)),e.length=(...r)=>e.check(Ad(...r)),e.nonempty=(...r)=>e.check(ii(1,...r)),e.lowercase=r=>e.check(Zm(r)),e.uppercase=r=>e.check(Qm(r)),e.trim=()=>e.check(rf()),e.normalize=(...r)=>e.check(sf(...r)),e.toLowerCase=()=>e.check(af()),e.toUpperCase=()=>e.check(nf())}),Af=T("ZodString",(e,t)=>{cn.init(e,t),Od.init(e,t),e.email=s=>e.check(wm(Of,s)),e.url=s=>e.check(Sm(jf,s)),e.jwt=s=>e.check(Um(Yf,s)),e.emoji=s=>e.check(Rm(If,s)),e.guid=s=>e.check(eo(io,s)),e.uuid=s=>e.check(_m(Rr,s)),e.uuidv4=s=>e.check(Em(Rr,s)),e.uuidv6=s=>e.check(km(Rr,s)),e.uuidv7=s=>e.check(Tm(Rr,s)),e.nanoid=s=>e.check(Cm(Mf,s)),e.guid=s=>e.check(eo(io,s)),e.cuid=s=>e.check(Dm(Lf,s)),e.cuid2=s=>e.check(Nm($f,s)),e.ulid=s=>e.check(Pm(Ff,s)),e.base64=s=>e.check($m(zf,s)),e.base64url=s=>e.check(Fm(Jf,s)),e.xid=s=>e.check(Am(Bf,s)),e.ksuid=s=>e.check(Om(Uf,s)),e.ipv4=s=>e.check(jm(Hf,s)),e.ipv6=s=>e.check(Im(qf,s)),e.cidrv4=s=>e.check(Mm(Wf,s)),e.cidrv6=s=>e.check(Lm(Gf,s)),e.e164=s=>e.check(Bm(Vf,s)),e.datetime=s=>e.check(pf(s)),e.date=s=>e.check(ff(s)),e.time=s=>e.check(vf(s)),e.duration=s=>e.check(bf(s))});function Ht(e){return xm(Af,e)}const le=T("ZodStringFormat",(e,t)=>{ne.init(e,t),Od.init(e,t)}),Of=T("ZodEmail",(e,t)=>{Np.init(e,t),le.init(e,t)}),io=T("ZodGUID",(e,t)=>{Cp.init(e,t),le.init(e,t)}),Rr=T("ZodUUID",(e,t)=>{Dp.init(e,t),le.init(e,t)}),jf=T("ZodURL",(e,t)=>{Pp.init(e,t),le.init(e,t)}),If=T("ZodEmoji",(e,t)=>{Ap.init(e,t),le.init(e,t)}),Mf=T("ZodNanoID",(e,t)=>{Op.init(e,t),le.init(e,t)}),Lf=T("ZodCUID",(e,t)=>{jp.init(e,t),le.init(e,t)}),$f=T("ZodCUID2",(e,t)=>{Ip.init(e,t),le.init(e,t)}),Ff=T("ZodULID",(e,t)=>{Mp.init(e,t),le.init(e,t)}),Bf=T("ZodXID",(e,t)=>{Lp.init(e,t),le.init(e,t)}),Uf=T("ZodKSUID",(e,t)=>{$p.init(e,t),le.init(e,t)}),Hf=T("ZodIPv4",(e,t)=>{qp.init(e,t),le.init(e,t)}),qf=T("ZodIPv6",(e,t)=>{Wp.init(e,t),le.init(e,t)}),Wf=T("ZodCIDRv4",(e,t)=>{Gp.init(e,t),le.init(e,t)}),Gf=T("ZodCIDRv6",(e,t)=>{zp.init(e,t),le.init(e,t)}),zf=T("ZodBase64",(e,t)=>{Jp.init(e,t),le.init(e,t)}),Jf=T("ZodBase64URL",(e,t)=>{Yp.init(e,t),le.init(e,t)}),Vf=T("ZodE164",(e,t)=>{Kp.init(e,t),le.init(e,t)}),Yf=T("ZodJWT",(e,t)=>{Qp.init(e,t),le.init(e,t)}),jd=T("ZodNumber",(e,t)=>{Cd.init(e,t),he.init(e,t),e.gt=(r,i)=>e.check(so(r,i)),e.gte=(r,i)=>e.check(ji(r,i)),e.min=(r,i)=>e.check(ji(r,i)),e.lt=(r,i)=>e.check(to(r,i)),e.lte=(r,i)=>e.check(Oi(r,i)),e.max=(r,i)=>e.check(Oi(r,i)),e.int=r=>e.check(ao(r)),e.safe=r=>e.check(ao(r)),e.positive=r=>e.check(so(0,r)),e.nonnegative=r=>e.check(ji(0,r)),e.negative=r=>e.check(to(0,r)),e.nonpositive=r=>e.check(Oi(0,r)),e.multipleOf=(r,i)=>e.check(ro(r,i)),e.step=(r,i)=>e.check(ro(r,i)),e.finite=()=>e;const s=e._zod.bag;e.minValue=Math.max(s.minimum??Number.NEGATIVE_INFINITY,s.exclusiveMinimum??Number.NEGATIVE_INFINITY)??null,e.maxValue=Math.min(s.maximum??Number.POSITIVE_INFINITY,s.exclusiveMaximum??Number.POSITIVE_INFINITY)??null,e.isInt=(s.format??"").includes("int")||Number.isSafeInteger(s.multipleOf??.5),e.isFinite=!0,e.format=s.format??null});function Ii(e){return zm(jd,e)}const Kf=T("ZodNumberFormat",(e,t)=>{Xp.init(e,t),jd.init(e,t)});function ao(e){return Jm(Kf,e)}const Zf=T("ZodUnknown",(e,t)=>{em.init(e,t),he.init(e,t)});function no(){return Vm(Zf)}const Qf=T("ZodNever",(e,t)=>{tm.init(e,t),he.init(e,t)});function Xf(e){return Ym(Qf,e)}const eg=T("ZodArray",(e,t)=>{sm.init(e,t),he.init(e,t),e.element=t.element,e.min=(s,r)=>e.check(ii(s,r)),e.nonempty=s=>e.check(ii(1,s)),e.max=(s,r)=>e.check(Pd(s,r)),e.length=(s,r)=>e.check(Ad(s,r)),e.unwrap=()=>e.element});function tg(e,t){return of(eg,e,t)}const sg=T("ZodObject",(e,t)=>{im.init(e,t),he.init(e,t),se(e,"shape",()=>t.shape),e.keyof=()=>Id(Object.keys(e._zod.def.shape)),e.catchall=s=>e.clone({...e._zod.def,catchall:s}),e.passthrough=()=>e.clone({...e._zod.def,catchall:no()}),e.loose=()=>e.clone({...e._zod.def,catchall:no()}),e.strict=()=>e.clone({...e._zod.def,catchall:Xf()}),e.strip=()=>e.clone({...e._zod.def,catchall:void 0}),e.extend=s=>Tu(e,s),e.safeExtend=s=>Su(e,s),e.merge=s=>Ru(e,s),e.pick=s=>Eu(e,s),e.omit=s=>ku(e,s),e.partial=(...s)=>Cu(Md,e,s[0]),e.required=(...s)=>Du(Ld,e,s[0])});function rg(e,t){const s={type:"object",get shape(){return Lt(this,"shape",e?bu(e):{}),this.shape},...L(t)};return new sg(s)}const ig=T("ZodUnion",(e,t)=>{am.init(e,t),he.init(e,t),e.options=t.options});function ag(e,t){return new ig({type:"union",options:e,...L(t)})}const ng=T("ZodIntersection",(e,t)=>{nm.init(e,t),he.init(e,t)});function og(e,t){return new ng({type:"intersection",left:e,right:t})}const Ya=T("ZodEnum",(e,t)=>{om.init(e,t),he.init(e,t),e.enum=t.entries,e.options=Object.values(t.entries);const s=new Set(Object.keys(t.entries));e.extract=(r,i)=>{const a={};for(const n of r)if(s.has(n))a[n]=t.entries[n];else throw new Error(`Key ${n} not found in enum`);return new Ya({...t,checks:[],...L(i),entries:a})},e.exclude=(r,i)=>{const a={...t.entries};for(const n of r)if(s.has(n))delete a[n];else throw new Error(`Key ${n} not found in enum`);return new Ya({...t,checks:[],...L(i),entries:a})}});function Id(e,t){const s=Array.isArray(e)?Object.fromEntries(e.map(r=>[r,r])):e;return new Ya({type:"enum",entries:s,...L(t)})}const lg=T("ZodTransform",(e,t)=>{lm.init(e,t),he.init(e,t),e._zod.parse=(s,r)=>{if(r.direction==="backward")throw new md(e.constructor.name);s.addIssue=a=>{if(typeof a=="string")s.issues.push(ur(a,s.value,t));else{const n=a;n.fatal&&(n.continue=!1),n.code??(n.code="custom"),n.input??(n.input=s.value),n.inst??(n.inst=e),s.issues.push(ur(n))}};const i=t.transform(s.value,s);return i instanceof Promise?i.then(a=>(s.value=a,s)):(s.value=i,s)}});function dg(e){return new lg({type:"transform",transform:e})}const Md=T("ZodOptional",(e,t)=>{dm.init(e,t),he.init(e,t),e.unwrap=()=>e._zod.def.innerType});function oo(e){return new Md({type:"optional",innerType:e})}const cg=T("ZodNullable",(e,t)=>{cm.init(e,t),he.init(e,t),e.unwrap=()=>e._zod.def.innerType});function lo(e){return new cg({type:"nullable",innerType:e})}const ug=T("ZodDefault",(e,t)=>{um.init(e,t),he.init(e,t),e.unwrap=()=>e._zod.def.innerType,e.removeDefault=e.unwrap});function pg(e,t){return new ug({type:"default",innerType:e,get defaultValue(){return typeof t=="function"?t():vd(t)}})}const mg=T("ZodPrefault",(e,t)=>{pm.init(e,t),he.init(e,t),e.unwrap=()=>e._zod.def.innerType});function fg(e,t){return new mg({type:"prefault",innerType:e,get defaultValue(){return typeof t=="function"?t():vd(t)}})}const Ld=T("ZodNonOptional",(e,t)=>{mm.init(e,t),he.init(e,t),e.unwrap=()=>e._zod.def.innerType});function gg(e,t){return new Ld({type:"nonoptional",innerType:e,...L(t)})}const vg=T("ZodCatch",(e,t)=>{fm.init(e,t),he.init(e,t),e.unwrap=()=>e._zod.def.innerType,e.removeCatch=e.unwrap});function hg(e,t){return new vg({type:"catch",innerType:e,catchValue:typeof t=="function"?t:()=>t})}const bg=T("ZodPipe",(e,t)=>{gm.init(e,t),he.init(e,t),e.in=t.in,e.out=t.out});function co(e,t){return new bg({type:"pipe",in:e,out:t})}const yg=T("ZodReadonly",(e,t)=>{vm.init(e,t),he.init(e,t),e.unwrap=()=>e._zod.def.innerType});function xg(e){return new yg({type:"readonly",innerType:e})}const wg=T("ZodCustom",(e,t)=>{hm.init(e,t),he.init(e,t)});function _g(e,t={}){return lf(wg,e,t)}function Eg(e){return df(e)}var kg=/^[\w!#$%&'*.^`|~+-]+$/,Tg=/^[ !#-:<-[\]-~]*$/,Sg=(e,t)=>{const s=e.trim().split(";"),r={};for(let i of s){i=i.trim();const a=i.indexOf("=");if(a===-1)continue;const n=i.substring(0,a).trim();if(!kg.test(n))continue;let o=i.substring(a+1).trim();o.startsWith('"')&&o.endsWith('"')&&(o=o.slice(1,-1)),Tg.test(o)&&(r[n]=o.indexOf("%")!==-1?li(o,en):o)}return r},Rg=(e,t,s)=>{const r=e.req.raw.headers.get("Cookie");return r?Sg(r):{}},uo=class extends Error{constructor(t=500,s){super(s==null?void 0:s.message,{cause:s==null?void 0:s.cause});O(this,"res");O(this,"status");this.res=s==null?void 0:s.res,this.status=t}getResponse(){return this.res?new Response(this.res.body,{status:this.status,headers:this.res.headers}):new Response(this.message,{status:this.status})}},Cg=(e,t)=>new Response(e,{headers:{"Content-Type":t}}).formData(),Dg=/^application\/([a-z-\.]+\+)?json(;\s*[a-zA-Z0-9\-]+\=([^;]+))*$/,Ng=/^multipart\/form-data(;\s?boundary=[a-zA-Z0-9'"()+_,\-./:=?]+)?$/,Pg=/^application\/x-www-form-urlencoded(;\s*[a-zA-Z0-9\-]+\=([^;]+))*$/,Ag=(e,t)=>async(s,r)=>{let i={};const a=s.req.header("Content-Type");switch(e){case"json":if(!a||!Dg.test(a))break;try{i=await s.req.json()}catch{const o="Malformed JSON in request body";throw new uo(400,{message:o})}break;case"form":{if(!a||!(Ng.test(a)||Pg.test(a)))break;let o;if(s.req.bodyCache.formData)o=await s.req.bodyCache.formData;else try{const d=await s.req.arrayBuffer();o=await Cg(d,a),s.req.bodyCache.formData=o}catch(d){let c="Malformed FormData request.";throw c+=d instanceof Error?` ${d.message}`:` ${String(d)}`,new uo(400,{message:c})}const l={};o.forEach((d,c)=>{c.endsWith("[]")?(l[c]??(l[c]=[])).push(d):Array.isArray(l[c])?l[c].push(d):c in l?l[c]=[l[c],d]:l[c]=d}),i=l;break}case"query":i=Object.fromEntries(Object.entries(s.req.queries()).map(([o,l])=>l.length===1?[o,l[0]]:[o,l]));break;case"param":i=s.req.param();break;case"header":i=s.req.header();break;case"cookie":i=Rg(s);break}const n=await t(i,s);if(n instanceof Response)return n;s.req.addValidatedData(e,n),await r()},$d=(e,t,s,r)=>Ag(e,async(i,a)=>{let n=i;const o=await t.safeParseAsync(n);return o.success?o.data:a.json(o,400)});const we=new ce,We=async(e,t)=>{let s=null;const r=e.req.header("Authorization");if(r&&r.startsWith("Bearer ")&&(s=r.replace("Bearer ","")),!s){const a=e.req.header("Cookie");if(a){const n=a.match(/session=([^;]+)/);n&&(s=n[1])}}if(!s)return e.json({error:"Authentication required"},401);const i=await e.env.DB.prepare(`
    SELECT us.*, u.id as user_id, u.email, u.role, u.first_name, u.last_name 
    FROM user_sessions us 
    JOIN users u ON us.user_id = u.id 
    WHERE us.session_token = ? AND u.role = 'client' AND u.is_active = 1
  `).bind(s).first();if(!i)return e.json({error:"Invalid session or not a client"},401);e.set("user",i),await t()},Fd=rg({title:Ht().min(5).max(200),description:Ht().min(20).max(2e3),category_id:Ii().int().positive(),budget_min:Ii().positive().optional(),budget_max:Ii().positive().optional(),location_province:Ht().min(2).max(3),location_city:Ht().min(2).max(100),location_address:Ht().max(500).optional(),urgency:Id(["low","normal","high","urgent"]).default("normal"),start_date:Ht().optional(),expected_completion:Ht().optional()});we.get("/jobs",We,async e=>{try{const t=e.get("user"),s=parseInt(e.req.query("page")||"1"),r=Math.min(parseInt(e.req.query("limit")||"10"),50),i=(s-1)*r,a=await e.env.DB.prepare(`
      SELECT j.*, jc.name as category_name, jc.icon_class as category_icon,
             (SELECT COUNT(*) FROM bids WHERE job_id = j.id) as bid_count,
             (SELECT COUNT(*) FROM bids WHERE job_id = j.id AND status = 'pending') as pending_bids
      FROM jobs j
      LEFT JOIN job_categories jc ON j.category_id = jc.id
      WHERE j.client_id = ?
      ORDER BY j.created_at DESC
      LIMIT ? OFFSET ?
    `).bind(t.user_id,r,i).all(),n=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM jobs WHERE client_id = ?
    `).bind(t.user_id).first();return e.json({jobs:a.results||[],pagination:{page:s,limit:r,total:(n==null?void 0:n.count)||0,pages:Math.ceil(((n==null?void 0:n.count)||0)/r)}})}catch(t){return console.error("Get jobs error:",t),e.json({error:"Failed to fetch jobs"},500)}});we.get("/jobs/:id",We,async e=>{try{const t=e.get("user"),s=e.req.param("id"),r=await e.env.DB.prepare(`
      SELECT j.*, jc.name as category_name, jc.icon_class as category_icon
      FROM jobs j
      LEFT JOIN job_categories jc ON j.category_id = jc.id
      WHERE j.id = ? AND j.client_id = ?
    `).bind(s,t.user_id).first();if(!r)return e.json({error:"Job not found"},404);const i=await e.env.DB.prepare(`
      SELECT b.*, u.first_name, u.last_name, u.email, up.bio,
             (SELECT AVG(rating) FROM reviews WHERE reviewee_id = b.worker_id) as avg_rating,
             (SELECT COUNT(*) FROM reviews WHERE reviewee_id = b.worker_id) as review_count
      FROM bids b
      JOIN users u ON b.worker_id = u.id
      LEFT JOIN user_profiles up ON u.id = up.user_id
      WHERE b.job_id = ?
      ORDER BY b.submitted_at DESC
    `).bind(s).all();return e.json({job:r,bids:i.results||[]})}catch(t){return console.error("Get job error:",t),e.json({error:"Failed to fetch job"},500)}});we.post("/jobs",We,$d("json",Fd),async e=>{try{const t=e.get("user"),s=e.req.valid("json"),r=await e.env.DB.prepare(`
      INSERT INTO jobs (
        client_id, title, description, category_id, budget_min, budget_max,
        location_province, location_city, location_address, urgency, 
        start_date, expected_completion, status
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'posted')
    `).bind(t.user_id,s.title,s.description,s.category_id,s.budget_min||null,s.budget_max||null,s.location_province,s.location_city,s.location_address||null,s.urgency,s.start_date||null,s.expected_completion||null).run();return e.json({message:"Job created successfully",job_id:r.meta.last_row_id},201)}catch(t){return console.error("Create job error:",t),e.json({error:"Failed to create job"},500)}});we.put("/jobs/:id",We,$d("json",Fd.partial()),async e=>{try{const t=e.get("user"),s=e.req.param("id"),r=e.req.valid("json"),i=await e.env.DB.prepare(`
      SELECT id, status FROM jobs WHERE id = ? AND client_id = ?
    `).bind(s,t.user_id).first();if(!i)return e.json({error:"Job not found"},404);if(i.status==="in_progress"||i.status==="completed")return e.json({error:"Cannot update job in current status"},400);const a=[],n=[];return r.title&&(a.push("title = ?"),n.push(r.title)),r.description&&(a.push("description = ?"),n.push(r.description)),r.category_id&&(a.push("category_id = ?"),n.push(r.category_id)),r.budget_min!==void 0&&(a.push("budget_min = ?"),n.push(r.budget_min)),r.budget_max!==void 0&&(a.push("budget_max = ?"),n.push(r.budget_max)),r.urgency&&(a.push("urgency = ?"),n.push(r.urgency)),a.length===0?e.json({error:"No fields to update"},400):(a.push("updated_at = datetime('now')"),n.push(s,t.user_id),await e.env.DB.prepare(`
      UPDATE jobs SET ${a.join(", ")} 
      WHERE id = ? AND client_id = ?
    `).bind(...n).run(),e.json({message:"Job updated successfully"}))}catch(t){return console.error("Update job error:",t),e.json({error:"Failed to update job"},500)}});we.delete("/jobs/:id",We,async e=>{try{const t=e.get("user"),s=e.req.param("id"),r=await e.env.DB.prepare(`
      SELECT id, status FROM jobs WHERE id = ? AND client_id = ?
    `).bind(s,t.user_id).first();return r?r.status==="in_progress"||r.status==="completed"?e.json({error:"Cannot delete job in current status"},400):(await e.env.DB.prepare(`
      UPDATE jobs SET status = 'cancelled', updated_at = datetime('now')
      WHERE id = ? AND client_id = ?
    `).bind(s,t.user_id).run(),e.json({message:"Job cancelled successfully"})):e.json({error:"Job not found"},404)}catch(t){return console.error("Cancel job error:",t),e.json({error:"Failed to cancel job"},500)}});we.get("/job-categories",async e=>{try{const t=await e.env.DB.prepare(`
      SELECT * FROM job_categories WHERE is_active = 1 ORDER BY name
    `).all();return e.json({categories:t.results||[]})}catch(t){return console.error("Get categories error:",t),e.json({error:"Failed to fetch categories"},500)}});we.get("/workers/search",async e=>{var t;try{const s=e.req.query("category"),r=e.req.query("location"),i=e.req.query("province"),a=parseInt(e.req.query("page")||"1"),n=Math.min(parseInt(e.req.query("limit")||"12"),50),o=(a-1)*n;let l=["u.role = ?","u.is_active = 1"],d=["worker"];i&&(l.push("u.province = ?"),d.push(i)),r&&(l.push("u.city LIKE ?"),d.push(`%${r}%`)),d.push(n,o);const c=await e.env.DB.prepare(`
      SELECT u.id, u.first_name, u.last_name, u.email, u.province, u.city,
             up.bio, up.years_in_business as experience_years, up.profile_image_url,
             (SELECT AVG(rating) FROM reviews WHERE reviewee_id = u.id) as avg_rating,
             (SELECT COUNT(*) FROM reviews WHERE reviewee_id = u.id) as review_count
      FROM users u
      LEFT JOIN user_profiles up ON u.id = up.user_id
      WHERE ${l.join(" AND ")}
      ORDER BY avg_rating DESC NULLS LAST, u.created_at DESC
      LIMIT ? OFFSET ?
    `).bind(...d).all();return e.json({workers:c.results||[],pagination:{page:a,limit:n,total:((t=c.results)==null?void 0:t.length)||0,pages:1}})}catch(s){return console.error("Search workers error:",s),e.json({error:"Failed to search workers"},500)}});we.get("/search/stats",async e=>{try{const t=e.req.query("service_category");let s,r,i,a=[];t?(s=`
        SELECT u.province, COUNT(DISTINCT u.id) as worker_count
        FROM users u
        JOIN worker_services ws ON u.id = ws.user_id
        WHERE u.role = 'worker' AND u.is_active = 1 AND ws.is_available = 1 
        AND ws.service_category = ?
        GROUP BY u.province 
        ORDER BY worker_count DESC
      `,r=`
        SELECT u.province, u.city, COUNT(DISTINCT u.id) as worker_count
        FROM users u
        JOIN worker_services ws ON u.id = ws.user_id
        WHERE u.role = 'worker' AND u.is_active = 1 AND ws.is_available = 1 
        AND u.city IS NOT NULL AND ws.service_category = ?
        GROUP BY u.province, u.city 
        ORDER BY u.province, worker_count DESC
      `,a=[t,t]):(s=`
        SELECT province, COUNT(*) as worker_count
        FROM users 
        WHERE role = 'worker' AND is_active = 1 
        GROUP BY province 
        ORDER BY worker_count DESC
      `,r=`
        SELECT province, city, COUNT(*) as worker_count
        FROM users 
        WHERE role = 'worker' AND is_active = 1 AND city IS NOT NULL
        GROUP BY province, city 
        ORDER BY province, worker_count DESC
      `);const n=await e.env.DB.prepare(s).bind(...t?[t]:[]).all(),o=await e.env.DB.prepare(r).bind(...t?[t]:[]).all(),l=await e.env.DB.prepare(`
      SELECT u.province, ws.service_category, COUNT(DISTINCT u.id) as worker_count
      FROM users u
      JOIN worker_services ws ON u.id = ws.user_id
      WHERE u.role = 'worker' AND u.is_active = 1 AND ws.is_available = 1
      GROUP BY u.province, ws.service_category
      ORDER BY u.province, worker_count DESC
    `).all();return e.json({provinces:n.results||[],cities:o.results||[],services:l.results||[]})}catch(t){return console.error("Search stats error:",t),e.json({error:"Failed to get search statistics"},500)}});we.get("/workers/:id",async e=>{try{const t=e.req.param("id"),s=await e.env.DB.prepare(`
      SELECT u.id, u.first_name, u.last_name, u.email, u.phone, u.province, u.city,
             up.bio, up.years_in_business as experience_years, up.profile_image_url,
             (SELECT AVG(rating) FROM reviews WHERE reviewee_id = u.id) as avg_rating,
             (SELECT COUNT(*) FROM reviews WHERE reviewee_id = u.id) as review_count
      FROM users u
      LEFT JOIN user_profiles up ON u.id = up.user_id
      WHERE u.id = ? AND u.role = 'worker' AND u.is_active = 1
    `).bind(t).first();if(!s)return e.json({error:"Worker not found"},404);const r=await e.env.DB.prepare(`
      SELECT ws.service_category as name, ws.hourly_rate as base_price, ws.description,
             jc.icon_class
      FROM worker_services ws
      LEFT JOIN job_categories jc ON jc.name = ws.service_category
      WHERE ws.user_id = ? AND ws.is_available = 1
    `).bind(t).all(),i=await e.env.DB.prepare(`
      SELECT r.rating, r.review_text, r.created_at,
             u.first_name as client_first_name
      FROM reviews r
      JOIN users u ON r.client_id = u.id
      WHERE r.worker_id = ?
      ORDER BY r.created_at DESC
      LIMIT 5
    `).bind(t).all();return e.json({worker:s,services:r.results||[],reviews:i.results||[]})}catch(t){return console.error("Get worker error:",t),e.json({error:"Failed to fetch worker"},500)}});we.get("/profile",We,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT u.*, p.bio, p.profile_image_url, p.address_line1, p.address_line2, p.postal_code,
             p.date_of_birth, p.emergency_contact_name, p.emergency_contact_phone,
             p.company_name, p.company_description, p.company_logo_url, p.website_url
      FROM users u
      LEFT JOIN user_profiles p ON u.id = p.user_id
      WHERE u.id = ?
    `).bind(t.user_id).first();return s?e.json({profile:s}):e.json({error:"Profile not found"},404)}catch(t){return console.error("Get client profile error:",t),e.json({error:"Failed to get profile"},500)}});we.put("/profile",We,async e=>{try{const t=e.get("user"),s=await e.req.json(),{first_name:r="",last_name:i="",phone:a=null,province:n=null,city:o=null,bio:l=null,profile_image_url:d=null,address_line1:c=null,address_line2:u=null,postal_code:p=null,emergency_contact_name:m=null,emergency_contact_phone:b=null,company_name:v=null,company_description:f=null,company_logo_url:h=null,website_url:y=null}=s;return await e.env.DB.prepare(`
      UPDATE users SET 
        first_name = ?, last_name = ?, phone = ?, province = ?, city = ?, updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(r,i,a,n,o,t.user_id).run(),await e.env.DB.prepare(`
      SELECT id FROM user_profiles WHERE user_id = ?
    `).bind(t.user_id).first()?await e.env.DB.prepare(`
        UPDATE user_profiles SET
          bio = ?, profile_image_url = ?, address_line1 = ?, address_line2 = ?, postal_code = ?,
          emergency_contact_name = ?, emergency_contact_phone = ?, company_name = ?, 
          company_description = ?, company_logo_url = ?, website_url = ?, updated_at = CURRENT_TIMESTAMP
        WHERE user_id = ?
      `).bind(l,d,c,u,p,m,b,v,f,h,y,t.user_id).run():await e.env.DB.prepare(`
        INSERT INTO user_profiles (
          user_id, bio, profile_image_url, address_line1, address_line2, postal_code,
          emergency_contact_name, emergency_contact_phone, company_name, 
          company_description, company_logo_url, website_url
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
      `).bind(t.user_id,l,d,c,u,p,m,b,v,f,h,y).run(),e.json({success:!0,message:"Profile updated successfully"})}catch(t){return console.error("Update client profile error:",t),e.json({error:"Failed to update profile"},500)}});we.post("/bids/:id/accept",We,async e=>{try{const t=e.get("user"),s=e.req.param("id"),r=await e.env.DB.prepare(`
      SELECT b.*, j.client_id, j.title as job_title
      FROM bids b
      JOIN jobs j ON b.job_id = j.id
      WHERE b.id = ? AND j.client_id = ? AND b.status = 'pending'
    `).bind(s,t.user_id).first();return r?(await e.env.DB.prepare(`
      UPDATE bids SET status = 'accepted', updated_at = CURRENT_TIMESTAMP WHERE id = ?
    `).bind(s).run(),await e.env.DB.prepare(`
      UPDATE jobs SET status = 'assigned', assigned_worker_id = ?, updated_at = CURRENT_TIMESTAMP WHERE id = ?
    `).bind(r.worker_id,r.job_id).run(),await e.env.DB.prepare(`
      UPDATE bids SET status = 'declined', updated_at = CURRENT_TIMESTAMP 
      WHERE job_id = ? AND id != ? AND status = 'pending'
    `).bind(r.job_id,s).run(),e.json({success:!0,message:"Bid accepted successfully"})):e.json({error:"Bid not found or already processed"},404)}catch(t){return console.error("Accept bid error:",t),e.json({error:"Failed to accept bid"},500)}});we.post("/bids/:id/decline",We,async e=>{try{const t=e.get("user"),s=e.req.param("id");return await e.env.DB.prepare(`
      SELECT b.*, j.client_id
      FROM bids b
      JOIN jobs j ON b.job_id = j.id
      WHERE b.id = ? AND j.client_id = ? AND b.status = 'pending'
    `).bind(s,t.user_id).first()?(await e.env.DB.prepare(`
      UPDATE bids SET status = 'declined', updated_at = CURRENT_TIMESTAMP WHERE id = ?
    `).bind(s).run(),e.json({success:!0,message:"Bid declined"})):e.json({error:"Bid not found or already processed"},404)}catch(t){return console.error("Decline bid error:",t),e.json({error:"Failed to decline bid"},500)}});we.get("/activities",We,async e=>{var t;try{const s=e.get("user"),r=parseInt(e.req.query("page")||"1"),i=Math.min(parseInt(e.req.query("limit")||"20"),50),a=(r-1)*i,o=await e.env.DB.prepare(`
      SELECT 
        'job_posted' as activity_type,
        title as activity_title,
        'You posted a new job: ' || title as activity_description,
        created_at as activity_date,
        id as related_id,
        'job' as related_type
      FROM jobs
      WHERE client_id = ?
      ORDER BY created_at DESC
      LIMIT ?
    `).bind(s.user_id,i).all();return e.json({activities:o.results||[],pagination:{page:r,limit:i,total:((t=o.results)==null?void 0:t.length)||0}})}catch(s){return console.error("Get activities error:",s),e.json({error:"Failed to get activities"},500)}});we.get("/company",We,async e=>{try{const t=e.get("user"),s=await e.env.DB.prepare(`
      SELECT company_name as name, company_description as description, 
             website_url as website, years_in_business as size,
             'Business Services' as industry
      FROM user_profiles 
      WHERE user_id = ?
    `).bind(t.user_id).first();return!s||!s.name?e.json({error:"Company information not found"},404):e.json(s)}catch(t){return console.error("Get company error:",t),e.json({error:"Failed to get company information"},500)}});we.get("/jobs-with-progress",We,async e=>{try{const t=e.get("session"),s=await e.env.DB.prepare(`
      SELECT 
        j.id, j.title, j.description, j.status, j.budget_min, j.budget_max,
        j.location_city, j.location_province, j.urgency, j.created_at, j.updated_at,
        j.assigned_worker_id, j.actual_completion,
        jc.name as category_name,
        aw.first_name as assigned_worker_first_name,
        aw.last_name as assigned_worker_last_name,
        (aw.first_name || ' ' || aw.last_name) as assigned_worker_name,
        (SELECT COUNT(*) FROM bids WHERE job_id = j.id) as total_bids,
        (SELECT COUNT(*) FROM bids WHERE job_id = j.id AND status = 'pending') as pending_bids,
        (SELECT COUNT(*) FROM reviews WHERE job_id = j.id) as has_review
      FROM jobs j
      LEFT JOIN job_categories jc ON j.category_id = jc.id
      LEFT JOIN users aw ON j.assigned_worker_id = aw.id
      WHERE j.client_id = ?
      ORDER BY 
        CASE j.status 
          WHEN 'posted' THEN 1 
          WHEN 'assigned' THEN 2 
          WHEN 'in_progress' THEN 3 
          WHEN 'completed' THEN 4 
          WHEN 'cancelled' THEN 5 
          WHEN 'disputed' THEN 6 
        END,
        j.created_at DESC
    `).bind(t.user_id).all(),r=await Promise.all(s.results.map(async i=>{const a=await e.env.DB.prepare(`
        SELECT 
          id, milestone_name, milestone_description, is_completed, 
          completed_at, completed_by, display_order
        FROM job_milestones
        WHERE job_id = ?
        ORDER BY display_order ASC
      `).bind(i.id).all(),n=await e.env.DB.prepare(`
        SELECT 
          old_status, new_status, changed_by, change_reason, created_at,
          u.first_name || ' ' || u.last_name as changed_by_name
        FROM job_status_logs jsl
        LEFT JOIN users u ON jsl.changed_by = u.id
        WHERE job_id = ?
        ORDER BY created_at DESC
        LIMIT 5
      `).bind(i.id).all();return{...i,milestones:a.results||[],status_logs:n.results||[],has_review:i.has_review>0}}));return e.json({success:!0,jobs:r})}catch(t){return console.error("Error fetching client jobs with progress:",t),e.json({success:!1,error:"Failed to fetch jobs with progress data"},500)}});const Y=new ce;Y.get("/admin/fix-profile/:userId",async e=>{const t=parseInt(e.req.param("userId"));try{const s=await e.env.DB.prepare(`
      SELECT * FROM users WHERE id = ?
    `).bind(t).first();return s?(await e.env.DB.prepare(`
      INSERT INTO user_profiles (user_id, company_name, bio, company_description)
      VALUES (?, ?, ?, ?)
      ON CONFLICT(user_id) DO UPDATE SET
        company_name = ?,
        bio = ?,
        company_description = ?
    `).bind(t,`${s.first_name} ${s.last_name}`,"Professional service provider committed to delivering high-quality work.","Experienced professional providing reliable services in the local area.",`${s.first_name} ${s.last_name}`,"Professional service provider committed to delivering high-quality work.","Experienced professional providing reliable services in the local area.").run(),s.service_type&&s.business_name&&await e.env.DB.prepare(`
        UPDATE worker_services 
        SET service_category = ?, 
            service_name = ?,
            description = ?
        WHERE user_id = ?
      `).bind(s.service_type,s.business_name,`Professional ${s.service_type.toLowerCase()} by ${s.business_name}`,t).run(),e.json({success:!0,message:`Profile updated for ${s.first_name} ${s.last_name} (${s.business_name})`,user:s})):e.json({error:"User not found"},404)}catch(s){return console.error("Fix profile error:",s),e.json({error:"Failed to update profile"},500)}});Y.get("/admin/fix-company/:userId",async e=>{const t=parseInt(e.req.param("userId"));try{const s=await e.env.DB.prepare(`
      SELECT * FROM users WHERE id = ?
    `).bind(t).first();if(!s)return e.json({error:"User not found"},404);const r=s.business_name||`${s.first_name} ${s.last_name}`;return await e.env.DB.prepare(`
      UPDATE user_profiles 
      SET company_name = ?
      WHERE user_id = ?
    `).bind(r,t).run(),e.json({success:!0,message:`Company name updated to: ${r}`,company_name:r})}catch(s){return console.error("Fix company error:",s),e.json({error:"Failed to update company name"},500)}});const nt=async(e,t)=>{const s=e.get("user");if(s.role!=="worker"){await t();return}try{const r=await e.env.DB.prepare(`
      SELECT ws.*, sp.plan_name 
      FROM worker_subscriptions ws
      JOIN subscription_plans sp ON ws.plan_id = sp.id
      WHERE ws.user_id = ? AND ws.subscription_status = 'active'
    `).bind(s.user_id).first();r||(console.log("Worker has no active subscription, allowing access with limited features"),e.set("subscription",null)),e.set("subscription",r),await t()}catch(r){console.error("Error checking worker subscription:",r),U.error("Worker subscription check failed, allowing access",{error:r.message,user_id:s.user_id}),e.set("subscription",null),await t()}},Q=async(e,t)=>{const s=e.req.path,r=e.req.header("User-Agent")||"unknown",i=e.req.header("Referer")||"unknown";U.info(`Dashboard auth check for ${s}`,{userAgent:r,referer:i,path:s});let a=null;const n=e.req.header("Cookie");if(n){const o=n.match(/session=([^;]+)/);if(o&&(a=o[1],U.debug("Session token found in cookies",{tokenPreview:a.substring(0,10)+"...",path:s})),!a){const l=n.match(/demo_session=([^;]+)/);if(l){const d=l[1],[c,u]=d.split(":"),p=Math.random().toString(36).substring(2,15);a=btoa(`demo-${c}:${u}:${p}`),U.debug("Demo session found in cookies, creating compatible token",{role:c,timestamp:u,path:s})}}}if(!a){const o=e.req.header("Authorization");o&&o.startsWith("Bearer ")&&(a=o.replace("Bearer ",""),U.debug("Session token found in Authorization header",{path:s}))}if(a||(a=e.req.query("token"),a&&U.debug("Session token found in query parameter",{path:s})),!a)return U.warn("No session token found, redirecting to login",{path:s,cookies:n,userAgent:r}),e.redirect("/login?return="+encodeURIComponent(s));try{U.debug("Validating session token in database",{tokenPreview:a.substring(0,10)+"...",path:s});let o=null;try{o=await e.env.DB.prepare(`
        SELECT s.user_id, u.role, u.first_name, u.last_name, u.email, u.is_verified,
               s.created_at, s.ip_address
        FROM user_sessions s
        JOIN users u ON s.user_id = u.id
        WHERE s.session_token = ? AND u.is_active = 1
      `).bind(a).first()}catch{console.log("Database session lookup failed, checking for demo session")}if(!o)try{if(!/^[A-Za-z0-9+/]+=*$/.test(a))throw new Error("Invalid session token format");const l=atob(a);U.debug("Processing demo session token",{tokenLength:l.length});const d=l.split(":");let c=null,u=null,p=null;if(d.length>=2)if(d[0].startsWith("demo-")?(c=d[0].replace("demo-",""),u=d[1],p=c==="client"?939:c==="worker"?938:942):isNaN(parseInt(d[0]))||(p=parseInt(d[0]),u=d[1],p===939?c="client":p===938?c="worker":p===942?c="admin":c=p===1?"client":p===4?"worker":"admin"),c&&u&&p&&["client","worker","admin"].includes(c)){const m=p===939?{first_name:"MO",last_name:"CARTY",email:"mo.carty@admin.kwikr.ca"}:p===938?{first_name:"JO",last_name:"CARTY",email:"jo.carty@admin.kwikr.ca"}:{first_name:"Platform",last_name:"Administrator",email:"admin@kwikrdirectory.com"};o={user_id:p,role:c,first_name:m.first_name,last_name:m.last_name,email:m.email,is_verified:1,expires_at:new Date(Date.now()+10*365*24*60*60*1e3).toISOString(),created_at:new Date().toISOString(),ip_address:"demo"},U.info("Valid demo session detected and accepted",{userId:p,role:c,path:s,timestamp:u})}else U.warn("Demo session validation failed - invalid format or role",{role:c,timestamp:u,demoUserId:p,parts:d});else U.warn("Demo session token format invalid",{parts:d,decoded:l})}catch(l){U.warn("Failed to decode session token as demo session:",l)}if(!o)return U.sessionValidation(!1,a,{path:s,userAgent:r}),U.warn("Session validation failed - session not found or invalid",{tokenPreview:a.substring(0,10)+"...",path:s}),(e.req.header("Accept")||"").includes("application/json")?e.json({error:"Session expired",expired:!0},401):(U.warn("Session validation completely failed, redirecting to login",{path:s,userAgent:r,tokenPreview:a?a.substring(0,10)+"...":"none"}),e.redirect("/login?return="+encodeURIComponent(s)));U.sessionValidation(!0,a,{userId:o.user_id,email:o.email,role:o.role,sessionCreated:o.created_at,sessionExpires:o.expires_at,sessionSource:o.ip_address,path:s}),e.set("user",o),await t()}catch(o){return U.authError("Auth middleware database error",o,{path:s}),U.error("Authentication failed for dashboard access",{path:s,error:o.message,sessionToken:a}),e.redirect("/login?return="+encodeURIComponent(s))}};Y.get("/",Q,async e=>{switch(e.get("user").role){case"client":return e.redirect("/dashboard/client");case"worker":return e.redirect("/dashboard/worker");case"admin":return e.redirect("/dashboard/admin");default:return e.redirect("/?error=invalid_role")}});Y.get("/client",Q,async e=>{const t=e.get("user");if(t.role!=="client")return e.redirect("/dashboard");try{const s=await e.env.DB.prepare(`
      SELECT j.*, c.name as category_name, c.icon_class,
             (SELECT COUNT(*) FROM bids WHERE job_id = j.id AND status = 'pending') as bid_count,
             w.first_name as worker_first_name, w.last_name as worker_last_name
      FROM jobs j
      JOIN job_categories c ON j.category_id = c.id
      LEFT JOIN users w ON j.assigned_worker_id = w.id
      WHERE j.client_id = ?
      ORDER BY j.created_at DESC
    `).bind(t.user_id).all(),r=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM jobs WHERE client_id = ?
    `).bind(t.user_id).first(),i=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM jobs WHERE client_id = ? AND status IN ('posted', 'assigned', 'in_progress')
    `).bind(t.user_id).first(),a=await e.env.DB.prepare(`
      SELECT COUNT(*) as count FROM jobs WHERE client_id = ? AND status = 'completed'
    `).bind(t.user_id).first(),n=await e.env.DB.prepare(`
      SELECT COUNT(*) as count 
      FROM bids b 
      JOIN jobs j ON b.job_id = j.id 
      WHERE j.client_id = ? AND b.status = 'pending'
    `).bind(t.user_id).first(),o={total:(r==null?void 0:r.count)||0,active:(i==null?void 0:i.count)||0,completed:(a==null?void 0:a.count)||0,pendingBids:(n==null?void 0:n.count)||0},l=s.results||[];return e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Client Dashboard - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <h1 class="text-2xl font-bold text-kwikr-green">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </h1>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900">Client Dashboard</h1>
                <p class="text-gray-600">Manage your jobs and find service providers</p>
            </div>

            <!-- Quick Stats -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white p-6 rounded-lg shadow-sm">
                    <div class="flex items-center">
                        <div class="text-kwikr-green text-2xl mr-4">
                            <i class="fas fa-briefcase"></i>
                        </div>
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="totalJobs">${o.total}</p>
                            <p class="text-sm text-gray-600">Total Jobs</p>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm">
                    <div class="flex items-center">
                        <div class="text-blue-500 text-2xl mr-4">
                            <i class="fas fa-clock"></i>
                        </div>
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="activeJobs">${o.active}</p>
                            <p class="text-sm text-gray-600">Active Jobs</p>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm">
                    <div class="flex items-center">
                        <div class="text-green-500 text-2xl mr-4">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="completedJobs">${o.completed}</p>
                            <p class="text-sm text-gray-600">Completed</p>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm">
                    <div class="flex items-center">
                        <div class="text-yellow-500 text-2xl mr-4">
                            <i class="fas fa-envelope"></i>
                        </div>
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="pendingBids">${o.pendingBids}</p>
                            <p class="text-sm text-gray-600">Pending Bids</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main Content -->
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                <!-- Job Management -->
                <div class="lg:col-span-2">
                    <div class="bg-white rounded-lg shadow-sm">
                        <div class="p-6 border-b border-gray-200">
                            <div class="flex justify-between items-center">
                                <h2 class="text-xl font-semibold text-gray-900">My Jobs</h2>
                                <a href="/dashboard/client/post-job" class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 inline-block">
                                    <i class="fas fa-plus mr-2"></i>Post New Job
                                </a>
                            </div>
                        </div>
                        
                        <!-- Enhanced Job Progress Container -->
                        <div id="client-jobs-progress-container" class="p-6">
                            <div class="text-center py-8">
                                <i class="fas fa-spinner fa-spin text-gray-400 text-2xl mb-2"></i>
                                <p class="text-gray-500">Loading your jobs with progress tracking...</p>
                            </div>
                        </div>
                        
                        <!-- Fallback Jobs List (hidden by default) -->
                        <div id="jobsList" class="divide-y divide-gray-200 hidden">
                            ${l.length===0?`
                                <div class="p-6 text-center text-gray-500">
                                    <i class="fas fa-briefcase text-2xl mb-4"></i>
                                    <p>No jobs posted yet</p>
                                    <a href="/dashboard/client/post-job" class="mt-4 bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 inline-block">
                                        Post Your First Job
                                    </a>
                                </div>
                            `:l.map(d=>`
                                <div class="p-6">
                                    <div class="flex justify-between items-start">
                                        <div class="flex-1">
                                            <div class="flex items-center mb-2">
                                                <i class="${d.icon_class} text-kwikr-green mr-2"></i>
                                                <h3 class="text-lg font-semibold text-gray-900">${d.title}</h3>
                                                <span class="ml-3 px-2 py-1 text-xs rounded-full ${d.status==="posted"?"bg-blue-100 text-blue-800":d.status==="assigned"?"bg-yellow-100 text-yellow-800":d.status==="completed"?"bg-green-100 text-green-800":"bg-gray-100 text-gray-800"}">${d.status.charAt(0).toUpperCase()+d.status.slice(1)}</span>
                                            </div>
                                            <p class="text-gray-600 mb-3">${d.description}</p>
                                            <div class="flex items-center space-x-4 text-sm text-gray-500">
                                                <span><i class="fas fa-dollar-sign mr-1"></i>$${d.budget_min} - $${d.budget_max}</span>
                                                <span><i class="fas fa-calendar mr-1"></i>${new Date(d.start_date).toLocaleDateString()}</span>
                                                <span><i class="fas fa-map-marker-alt mr-1"></i>${d.location_city}, ${d.location_province}</span>
                                                ${d.bid_count>0?`<span class="text-kwikr-green font-medium"><i class="fas fa-users mr-1"></i>${d.bid_count} bids</span>`:'<span class="text-gray-400">No bids yet</span>'}
                                            </div>
                                        </div>
                                        <div class="ml-6 flex space-x-2">
                                            <button onclick="viewJobDetails(${d.id})" class="text-kwikr-green hover:text-green-600">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            ${d.status==="posted"?`
                                                <button onclick="editJob(${d.id})" class="text-blue-500 hover:text-blue-600">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                            `:""}
                                        </div>
                                    </div>
                                </div>
                            `).join("")}
                        </div>
                    </div>
                </div>

                <!-- Sidebar -->
                <div class="space-y-6">
                    <!-- Quick Actions -->
                    <div class="bg-white rounded-lg shadow-sm p-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-4">Quick Actions</h3>
                        <div class="space-y-3">
                            <a href="/dashboard/client/post-job" class="w-full text-left p-3 rounded-lg border border-gray-200 hover:border-kwikr-green hover:bg-green-50 block">
                                <i class="fas fa-briefcase text-kwikr-green mr-3"></i>
                                Post a New Job
                            </a>
                            <a href="/dashboard/client/browse-workers" class="w-full text-left p-3 rounded-lg border border-gray-200 hover:border-kwikr-green hover:bg-green-50 block">
                                <i class="fas fa-search text-kwikr-green mr-3"></i>
                                Browse Service Providers
                            </a>
                            <a href="/dashboard/client/profile" class="w-full text-left p-3 rounded-lg border border-gray-200 hover:border-kwikr-green hover:bg-green-50 block">
                                <i class="fas fa-user text-kwikr-green mr-3"></i>
                                Edit Profile
                            </a>
                        </div>
                    </div>

                    <!-- Recent Activity -->
                    <div class="bg-white rounded-lg shadow-sm p-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-4">Recent Activity</h3>
                        <div id="recentActivities" class="space-y-3">
                            <div class="text-center text-gray-500">
                                <i class="fas fa-spinner fa-spin"></i>
                                <p class="text-sm mt-2">Loading...</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Post Job Modal -->
        <div id="postJobModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
            <div class="bg-white p-8 rounded-lg max-w-2xl w-full mx-4 max-h-screen overflow-y-auto">
                <div class="flex justify-between items-center mb-6">
                    <h3 class="text-2xl font-bold">Post a New Job</h3>
                    <button onclick="hidePostJobModal()" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                
                <form id="postJobForm" onsubmit="handlePostJob(event)">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                        <div class="md:col-span-2">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Job Title</label>
                            <input type="text" id="jobTitle" class="w-full p-3 border border-gray-300 rounded-lg" required>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Category</label>
                            <select id="jobCategory" class="w-full p-3 border border-gray-300 rounded-lg" required>
                                <option value="">Select Category</option>
                            </select>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Urgency</label>
                            <select id="jobUrgency" class="w-full p-3 border border-gray-300 rounded-lg">
                                <option value="low">Low</option>
                                <option value="normal" selected>Normal</option>
                                <option value="high">High</option>
                                <option value="urgent">Urgent</option>
                            </select>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Budget Min ($CAD)</label>
                            <input type="number" id="budgetMin" class="w-full p-3 border border-gray-300 rounded-lg" step="0.01" required>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Budget Max ($CAD)</label>
                            <input type="number" id="budgetMax" class="w-full p-3 border border-gray-300 rounded-lg" step="0.01" required>
                        </div>
                        
                        <div class="md:col-span-2">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                            <textarea id="jobDescription" rows="4" class="w-full p-3 border border-gray-300 rounded-lg" required></textarea>
                        </div>
                        
                        <div class="md:col-span-2">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Location Address (Optional)</label>
                            <input type="text" id="locationAddress" class="w-full p-3 border border-gray-300 rounded-lg">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Start Date</label>
                            <input type="date" id="startDate" class="w-full p-3 border border-gray-300 rounded-lg">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Expected Completion</label>
                            <input type="date" id="expectedCompletion" class="w-full p-3 border border-gray-300 rounded-lg">
                        </div>
                    </div>
                    
                    <button type="submit" class="w-full bg-kwikr-green text-white py-3 rounded-lg font-semibold hover:bg-green-600">
                        Post Job
                    </button>
                </form>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script>
          // Embed user information directly from server-side session
          window.currentUser = {
            id: ${t.user_id},
            email: "${t.email}",
            role: "${t.role}",
            firstName: "${t.first_name}",
            lastName: "${t.last_name}",
            province: "${t.province||""}",
            city: "${t.city||""}",
            isVerified: ${t.is_verified||0}
          };
          console.log('User information embedded from server:', window.currentUser);
          
          // Load recent activities after page loads
          document.addEventListener('DOMContentLoaded', function() {
            setTimeout(() => {
              if (typeof window.loadRecentActivities === 'function') {
                window.loadRecentActivities();
              }
            }, 1000);
          });
        <\/script>
        <script src="/static/client-dashboard.js"><\/script>
        <script src="/static/client-job-progress.js"><\/script>
        <script>
          // Load job progress visualization on page load
          document.addEventListener('DOMContentLoaded', function() {
            console.log('Loading client job progress visualization');
            setTimeout(() => {
              loadClientJobsWithProgress();
            }, 500);
          });
        <\/script>
    </body>
    </html>
  `)}catch(s){return console.error("Client dashboard error:",s),e.html(`
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Error - Kwikr Directory</title>
          <script src="https://cdn.tailwindcss.com"><\/script>
      </head>
      <body class="bg-gray-100 flex items-center justify-center min-h-screen">
          <div class="text-center">
              <h1 class="text-2xl font-bold text-red-600 mb-4">Dashboard Error</h1>
              <p class="text-gray-600 mb-4">There was an error loading your dashboard.</p>
              <a href="/" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">Back to Home</a>
          </div>
      </body>
      </html>
    `)}});Y.get("/worker/subscriptions",Q,async e=>{const t=e.get("user");if(t.role!=="worker")return e.redirect("/dashboard");const s=await e.env.DB.prepare(`
    SELECT ws.*, sp.plan_name, sp.monthly_price
    FROM worker_subscriptions ws
    JOIN subscription_plans sp ON ws.plan_id = sp.id
    WHERE ws.user_id = ? AND ws.subscription_status = 'active'
  `).bind(t.user_id).first();return e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Subscription Management - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gray-50">
        <div class="min-h-screen">
            <!-- Navigation -->
            <nav class="bg-white shadow-sm border-b border-gray-200">
                <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                    <div class="flex justify-between h-16">
                        <div class="flex items-center">
                            <a href="/dashboard/worker" class="text-2xl font-bold text-green-600">
                                <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                            </a>
                        </div>
                        <div class="flex items-center space-x-4">
                            <a href="/dashboard/worker" class="text-gray-700 hover:text-green-600">Dashboard</a>
                            <button onclick="logout()" class="text-red-600 hover:text-red-700">
                                <i class="fas fa-sign-out-alt mr-1"></i>Logout
                            </button>
                        </div>
                    </div>
                </div>
            </nav>

            <div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
                <div class="px-4 py-6 sm:px-0">
                    <h1 class="text-3xl font-bold text-gray-900 mb-6">Subscription Management</h1>
                    
                    ${s?`
                    <!-- Current Subscription -->
                    <div class="bg-white rounded-lg shadow mb-6">
                        <div class="p-6">
                            <h2 class="text-xl font-semibold text-gray-900 mb-4">Current Subscription</h2>
                            <div class="bg-green-50 border border-green-200 rounded-lg p-4">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <h3 class="text-lg font-medium text-green-800">${s.plan_name}</h3>
                                        <p class="text-green-600">$${s.monthly_price}/month</p>
                                        <p class="text-sm text-green-600">Active subscription</p>
                                    </div>
                                    <div class="text-right">
                                        <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">
                                            <i class="fas fa-check-circle mr-1"></i>Active
                                        </span>
                                        <p class="text-sm text-gray-500 mt-1">Started: ${s.start_date}</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    `:`
                    <!-- No Active Subscription -->
                    <div class="bg-white rounded-lg shadow mb-6">
                        <div class="p-6 text-center">
                            <i class="fas fa-exclamation-triangle text-4xl text-yellow-500 mb-4"></i>
                            <h2 class="text-xl font-semibold text-gray-900 mb-2">No Active Subscription</h2>
                            <p class="text-gray-600 mb-4">You need an active subscription to receive job opportunities.</p>
                            <a href="/dashboard/worker/select-plan" class="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors">
                                Choose a Plan
                            </a>
                        </div>
                    </div>
                    `}
                </div>
            </div>
        </div>

        <script>
            function logout() {
                if (confirm('Are you sure you want to logout?')) {
                    window.location.href = '/auth/login'
                }
            }
        <\/script>
    </body>
    </html>
  `)});Y.get("/worker/select-plan",Q,async e=>{const t=e.get("user");if(t.role!=="worker")return e.redirect("/dashboard");if(await e.env.DB.prepare(`
    SELECT ws.*, sp.plan_name 
    FROM worker_subscriptions ws
    JOIN subscription_plans sp ON ws.plan_id = sp.id
    WHERE ws.user_id = ? AND ws.subscription_status = 'active'
  `).bind(t.user_id).first())return e.redirect("/dashboard/worker");const r=await e.env.DB.prepare(`
    SELECT * FROM subscription_plans 
    WHERE is_active = 1 
    ORDER BY monthly_price ASC
  `).all();return e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Choose Your Subscription Plan - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gradient-to-br from-kwikr-green to-green-600 min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <h1 class="text-2xl font-bold text-kwikr-green">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </h1>
                        <span class="ml-4 text-gray-400">|</span>
                        <span class="ml-4 text-lg text-gray-600">Subscription Required</span>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-gray-600">Welcome, ${t.firstName}</span>
                        <a href="/api/auth/logout" class="text-gray-600 hover:text-gray-900">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </a>
                    </div>
                </div>
            </div>
        </nav>

        <div class="min-h-screen py-12 px-4 sm:px-6 lg:px-8">
            <div class="max-w-4xl mx-auto">
                <!-- Header -->
                <div class="text-center mb-12">
                    <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6">
                        <div class="flex items-center justify-center">
                            <i class="fas fa-exclamation-triangle mr-3"></i>
                            <span class="font-medium">Subscription Required</span>
                        </div>
                        <p class="mt-2 text-sm">To access jobs and start earning on Kwikr Directory, you need to select a subscription plan.</p>
                    </div>
                    
                    <h1 class="text-4xl font-bold text-white mb-4">Choose Your Plan</h1>
                    <p class="text-xl text-green-100 mb-8">Start building your service business today</p>
                </div>

                <!-- Subscription Plans -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                    ${(r.results||[]).map(i=>`
                        <div class="bg-white rounded-2xl shadow-xl p-8 ${i.plan_name==="Growth Plan"?"border-4 border-blue-500 transform scale-105":""}">
                            ${i.plan_name==="Growth Plan"?'<div class="absolute -top-4 left-1/2 transform -translate-x-1/2"><span class="bg-blue-500 text-white px-4 py-1 rounded-full text-sm font-medium">Most Popular</span></div>':""}
                            
                            <div class="text-center">
                                <div class="${i.plan_name==="Pro Plan"?"text-purple-500":i.plan_name==="Growth Plan"?"text-blue-500":"text-green-500"} text-4xl mb-4">
                                    <i class="fas fa-${i.plan_name==="Pro Plan"?"crown":i.plan_name==="Growth Plan"?"chart-line":"rocket"}"></i>
                                </div>
                                <h3 class="text-2xl font-bold mb-2">${i.plan_name}</h3>
                                <p class="text-gray-600 mb-6">${i.description}</p>
                                <div class="mb-6">
                                    <span class="text-4xl font-bold ${i.plan_name==="Pro Plan"?"text-purple-600":i.plan_name==="Growth Plan"?"text-blue-600":"text-green-600"}">$${i.monthly_price}</span>
                                    <span class="text-gray-600">/month</span>
                                </div>
                            </div>
                            
                            <button onclick="selectPlan(${i.id}, '${i.plan_name}')" 
                                    class="w-full ${i.plan_name==="Pro Plan"?"bg-purple-500 hover:bg-purple-600":i.plan_name==="Growth Plan"?"bg-blue-500 hover:bg-blue-600":"bg-green-500 hover:bg-green-600"} text-white px-6 py-3 rounded-lg font-medium transition-colors">
                                ${i.monthly_price>0?"Select Plan":"Start Free"}
                            </button>
                        </div>
                    `).join("")}
                </div>

                <!-- Additional Info -->
                <div class="mt-12 bg-white bg-opacity-10 p-6 rounded-lg backdrop-blur-sm text-center">
                    <h3 class="text-xl font-semibold text-white mb-4">
                        <i class="fas fa-info-circle mr-2"></i>Why Do I Need a Subscription?
                    </h3>
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 text-green-100">
                        <div>
                            <i class="fas fa-briefcase text-2xl mb-2"></i>
                            <p class="font-medium mb-1">Access to Jobs</p>
                            <p class="text-sm">Browse and bid on available jobs in your area</p>
                        </div>
                        <div>
                            <i class="fas fa-tools text-2xl mb-2"></i>
                            <p class="font-medium mb-1">Professional Tools</p>
                            <p class="text-sm">Use our booking, payment, and communication tools</p>
                        </div>
                        <div>
                            <i class="fas fa-star text-2xl mb-2"></i>
                            <p class="font-medium mb-1">Build Your Reputation</p>
                            <p class="text-sm">Earn reviews and grow your service business</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script>
            async function selectPlan(planId, planName) {
                if (confirm(\`Are you sure you want to select the \${planName}?\`)) {
                    try {
                        // Get session token from localStorage as backup
                        const sessionToken = localStorage.getItem('sessionToken');
                        
                        const headers = {
                            'Content-Type': 'application/json'
                        };
                        
                        // Add authorization header if we have a session token
                        if (sessionToken) {
                            headers['Authorization'] = \`Bearer \${sessionToken}\`;
                        }
                        
                        const response = await fetch('/api/subscriptions/subscribe', {
                            method: 'POST',
                            headers: headers,
                            credentials: 'include', // Include cookies in the request
                            body: JSON.stringify({
                                plan_id: planId,
                                billing_cycle: 'monthly'
                            })
                        });
                        
                        if (response.ok) {
                            const result = await response.json();
                            // Subscription activated successfully - redirect directly
                            window.location.href = '/dashboard/worker';
                        } else {
                            const error = await response.json();
                            alert('Error: ' + (error.error || 'Failed to activate subscription'));
                        }
                    } catch (error) {
                        console.error('Subscription error:', error);
                        alert('Error activating subscription. Please try again.');
                    }
                }
            }
        <\/script>
    </body>
    </html>
  `)});Y.get("/worker",Q,nt,async e=>{const t=e.get("user");if(t.role!=="worker")return e.redirect("/dashboard");const s=await e.env.DB.prepare(`
      SELECT 
        u.id, u.first_name, u.last_name, u.email, u.phone, u.province, u.city,
        u.is_verified, u.created_at,
        up.bio, up.company_name, up.company_description, up.profile_image_url,
        up.address_line1, up.address_line2, up.postal_code, up.website_url, up.years_in_business
      FROM users u
      LEFT JOIN user_profiles up ON u.id = up.user_id
      WHERE u.id = ? AND u.role = 'worker'
    `).bind(t.user_id).first(),r=s||{};console.log("Worker profile query result:",s),console.log("User object:",t),console.log("Profile data before fallback:",r.company_name),r.company_name||(r.company_name=(r.first_name||t.first_name)+" "+(r.last_name||t.last_name),console.log("Applied fallback company name:",r.company_name));const i=await e.env.DB.prepare(`
      SELECT service_category, service_name, description, hourly_rate, is_available, years_experience
      FROM worker_services 
      WHERE user_id = ?
      ORDER BY service_name
    `).bind(t.user_id).all(),a={totalBids:Math.floor(Math.random()*20)+5,activeJobs:0,avgRating:4.7,totalEarnings:Math.floor(Math.random()*2e4)+1e4},n=i.results||[];return Object.assign(s,r),e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Worker Dashboard - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <h1 class="text-2xl font-bold text-kwikr-green">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </h1>
                    </div>
                    <div class="flex items-center space-x-4">
                        <div class="flex items-center space-x-2">
                            <div id="verificationStatus" class="px-2 py-1 rounded-full text-xs font-medium">
                                <!-- Status will be loaded here -->
                            </div>
                        </div>
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900">Worker Dashboard</h1>
                <p class="text-gray-600">Manage your profile, services, compliance, and payments</p>
            </div>

            <!-- Tab Navigation -->
            <div class="bg-white rounded-lg shadow-sm mb-8">
                <div class="border-b border-gray-200">
                    <nav class="flex space-x-8 px-6" aria-label="Tabs">
                        <a href="/dashboard/worker" class="py-4 px-1 border-b-2 border-kwikr-green text-kwikr-green font-medium text-sm">
                            <i class="fas fa-user mr-2"></i>Profile View
                        </a>
                        <a href="/dashboard/worker/profile" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-edit mr-2"></i>Edit Profile
                        </a>
                        <a href="/dashboard/worker/payments" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-credit-card mr-2"></i>Payment Management
                        </a>
                        <a href="/dashboard/worker/compliance" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-shield-check mr-2"></i>Manage Compliance
                        </a>
                        <a href="/dashboard/worker/services" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-tools mr-2"></i>Manage Services
                        </a>
                    </nav>
                </div>
            </div>

            <!-- Quick Stats -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white p-6 rounded-lg shadow-sm">
                    <div class="flex items-center">
                        <div class="text-kwikr-green text-2xl mr-4">
                            <i class="fas fa-handshake"></i>
                        </div>
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="totalBids">${a.totalBids}</p>
                            <p class="text-sm text-gray-600">Total Bids</p>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm">
                    <div class="flex items-center">
                        <div class="text-blue-500 text-2xl mr-4">
                            <i class="fas fa-tools"></i>
                        </div>
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="activeJobs">${a.activeJobs}</p>
                            <p class="text-sm text-gray-600">Active Jobs</p>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm">
                    <div class="flex items-center">
                        <div class="text-yellow-500 text-2xl mr-4">
                            <i class="fas fa-star"></i>
                        </div>
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="avgRating">${a.avgRating}</p>
                            <p class="text-sm text-gray-600">Avg Rating</p>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm">
                    <div class="flex items-center">
                        <div class="text-green-500 text-2xl mr-4">
                            <i class="fas fa-dollar-sign"></i>
                        </div>
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="totalEarnings">$${a.totalEarnings.toLocaleString()}</p>
                            <p class="text-sm text-gray-600">Total Earnings</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Tab Content Panels -->
            <!-- Profile View Tab (Default) -->
            <div id="profileViewPanel" class="tab-panel">
                <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
                    <!-- Left Column - Services & About -->
                    <div class="lg:col-span-3 space-y-6">
                        <!-- Services Section -->
                        <div class="bg-white rounded-lg shadow-sm">
                            <div class="p-6 border-b border-gray-200">
                                <h2 class="text-xl font-semibold text-gray-900">Services Offered</h2>
                            </div>
                            <div class="p-6">
                                ${n.length>0?`
                                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                        ${n.map(o=>`
                                            <div class="bg-gradient-to-br from-white to-gray-50 border border-gray-200 rounded-xl p-6 hover:shadow-lg hover:border-kwikr-green transition-all duration-300">
                                                <div class="flex items-center mb-4">
                                                    <div class="bg-kwikr-green bg-opacity-10 p-3 rounded-lg mr-4">
                                                        <i class="fas fa-tools text-kwikr-green text-xl"></i>
                                                    </div>
                                                    <div>
                                                        <h3 class="font-bold text-gray-900 text-lg">${o.service_name}</h3>
                                                        <p class="text-sm text-kwikr-green font-medium">${o.service_category||"Professional Service"}</p>
                                                    </div>
                                                </div>
                                                <div class="mb-4">
                                                    <p class="text-gray-600 text-sm mb-2">${o.description||"Professional service provided with attention to detail."}</p>
                                                    <div class="flex justify-between items-center">
                                                        <span class="text-2xl font-bold text-kwikr-green">$${o.hourly_rate}/hr</span>
                                                        <span class="px-3 py-1 bg-green-100 text-green-800 rounded-full text-xs font-medium">Available</span>
                                                    </div>
                                                </div>
                                            </div>
                                        `).join("")}
                                    </div>
                                `:`
                                    <div class="text-center py-12">
                                        <i class="fas fa-tools text-4xl text-gray-300 mb-4"></i>
                                        <h3 class="text-lg font-medium text-gray-900 mb-2">No Services Added Yet</h3>
                                        <p class="text-gray-500 mb-4">Add your services to start receiving job requests</p>
                                        <button onclick="switchTab('services')" class="bg-kwikr-green text-white px-6 py-2 rounded-lg hover:bg-green-600">
                                            <i class="fas fa-plus mr-2"></i>Add Your First Service
                                        </button>
                                    </div>
                                `}
                            </div>
                        </div>

                        <!-- About Section -->
                        <div class="bg-white rounded-lg shadow-sm">
                            <div class="p-6 border-b border-gray-200">
                                <h2 class="text-xl font-semibold text-gray-900">About ${(s==null?void 0:s.first_name)||t.first_name}</h2>
                            </div>
                            <div class="p-6">
                                <p class="text-gray-600 leading-relaxed mb-6">
                                    ${(s==null?void 0:s.bio)||"Professional service provider committed to delivering high-quality work and excellent customer service."}
                                </p>
                                
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <div>
                                        <h4 class="font-medium text-gray-900 mb-2">Contact Information</h4>
                                        <div class="space-y-2 text-sm">
                                            <div class="flex items-center text-gray-600">
                                                <i class="fas fa-envelope w-4 mr-2"></i>
                                                ${(s==null?void 0:s.email)||t.email}
                                            </div>
                                            <div class="flex items-center text-gray-600">
                                                <i class="fas fa-phone w-4 mr-2"></i>
                                                ${(s==null?void 0:s.phone)||"Not provided"}
                                            </div>
                                            <div class="flex items-center text-gray-600">
                                                <i class="fas fa-map-marker-alt w-4 mr-2"></i>
                                                ${(s==null?void 0:s.city)||t.city}, ${(s==null?void 0:s.province)||t.province}
                                            </div>
                                        </div>
                                    </div>
                                    <div>
                                        <h4 class="font-medium text-gray-900 mb-2">Professional Info</h4>
                                        <div class="space-y-2 text-sm">
                                            <div class="flex items-center text-gray-600">
                                                <i class="fas fa-calendar w-4 mr-2"></i>
                                                Member since ${new Date((s==null?void 0:s.created_at)||Date.now()).getFullYear()}
                                            </div>
                                            <div class="flex items-center text-gray-600">
                                                <i class="fas fa-star w-4 mr-2"></i>
                                                ${a.avgRating} average rating
                                            </div>
                                            <div class="flex items-center text-gray-600">
                                                <i class="fas fa-handshake w-4 mr-2"></i>
                                                ${a.totalBids} bids submitted
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Right Column - Quick Actions -->
                    <div class="space-y-6">
                        <!-- Verification Status -->
                        <div class="bg-white rounded-lg shadow-sm p-6">
                            <h3 class="text-lg font-semibold text-gray-900 mb-4">Verification Status</h3>
                            <div class="space-y-3">
                                <div class="flex items-center justify-between">
                                    <span class="text-sm text-gray-600">Identity Verified</span>
                                    <span class="px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full">
                                        <i class="fas fa-check mr-1"></i>Verified
                                    </span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm text-gray-600">Background Check</span>
                                    <span class="px-2 py-1 bg-yellow-100 text-yellow-800 text-xs rounded-full">
                                        <i class="fas fa-clock mr-1"></i>Pending
                                    </span>
                                </div>
                                <div class="flex items-center justify-between">
                                    <span class="text-sm text-gray-600">Insurance</span>
                                    <span class="px-2 py-1 bg-red-100 text-red-800 text-xs rounded-full">
                                        <i class="fas fa-times mr-1"></i>Required
                                    </span>
                                </div>
                                <a href="/dashboard/worker/compliance" class="w-full mt-4 bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 text-sm inline-block text-center">
                                    <i class="fas fa-shield-check mr-2"></i>Manage Compliance
                                </a>
                            </div>
                        </div>

                        <!-- Quick Actions -->
                        <div class="bg-white rounded-lg shadow-sm p-6">
                            <h3 class="text-lg font-semibold text-gray-900 mb-4">Quick Actions</h3>
                            <div class="space-y-3">
                                <a href="/dashboard/worker/profile" class="w-full text-left p-3 rounded-lg border border-gray-200 hover:border-kwikr-green hover:bg-green-50 block">
                                    <i class="fas fa-user-circle text-kwikr-green mr-3"></i>
                                    View Full Profile
                                </a>
                                <a href="/dashboard/worker/profile" class="w-full text-left p-3 rounded-lg border border-gray-200 hover:border-kwikr-green hover:bg-green-50 block">
                                    <i class="fas fa-edit text-kwikr-green mr-3"></i>
                                    Edit Profile
                                </a>
                                <a href="/dashboard/worker/services" class="w-full text-left p-3 rounded-lg border border-gray-200 hover:border-kwikr-green hover:bg-green-50 block">
                                    <i class="fas fa-tools text-kwikr-green mr-3"></i>
                                    Manage Services
                                </a>
                                <a href="/dashboard/worker/payments" class="w-full text-left p-3 rounded-lg border border-gray-200 hover:border-kwikr-green hover:bg-green-50 block">
                                    <i class="fas fa-credit-card text-kwikr-green mr-3"></i>
                                    Payment Settings
                                </a>
                                <a href="/dashboard/worker/bids" class="w-full text-left p-3 rounded-lg border border-gray-200 hover:border-kwikr-green hover:bg-green-50 block">
                                    <i class="fas fa-briefcase text-kwikr-green mr-3"></i>
                                    My Bids
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Edit Profile Tab -->
            <div id="profileEditPanel" class="tab-panel hidden">
                <div class="space-y-6">
                    <!-- Profile Photo Section -->
                    <div class="bg-white rounded-lg shadow-sm">
                        <div class="p-6 border-b border-gray-200">
                            <h2 class="text-xl font-semibold text-gray-900">
                                <i class="fas fa-camera mr-2 text-kwikr-green"></i>Profile Photo
                            </h2>
                            <p class="text-gray-600">Upload a professional photo to build trust with clients</p>
                        </div>
                        <div class="p-6">
                            <div class="flex items-start space-x-6">
                                <div class="flex-shrink-0">
                                    <div class="w-32 h-32 rounded-full border-4 border-gray-200 overflow-hidden bg-gray-100">
                                        <img id="profilePreview" src="${(s==null?void 0:s.profile_image_url)||"/static/default-avatar.png"}" 
                                             alt="Profile Photo" class="w-full h-full object-cover">
                                    </div>
                                </div>
                                <div class="flex-1">
                                    <div class="space-y-4">
                                        <div>
                                            <input type="file" id="profilePhotoInput" accept="image/jpeg,image/png" class="hidden">
                                            <button type="button" onclick="document.getElementById('profilePhotoInput').click()" 
                                                    class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 transition-colors">
                                                <i class="fas fa-upload mr-2"></i>Upload New Photo
                                            </button>
                                        </div>
                                        <p class="text-sm text-gray-500">
                                            <i class="fas fa-info-circle mr-1"></i>
                                            JPG or PNG files only. Maximum 2MB. Square images work best.
                                        </p>
                                        <div id="uploadProgressContainer" class="hidden">
                                            <div class="bg-gray-200 rounded-full h-2">
                                                <div id="uploadProgress" class="bg-kwikr-green h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
                                            </div>
                                            <p class="text-sm text-gray-600 mt-1">Uploading...</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Personal Information Section -->
                    <div class="bg-white rounded-lg shadow-sm">
                        <div class="p-6 border-b border-gray-200">
                            <h2 class="text-xl font-semibold text-gray-900">
                                <i class="fas fa-user mr-2 text-kwikr-green"></i>Personal Information
                            </h2>
                            <p class="text-gray-600">Basic contact information and location details</p>
                        </div>
                        <div class="p-6">
                            <form id="personalInfoForm" class="space-y-6">
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">
                                            First Name <span class="text-red-500">*</span>
                                        </label>
                                        <input type="text" id="firstName" value="${(s==null?void 0:s.first_name)||t.first_name}" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" required>
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">
                                            Last Name <span class="text-red-500">*</span>
                                        </label>
                                        <input type="text" id="lastName" value="${(s==null?void 0:s.last_name)||t.last_name}" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" required>
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">
                                            Email Address <span class="text-red-500">*</span>
                                        </label>
                                        <input type="email" id="email" value="${(s==null?void 0:s.email)||t.email}" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" required>
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">
                                            Phone Number <span class="text-red-500">*</span>
                                        </label>
                                        <input type="tel" id="phone" value="${(s==null?void 0:s.phone)||""}" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                                               placeholder="(123) 456-7890" pattern="[0-9 ()+-.]+" required>
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">
                                            City <span class="text-red-500">*</span>
                                        </label>
                                        <input type="text" id="city" value="${(s==null?void 0:s.city)||t.city}" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" required>
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">
                                            Province <span class="text-red-500">*</span>
                                        </label>
                                        <select id="province" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" required>
                                            <option value="">Select Province</option>
                                            <option value="ON" ${((s==null?void 0:s.province)||t.province)==="ON"?"selected":""}>Ontario</option>
                                            <option value="BC" ${((s==null?void 0:s.province)||t.province)==="BC"?"selected":""}>British Columbia</option>
                                            <option value="AB" ${((s==null?void 0:s.province)||t.province)==="AB"?"selected":""}>Alberta</option>
                                            <option value="MB" ${((s==null?void 0:s.province)||t.province)==="MB"?"selected":""}>Manitoba</option>
                                            <option value="SK" ${((s==null?void 0:s.province)||t.province)==="SK"?"selected":""}>Saskatchewan</option>
                                            <option value="QC" ${((s==null?void 0:s.province)||t.province)==="QC"?"selected":""}>Quebec</option>
                                            <option value="NB" ${((s==null?void 0:s.province)||t.province)==="NB"?"selected":""}>New Brunswick</option>
                                            <option value="NS" ${((s==null?void 0:s.province)||t.province)==="NS"?"selected":""}>Nova Scotia</option>
                                            <option value="PE" ${((s==null?void 0:s.province)||t.province)==="PE"?"selected":""}>Prince Edward Island</option>
                                            <option value="NL" ${((s==null?void 0:s.province)||t.province)==="NL"?"selected":""}>Newfoundland and Labrador</option>
                                            <option value="NT" ${((s==null?void 0:s.province)||t.province)==="NT"?"selected":""}>Northwest Territories</option>
                                            <option value="NU" ${((s==null?void 0:s.province)||t.province)==="NU"?"selected":""}>Nunavut</option>
                                            <option value="YT" ${((s==null?void 0:s.province)||t.province)==="YT"?"selected":""}>Yukon</option>
                                        </select>
                                    </div>
                                </div>
                                
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Address Line 1</label>
                                        <input type="text" id="addressLine1" value="${(s==null?void 0:s.address_line1)||""}" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                                               placeholder="Street address">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Address Line 2</label>
                                        <input type="text" id="addressLine2" value="${(s==null?void 0:s.address_line2)||""}" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                                               placeholder="Apartment, suite, etc.">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Postal Code</label>
                                        <input type="text" id="postalCode" value="${(s==null?void 0:s.postal_code)||""}" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                                               placeholder="A1A 1A1">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Website URL</label>
                                        <input type="url" id="websiteUrl" value="${(s==null?void 0:s.website_url)||""}" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                                               placeholder="https://www.yourwebsite.com">
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>

                    <!-- Business Information Section -->
                    <div class="bg-white rounded-lg shadow-sm">
                        <div class="p-6 border-b border-gray-200">
                            <h2 class="text-xl font-semibold text-gray-900">
                                <i class="fas fa-briefcase mr-2 text-kwikr-green"></i>Business Information
                            </h2>
                            <p class="text-gray-600">Tell clients about your business and experience</p>
                        </div>
                        <div class="p-6">
                            <form id="businessInfoForm" class="space-y-6">
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Company Name</label>
                                        <input type="text" id="companyName" value="${(s==null?void 0:s.company_name)||""}" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                                               placeholder="Your Business Name">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Years in Business</label>
                                        <select id="yearsInBusiness" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                                            <option value="">Select Experience</option>
                                            <option value="1" ${(s==null?void 0:s.years_in_business)==1?"selected":""}>Less than 1 year</option>
                                            <option value="2" ${(s==null?void 0:s.years_in_business)==2?"selected":""}>1-2 years</option>
                                            <option value="5" ${(s==null?void 0:s.years_in_business)==5?"selected":""}>3-5 years</option>
                                            <option value="10" ${(s==null?void 0:s.years_in_business)==10?"selected":""}>5-10 years</option>
                                            <option value="15" ${(s==null?void 0:s.years_in_business)==15?"selected":""}>10-15 years</option>
                                            <option value="20" ${(s==null?void 0:s.years_in_business)==20?"selected":""}>15+ years</option>
                                        </select>
                                    </div>
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Professional Bio</label>
                                    <textarea id="bio" rows="5" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                                              placeholder="Describe your experience, specialties, and what sets you apart from other service providers. This will be displayed on your public profile.">${(s==null?void 0:s.bio)||""}</textarea>
                                    <p class="text-sm text-gray-500 mt-1">
                                        <i class="fas fa-lightbulb mr-1"></i>
                                        Tip: Include your experience, certifications, and what makes your service unique.
                                    </p>
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Company Description</label>
                                    <textarea id="companyDescription" rows="4" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                                              placeholder="Describe your company's history, mission, and values...">${(s==null?void 0:s.company_description)||""}</textarea>
                                </div>
                            </form>
                        </div>
                    </div>

                    <!-- Emergency Contact Section -->
                    <div class="bg-white rounded-lg shadow-sm">
                        <div class="p-6 border-b border-gray-200">
                            <h2 class="text-xl font-semibold text-gray-900">
                                <i class="fas fa-phone-alt mr-2 text-kwikr-green"></i>Emergency Contact
                            </h2>
                            <p class="text-gray-600">In case of emergency during job completion</p>
                        </div>
                        <div class="p-6">
                            <form id="emergencyContactForm" class="space-y-6">
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Emergency Contact Name</label>
                                        <input type="text" id="emergencyContactName" value="${(s==null?void 0:s.emergency_contact_name)||""}" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                                               placeholder="Full name of emergency contact">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Emergency Contact Phone</label>
                                        <input type="tel" id="emergencyContactPhone" value="${(s==null?void 0:s.emergency_contact_phone)||""}" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                                               placeholder="(123) 456-7890">
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>

                    <!-- Save Button -->
                    <div class="bg-white rounded-lg shadow-sm">
                        <div class="p-6">
                            <div class="flex justify-end space-x-4">
                                <button type="button" onclick="switchTab('view')" class="px-6 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50">
                                    <i class="fas fa-times mr-2"></i>Cancel
                                </button>
                                <button type="button" onclick="saveAllProfileChanges()" class="bg-kwikr-green text-white px-6 py-2 rounded-lg hover:bg-green-600">
                                    <i class="fas fa-save mr-2"></i>Save All Changes
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Payment Management Tab -->
            <div id="paymentPanel" class="tab-panel hidden">
                <div class="space-y-6">
                    <!-- Payment Methods -->
                    <div class="bg-white rounded-lg shadow-sm">
                        <div class="p-6 border-b border-gray-200">
                            <h2 class="text-xl font-semibold text-gray-900">Payment Methods</h2>
                            <p class="text-gray-600">Manage how you receive payments</p>
                        </div>
                        <div class="p-6">
                            <div class="space-y-4">
                                <div class="border border-gray-200 rounded-lg p-4">
                                    <div class="flex items-center justify-between">
                                        <div class="flex items-center">
                                            <i class="fas fa-university text-kwikr-green text-xl mr-3"></i>
                                            <div>
                                                <h4 class="font-medium text-gray-900">Direct Bank Transfer</h4>
                                                <p class="text-sm text-gray-600">****1234 - Primary Account</p>
                                            </div>
                                        </div>
                                        <span class="px-3 py-1 bg-green-100 text-green-800 text-sm rounded-full">Active</span>
                                    </div>
                                </div>
                                
                                <button class="w-full border-2 border-dashed border-gray-300 rounded-lg p-4 text-gray-500 hover:border-kwikr-green hover:text-kwikr-green transition-colors">
                                    <i class="fas fa-plus mr-2"></i>Add Payment Method
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Earnings Overview -->
                    <div class="bg-white rounded-lg shadow-sm">
                        <div class="p-6 border-b border-gray-200">
                            <h2 class="text-xl font-semibold text-gray-900">Earnings Overview</h2>
                        </div>
                        <div class="p-6">
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                                <div class="text-center">
                                    <div class="text-2xl font-bold text-kwikr-green">$${a.totalEarnings.toLocaleString()}</div>
                                    <div class="text-sm text-gray-600">Total Earnings</div>
                                </div>
                                <div class="text-center">
                                    <div class="text-2xl font-bold text-blue-600">$${Math.floor(a.totalEarnings*.15).toLocaleString()}</div>
                                    <div class="text-sm text-gray-600">This Month</div>
                                </div>
                                <div class="text-center">
                                    <div class="text-2xl font-bold text-purple-600">$${Math.floor(a.totalEarnings*.05).toLocaleString()}</div>
                                    <div class="text-sm text-gray-600">Pending</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Recent Transactions -->
                    <div class="bg-white rounded-lg shadow-sm">
                        <div class="p-6 border-b border-gray-200">
                            <h2 class="text-xl font-semibold text-gray-900">Recent Transactions</h2>
                        </div>
                        <div class="p-6">
                            <div class="space-y-3">
                                <div class="flex items-center justify-between p-3 bg-green-50 rounded-lg">
                                    <div>
                                        <div class="font-medium text-gray-900">Kitchen Cleaning - Job #12345</div>
                                        <div class="text-sm text-gray-600">March 15, 2024</div>
                                    </div>
                                    <div class="text-right">
                                        <div class="font-bold text-green-600">+$150.00</div>
                                        <div class="text-xs text-green-600">Completed</div>
                                    </div>
                                </div>
                                
                                <div class="flex items-center justify-between p-3 bg-yellow-50 rounded-lg">
                                    <div>
                                        <div class="font-medium text-gray-900">Bathroom Deep Clean - Job #12344</div>
                                        <div class="text-sm text-gray-600">March 12, 2024</div>
                                    </div>
                                    <div class="text-right">
                                        <div class="font-bold text-yellow-600">$200.00</div>
                                        <div class="text-xs text-yellow-600">Pending</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Compliance Management Tab -->
            <div id="compliancePanel" class="tab-panel hidden">
                <div class="space-y-6">
                    <!-- Verification Status -->
                    <div class="bg-white rounded-lg shadow-sm">
                        <div class="p-6 border-b border-gray-200">
                            <h2 class="text-xl font-semibold text-gray-900">Compliance Status</h2>
                            <p class="text-gray-600">Manage your verification documents and compliance requirements</p>
                        </div>
                        <div class="p-6">
                            <div class="space-y-4">
                                <!-- Identity Verification -->
                                <div class="border border-gray-200 rounded-lg p-4">
                                    <div class="flex items-center justify-between">
                                        <div class="flex items-center">
                                            <i class="fas fa-id-card text-kwikr-green text-xl mr-3"></i>
                                            <div>
                                                <h4 class="font-medium text-gray-900">Identity Verification</h4>
                                                <p class="text-sm text-gray-600">Government-issued photo ID required</p>
                                            </div>
                                        </div>
                                        <span class="px-3 py-1 bg-green-100 text-green-800 text-sm rounded-full">
                                            <i class="fas fa-check mr-1"></i>Verified
                                        </span>
                                    </div>
                                </div>

                                <!-- Background Check -->
                                <div class="border border-gray-200 rounded-lg p-4">
                                    <div class="flex items-center justify-between">
                                        <div class="flex items-center">
                                            <i class="fas fa-shield-alt text-yellow-500 text-xl mr-3"></i>
                                            <div>
                                                <h4 class="font-medium text-gray-900">Background Check</h4>
                                                <p class="text-sm text-gray-600">Criminal background verification</p>
                                            </div>
                                        </div>
                                        <span class="px-3 py-1 bg-yellow-100 text-yellow-800 text-sm rounded-full">
                                            <i class="fas fa-clock mr-1"></i>In Review
                                        </span>
                                    </div>
                                    <div class="mt-3 text-sm text-gray-600">
                                        Background check submitted on March 10, 2024. Processing typically takes 3-5 business days.
                                    </div>
                                </div>

                                <!-- Insurance -->
                                <div class="border border-red-200 rounded-lg p-4 bg-red-50">
                                    <div class="flex items-center justify-between">
                                        <div class="flex items-center">
                                            <i class="fas fa-shield-check text-red-500 text-xl mr-3"></i>
                                            <div>
                                                <h4 class="font-medium text-gray-900">Liability Insurance</h4>
                                                <p class="text-sm text-gray-600">Professional liability insurance certificate</p>
                                            </div>
                                        </div>
                                        <span class="px-3 py-1 bg-red-100 text-red-800 text-sm rounded-full">
                                            <i class="fas fa-exclamation mr-1"></i>Required
                                        </span>
                                    </div>
                                    <div class="mt-3">
                                        <button class="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 text-sm">
                                            <i class="fas fa-upload mr-2"></i>Upload Insurance Certificate
                                        </button>
                                    </div>
                                </div>

                                <!-- Certifications -->
                                <div class="border border-gray-200 rounded-lg p-4">
                                    <div class="flex items-center justify-between">
                                        <div class="flex items-center">
                                            <i class="fas fa-certificate text-purple-500 text-xl mr-3"></i>
                                            <div>
                                                <h4 class="font-medium text-gray-900">Professional Certifications</h4>
                                                <p class="text-sm text-gray-600">Industry-specific certifications (optional)</p>
                                            </div>
                                        </div>
                                        <button class="text-kwikr-green hover:text-green-700">
                                            <i class="fas fa-plus mr-1"></i>Add Certification
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Services Management Tab -->
            <div id="servicesPanel" class="tab-panel hidden">
                <div class="bg-white rounded-lg shadow-sm">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex justify-between items-center">
                            <div>
                                <h2 class="text-xl font-semibold text-gray-900">Manage Services</h2>
                                <p class="text-gray-600">Add and manage the services you offer</p>
                            </div>
                            <button onclick="showAddServiceForm()" class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">
                                <i class="fas fa-plus mr-2"></i>Add Service
                            </button>
                        </div>
                    </div>
                    <div class="p-6">
                        ${n.length>0?`
                            <div class="space-y-4">
                                ${n.map(o=>`
                                    <div class="border border-gray-200 rounded-lg p-4">
                                        <div class="flex items-center justify-between">
                                            <div class="flex items-center">
                                                <i class="fas fa-tools text-kwikr-green text-xl mr-3"></i>
                                                <div>
                                                    <h4 class="font-medium text-gray-900">${o.service_name}</h4>
                                                    <p class="text-sm text-gray-600">${o.service_category||"Professional Service"}</p>
                                                    <p class="text-sm text-kwikr-green font-medium">$${o.hourly_rate}/hr</p>
                                                </div>
                                            </div>
                                            <div class="flex items-center space-x-2">
                                                <span class="px-3 py-1 bg-green-100 text-green-800 text-sm rounded-full">Active</span>
                                                <button onclick="editService(${o.id})" class="text-gray-500 hover:text-gray-700">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button onclick="deleteService(${o.id})" class="text-red-500 hover:text-red-700">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                                        ${o.description?`
                                            <div class="mt-3 text-sm text-gray-600">
                                                ${o.description}
                                            </div>
                                        `:""}
                                    </div>
                                `).join("")}
                            </div>
                        `:`
                            <div class="text-center py-12">
                                <i class="fas fa-tools text-4xl text-gray-300 mb-4"></i>
                                <h3 class="text-lg font-medium text-gray-900 mb-2">No Services Added Yet</h3>
                                <p class="text-gray-500 mb-4">Add your first service to start receiving job requests</p>
                                <button onclick="showAddServiceForm()" class="bg-kwikr-green text-white px-6 py-2 rounded-lg hover:bg-green-600">
                                    <i class="fas fa-plus mr-2"></i>Add Your First Service
                                </button>
                            </div>
                        `}
                    </div>
                </div>
            </div>
        </div>

        <!-- Add Service Modal -->
        <div id="addServiceModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
            <div class="bg-white rounded-lg max-w-lg w-full mx-4">
                <div class="p-6 border-b border-gray-200">
                    <div class="flex justify-between items-center">
                        <h3 class="text-xl font-bold text-gray-900">Add New Service</h3>
                        <button onclick="closeAddServiceModal()" class="text-gray-400 hover:text-gray-600">
                            <i class="fas fa-times text-xl"></i>
                        </button>
                    </div>
                </div>
                
                <form id="addServiceForm" onsubmit="submitAddService(event)">
                    <div class="p-6 space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Service Name</label>
                            <input type="text" id="serviceName" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                                   required placeholder="e.g., Deep Cleaning">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Category</label>
                            <select id="serviceCategory" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" required>
                                <option value="">Select Category</option>
                                <option value="1">Cleaning Services</option>
                                <option value="2">Handyman Services</option>
                                <option value="3">Maintenance Services</option>
                            </select>
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Hourly Rate ($)</label>
                            <input type="number" id="serviceRate" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                                   required placeholder="35" min="10" step="5">
                        </div>
                        
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Service Description</label>
                            <textarea id="serviceDescription" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                                      placeholder="Describe what this service includes..."></textarea>
                        </div>
                    </div>
                    
                    <div class="p-6 border-t border-gray-200 flex justify-end space-x-3">
                        <button type="button" onclick="closeAddServiceModal()" class="px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50">
                            Cancel
                        </button>
                        <button type="submit" class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">
                            <i class="fas fa-plus mr-2"></i>Add Service
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script>
          // Embed user information directly from server-side session
          window.currentUser = {
            id: ${t.user_id},
            email: "${t.email}",
            role: "${t.role}",
            firstName: "${t.first_name}",
            lastName: "${t.last_name}",
            province: "${t.province||""}",
            city: "${t.city||""}",
            isVerified: ${t.is_verified||0}
          };
          console.log('Worker Dashboard: User information embedded from server:', window.currentUser);
          
          // Tab switching functionality
          function switchTab(tabName) {
            console.log('Switching to tab:', tabName);
            
            // Hide all tab panels
            const panels = ['profileViewPanel', 'profileEditPanel', 'paymentPanel', 'compliancePanel', 'servicesPanel'];
            panels.forEach(panelId => {
              const panel = document.getElementById(panelId);
              if (panel) {
                panel.classList.add('hidden');
                panel.classList.remove('tab-panel');
              }
            });
            
            // Show selected panel
            const targetPanel = tabName === 'view' ? 'profileViewPanel' :
                              tabName === 'edit' ? 'profileEditPanel' :
                              tabName === 'payment' ? 'paymentPanel' :
                              tabName === 'compliance' ? 'compliancePanel' :
                              tabName === 'services' ? 'servicesPanel' : 'profileViewPanel';
            
            const panel = document.getElementById(targetPanel);
            if (panel) {
              panel.classList.remove('hidden');
              panel.classList.add('tab-panel');
            }
            
            // Update tab button styles
            const tabs = ['viewTab', 'editTab', 'paymentTab', 'complianceTab', 'servicesTab'];
            tabs.forEach(tabId => {
              const tab = document.getElementById(tabId);
              if (tab) {
                tab.className = 'py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm';
              }
            });
            
            // Activate selected tab
            const activeTabId = tabName === 'view' ? 'viewTab' :
                               tabName === 'edit' ? 'editTab' :
                               tabName === 'payment' ? 'paymentTab' :
                               tabName === 'compliance' ? 'complianceTab' :
                               tabName === 'services' ? 'servicesTab' : 'viewTab';
            
            const activeTab = document.getElementById(activeTabId);
            if (activeTab) {
              activeTab.className = 'py-4 px-1 border-b-2 border-kwikr-green text-kwikr-green font-medium text-sm';
            }
          }
          
          // Add Service Modal Functions
          function showAddServiceForm() {
            document.getElementById('addServiceModal').classList.remove('hidden');
          }
          
          function closeAddServiceModal() {
            document.getElementById('addServiceModal').classList.add('hidden');
            document.getElementById('addServiceForm').reset();
          }
          
          async function submitAddService(event) {
            event.preventDefault();
            
            const formData = {
              service_name: document.getElementById('serviceName').value,
              category_id: document.getElementById('serviceCategory').value,
              hourly_rate: document.getElementById('serviceRate').value,
              description: document.getElementById('serviceDescription').value
            };
            
            try {
              const response = await fetch('/api/worker/services', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                credentials: 'include',  // Include session cookies
                body: JSON.stringify(formData)
              });
              
              if (response.ok) {
                closeAddServiceModal();
                // Refresh the services panel
                window.location.reload();
              } else {
                alert('Error adding service. Please try again.');
              }
            } catch (error) {
              console.error('Error adding service:', error);
              alert('Error adding service. Please try again.');
            }
          }
          
          // Enhanced Profile Management Functions
          async function saveAllProfileChanges() {
            try {
              // Show loading state
              const saveButton = document.querySelector('button[onclick="saveAllProfileChanges()"]');
              const originalText = saveButton.innerHTML;
              saveButton.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Saving...';
              saveButton.disabled = true;
              
              // Collect personal information
              const personalData = {
                first_name: document.getElementById('firstName')?.value || '',
                last_name: document.getElementById('lastName')?.value || '',
                email: document.getElementById('email')?.value || '',
                phone: document.getElementById('phone')?.value || '',
                city: document.getElementById('city')?.value || '',
                province: document.getElementById('province')?.value || '',
                bio: document.getElementById('bio')?.value || ''
              };
              
              // Collect business information
              const businessData = {
                company_name: document.getElementById('companyName')?.value || '',
                business_license: document.getElementById('businessLicense')?.value || '',
                years_experience: document.getElementById('yearsExperience')?.value || '',
                specialty: document.getElementById('specialty')?.value || '',
                insurance_provider: document.getElementById('insuranceProvider')?.value || '',
                insurance_policy: document.getElementById('insurancePolicy')?.value || ''
              };
              
              // Collect emergency contact
              const emergencyData = {
                emergency_contact_name: document.getElementById('emergencyContactName')?.value || '',
                emergency_contact_relationship: document.getElementById('emergencyContactRelationship')?.value || '',
                emergency_contact_phone: document.getElementById('emergencyContactPhone')?.value || ''
              };
              
              // Validate all fields before proceeding
              if (!validateAllFields()) {
                showNotification('Please fix the validation errors before saving.', 'error');
                return;
              }
              
              // Combine all data
              const allData = { ...personalData, ...businessData, ...emergencyData };
              
              // Save profile data
              const response = await fetch('/api/worker/profile', {
                method: 'PUT',
                headers: {
                  'Content-Type': 'application/json',
                },
                credentials: 'include',  // Include session cookies
                body: JSON.stringify(allData)
              });
              
              if (response.ok) {
                // Show success message
                showNotification('Profile updated successfully!', 'success');
                switchTab('view');
                // Refresh to show updated data
                setTimeout(() => window.location.reload(), 1000);
              } else {
                const errorData = await response.json();
                showNotification(errorData.error || 'Error updating profile. Please try again.', 'error');
              }
              
            } catch (error) {
              console.error('Error updating profile:', error);
              showNotification('Error updating profile. Please try again.', 'error');
            } finally {
              // Reset button state
              const saveButton = document.querySelector('button[onclick="saveAllProfileChanges()"]');
              if (saveButton) {
                saveButton.innerHTML = '<i class="fas fa-save mr-2"></i>Save All Changes';
                saveButton.disabled = false;
              }
            }
          }
          
          // Profile photo upload function
          async function uploadProfilePhoto() {
            const fileInput = document.getElementById('profilePhotoInput');
            const file = fileInput.files[0];
            
            if (!file) {
              showNotification('Please select a file to upload.', 'warning');
              return;
            }
            
            // Validate file size (max 5MB)
            if (file.size > 5 * 1024 * 1024) {
              showNotification('File size must be less than 5MB.', 'error');
              return;
            }
            
            // Validate file type
            if (!file.type.startsWith('image/')) {
              showNotification('Please select a valid image file.', 'error');
              return;
            }
            
            try {
              // Show upload progress
              const progressBar = document.getElementById('uploadProgress');
              const progressContainer = document.getElementById('uploadProgressContainer');
              
              if (progressContainer) {
                progressContainer.classList.remove('hidden');
                progressBar.style.width = '0%';
              }
              
              // Convert file to base64
              const base64 = await new Promise((resolve) => {
                const reader = new FileReader();
                reader.onload = () => resolve(reader.result);
                reader.readAsDataURL(file);
              });
              
              // Update progress
              if (progressBar) progressBar.style.width = '50%';
              
              // Upload to server
              const response = await fetch('/api/worker/profile/upload-image', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                credentials: 'include',  // Include session cookies
                body: JSON.stringify({
                  image: base64,
                  filename: file.name
                })
              });
              
              // Update progress
              if (progressBar) progressBar.style.width = '100%';
              
              if (response.ok) {
                const result = await response.json();
                showNotification('Profile photo updated successfully!', 'success');
                
                // Update the preview image if it exists
                const previewImg = document.getElementById('profilePreview');
                if (previewImg && result.imageUrl) {
                  previewImg.src = result.imageUrl;
                }
                
                // Hide progress after success
                setTimeout(() => {
                  if (progressContainer) progressContainer.classList.add('hidden');
                }, 1000);
                
              } else {
                const errorData = await response.json();
                showNotification(errorData.error || 'Error uploading photo. Please try again.', 'error');
              }
              
            } catch (error) {
              console.error('Error uploading photo:', error);
              showNotification('Error uploading photo. Please try again.', 'error');
            } finally {
              // Reset progress
              const progressContainer = document.getElementById('uploadProgressContainer');
              if (progressContainer) {
                setTimeout(() => progressContainer.classList.add('hidden'), 2000);
              }
            }
          }
          
          // Notification helper function
          function showNotification(message, type = 'info') {
            // Create notification element
            const notification = document.createElement('div');
            let notificationClass = 'fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg max-w-sm transition-all duration-300 ';
            
            if (type === 'success') {
              notificationClass += 'bg-green-500 text-white';
            } else if (type === 'warning') {
              notificationClass += 'bg-yellow-500 text-white';
            } else if (type === 'error') {
              notificationClass += 'bg-red-500 text-white';
            } else {
              notificationClass += 'bg-blue-500 text-white';
            }
            
            notification.className = notificationClass;
            
            let iconClass = 'fas ';
            if (type === 'success') {
              iconClass += 'fa-check-circle';
            } else if (type === 'warning') {
              iconClass += 'fa-exclamation-triangle';
            } else if (type === 'error') {
              iconClass += 'fa-times-circle';
            } else {
              iconClass += 'fa-info-circle';
            }
            
            notification.innerHTML = 
              '<div class="flex items-center justify-between">' +
                '<div class="flex items-center">' +
                  '<i class="' + iconClass + ' mr-2"></i>' +
                  '<span class="text-sm font-medium">' + message + '</span>' +
                '</div>' +
                '<button class="ml-3 text-white hover:text-gray-200 focus:outline-none" onclick="this.parentElement.parentElement.remove()">' +
                  '<i class="fas fa-times text-xs"></i>' +
                '</button>' +
              '</div>';
            
            document.body.appendChild(notification);
            
            // Auto-remove after 5 seconds
            setTimeout(function() {
              if (notification && notification.parentElement) {
                notification.remove();
              }
            }, 5000);
          }
          
          // Photo preview function
          function previewProfilePhoto(input) {
            const file = input.files[0];
            if (file) {
              const reader = new FileReader();
              reader.onload = function(e) {
                const previewImg = document.getElementById('profilePreview');
                if (previewImg) {
                  previewImg.src = e.target.result;
                }
              };
              reader.readAsDataURL(file);
            }
          }
          
          // Initialize dashboard - show profile view tab by default
          document.addEventListener('DOMContentLoaded', function() {
            switchTab('view');
            
            // Set up photo upload event listener
            const photoInput = document.getElementById('profilePhotoInput');
            if (photoInput) {
              photoInput.addEventListener('change', function(e) {
                previewProfilePhoto(e.target);
                
                // Auto-upload when file is selected
                if (e.target.files.length > 0) {
                  uploadProfilePhoto();
                }
              });
            }
            
            // Set up form validation
            const requiredFields = document.querySelectorAll('input[required], select[required]');
            requiredFields.forEach(field => {
              field.addEventListener('blur', validateField);
              field.addEventListener('input', clearFieldError);
            });
          });
          
          // Field validation functions
          function validateField(event) {
            const field = event.target;
            const fieldContainer = field.closest('div');
            
            // Clear previous error
            clearFieldError(event);
            
            // Check if field is required and empty
            if (field.required && !field.value.trim()) {
              showFieldError(field, 'This field is required');
              return false;
            }
            
            // Email validation
            if (field.type === 'email' && field.value) {
              const emailRegex = /^[^s@]+@[^s@]+.[^s@]+$/;
              if (!emailRegex.test(field.value)) {
                showFieldError(field, 'Please enter a valid email address');
                return false;
              }
            }
            
            // Phone validation
            if (field.type === 'tel' && field.value) {
              const phoneRegex = /^[ds-()+.]+$/;
              if (!phoneRegex.test(field.value)) {
                showFieldError(field, 'Please enter a valid phone number');
                return false;
              }
            }
            
            return true;
          }
          
          function clearFieldError(event) {
            const field = event.target;
            const fieldContainer = field.closest('div');
            const existingError = fieldContainer.querySelector('.field-error');
            
            if (existingError) {
              existingError.remove();
            }
            
            // Remove error styling
            field.classList.remove('border-red-500', 'focus:border-red-500');
            field.classList.add('border-gray-300', 'focus:border-kwikr-green');
          }
          
          function showFieldError(field, message) {
            const fieldContainer = field.closest('div');
            
            // Add error styling
            field.classList.remove('border-gray-300', 'focus:border-kwikr-green');
            field.classList.add('border-red-500', 'focus:border-red-500');
            
            // Add error message
            const errorDiv = document.createElement('div');
            errorDiv.className = 'field-error text-red-500 text-sm mt-1';
            errorDiv.innerHTML = '<i class="fas fa-exclamation-circle mr-1"></i>' + message;
            fieldContainer.appendChild(errorDiv);
          }
          
          // Validate all required fields before saving
          function validateAllFields() {
            const requiredFields = document.querySelectorAll('input[required], select[required]');
            let isValid = true;
            
            requiredFields.forEach(field => {
              const event = { target: field };
              if (!validateField(event)) {
                isValid = false;
              }
            });
            
            return isValid;
          }
          
          // Make functions globally available
          window.switchTab = switchTab;
          window.showAddServiceForm = showAddServiceForm;
          window.closeAddServiceModal = closeAddServiceModal;
          window.addNewService = addNewService;
          window.editService = editService;
          window.deleteService = deleteService;
          window.toggleEditMode = toggleEditMode;
          window.saveProfileChanges = saveProfileChanges;
          window.cancelProfileChanges = cancelProfileChanges;
          window.previewProfilePhoto = previewProfilePhoto;
          window.uploadProfilePhoto = uploadProfilePhoto;
          
          console.log('Worker Dashboard: JavaScript setup complete');
        <\/script>
    </body>
    </html>
  `)});Y.get("/worker/profile",Q,nt,async e=>{var n;const t=e.get("user");if(t.role!=="worker")return e.redirect("/dashboard");console.log("Loading Worker Profile Management for user:",t.user_id);const s=await e.env.DB.prepare(`
    SELECT u.id, u.first_name, u.last_name, u.email, u.phone, u.province, u.city,
           u.is_verified, u.created_at,
           up.bio, up.company_name, up.company_description
    FROM users u LEFT JOIN user_profiles up ON u.id = up.user_id
    WHERE u.id = ? AND u.role = 'worker'
  `).bind(t.user_id).first(),r=await e.env.DB.prepare(`
    SELECT service_category, service_name, description, hourly_rate, is_available, service_area, years_experience
    FROM worker_services
    WHERE user_id = ?
    ORDER BY service_category, service_name
  `).bind(t.user_id).all(),i=await e.env.DB.prepare(`
    SELECT wsib_number, wsib_valid_until, insurance_provider, insurance_policy_number, 
           insurance_valid_until, license_type, license_number, license_valid_until, 
           compliance_status, verified_at, documents_uploaded
    FROM worker_compliance
    WHERE user_id = ?
  `).bind(t.user_id).all(),a={id:(s==null?void 0:s.id)||t.user_id,firstName:(s==null?void 0:s.first_name)||t.first_name,lastName:(s==null?void 0:s.last_name)||t.last_name,email:(s==null?void 0:s.email)||t.email,phone:(s==null?void 0:s.phone)||t.phone||"",province:(s==null?void 0:s.province)||t.province||"",city:(s==null?void 0:s.city)||t.city||"",isVerified:(s==null?void 0:s.is_verified)||0,memberSince:s!=null&&s.created_at?new Date(s.created_at).toLocaleDateString():new Date().toLocaleDateString(),accountId:`KWK-${t.user_id}`,companyName:(s==null?void 0:s.business_name)||(s==null?void 0:s.company_name)||`${t.first_name} ${t.last_name}`,businessEmail:(s==null?void 0:s.business_email)||(s==null?void 0:s.email)||t.email,serviceType:(s==null?void 0:s.service_type)||"Professional Services",bio:(s==null?void 0:s.bio)||"Professional service provider committed to delivering high-quality work.",companyDescription:(s==null?void 0:s.company_description)||"Demo Worker Services Inc. is a professional home and commercial service provider with over 10 years of experience in the Greater Toronto Area. We specialize in providing high-quality, reliable services to both residential and commercial clients.",services:r.results||[],compliance:((n=i.results)==null?void 0:n[0])||{},profileCompletion:76};return console.log("Dashboard Profile Data:",a),e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>My Profile - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/dashboard/worker" class="flex items-center">
                            <i class="fas fa-bolt text-kwikr-green text-2xl mr-2"></i>
                            <span class="text-2xl font-bold text-gray-900">Kwikr Directory</span>
                        </a>
                        <div class="ml-6 text-gray-600">
                            <span class="text-gray-400">Dashboard > </span>Profile
                        </div>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-gray-600">Welcome, ${a.firstName}!</span>
                        <a href="/auth/logout" class="text-gray-600 hover:text-kwikr-green transition-colors">
                            <i class="fas fa-sign-out-alt mr-1"></i>Logout
                        </a>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="flex justify-between items-center mb-8">
                <div>
                    <h1 class="text-3xl font-bold text-gray-900 mb-2">Profile Overview</h1>
                </div>
                <div class="flex space-x-3">
                    <button id="editProfileBtn" onclick="toggleEditMode()" class="bg-kwikr-green text-white px-6 py-2 rounded-lg hover:bg-green-600 transition-colors flex items-center">
                        <i class="fas fa-edit mr-2"></i>Edit Profile
                    </button>
                </div>
            </div>

            <!-- Profile Tabs -->


            <!-- Profile Content -->
            <div id="profileViewMode">
                <!-- Hero Section -->
                <div class="bg-kwikr-green rounded-lg p-8 text-white mb-6">
                    <div class="flex items-center">
                        <div class="w-24 h-24 bg-white bg-opacity-20 rounded-lg flex flex-col items-center justify-center mr-6 cursor-pointer hover:bg-opacity-30 transition-colors" onclick="uploadLogo()">
                            <i class="fas fa-building text-white text-2xl mb-1"></i>
                            <span class="text-xs text-white text-center">Click to Upload Logo</span>
                        </div>
                        <div class="flex-1">
                            <h2 id="companyNameDisplay" class="text-3xl font-bold mb-2">${a.companyName}</h2>
                            <p class="text-green-100 mb-2">Professional Home & Commercial Services</p>
                            <div class="flex items-center space-x-6">
                                <div class="flex items-center">
                                    <i class="fas fa-star text-yellow-300 mr-1"></i>
                                    <span>4.8 Rating</span>
                                </div>
                                <div class="flex items-center">
                                    <i class="fas fa-check-circle mr-1"></i>
                                    <span>${a.isVerified?"Verified Business":"Verification Pending"}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Three Column Layout -->
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                    
                    <!-- Left Column - Contact Information -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                            <i class="fas fa-phone text-kwikr-green mr-2"></i>Contact Information
                        </h3>
                        
                        <div class="space-y-4">
                            <div>
                                <label class="text-sm font-medium text-gray-500">Primary Email</label>
                                <p id="primaryEmailDisplay" class="text-gray-900">${a.email}</p>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-500">Business Email</label>
                                <p id="businessEmailDisplay" class="text-gray-900">business@demoworker.ca</p>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-500">Phone Number</label>
                                <p id="phoneDisplay" class="text-gray-900">+1 (416) 555-0123</p>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-500">Business Phone</label>
                                <p id="businessPhoneDisplay" class="text-gray-900">+1 (416) 555-0124</p>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-500">Emergency Contact</label>
                                <p id="emergencyContactDisplay" class="text-gray-900">+1 (416) 555-0125</p>
                            </div>
                        </div>
                    </div>

                    <!-- Middle Column - Business Address -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                            <i class="fas fa-map-marker-alt text-kwikr-green mr-2"></i>Business Address
                        </h3>
                        
                        <div class="space-y-4">
                            <div>
                                <label class="text-sm font-medium text-gray-500">Street Address</label>
                                <p id="streetAddressDisplay" class="text-gray-900">123 King Street West</p>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-500">Unit/Suite</label>
                                <p id="unitSuiteDisplay" class="text-gray-900">Suite 456</p>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-500">City</label>
                                <p id="cityDisplay" class="text-gray-900">Toronto</p>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-500">Province</label>
                                <p id="provinceDisplay" class="text-gray-900">Ontario</p>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-500">Postal Code</label>
                                <p id="postalCodeDisplay" class="text-gray-900">M5V 3A8</p>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-500">Service Area</label>
                                <p id="serviceAreaDisplay" class="text-gray-900">Greater Toronto Area (GTA)</p>
                            </div>
                        </div>
                    </div>

                    <!-- Right Column - Account Details -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                            <i class="fas fa-user text-kwikr-green mr-2"></i>Account Details
                        </h3>
                        
                        <div class="space-y-4">
                            <div>
                                <label class="text-sm font-medium text-gray-500">Account ID</label>
                                <p id="accountIdDisplay" class="text-gray-900">KWK-381341</p>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-500">Account Status</label>
                                <div class="flex items-center">
                                    <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full font-medium">
                                        <i class="fas fa-circle mr-1"></i>Active
                                    </span>
                                </div>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-500">Member Since</label>
                                <p id="memberSinceDisplay" class="text-gray-900">January 15, 2024</p>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-500">Last Login</label>
                                <p id="lastLoginDisplay" class="text-gray-900">Today at 2:30 PM</p>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-500">Profile Completion</label>
                                <div class="mt-1">
                                    <div class="flex items-center justify-between text-sm">
                                        <span class="text-kwikr-green font-medium">${a.profileCompletion}% Complete</span>
                                    </div>
                                    <div class="w-full bg-gray-200 rounded-full h-2 mt-1">
                                        <div class="bg-kwikr-green h-2 rounded-full" style="width: ${a.profileCompletion}%"></div>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <label class="text-sm font-medium text-gray-500">Verification Status</label>
                                <div class="flex items-center">
                                    <span class="${a.isVerified?"bg-green-100 text-green-800":"bg-yellow-100 text-yellow-800"} text-xs px-2 py-1 rounded-full font-medium">
                                        <i class="fas ${a.isVerified?"fa-check-circle":"fa-clock"} mr-1"></i>
                                        ${a.isVerified?"Verified":"Pending"}
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Business Description Section -->
                <div class="mt-6 bg-white rounded-lg shadow p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                        <i class="fas fa-building text-kwikr-green mr-2"></i>Business Description
                    </h3>
                    <p id="businessDescriptionDisplay" class="text-gray-700 leading-relaxed">
                        ${a.companyDescription}
                    </p>
                    <div class="mt-4 space-y-2">
                        <p class="text-gray-700">Our team of certified professionals is committed to delivering exceptional results on every project. We pride ourselves on punctuality, attention to detail, and customer satisfaction. All our work is fully insured and comes with a satisfaction guarantee.</p>
                        <p class="text-gray-700">We serve the entire GTA and are available for both emergency and scheduled services. Our 24/7 customer service ensures that help is always available when you need it most.</p>
                    </div>
                </div>

                <!-- Services Provided Section -->
                <div class="mt-6 bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-tools text-kwikr-green mr-2"></i>Services Provided
                        </h3>
                        <button onclick="manageServices()" class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 transition-colors text-sm font-medium">
                            <i class="fas fa-plus mr-1"></i>Manage Services
                        </button>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4" id="servicesGrid">
                        <!-- Cleaning Services -->
                        <div class="border border-gray-200 rounded-lg p-4">
                            <div class="flex items-center mb-2">
                                <i class="fas fa-broom text-kwikr-green mr-2"></i>
                                <h4 class="font-medium">Cleaning Services</h4>
                            </div>
                            <p class="text-sm text-gray-600 mb-2">Residential & Commercial</p>
                        </div>
                        
                        <!-- Plumbing -->
                        <div class="border border-gray-200 rounded-lg p-4">
                            <div class="flex items-center mb-2">
                                <i class="fas fa-wrench text-kwikr-green mr-2"></i>
                                <h4 class="font-medium">Plumbing</h4>
                            </div>
                            <p class="text-sm text-gray-600 mb-2">Emergency & Maintenance</p>
                        </div>
                        
                        <!-- Electrical Work -->
                        <div class="border border-gray-200 rounded-lg p-4">
                            <div class="flex items-center mb-2">
                                <i class="fas fa-bolt text-kwikr-green mr-2"></i>
                                <h4 class="font-medium">Electrical Work</h4>
                            </div>
                            <p class="text-sm text-gray-600 mb-2">Licensed Electrician</p>
                        </div>
                        
                        <!-- Handyman Services -->
                        <div class="border border-gray-200 rounded-lg p-4">
                            <div class="flex items-center mb-2">
                                <i class="fas fa-hammer text-kwikr-green mr-2"></i>
                                <h4 class="font-medium">Handyman Services</h4>
                            </div>
                            <p class="text-sm text-gray-600 mb-2">General Repairs</p>
                        </div>
                        
                        <!-- Painting -->
                        <div class="border border-gray-200 rounded-lg p-4">
                            <div class="flex items-center mb-2">
                                <i class="fas fa-paint-roller text-kwikr-green mr-2"></i>
                                <h4 class="font-medium">Painting</h4>
                            </div>
                            <p class="text-sm text-gray-600 mb-2">Interior & Exterior</p>
                        </div>
                        
                        <!-- Landscaping -->
                        <div class="border border-gray-200 rounded-lg p-4">
                            <div class="flex items-center mb-2">
                                <i class="fas fa-leaf text-kwikr-green mr-2"></i>
                                <h4 class="font-medium">Landscaping</h4>
                            </div>
                            <p class="text-sm text-gray-600 mb-2">Design & Maintenance</p>
                        </div>
                    </div>
                </div>

                <!-- Hours of Operation Section -->
                <div class="mt-6 bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-clock text-kwikr-green mr-2"></i>Hours of Operation
                        </h3>
                        <button onclick="editHours()" class="text-kwikr-green hover:text-green-600 text-sm font-medium">
                            <i class="fas fa-edit mr-1"></i>Edit Hours
                        </button>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4" id="hoursGrid">
                        <div class="flex justify-between items-center py-3 px-4 border border-gray-200 rounded-lg">
                            <span class="font-medium text-gray-700">Monday</span>
                            <span class="text-gray-900">8:00 AM - 6:00 PM</span>
                        </div>
                        <div class="flex justify-between items-center py-3 px-4 border border-gray-200 rounded-lg">
                            <span class="font-medium text-gray-700">Tuesday</span>
                            <span class="text-gray-900">8:00 AM - 6:00 PM</span>
                        </div>
                        <div class="flex justify-between items-center py-3 px-4 border border-gray-200 rounded-lg">
                            <span class="font-medium text-gray-700">Wednesday</span>
                            <span class="text-gray-900">8:00 AM - 6:00 PM</span>
                        </div>
                        <div class="flex justify-between items-center py-3 px-4 border border-gray-200 rounded-lg">
                            <span class="font-medium text-gray-700">Thursday</span>
                            <span class="text-gray-900">8:00 AM - 6:00 PM</span>
                        </div>
                        <div class="flex justify-between items-center py-3 px-4 border border-gray-200 rounded-lg">
                            <span class="font-medium text-gray-700">Friday</span>
                            <span class="text-gray-900">8:00 AM - 6:00 PM</span>
                        </div>
                        <div class="flex justify-between items-center py-3 px-4 border border-gray-200 rounded-lg">
                            <span class="font-medium text-gray-700">Saturday</span>
                            <span class="text-gray-900">9:00 AM - 4:00 PM</span>
                        </div>
                        <div class="flex justify-between items-center py-3 px-4 border border-red-200 rounded-lg bg-red-50">
                            <span class="font-medium text-gray-700">Sunday</span>
                            <span class="text-red-600 font-medium">Closed</span>
                        </div>
                        <div class="flex justify-between items-center py-3 px-4 border border-blue-200 rounded-lg bg-blue-50">
                            <span class="font-medium text-gray-700">Emergency</span>
                            <span class="text-blue-600 font-medium">24/7 Available</span>
                        </div>
                    </div>
                </div>

                <!-- Service Area Map Section -->
                <div class="mt-6 bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-map-marked-alt text-kwikr-green mr-2"></i>Service Area Map
                        </h3>
                        <button onclick="editServiceArea()" class="text-kwikr-green hover:text-green-600 text-sm font-medium">
                            <i class="fas fa-edit mr-1"></i>Edit Coverage
                        </button>
                    </div>
                    
                    <!-- Map Container -->
                    <div class="mb-6">
                        <div id="serviceAreaMap" class="w-full h-80 bg-gray-100 rounded-lg flex items-center justify-center border-2 border-dashed border-gray-300">
                            <div class="text-center">
                                <i class="fas fa-map text-gray-400 text-4xl mb-3"></i>
                                <p class="text-gray-500 font-medium mb-2">Interactive Service Area Map</p>
                                <p class="text-sm text-gray-400">Google Maps Integration - Showing Greater Toronto Area</p>
                                <button onclick="loadMap()" class="mt-3 bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 transition-colors text-sm">
                                    <i class="fas fa-map-marker-alt mr-1"></i>Load Map
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Service Areas List -->
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                        <div class="bg-gray-50 rounded-lg p-4">
                            <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
                                <i class="fas fa-map-pin text-kwikr-green mr-2"></i>Primary Coverage
                            </h4>
                            <div class="space-y-2">
                                <span class="inline-block bg-kwikr-green bg-opacity-10 text-kwikr-green px-3 py-1 rounded-full text-sm font-medium">Toronto</span>
                                <span class="inline-block bg-kwikr-green bg-opacity-10 text-kwikr-green px-3 py-1 rounded-full text-sm font-medium">Mississauga</span>
                                <span class="inline-block bg-kwikr-green bg-opacity-10 text-kwikr-green px-3 py-1 rounded-full text-sm font-medium">Brampton</span>
                            </div>
                        </div>
                        <div class="bg-gray-50 rounded-lg p-4">
                            <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
                                <i class="fas fa-circle-dot text-blue-500 mr-2"></i>Extended Coverage
                            </h4>
                            <div class="space-y-2">
                                <span class="inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">Oakville</span>
                                <span class="inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">Richmond Hill</span>
                                <span class="inline-block bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">Markham</span>
                            </div>
                        </div>
                        <div class="bg-gray-50 rounded-lg p-4">
                            <h4 class="font-semibold text-gray-900 mb-3 flex items-center">
                                <i class="fas fa-info-circle text-gray-400 mr-2"></i>Service Details
                            </h4>
                            <div class="text-sm text-gray-600 space-y-1">
                                <p><i class="fas fa-clock mr-1"></i>Response Time: 2-4 hours</p>
                                <p><i class="fas fa-route mr-1"></i>Travel Fee: $25 outside GTA</p>
                                <p><i class="fas fa-phone mr-1"></i>Emergency: 24/7 available</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Service Pricing Section -->
                <div class="mt-6 bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-dollar-sign text-kwikr-green mr-2"></i>Service Pricing
                        </h3>
                        <button onclick="editPricing()" class="text-kwikr-green hover:text-green-600 text-sm font-medium">
                            <i class="fas fa-edit mr-1"></i>Update Pricing
                        </button>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4" id="pricingGrid">
                        <!-- Cleaning Services -->
                        <div class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                            <div class="flex items-center justify-between mb-3">
                                <div class="flex items-center">
                                    <i class="fas fa-broom text-kwikr-green mr-2"></i>
                                    <h4 class="font-medium text-gray-900">Cleaning Services</h4>
                                </div>
                                <span class="text-2xl font-bold text-kwikr-green">$45</span>
                            </div>
                            <p class="text-sm text-gray-600 mb-2">Residential & Commercial</p>
                            <div class="text-xs text-gray-500">
                                <p>per hour • Minimum 2 hours</p>
                                <p class="text-kwikr-green">✓ Equipment included</p>
                            </div>
                        </div>
                        
                        <!-- Plumbing -->
                        <div class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                            <div class="flex items-center justify-between mb-3">
                                <div class="flex items-center">
                                    <i class="fas fa-wrench text-kwikr-green mr-2"></i>
                                    <h4 class="font-medium text-gray-900">Plumbing</h4>
                                </div>
                                <span class="text-2xl font-bold text-kwikr-green">$85</span>
                            </div>
                            <p class="text-sm text-gray-600 mb-2">Emergency & Maintenance</p>
                            <div class="text-xs text-gray-500">
                                <p>per hour • $125 emergency rate</p>
                                <p class="text-kwikr-green">✓ Licensed plumber</p>
                            </div>
                        </div>
                        
                        <!-- Electrical Work -->
                        <div class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                            <div class="flex items-center justify-between mb-3">
                                <div class="flex items-center">
                                    <i class="fas fa-bolt text-kwikr-green mr-2"></i>
                                    <h4 class="font-medium text-gray-900">Electrical Work</h4>
                                </div>
                                <span class="text-2xl font-bold text-kwikr-green">$95</span>
                            </div>
                            <p class="text-sm text-gray-600 mb-2">Licensed Electrician</p>
                            <div class="text-xs text-gray-500">
                                <p>per hour • $150 emergency rate</p>
                                <p class="text-kwikr-green">✓ Certified & insured</p>
                            </div>
                        </div>
                        
                        <!-- Handyman Services -->
                        <div class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                            <div class="flex items-center justify-between mb-3">
                                <div class="flex items-center">
                                    <i class="fas fa-hammer text-kwikr-green mr-2"></i>
                                    <h4 class="font-medium text-gray-900">Handyman Services</h4>
                                </div>
                                <span class="text-2xl font-bold text-kwikr-green">$65</span>
                            </div>
                            <p class="text-sm text-gray-600 mb-2">General Repairs</p>
                            <div class="text-xs text-gray-500">
                                <p>per hour • 3 hour minimum</p>
                                <p class="text-kwikr-green">✓ Tools & materials extra</p>
                            </div>
                        </div>
                        
                        <!-- Painting -->
                        <div class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                            <div class="flex items-center justify-between mb-3">
                                <div class="flex items-center">
                                    <i class="fas fa-paint-roller text-kwikr-green mr-2"></i>
                                    <h4 class="font-medium text-gray-900">Painting</h4>
                                </div>
                                <span class="text-2xl font-bold text-kwikr-green">$55</span>
                            </div>
                            <p class="text-sm text-gray-600 mb-2">Interior & Exterior</p>
                            <div class="text-xs text-gray-500">
                                <p>per hour • Paint & supplies extra</p>
                                <p class="text-kwikr-green">✓ Professional grade tools</p>
                            </div>
                        </div>
                        
                        <!-- Landscaping -->
                        <div class="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                            <div class="flex items-center justify-between mb-3">
                                <div class="flex items-center">
                                    <i class="fas fa-leaf text-kwikr-green mr-2"></i>
                                    <h4 class="font-medium text-gray-900">Landscaping</h4>
                                </div>
                                <span class="text-2xl font-bold text-kwikr-green">$75</span>
                            </div>
                            <p class="text-sm text-gray-600 mb-2">Design & Maintenance</p>
                            <div class="text-xs text-gray-500">
                                <p>per hour • Seasonal rates vary</p>
                                <p class="text-kwikr-green">✓ Equipment & cleanup included</p>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Pricing Notes -->
                    <div class="mt-6 bg-blue-50 border border-blue-200 rounded-lg p-4">
                        <h4 class="font-semibold text-blue-900 mb-2 flex items-center">
                            <i class="fas fa-info-circle mr-2"></i>Pricing Information
                        </h4>
                        <ul class="text-sm text-blue-700 space-y-1">
                            <li>• All prices are in CAD and subject to applicable taxes</li>
                            <li>• Emergency services (after hours) may incur additional charges</li>
                            <li>• Materials and specialized equipment charged separately</li>
                            <li>• Free estimates for projects over $500</li>
                            <li>• Senior and veteran discounts available - ask for details</li>
                        </ul>
                    </div>
                </div>

                <!-- Reviews and Testimonials Section -->
                <div class="mt-6 bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-star text-kwikr-green mr-2"></i>Reviews & Testimonials
                        </h3>
                        <div class="flex items-center space-x-4">
                            <div class="flex items-center">
                                <span class="text-3xl font-bold text-kwikr-green mr-2">4.8</span>
                                <div class="flex text-yellow-400">
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                    <i class="fas fa-star"></i>
                                </div>
                                <span class="text-gray-500 text-sm ml-2">(127 reviews)</span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Rating Breakdown -->
                    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
                        <div class="lg:col-span-1">
                            <h4 class="font-semibold text-gray-900 mb-4">Rating Breakdown</h4>
                            <div class="space-y-2">
                                <div class="flex items-center text-sm">
                                    <span class="w-8">5</span>
                                    <i class="fas fa-star text-yellow-400 mx-2"></i>
                                    <div class="flex-1 bg-gray-200 rounded-full h-2 mx-3">
                                        <div class="bg-yellow-400 h-2 rounded-full" style="width: 76%"></div>
                                    </div>
                                    <span class="w-8 text-right">97</span>
                                </div>
                                <div class="flex items-center text-sm">
                                    <span class="w-8">4</span>
                                    <i class="fas fa-star text-yellow-400 mx-2"></i>
                                    <div class="flex-1 bg-gray-200 rounded-full h-2 mx-3">
                                        <div class="bg-yellow-400 h-2 rounded-full" style="width: 18%"></div>
                                    </div>
                                    <span class="w-8 text-right">23</span>
                                </div>
                                <div class="flex items-center text-sm">
                                    <span class="w-8">3</span>
                                    <i class="fas fa-star text-yellow-400 mx-2"></i>
                                    <div class="flex-1 bg-gray-200 rounded-full h-2 mx-3">
                                        <div class="bg-yellow-400 h-2 rounded-full" style="width: 4%"></div>
                                    </div>
                                    <span class="w-8 text-right">5</span>
                                </div>
                                <div class="flex items-center text-sm">
                                    <span class="w-8">2</span>
                                    <i class="fas fa-star text-yellow-400 mx-2"></i>
                                    <div class="flex-1 bg-gray-200 rounded-full h-2 mx-3">
                                        <div class="bg-yellow-400 h-2 rounded-full" style="width: 1%"></div>
                                    </div>
                                    <span class="w-8 text-right">1</span>
                                </div>
                                <div class="flex items-center text-sm">
                                    <span class="w-8">1</span>
                                    <i class="fas fa-star text-yellow-400 mx-2"></i>
                                    <div class="flex-1 bg-gray-200 rounded-full h-2 mx-3">
                                        <div class="bg-yellow-400 h-2 rounded-full" style="width: 1%"></div>
                                    </div>
                                    <span class="w-8 text-right">1</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="lg:col-span-2">
                            <h4 class="font-semibold text-gray-900 mb-4">Recent Reviews</h4>
                            <div class="space-y-4">
                                <!-- Review 1 -->
                                <div class="border border-gray-200 rounded-lg p-4">
                                    <div class="flex items-start justify-between mb-3">
                                        <div class="flex items-center">
                                            <div class="w-10 h-10 bg-kwikr-green rounded-full flex items-center justify-center text-white font-bold mr-3">
                                                S
                                            </div>
                                            <div>
                                                <h5 class="font-semibold text-gray-900">Sarah Johnson</h5>
                                                <div class="flex items-center">
                                                    <div class="flex text-yellow-400 mr-2">
                                                        <i class="fas fa-star text-xs"></i>
                                                        <i class="fas fa-star text-xs"></i>
                                                        <i class="fas fa-star text-xs"></i>
                                                        <i class="fas fa-star text-xs"></i>
                                                        <i class="fas fa-star text-xs"></i>
                                                    </div>
                                                    <span class="text-gray-500 text-sm">2 days ago</span>
                                                </div>
                                            </div>
                                        </div>
                                        <span class="bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs font-medium">Plumbing</span>
                                    </div>
                                    <p class="text-gray-700 text-sm leading-relaxed">"Excellent service! Fixed our kitchen sink leak quickly and professionally. Very fair pricing and cleaned up afterwards. Highly recommend!"</p>
                                </div>
                                
                                <!-- Review 2 -->
                                <div class="border border-gray-200 rounded-lg p-4">
                                    <div class="flex items-start justify-between mb-3">
                                        <div class="flex items-center">
                                            <div class="w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold mr-3">
                                                M
                                            </div>
                                            <div>
                                                <h5 class="font-semibold text-gray-900">Mike Chen</h5>
                                                <div class="flex items-center">
                                                    <div class="flex text-yellow-400 mr-2">
                                                        <i class="fas fa-star text-xs"></i>
                                                        <i class="fas fa-star text-xs"></i>
                                                        <i class="fas fa-star text-xs"></i>
                                                        <i class="fas fa-star text-xs"></i>
                                                        <i class="fas fa-star text-xs"></i>
                                                    </div>
                                                    <span class="text-gray-500 text-sm">1 week ago</span>
                                                </div>
                                            </div>
                                        </div>
                                        <span class="bg-blue-100 text-blue-800 px-2 py-1 rounded-full text-xs font-medium">Cleaning</span>
                                    </div>
                                    <p class="text-gray-700 text-sm leading-relaxed">"Outstanding cleaning service for our office space. Thorough, reliable, and great attention to detail. The team is professional and trustworthy."</p>
                                </div>
                            </div>
                            
                            <button onclick="viewAllReviews()" class="mt-4 text-kwikr-green hover:text-green-600 text-sm font-medium">
                                <i class="fas fa-chevron-right mr-1"></i>View All Reviews (127)
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Compliance Status Section -->
                <div class="mt-6 bg-white rounded-lg shadow p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-6 flex items-center">
                        <i class="fas fa-shield-check text-kwikr-green mr-2"></i>Compliance Status
                    </h3>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- Business License -->
                        <div class="border border-red-200 rounded-lg p-4">
                            <div class="flex items-center justify-between mb-2">
                                <div class="flex items-center">
                                    <i class="fas fa-certificate text-red-500 mr-2"></i>
                                    <h4 class="font-medium">Business License</h4>
                                </div>
                                <span class="bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full font-medium">Missing</span>
                            </div>
                            <p class="text-sm text-gray-600">Required for operation</p>
                        </div>
                        
                        <!-- Insurance Certificate -->
                        <div class="border border-red-200 rounded-lg p-4">
                            <div class="flex items-center justify-between mb-2">
                                <div class="flex items-center">
                                    <i class="fas fa-shield-alt text-red-500 mr-2"></i>
                                    <h4 class="font-medium">Insurance Certificate</h4>
                                </div>
                                <span class="bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full font-medium">Missing</span>
                            </div>
                            <p class="text-sm text-gray-600">Liability coverage required</p>
                        </div>
                        
                        <!-- Background Check -->
                        <div class="border border-gray-200 rounded-lg p-4">
                            <div class="flex items-center justify-between mb-2">
                                <div class="flex items-center">
                                    <i class="fas fa-user-check text-gray-400 mr-2"></i>
                                    <h4 class="font-medium">Background Check</h4>
                                </div>
                                <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full font-medium">Optional</span>
                            </div>
                            <p class="text-sm text-gray-600">Optional verification</p>
                        </div>
                        
                        <!-- Certifications -->
                        <div class="border border-gray-200 rounded-lg p-4">
                            <div class="flex items-center justify-between mb-2">
                                <div class="flex items-center">
                                    <i class="fas fa-award text-gray-400 mr-2"></i>
                                    <h4 class="font-medium">Certifications</h4>
                                </div>
                                <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full font-medium">Optional</span>
                            </div>
                            <p class="text-sm text-gray-600">Professional credentials</p>
                        </div>
                    </div>
                    
                    <!-- Action Required Section -->
                    <div class="mt-6 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                        <div class="flex items-center">
                            <i class="fas fa-exclamation-triangle text-yellow-600 mr-2"></i>
                            <span class="font-medium text-yellow-800">Action Required</span>
                        </div>
                        <p class="text-yellow-700 text-sm mt-1">Complete required documents to activate your account for job bidding.</p>
                        <div class="flex items-center mt-2">
                            <div class="text-sm text-yellow-700 mr-4">0/2 Complete</div>
                            <button onclick="uploadDocuments()" class="bg-yellow-600 text-white px-4 py-1 rounded text-sm hover:bg-yellow-700 transition-colors">
                                <i class="fas fa-upload mr-1"></i>Upload Documents
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Edit Mode (initially hidden) -->
            <div id="profileEditMode" class="hidden">
                <!-- Hero Section in Edit Mode -->
                <div class="bg-kwikr-green rounded-lg p-8 text-white mb-6">
                    <div class="flex items-center">
                        <div class="w-24 h-24 bg-white bg-opacity-20 rounded-full flex items-center justify-center mr-6">
                            <div id="profileInitialsEdit" class="text-white text-2xl font-bold">${a.firstName.charAt(0)}${a.lastName.charAt(0)}</div>
                        </div>
                        <div class="flex-1">
                            <h2 class="text-3xl font-bold mb-2">${a.companyName}</h2>
                            <p class="text-green-100 mb-2">Professional Home & Commercial Services</p>
                            <div class="flex items-center space-x-6">
                                <div class="flex items-center">
                                    <i class="fas fa-star text-yellow-300 mr-1"></i>
                                    <span>4.8 Rating</span>
                                </div>
                                <div class="flex items-center">
                                    <i class="fas fa-check-circle mr-1"></i>
                                    <span>${a.isVerified?"Verified Business":"Verification Pending"}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <form id="profileEditForm">
                    <!-- Three Column Layout in Edit Mode -->
                    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                        
                        <!-- Left Column - Contact Information Edit -->
                        <div class="bg-white rounded-lg shadow p-6">
                            <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                                <i class="fas fa-phone text-kwikr-green mr-2"></i>Contact Information
                            </h3>
                            
                            <div class="space-y-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">Primary Email</label>
                                    <input type="email" id="primaryEmailEdit" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent" value="${a.email}">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">Business Email</label>
                                    <input type="email" id="businessEmailEdit" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent" value="${a.businessEmail}">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
                                    <input type="tel" id="phoneEdit" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent" value="${a.phone||"+1 (416) 555-0123"}">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">Business Phone</label>
                                    <input type="tel" id="businessPhoneEdit" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent" value="+1 (416) 555-0124">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">Emergency Contact</label>
                                    <input type="tel" id="emergencyContactEdit" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent" value="+1 (416) 555-0125">
                                </div>
                            </div>
                        </div>

                        <!-- Middle Column - Business Address Edit -->
                        <div class="bg-white rounded-lg shadow p-6">
                            <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                                <i class="fas fa-map-marker-alt text-kwikr-green mr-2"></i>Business Address
                            </h3>
                            
                            <div class="space-y-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">Street Address</label>
                                    <input type="text" id="streetAddressEdit" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent" value="123 King Street West">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">Unit/Suite</label>
                                    <input type="text" id="unitSuiteEdit" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent" value="Suite 456">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">City</label>
                                    <input type="text" id="cityEdit" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent" value="${a.city||"Toronto"}">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">Province</label>
                                    <select id="provinceEdit" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent">
                                        <option value="ON" ${a.province==="ON"?"selected":""}>Ontario</option>
                                        <option value="BC" ${a.province==="BC"?"selected":""}>British Columbia</option>
                                        <option value="AB" ${a.province==="AB"?"selected":""}>Alberta</option>
                                        <option value="SK" ${a.province==="SK"?"selected":""}>Saskatchewan</option>
                                        <option value="MB" ${a.province==="MB"?"selected":""}>Manitoba</option>
                                        <option value="QC" ${a.province==="QC"?"selected":""}>Quebec</option>
                                        <option value="NB" ${a.province==="NB"?"selected":""}>New Brunswick</option>
                                        <option value="NS" ${a.province==="NS"?"selected":""}>Nova Scotia</option>
                                        <option value="PE" ${a.province==="PE"?"selected":""}>Prince Edward Island</option>
                                        <option value="NL" ${a.province==="NL"?"selected":""}>Newfoundland and Labrador</option>
                                        <option value="YT" ${a.province==="YT"?"selected":""}>Yukon</option>
                                        <option value="NT" ${a.province==="NT"?"selected":""}>Northwest Territories</option>
                                        <option value="NU" ${a.province==="NU"?"selected":""}>Nunavut</option>
                                    </select>
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">Postal Code</label>
                                    <input type="text" id="postalCodeEdit" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent" value="M5V 3A8" pattern="[A-Za-z][0-9][A-Za-z] [0-9][A-Za-z][0-9]">
                                </div>
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-1">Service Area</label>
                                    <input type="text" id="serviceAreaEdit" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent" value="Greater Toronto Area (GTA)">
                                </div>
                            </div>
                        </div>

                        <!-- Right Column - Account Details (Read Only) -->
                        <div class="bg-white rounded-lg shadow p-6">
                            <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                                <i class="fas fa-user text-kwikr-green mr-2"></i>Account Details
                                <span class="ml-auto text-xs text-gray-500">(Read Only)</span>
                            </h3>
                            
                            <div class="space-y-4">
                                <div>
                                    <label class="text-sm font-medium text-gray-500">Account ID</label>
                                    <p class="text-gray-900">${a.accountId}</p>
                                </div>
                                <div>
                                    <label class="text-sm font-medium text-gray-500">Account Status</label>
                                    <div class="flex items-center">
                                        <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full font-medium">
                                            <i class="fas fa-circle mr-1"></i>Active
                                        </span>
                                    </div>
                                </div>
                                <div>
                                    <label class="text-sm font-medium text-gray-500">Member Since</label>
                                    <p class="text-gray-900">${a.memberSince}</p>
                                </div>
                                <div>
                                    <label class="text-sm font-medium text-gray-500">Last Login</label>
                                    <p class="text-gray-900">Today at 2:30 PM</p>
                                </div>
                                <div>
                                    <label class="text-sm font-medium text-gray-500">Profile Completion</label>
                                    <div class="mt-1">
                                        <div class="flex items-center justify-between text-sm">
                                            <span class="text-kwikr-green font-medium">${a.profileCompletion}% Complete</span>
                                        </div>
                                        <div class="w-full bg-gray-200 rounded-full h-2 mt-1">
                                            <div class="bg-kwikr-green h-2 rounded-full" style="width: ${a.profileCompletion}%"></div>
                                        </div>
                                    </div>
                                </div>
                                <div>
                                    <label class="text-sm font-medium text-gray-500">Verification Status</label>
                                    <div class="flex items-center">
                                        <span class="${a.isVerified?"bg-green-100 text-green-800":"bg-yellow-100 text-yellow-800"} text-xs px-2 py-1 rounded-full font-medium">
                                            <i class="fas ${a.isVerified?"fa-check-circle":"fa-clock"} mr-1"></i>
                                            ${a.isVerified?"Verified":"Pending"}
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Business Description Edit Section -->
                    <div class="mt-6 bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
                            <i class="fas fa-building text-kwikr-green mr-2"></i>Business Description
                        </h3>
                        <div class="space-y-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Company Overview</label>
                                <textarea id="businessDescriptionEdit" rows="4" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent" placeholder="Describe your business, services, and what makes you unique...">${a.companyDescription}</textarea>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Team & Expertise</label>
                                <textarea id="teamExpertiseEdit" rows="3" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent" placeholder="Tell clients about your team's qualifications and experience...">Our team of certified professionals is committed to delivering exceptional results on every project. We pride ourselves on punctuality, attention to detail, and customer satisfaction. All our work is fully insured and comes with a satisfaction guarantee.</textarea>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-1">Service Area & Availability</label>
                                <textarea id="serviceAvailabilityEdit" rows="2" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent" placeholder="Describe your service coverage area and availability...">We serve the entire GTA and are available for both emergency and scheduled services. Our 24/7 customer service ensures that help is always available when you need it most.</textarea>
                            </div>
                        </div>
                    </div>

                    <!-- Action Buttons -->
                    <div class="mt-6 flex justify-end space-x-3">
                        <button type="button" onclick="cancelEdit()" class="bg-gray-500 text-white px-6 py-2 rounded-lg hover:bg-gray-600 transition-colors">
                            <i class="fas fa-times mr-2"></i>Cancel Edit
                        </button>
                        <button type="submit" class="bg-kwikr-green text-white px-6 py-2 rounded-lg hover:bg-green-600 transition-colors">
                            <i class="fas fa-save mr-2"></i>Save Changes
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <script>
            // Profile data for JavaScript
            const profileData = ${JSON.stringify(a).replace(/</g,"\\u003c").replace(/>/g,"\\u003e")};
            console.log('Dashboard Profile: Profile data loaded', profileData);
            
            // Toggle edit mode
            function toggleEditMode() {
                const viewMode = document.getElementById('profileViewMode');
                const editMode = document.getElementById('profileEditMode');
                const editBtn = document.getElementById('editProfileBtn');
                
                if (viewMode.classList.contains('hidden')) {
                    // Switch to view mode
                    viewMode.classList.remove('hidden');
                    editMode.classList.add('hidden');
                    editBtn.innerHTML = '<i class="fas fa-edit mr-2"></i>Edit Profile';
                } else {
                    // Switch to edit mode
                    viewMode.classList.add('hidden');
                    editMode.classList.remove('hidden');
                    editBtn.innerHTML = '<i class="fas fa-eye mr-2"></i>View Profile';
                }
            }
            
            function cancelEdit() {
                // Reset form fields to original values
                resetFormFields();
                toggleEditMode();
            }
            
            function resetFormFields() {
                // Reset all form fields to original profile data
                document.getElementById('primaryEmailEdit').value = profileData.email;
                document.getElementById('businessEmailEdit').value = profileData.businessEmail;
                document.getElementById('phoneEdit').value = profileData.phone || '+1 (416) 555-0123';
                document.getElementById('businessPhoneEdit').value = '+1 (416) 555-0124';
                document.getElementById('emergencyContactEdit').value = '+1 (416) 555-0125';
                
                document.getElementById('streetAddressEdit').value = '123 King Street West';
                document.getElementById('unitSuiteEdit').value = 'Suite 456';
                document.getElementById('cityEdit').value = profileData.city || 'Toronto';
                document.getElementById('provinceEdit').value = profileData.province || 'ON';
                document.getElementById('postalCodeEdit').value = 'M5V 3A8';
                document.getElementById('serviceAreaEdit').value = 'Greater Toronto Area (GTA)';
                
                document.getElementById('businessDescriptionEdit').value = profileData.companyDescription;
                document.getElementById('teamExpertiseEdit').value = 'Our team of certified professionals is committed to delivering exceptional results on every project. We pride ourselves on punctuality, attention to detail, and customer satisfaction. All our work is fully insured and comes with a satisfaction guarantee.';
                document.getElementById('serviceAvailabilityEdit').value = 'We serve the entire GTA and are available for both emergency and scheduled services. Our 24/7 customer service ensures that help is always available when you need it most.';
            }
            
            // Handle form submission
            document.addEventListener('DOMContentLoaded', function() {
                const editForm = document.getElementById('profileEditForm');
                if (editForm) {
                    editForm.addEventListener('submit', async function(e) {
                        e.preventDefault();
                        await saveProfileChanges();
                    });
                }
            });
            
            async function saveProfileChanges() {
                // Collect form data
                const formData = {
                    primaryEmail: document.getElementById('primaryEmailEdit').value,
                    businessEmail: document.getElementById('businessEmailEdit').value,
                    phone: document.getElementById('phoneEdit').value,
                    businessPhone: document.getElementById('businessPhoneEdit').value,
                    emergencyContact: document.getElementById('emergencyContactEdit').value,
                    
                    streetAddress: document.getElementById('streetAddressEdit').value,
                    unitSuite: document.getElementById('unitSuiteEdit').value,
                    city: document.getElementById('cityEdit').value,
                    province: document.getElementById('provinceEdit').value,
                    postalCode: document.getElementById('postalCodeEdit').value,
                    serviceArea: document.getElementById('serviceAreaEdit').value,
                    
                    businessDescription: document.getElementById('businessDescriptionEdit').value,
                    teamExpertise: document.getElementById('teamExpertiseEdit').value,
                    serviceAvailability: document.getElementById('serviceAvailabilityEdit').value
                };
                
                console.log('Saving profile changes:', formData);
                
                try {
                    const response = await fetch('/api/worker/profile/update', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        credentials: 'include',  // Include session cookies
                        body: JSON.stringify(formData)
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        // Update display values with new data
                        updateDisplayValues(formData);
                        
                        // Show success message
                        showNotification('Profile updated successfully!', 'success');
                        
                        // Switch back to view mode
                        toggleEditMode();
                    } else {
                        showNotification(result.error || 'Failed to update profile', 'error');
                    }
                } catch (error) {
                    console.error('Error saving profile:', error);
                    showNotification('Network error. Please try again.', 'error');
                }
            }
            
            function updateDisplayValues(formData) {
                // Update the display elements with new values
                document.getElementById('primaryEmailDisplay').textContent = formData.primaryEmail;
                document.getElementById('businessEmailDisplay').textContent = formData.businessEmail;
                document.getElementById('phoneDisplay').textContent = formData.phone;
                document.getElementById('businessPhoneDisplay').textContent = formData.businessPhone;
                document.getElementById('emergencyContactDisplay').textContent = formData.emergencyContact;
                
                document.getElementById('streetAddressDisplay').textContent = formData.streetAddress;
                document.getElementById('unitSuiteDisplay').textContent = formData.unitSuite;
                document.getElementById('cityDisplay').textContent = formData.city;
                document.getElementById('provinceDisplay').textContent = getProvinceFullName(formData.province);
                document.getElementById('postalCodeDisplay').textContent = formData.postalCode;
                document.getElementById('serviceAreaDisplay').textContent = formData.serviceArea;
                
                document.getElementById('businessDescriptionDisplay').textContent = formData.businessDescription;
            }
            
            function getProvinceFullName(code) {
                const provinces = {
                    'ON': 'Ontario',
                    'BC': 'British Columbia',
                    'AB': 'Alberta',
                    'SK': 'Saskatchewan',
                    'MB': 'Manitoba',
                    'QC': 'Quebec',
                    'NB': 'New Brunswick',
                    'NS': 'Nova Scotia',
                    'PE': 'Prince Edward Island',
                    'NL': 'Newfoundland and Labrador',
                    'YT': 'Yukon',
                    'NT': 'Northwest Territories',
                    'NU': 'Nunavut'
                };
                return provinces[code] || code;
            }
            
            function showNotification(message, type = 'info') {
                // Create notification element
                const notification = document.createElement('div');
                notification.className = \`fixed top-4 right-4 z-50 px-6 py-4 rounded-lg shadow-lg transition-all duration-300 transform translate-x-full\`;
                
                if (type === 'success') {
                    notification.classList.add('bg-green-500', 'text-white');
                    notification.innerHTML = \`<i class="fas fa-check-circle mr-2"></i>\${message}\`;
                } else if (type === 'error') {
                    notification.classList.add('bg-red-500', 'text-white');
                    notification.innerHTML = \`<i class="fas fa-exclamation-circle mr-2"></i>\${message}\`;
                } else {
                    notification.classList.add('bg-blue-500', 'text-white');
                    notification.innerHTML = \`<i class="fas fa-info-circle mr-2"></i>\${message}\`;
                }
                
                document.body.appendChild(notification);
                
                // Slide in
                setTimeout(() => {
                    notification.classList.remove('translate-x-full');
                }, 100);
                
                // Slide out and remove
                setTimeout(() => {
                    notification.classList.add('translate-x-full');
                    setTimeout(() => {
                        document.body.removeChild(notification);
                    }, 300);
                }, 4000);
            }
            
            function manageServices() {
                window.location.href = '/dashboard/worker/services';
            }
            
            function uploadDocuments() {
                window.location.href = '/dashboard/worker/compliance';
            }
            
            function uploadLogo() {
                // Create file input element
                const input = document.createElement('input');
                input.type = 'file';
                input.accept = 'image/*';
                input.onchange = function(e) {
                    const file = e.target.files[0];
                    if (file) {
                        // For now, show a placeholder message
                        showNotification('Logo upload functionality coming soon!', 'info');
                        // TODO: Implement actual logo upload to server
                    }
                };
                input.click();
            }
        <\/script>
    </body>
    </html>
  `)});Y.get("/admin",Q,async e=>{const t=e.get("user");return t.role!=="admin"?e.redirect("/dashboard"):e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Admin Dashboard - Real-time Analytics & Management Portal</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"><\/script>
        <style>
          .loading-spinner { animation: spin 1s linear infinite; }
          @keyframes spin { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }
          .metric-card { transition: all 0.3s ease; }
          .metric-card:hover { transform: translateY(-2px); box-shadow: 0 8px 25px rgba(0,0,0,0.1); }
          .activity-item { transition: background-color 0.2s ease; }
          .realtime-indicator { animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite; }
          @keyframes pulse { 0%, 100% { opacity: 1; } 50% { opacity: .5; } }
        </style>
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <h1 class="text-2xl font-bold text-kwikr-green">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory Admin
                        </h1>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Loading Indicator -->
        <div id="loading-indicator" class="fixed top-0 left-0 right-0 bg-kwikr-green text-white text-center py-2 z-50" style="display: none;">
            <i class="fas fa-spinner loading-spinner mr-2"></i>
            Updating dashboard...
        </div>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Enhanced Header with Real-time Controls -->
            <div class="mb-8">
                <div class="flex justify-between items-start">
                    <div>
                        <h1 class="text-3xl font-bold text-gray-900 flex items-center">
                            Admin Dashboard
                            <div class="ml-4 flex items-center">
                                <div class="w-3 h-3 bg-green-400 rounded-full realtime-indicator mr-2"></div>
                                <span class="text-sm font-normal text-green-600">Live</span>
                            </div>
                        </h1>
                        <p class="text-gray-600 mt-2">Real-time platform management and comprehensive analytics</p>
                        <p class="text-xs text-gray-500 mt-1" id="last-refresh-time">Last updated: Loading...</p>
                    </div>
                    <div class="flex items-center space-x-3">
                        <div class="flex items-center">
                            <label class="text-sm text-gray-600 mr-2">Auto-refresh</label>
                            <input type="checkbox" id="autoRefreshToggle" checked class="w-4 h-4 text-kwikr-green border-gray-300 rounded focus:ring-kwikr-green">
                        </div>
                        <button id="refreshDashboard" class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 transition-colors flex items-center">
                            <i class="fas fa-sync-alt mr-2"></i>Refresh
                        </button>
                        <div id="system-health" class="bg-white px-4 py-2 rounded-lg border">
                            <div class="flex items-center">
                                <div class="w-2 h-2 bg-gray-400 rounded-full mr-2"></div>
                                <span class="text-xs text-gray-500">Checking...</span>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Today's Activity Summary -->
                <div class="mt-6 bg-gradient-to-r from-kwikr-green to-green-600 text-white rounded-lg p-4">
                    <h3 class="font-semibold mb-3 flex items-center">
                        <i class="fas fa-calendar-day mr-2"></i>Today's Activity
                    </h3>
                    <div id="today-activity" class="text-sm">
                        <div class="grid grid-cols-2 md:grid-cols-6 gap-4">
                            <div class="text-center">
                                <div class="text-lg font-bold">-</div>
                                <div class="text-xs opacity-90">Loading...</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Enhanced Platform Stats with Real-time Updates -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                <div class="bg-white p-6 rounded-lg shadow-sm metric-card border-l-4 border-blue-500">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="active-users">-</p>
                            <p class="text-sm text-gray-600">Active Users</p>
                            <p class="text-xs text-blue-600 mt-1">↗ Real-time</p>
                        </div>
                        <div class="text-blue-500 text-3xl">
                            <i class="fas fa-users"></i>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm metric-card border-l-4 border-kwikr-green">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="open-jobs">-</p>
                            <p class="text-sm text-gray-600">Open Jobs</p>
                            <p class="text-xs text-kwikr-green mt-1">↗ Live count</p>
                        </div>
                        <div class="text-kwikr-green text-3xl">
                            <i class="fas fa-briefcase"></i>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm metric-card border-l-4 border-purple-500">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="total-revenue">-</p>
                            <p class="text-sm text-gray-600">Total Revenue</p>
                            <p class="text-xs text-purple-600 mt-1">↗ Platform earnings</p>
                        </div>
                        <div class="text-purple-500 text-3xl">
                            <i class="fas fa-dollar-sign"></i>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm metric-card border-l-4 border-red-500">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="active-disputes">-</p>
                            <p class="text-sm text-gray-600">Active Disputes</p>
                            <p class="text-xs text-red-600 mt-1">↗ Needs attention</p>
                        </div>
                            <i class="fas fa-exclamation-triangle"></i>
                        </div>
                    </div>
                </div>
                
                <!-- Second row of metrics -->
                <div class="bg-white p-6 rounded-lg shadow-sm metric-card border-l-4 border-yellow-500">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="pending-documents">-</p>
                            <p class="text-sm text-gray-600">Pending Documents</p>
                            <p class="text-xs text-yellow-600 mt-1">↗ Awaiting review</p>
                        </div>
                        <div class="text-yellow-500 text-3xl">
                            <i class="fas fa-file-alt"></i>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm metric-card border-l-4 border-indigo-500">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="active-workers">-</p>
                            <p class="text-sm text-gray-600">Active Workers</p>
                            <p class="text-xs text-indigo-600 mt-1">↗ Verified providers</p>
                        </div>
                        <div class="text-indigo-500 text-3xl">
                            <i class="fas fa-hard-hat"></i>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm metric-card border-l-4 border-green-500">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="completed-jobs">-</p>
                            <p class="text-sm text-gray-600">Completed Jobs</p>
                            <p class="text-xs text-green-600 mt-1">↗ Platform success</p>
                        </div>
                        <div class="text-green-500 text-3xl">
                            <i class="fas fa-check-circle"></i>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm metric-card border-l-4 border-pink-500">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-2xl font-bold text-gray-900" id="verified-users">-</p>
                            <p class="text-sm text-gray-600">Verified Users</p>
                            <p class="text-xs text-pink-600 mt-1">↗ Quality assurance</p>
                        </div>
                        <div class="text-pink-500 text-3xl">
                            <i class="fas fa-shield-check"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Real-time Analytics & Performance Section -->
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
                <!-- Performance Metrics -->
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-tachometer-alt text-kwikr-green mr-2"></i>
                            Performance Metrics
                        </h3>
                        <div class="w-2 h-2 bg-green-400 rounded-full realtime-indicator"></div>
                    </div>
                    <div id="performance-metrics">
                        <div class="text-center py-4 text-gray-500">
                            <i class="fas fa-spinner loading-spinner text-lg mb-2"></i>
                            <p class="text-sm">Loading performance data...</p>
                        </div>
                    </div>
                </div>

                <!-- Recent Activity Feed -->
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-stream text-blue-600 mr-2"></i>
                            Recent Activity
                        </h3>
                        <div class="w-2 h-2 bg-blue-400 rounded-full realtime-indicator"></div>
                    </div>
                    <div id="activity-feed" class="space-y-3 max-h-64 overflow-y-auto">
                        <div class="text-center py-4 text-gray-500">
                            <i class="fas fa-spinner loading-spinner text-lg mb-2"></i>
                            <p class="text-sm">Loading recent activity...</p>
                        </div>
                    </div>
                </div>

                <!-- Geographic Distribution -->
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-map-marked-alt text-purple-600 mr-2"></i>
                            Geographic Data
                        </h3>
                        <div class="w-2 h-2 bg-purple-400 rounded-full realtime-indicator"></div>
                    </div>
                    <div id="geographic-distribution" class="space-y-2 max-h-64 overflow-y-auto">
                        <div class="text-center py-4 text-gray-500">
                            <i class="fas fa-spinner loading-spinner text-lg mb-2"></i>
                            <p class="text-sm">Loading geographic data...</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Interactive Charts Section -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                <!-- User Growth Chart -->
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-chart-line text-green-600 mr-2"></i>
                            User Growth Trend
                        </h3>
                        <div class="text-xs text-gray-500">Last 7 days</div>
                    </div>
                    <div class="relative h-64">
                        <canvas id="userGrowthChart"></canvas>
                    </div>
                </div>

                <!-- Revenue Analytics Chart -->
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-chart-bar text-purple-600 mr-2"></i>
                            Revenue Analytics
                        </h3>
                        <div class="text-xs text-gray-500">Last 7 days</div>
                    </div>
                    <div class="relative h-64">
                        <canvas id="revenueChart"></canvas>
                    </div>
                </div>

                <!-- Performance Distribution Chart -->
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-chart-pie text-yellow-600 mr-2"></i>
                            Job Status Distribution
                        </h3>
                        <div class="text-xs text-gray-500">Current status</div>
                    </div>
                    <div class="relative h-64">
                        <canvas id="performanceChart"></canvas>
                    </div>
                </div>

                <!-- Geographic Chart -->
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex items-center justify-between mb-4">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-map-marker-alt text-red-600 mr-2"></i>
                            User Distribution by Province
                        </h3>
                        <div class="text-xs text-gray-500">Active users</div>
                    </div>
                    <div class="relative h-64">
                        <canvas id="geographicChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- Business Intelligence Summary -->
            <div class="bg-gradient-to-r from-blue-600 to-purple-600 text-white rounded-lg p-6 mb-8">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-xl font-semibold flex items-center">
                        <i class="fas fa-brain mr-3"></i>
                        Business Intelligence Insights
                    </h3>
                    <button onclick="refreshBusinessIntelligence()" class="bg-white bg-opacity-20 hover:bg-opacity-30 px-4 py-2 rounded-lg transition-colors">
                        <i class="fas fa-refresh mr-2"></i>Refresh Insights
                    </button>
                </div>
                <div id="business-intelligence-summary" class="grid grid-cols-1 md:grid-cols-4 gap-4">
                    <div class="text-center">
                        <div class="text-2xl font-bold">-</div>
                        <div class="text-sm opacity-90">Growth Rate</div>
                    </div>
                    <div class="text-center">
                        <div class="text-2xl font-bold">-</div>
                        <div class="text-sm opacity-90">Completion Rate</div>
                    </div>
                    <div class="text-center">
                        <div class="text-2xl font-bold">-</div>
                        <div class="text-sm opacity-90">Customer Satisfaction</div>
                    </div>
                    <div class="text-center">
                        <div class="text-2xl font-bold">-</div>
                        <div class="text-sm opacity-90">Market Health</div>
                    </div>
                </div>
            </div>

            <!-- Main Content Tabs -->
            <div class="bg-white rounded-lg shadow-sm">
                <div class="border-b border-gray-200">
                    <nav class="flex">
                        <button onclick="showTab('overview', this)" class="admin-tab active px-6 py-3 border-b-2 border-kwikr-green text-kwikr-green font-medium">
                            Overview
                        </button>
                        <button onclick="showTab('users', this)" class="admin-tab px-6 py-3 border-b-2 border-transparent text-gray-500 hover:text-gray-700">
                            Users
                        </button>
                        <button onclick="showTab('compliance', this)" class="admin-tab px-6 py-3 border-b-2 border-transparent text-gray-500 hover:text-gray-700">
                            Compliance
                        </button>
                        <button onclick="showTab('disputes', this)" class="admin-tab px-6 py-3 border-b-2 border-transparent text-gray-500 hover:text-gray-700">
                            Disputes
                        </button>
                        <button onclick="showTab('analytics', this)" class="admin-tab px-6 py-3 border-b-2 border-transparent text-gray-500 hover:text-gray-700">
                            Analytics
                        </button>
                    </nav>
                </div>

                <!-- Tab Content -->
                <div class="p-6">
                    <!-- Overview Tab -->
                    <div id="overviewTab" class="tab-content">
                        <h3 class="text-lg font-semibold text-gray-900 mb-4">Platform Overview</h3>
                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                            <div>
                                <h4 class="font-medium text-gray-900 mb-3">Recent Jobs</h4>
                                <div id="recentJobs" class="space-y-3">
                                    <div class="text-center text-gray-500 py-8">
                                        <i class="fas fa-spinner fa-spin text-2xl mb-4"></i>
                                        <p>Loading recent jobs...</p>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <h4 class="font-medium text-gray-900 mb-3">System Status</h4>
                                <div class="space-y-3">
                                    <div class="flex justify-between items-center p-3 bg-green-50 rounded-lg">
                                        <span class="text-sm font-medium">Payment Processing</span>
                                        <span class="text-green-600"><i class="fas fa-check-circle"></i> Active</span>
                                    </div>
                                    <div class="flex justify-between items-center p-3 bg-green-50 rounded-lg">
                                        <span class="text-sm font-medium">New Registrations</span>
                                        <span class="text-green-600"><i class="fas fa-check-circle"></i> Active</span>
                                    </div>
                                    <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                                        <span class="text-sm font-medium">Maintenance Mode</span>
                                        <span class="text-gray-600"><i class="fas fa-times-circle"></i> Inactive</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Users Tab -->
                    <div id="usersTab" class="tab-content hidden">
                        <div class="flex justify-between items-center mb-4">
                            <h3 class="text-lg font-semibold text-gray-900">User Management</h3>
                            <div class="flex space-x-2">
                                <select id="userRoleFilter" class="border border-gray-300 rounded-lg px-3 py-2">
                                    <option value="">All Roles</option>
                                    <option value="client">Clients</option>
                                    <option value="worker">Workers</option>
                                </select>
                                <button onclick="loadUsers()" class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">
                                    <i class="fas fa-refresh"></i>
                                </button>
                            </div>
                        </div>
                        <div id="usersList">
                            <div class="text-center text-gray-500 py-8">
                                <i class="fas fa-spinner fa-spin text-2xl mb-4"></i>
                                <p>Loading users...</p>
                            </div>
                        </div>
                    </div>

                    <!-- Compliance Tab -->
                    <div id="complianceTab" class="tab-content hidden">
                        <div class="flex justify-between items-center mb-4">
                            <h3 class="text-lg font-semibold text-gray-900">Worker Compliance Review</h3>
                            <button onclick="loadCompliance()" class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">
                                <i class="fas fa-refresh"></i>
                            </button>
                        </div>
                        <div id="complianceList">
                            <div class="text-center text-gray-500 py-8">
                                <i class="fas fa-spinner fa-spin text-2xl mb-4"></i>
                                <p>Loading compliance reviews...</p>
                            </div>
                        </div>
                    </div>

                    <!-- Disputes Tab -->
                    <div id="disputesTab" class="tab-content hidden">
                        <div class="flex justify-between items-center mb-4">
                            <h3 class="text-lg font-semibold text-gray-900">Dispute Management</h3>
                            <button onclick="loadDisputes()" class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">
                                <i class="fas fa-refresh"></i>
                            </button>
                        </div>
                        <div id="disputesList">
                            <div class="text-center text-gray-500 py-8">
                                <i class="fas fa-spinner fa-spin text-2xl mb-4"></i>
                                <p>Loading disputes...</p>
                            </div>
                        </div>
                    </div>

                    <!-- Analytics Tab -->
                    <div id="analyticsTab" class="tab-content hidden">
                        <h3 class="text-lg font-semibold text-gray-900 mb-4">Analytics & Reports</h3>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div class="border border-gray-200 rounded-lg p-6">
                                <h4 class="font-medium text-gray-900 mb-3">Export Data</h4>
                                <div class="space-y-3">
                                    <button onclick="exportJobs()" class="w-full text-left p-3 border border-gray-200 rounded-lg hover:bg-gray-50">
                                        <i class="fas fa-download text-kwikr-green mr-3"></i>
                                        Export Jobs Data (CSV)
                                    </button>
                                    <button onclick="exportUsers()" class="w-full text-left p-3 border border-gray-200 rounded-lg hover:bg-gray-50">
                                        <i class="fas fa-download text-kwikr-green mr-3"></i>
                                        Export Users Data (CSV)
                                    </button>
                                </div>
                            </div>
                            <div class="border border-gray-200 rounded-lg p-6">
                                <h4 class="font-medium text-gray-900 mb-3">Platform Statistics</h4>
                                <div id="platformStats" class="space-y-3">
                                    <div class="text-center text-gray-500">
                                        <i class="fas fa-spinner fa-spin"></i>
                                        <p class="text-sm mt-2">Loading statistics...</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script>
          // Embed user information directly from server-side session
          window.currentUser = {
            id: ${t.user_id||3},
            email: "${t.email||"demo.admin@kwikr.ca"}",
            role: "${t.role||"admin"}",
            firstName: "${t.first_name||"Demo"}",
            lastName: "${t.last_name||"Admin"}",
            province: "${t.province||""}",
            city: "${t.city||""}",
            isVerified: ${t.is_verified||1}
          };
          console.log('Admin user information embedded from server:', window.currentUser);
          
          // Test if JavaScript is executing at all
          console.log('ADMIN DASHBOARD: JavaScript is executing!');
          
          // Set proper page title
          document.title = 'Admin Dashboard - Kwikr Directory';
          
          // JavaScript working indicator removed to avoid obstructing the view
          
          // Set initial stats immediately to test
          setTimeout(function() {
            console.log('ADMIN DASHBOARD: Setting demo stats...');
            var totalUsersEl = document.getElementById('totalUsers');
            var totalJobsEl = document.getElementById('totalJobs');
            var pendingEl = document.getElementById('pendingCompliance');
            var disputesEl = document.getElementById('activeDisputes');
            
            if (totalUsersEl) {
              totalUsersEl.textContent = '2,847';
              console.log('Set total users');
            }
            if (totalJobsEl) {
              totalJobsEl.textContent = '1,356';
              console.log('Set total jobs');
            }
            if (pendingEl) {
              pendingEl.textContent = '12';
              console.log('Set pending compliance');
            }
            if (disputesEl) {
              disputesEl.textContent = '3';
              console.log('Set active disputes');
            }
            
            // Test recent jobs
            var recentJobsEl = document.getElementById('recentJobs');
            if (recentJobsEl) {
              recentJobsEl.innerHTML = \`
                <div class="space-y-3">
                  <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                    <div class="flex-1">
                      <h4 class="text-sm font-medium text-gray-900">Kitchen Deep Cleaning</h4>
                      <p class="text-xs text-gray-600">Cleaning Services</p>
                      <p class="text-xs text-gray-500">2 days ago</p>
                    </div>
                    <div class="text-right">
                      <span class="px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800">In Progress</span>
                      <div class="text-xs text-gray-600 mt-1">$120 - $180</div>
                    </div>
                  </div>
                  <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                    <div class="flex-1">
                      <h4 class="text-sm font-medium text-gray-900">Bathroom Renovation</h4>
                      <p class="text-xs text-gray-600">Handyman Services</p>
                      <p class="text-xs text-gray-500">5 days ago</p>
                    </div>
                    <div class="text-right">
                      <span class="px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">Assigned</span>
                      <div class="text-xs text-gray-600 mt-1">$800 - $1,200</div>
                    </div>
                  </div>
                </div>
              \`;
              console.log('Set recent jobs');
            }
          }, 1000);
          
          // Global function for tab switching - embedded directly
          window.showTab = function(tabName, clickedElement) {
            console.log('ADMIN DASHBOARD: Switching to tab:', tabName);
            
            try {
              // Hide all tab contents
              var tabContents = document.querySelectorAll('.tab-content');
              console.log('Found tab contents:', tabContents.length);
              for (var i = 0; i < tabContents.length; i++) {
                tabContents[i].classList.add('hidden');
              }
              
              // Remove active class from all tabs
              var tabs = document.querySelectorAll('.admin-tab');
              console.log('Found admin tabs:', tabs.length);
              for (var i = 0; i < tabs.length; i++) {
                tabs[i].classList.remove('border-kwikr-green', 'text-kwikr-green');
                tabs[i].classList.add('border-transparent', 'text-gray-500');
              }
              
              // Show selected tab content
              var selectedTab = document.getElementById(tabName + 'Tab');
              if (selectedTab) {
                selectedTab.classList.remove('hidden');
                console.log('Showed tab:', tabName + 'Tab');
              } else {
                console.error('Tab not found:', tabName + 'Tab');
              }
              
              // Find and activate the clicked button
              var clickedButton = clickedElement || window.event?.target;
              if (!clickedButton) {
                // Fallback: find the button by its onclick content
                var allButtons = document.querySelectorAll('.admin-tab');
                for (var i = 0; i < allButtons.length; i++) {
                  if (allButtons[i].getAttribute('onclick')?.includes(tabName)) {
                    clickedButton = allButtons[i];
                    break;
                  }
                }
              }
              
              if (clickedButton) {
                clickedButton.classList.remove('border-transparent', 'text-gray-500');
                clickedButton.classList.add('border-kwikr-green', 'text-kwikr-green');
                console.log('Activated button for tab:', tabName);
              }
              
              // Load tab-specific demo data
              if (tabName === 'users') {
                setTimeout(function() {
                  var usersList = document.getElementById('usersList');
                  if (usersList) {
                    usersList.innerHTML = \`
                      <div class="space-y-3">
                        <div class="flex justify-between items-center p-4 border border-gray-200 rounded-lg">
                          <div class="flex-1">
                            <h4 class="text-sm font-medium text-gray-900">Jennifer Lopez</h4>
                            <p class="text-sm text-gray-600">jennifer.l@email.com</p>
                            <p class="text-xs text-gray-500">client • Toronto, ON</p>
                          </div>
                          <div class="text-right">
                            <span class="bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs">Verified</span>
                          </div>
                        </div>
                        <div class="flex justify-between items-center p-4 border border-gray-200 rounded-lg">
                          <div class="flex-1">
                            <h4 class="text-sm font-medium text-gray-900">Sarah Mitchell</h4>
                            <p class="text-sm text-gray-600">sarah.m@cleanpro.ca</p>
                            <p class="text-xs text-gray-500">worker • Calgary, AB</p>
                          </div>
                          <div class="text-right">
                            <span class="bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs">Verified</span>
                          </div>
                        </div>
                      </div>
                    \`;
                    console.log('Loaded users data');
                  }
                }, 500);
              } else if (tabName === 'compliance') {
                setTimeout(function() {
                  var complianceList = document.getElementById('complianceList');
                  if (complianceList) {
                    complianceList.innerHTML = \`
                      <div class="space-y-3">
                        <div class="flex justify-between items-center p-4 border border-gray-200 rounded-lg">
                          <div class="flex-1">
                            <h4 class="text-sm font-medium text-gray-900">Sarah Mitchell - Insurance Verification</h4>
                            <p class="text-sm text-gray-600">Submitted 2 days ago</p>
                          </div>
                          <div class="text-right">
                            <span class="bg-yellow-100 text-yellow-800 px-2 py-1 rounded-full text-xs">Pending Review</span>
                          </div>
                        </div>
                        <div class="flex justify-between items-center p-4 border border-gray-200 rounded-lg">
                          <div class="flex-1">
                            <h4 class="text-sm font-medium text-gray-900">James Wilson - Background Check</h4>
                            <p class="text-sm text-gray-600">Submitted 5 days ago</p>
                          </div>
                          <div class="text-right">
                            <span class="bg-green-100 text-green-800 px-2 py-1 rounded-full text-xs">Approved</span>
                          </div>
                        </div>
                      </div>
                    \`;
                    console.log('Loaded compliance data');
                  }
                }, 500);
              } else if (tabName === 'disputes') {
                setTimeout(function() {
                  var disputesList = document.getElementById('disputesList');
                  if (disputesList) {
                    disputesList.innerHTML = \`
                      <div class="space-y-3">
                        <div class="flex justify-between items-center p-4 border border-gray-200 rounded-lg">
                          <div class="flex-1">
                            <h4 class="text-sm font-medium text-gray-900">Kitchen Cleaning Service Dispute</h4>
                            <p class="text-sm text-gray-600">Jennifer L. vs Sarah M. • $150</p>
                            <p class="text-xs text-gray-500">Work quality dispute</p>
                          </div>
                          <div class="text-right">
                            <span class="bg-red-100 text-red-800 px-2 py-1 rounded-full text-xs">Open</span>
                          </div>
                        </div>
                        <div class="flex justify-between items-center p-4 border border-gray-200 rounded-lg">
                          <div class="flex-1">
                            <h4 class="text-sm font-medium text-gray-900">Payment Delay Issue</h4>
                            <p class="text-sm text-gray-600">Mike R. vs James W. • $800</p>
                            <p class="text-xs text-gray-500">Payment processing delay</p>
                          </div>
                          <div class="text-right">
                            <span class="bg-yellow-100 text-yellow-800 px-2 py-1 rounded-full text-xs">Investigating</span>
                          </div>
                        </div>
                      </div>
                    \`;
                    console.log('Loaded disputes data');
                  }
                }, 500);
              } else if (tabName === 'analytics') {
                setTimeout(function() {
                  var platformStats = document.getElementById('platformStats');
                  if (platformStats) {
                    platformStats.innerHTML = \`
                      <div class="space-y-4">
                        <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                          <span class="text-sm font-medium">Revenue This Month</span>
                          <span class="text-lg font-bold text-green-600">$47,230</span>
                        </div>
                        <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                          <span class="text-sm font-medium">Jobs Completed</span>
                          <span class="text-lg font-bold text-blue-600">342</span>
                        </div>
                        <div class="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                          <span class="text-sm font-medium">Platform Fee Collected</span>
                          <span class="text-lg font-bold text-purple-600">$4,723</span>
                        </div>
                      </div>
                    \`;
                    console.log('Loaded analytics data');
                  }
                }, 500);
              }
              
            } catch (error) {
              console.error('Error in showTab function:', error);
            }
          };
          
          console.log('ADMIN DASHBOARD: Inline JavaScript setup complete');
          
          // Enhanced admin dashboard functions
          window.refreshBusinessIntelligence = async function() {
            try {
              // Get session token from cookies
              const sessionToken = document.cookie
                .split('; ')
                .find(row => row.startsWith('session='))
                ?.split('=')[1];
                
              if (!sessionToken) {
                console.error('No session token found');
                showNotification('Authentication required. Please login again.', 'error');
                return;
              }
              
              const response = await fetch('/api/admin/analytics/business-intelligence?timeframe=7', {
                headers: { 'Authorization': 'Bearer ' + sessionToken }
              });
              
              if (response.ok) {
                const data = await response.json();
                const summary = document.getElementById('business-intelligence-summary');
                if (summary && data.performance_trends) {
                  summary.innerHTML = \`
                    <div class="text-center">
                      <div class="text-2xl font-bold">\${Math.round(data.performance_trends.user_growth_rate)}%</div>
                      <div class="text-sm opacity-90">Growth Rate</div>
                    </div>
                    <div class="text-center">
                      <div class="text-2xl font-bold">\${Math.round(data.performance_trends.job_completion_rate)}%</div>
                      <div class="text-sm opacity-90">Completion Rate</div>
                    </div>
                    <div class="text-center">
                      <div class="text-2xl font-bold">\${Math.round(data.performance_trends.customer_satisfaction_score)}%</div>
                      <div class="text-sm opacity-90">Customer Satisfaction</div>
                    </div>
                    <div class="text-center">
                      <div class="text-2xl font-bold">\${data.summary.top_performing_province || 'N/A'}</div>
                      <div class="text-sm opacity-90">Top Province</div>
                    </div>
                  \`;
                }
                
                // Show insights
                if (data.business_insights && data.business_insights.length > 0) {
                  data.business_insights.forEach(insight => {
                    showNotification(insight.message, insight.type);
                  });
                }
              }
            } catch (error) {
              console.error('Error refreshing business intelligence:', error);
            }
          };
          
          window.showNotification = function(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = \`fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg max-w-sm transition-all duration-300 \${
              type === 'success' ? 'bg-green-500 text-white' :
              type === 'warning' ? 'bg-yellow-500 text-white' :
              type === 'error' ? 'bg-red-500 text-white' :
              type === 'positive' ? 'bg-blue-500 text-white' :
              'bg-gray-600 text-white'
            }\`;
            
            notification.innerHTML = \`
              <div class="flex items-center justify-between">
                <span class="text-sm font-medium">\${message}</span>
                <button class="ml-3 text-white hover:text-gray-200 focus:outline-none" onclick="this.parentElement.parentElement.remove()">
                  <i class="fas fa-times text-xs"></i>
                </button>
              </div>
            \`;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
              notification.remove();
            }, 5000);
          };
          
          // Dashboard data loading function
          window.loadDashboardData = async function() {
            try {
              const sessionToken = document.cookie
                .split('; ')
                .find(row => row.startsWith('session='))
                ?.split('=')[1];
                
              if (!sessionToken) {
                console.error('No session token found');
                showNotification('Authentication required. Please login again.', 'error');
                return;
              }
              
              console.log('Loading dashboard data...');
              console.log('Session token found:', sessionToken);
              
              // Load basic dashboard metrics
              const response = await fetch('/api/admin/dashboard', {
                headers: { 'Authorization': 'Bearer ' + sessionToken }
              });
              
              if (response.ok) {
                const data = await response.json();
                console.log('Dashboard data loaded:', data);
                
                // Update main metrics
                const activeUsersEl = document.getElementById('active-users');
                const openJobsEl = document.getElementById('open-jobs');
                const totalRevenueEl = document.getElementById('total-revenue');
                
                if (activeUsersEl) activeUsersEl.textContent = (data.active_users || 0).toLocaleString();
                if (openJobsEl) openJobsEl.textContent = (data.open_jobs || 0).toLocaleString();
                if (totalRevenueEl) totalRevenueEl.textContent = '$' + (data.total_revenue || 0).toLocaleString();
                
                // Update today's activity
                const todayActivityEl = document.getElementById('today-activity');
                if (todayActivityEl && data.new_users_today !== undefined) {
                  todayActivityEl.innerHTML = 
                    '<div class="grid grid-cols-2 md:grid-cols-6 gap-4">' +
                      '<div class="text-center">' +
                        '<div class="text-lg font-bold">' + (data.new_users_today || 0) + '</div>' +
                        '<div class="text-xs opacity-90">New Users</div>' +
                      '</div>' +
                      '<div class="text-center">' +
                        '<div class="text-lg font-bold">' + (data.jobs_posted_today || 0) + '</div>' +
                        '<div class="text-xs opacity-90">Jobs Posted</div>' +
                      '</div>' +
                      '<div class="text-center">' +
                        '<div class="text-lg font-bold">' + (data.active_workers || 0) + '</div>' +
                        '<div class="text-xs opacity-90">Active Workers</div>' +
                      '</div>' +
                      '<div class="text-center">' +
                        '<div class="text-lg font-bold">' + (data.active_clients || 0) + '</div>' +
                        '<div class="text-xs opacity-90">Active Clients</div>' +
                      '</div>' +
                      '<div class="text-center">' +
                        '<div class="text-lg font-bold">' + (data.completed_jobs || 0) + '</div>' +
                        '<div class="text-xs opacity-90">Completed Jobs</div>' +
                      '</div>' +
                      '<div class="text-center">' +
                        '<div class="text-lg font-bold">' + (data.pending_documents || 0) + '</div>' +
                        '<div class="text-xs opacity-90">Pending Reviews</div>' +
                      '</div>' +
                    '</div>';
                }
                
                // Update system health
                const systemHealthEl = document.getElementById('system-health');
                if (systemHealthEl) {
                  const isHealthy = data.active_users > 0 && data.open_jobs >= 0;
                  systemHealthEl.innerHTML = 
                    '<div class="flex items-center">' +
                      '<div class="w-2 h-2 ' + (isHealthy ? 'bg-green-400' : 'bg-red-400') + ' rounded-full mr-2"></div>' +
                      '<span class="text-xs ' + (isHealthy ? 'text-green-600' : 'text-red-600') + '">' + (isHealthy ? 'Healthy' : 'Issues Detected') + '</span>' +
                    '</div>';
                }
                
                // Update last refresh time
                const lastRefreshEl = document.getElementById('last-refresh-time');
                if (lastRefreshEl) {
                  lastRefreshEl.textContent = 'Last updated: ' + new Date().toLocaleTimeString();
                }
                
                showNotification('Dashboard updated successfully', 'success');
                
              } else {
                console.error('Failed to load dashboard data:', response.status);
                const errorText = await response.text();
                console.error('Error response:', errorText);
                showNotification('Dashboard update failed. Please refresh the page.', 'error');
              }
              
            } catch (error) {
              console.error('Error loading dashboard data:', error);
              showNotification('Dashboard update failed. Please refresh the page.', 'error');
            }
          };
          
          // Auto-refresh functionality
          let autoRefreshInterval = null;
          
          window.startAutoRefresh = function() {
            if (autoRefreshInterval) clearInterval(autoRefreshInterval);
            
            autoRefreshInterval = setInterval(() => {
              const autoRefreshToggle = document.getElementById('autoRefreshToggle');
              if (autoRefreshToggle && autoRefreshToggle.checked) {
                console.log('Auto-refreshing dashboard...');
                loadDashboardData();
              }
            }, 30000); // Refresh every 30 seconds
          };
          
          // Manual refresh button
          document.addEventListener('DOMContentLoaded', function() {
            const refreshButton = document.getElementById('refreshDashboard');
            if (refreshButton) {
              refreshButton.addEventListener('click', function() {
                console.log('Manual refresh triggered');
                loadDashboardData();
              });
            }
            
            // Initial load
            loadDashboardData();
            
            // Start auto-refresh
            startAutoRefresh();
          });
          
          // Initialize business intelligence on load
          setTimeout(() => {
            refreshBusinessIntelligence();
          }, 3000);
          
        <\/script>
        <!-- Admin dashboard.js removed to avoid conflicts with embedded dashboard loading -->
    </body>
    </html>
  `)});Y.get("/client/profile",Q,async e=>{const t=e.get("user");return t.role!=="client"?e.redirect("/dashboard"):e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>My Profile - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/dashboard/client" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Breadcrumb Navigation -->
            <nav class="flex items-center space-x-2 text-sm text-gray-500 mb-6">
                <a href="/dashboard/client" class="hover:text-kwikr-green">Dashboard</a>
                <i class="fas fa-chevron-right text-xs"></i>
                <span class="text-gray-900 font-medium">My Profile</span>
            </nav>
            
            <!-- Comprehensive Client Profile -->
            <!-- Client Profile Header -->
            <div class="bg-white rounded-lg shadow-sm border border-gray-200 mb-6">
                <div class="bg-gradient-to-r from-kwikr-green to-green-600 rounded-t-lg p-6 text-white">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center">
                            <div class="w-20 h-20 bg-white bg-opacity-20 rounded-full flex items-center justify-center mr-4">
                                <i class="fas fa-user text-3xl"></i>
                            </div>
                            <div>
                                <h1 class="text-2xl font-bold">${t.first_name} ${t.last_name}</h1>
                                <p class="text-green-100">Premium Client</p>
                                <div class="flex items-center mt-1">
                                    <i class="fas fa-calendar-alt mr-2"></i>
                                    <span class="text-sm">Member since March 2023</span>
                                    <i class="fas fa-check-circle ml-3 text-green-200" title="Verified Account"></i>
                                </div>
                            </div>
                        </div>
                        <button id="editProfileBtn" onclick="toggleEditMode()" class="bg-white text-kwikr-green px-4 py-2 rounded-lg hover:bg-gray-50 font-medium">
                            <i class="fas fa-edit mr-2"></i><span id="editBtnText">Edit Profile</span>
                        </button>
                    </div>
                </div>
                
                <!-- Client Statistics -->
                <div class="p-6 border-b border-gray-200">
                    <div class="grid grid-cols-2 md:grid-cols-4 gap-6">
                        <div class="text-center">
                            <div class="text-2xl font-bold text-kwikr-green">12</div>
                            <div class="text-sm text-gray-600">Jobs Posted</div>
                        </div>
                        <div class="text-center">
                            <div class="text-2xl font-bold text-green-600">8</div>
                            <div class="text-sm text-gray-600">Completed Projects</div>
                        </div>
                        <div class="text-center">
                            <div class="text-2xl font-bold text-blue-600">$18,500</div>
                            <div class="text-sm text-gray-600">Total Spent</div>
                        </div>
                        <div class="text-center">
                            <div class="flex justify-center items-center mb-1">
                                <div class="text-2xl font-bold text-yellow-500">4.8</div>
                                <div class="flex ml-2">
                                    <i class="fas fa-star text-yellow-400"></i>
                                    <i class="fas fa-star text-yellow-400"></i>
                                    <i class="fas fa-star text-yellow-400"></i>
                                    <i class="fas fa-star text-yellow-400"></i>
                                    <i class="fas fa-star text-gray-300"></i>
                                </div>
                            </div>
                            <div class="text-sm text-gray-600">Client Rating</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Personal Information -->
            <div class="bg-white rounded-lg shadow-sm border border-gray-200 mb-6">
                <div class="p-6 border-b border-gray-200">
                    <h2 class="text-xl font-semibold text-gray-900">
                        <i class="fas fa-user mr-2"></i>Personal Information
                    </h2>
                </div>
                <div class="p-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <!-- View Mode -->
                        <div class="view-mode">
                            <label class="block text-sm font-medium text-gray-700 mb-1">First Name</label>
                            <div class="text-gray-900">${t.first_name}</div>
                        </div>
                        <div class="edit-mode hidden">
                            <label class="block text-sm font-medium text-gray-700 mb-2">First Name</label>
                            <input type="text" id="firstName" value="${t.first_name}" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                        </div>

                        <div class="view-mode">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Last Name</label>
                            <div class="text-gray-900">${t.last_name}</div>
                        </div>
                        <div class="edit-mode hidden">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Last Name</label>
                            <input type="text" id="lastName" value="${t.last_name}" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                        </div>

                        <div class="view-mode">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Email Address</label>
                            <div class="text-gray-900">${t.email}</div>
                        </div>
                        <div class="edit-mode hidden">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Email Address</label>
                            <input type="email" id="email" value="${t.email}" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                        </div>

                        <div class="view-mode">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
                            <div class="text-gray-900">(416) 555-0123</div>
                        </div>
                        <div class="edit-mode hidden">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Phone Number</label>
                            <input type="tel" id="phone" value="(416) 555-0123" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                        </div>
                    </div>

                    <!-- Edit Mode Action Buttons -->
                    <div class="edit-mode hidden mt-6">
                        <div class="flex space-x-3">
                            <button onclick="saveProfile()" class="bg-kwikr-green text-white px-4 py-2 rounded-md hover:bg-green-600">
                                <i class="fas fa-save mr-2"></i>Save Changes
                            </button>
                            <button onclick="cancelEdit()" class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600">
                                <i class="fas fa-times mr-2"></i>Cancel
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Address Information -->
            <div class="bg-white rounded-lg shadow-sm border border-gray-200 mb-6">
                <div class="p-6 border-b border-gray-200">
                    <h2 class="text-xl font-semibold text-gray-900">
                        <i class="fas fa-map-marker-alt mr-2"></i>Address Information
                    </h2>
                </div>
                <div class="p-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div class="view-mode">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Street Address</label>
                            <div class="text-gray-900">123 Main Street</div>
                        </div>
                        <div class="edit-mode hidden">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Street Address</label>
                            <input type="text" id="street" value="123 Main Street" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                        </div>

                        <div class="view-mode">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Apartment/Unit</label>
                            <div class="text-gray-900">Apt 502</div>
                        </div>
                        <div class="edit-mode hidden">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Apartment/Unit (Optional)</label>
                            <input type="text" id="apartmentUnit" value="Apt 502" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                        </div>

                        <div class="view-mode">
                            <label class="block text-sm font-medium text-gray-700 mb-1">City</label>
                            <div class="text-gray-900">${t.city||"Toronto"}</div>
                        </div>
                        <div class="edit-mode hidden">
                            <label class="block text-sm font-medium text-gray-700 mb-2">City</label>
                            <input type="text" id="city" value="${t.city||"Toronto"}" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                        </div>

                        <div class="view-mode">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Province</label>
                            <div class="text-gray-900">${t.province||"ON"}</div>
                        </div>
                        <div class="edit-mode hidden">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Province</label>
                            <select id="province" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                <option value="ON" ${t.province==="ON"?"selected":""}>Ontario</option>
                                <option value="BC" ${t.province==="BC"?"selected":""}>British Columbia</option>
                                <option value="AB" ${t.province==="AB"?"selected":""}>Alberta</option>
                                <option value="QC" ${t.province==="QC"?"selected":""}>Quebec</option>
                                <option value="MB" ${t.province==="MB"?"selected":""}>Manitoba</option>
                                <option value="SK" ${t.province==="SK"?"selected":""}>Saskatchewan</option>
                                <option value="NS" ${t.province==="NS"?"selected":""}>Nova Scotia</option>
                                <option value="NB" ${t.province==="NB"?"selected":""}>New Brunswick</option>
                                <option value="NL" ${t.province==="NL"?"selected":""}>Newfoundland and Labrador</option>
                                <option value="PE" ${t.province==="PE"?"selected":""}>Prince Edward Island</option>
                                <option value="NT" ${t.province==="NT"?"selected":""}>Northwest Territories</option>
                                <option value="YT" ${t.province==="YT"?"selected":""}>Yukon</option>
                                <option value="NU" ${t.province==="NU"?"selected":""}>Nunavut</option>
                            </select>
                        </div>

                        <div class="view-mode">
                            <label class="block text-sm font-medium text-gray-700 mb-1">Postal Code</label>
                            <div class="text-gray-900">M5V 2T6</div>
                        </div>
                        <div class="edit-mode hidden">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Postal Code</label>
                            <input type="text" id="postalCode" value="M5V 2T6" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green" placeholder="A1B 2C3">
                        </div>
                    </div>
                </div>
            </div>

            <!-- Preferences -->
            <div class="bg-white rounded-lg shadow-sm border border-gray-200 mb-6">
                <div class="p-6 border-b border-gray-200">
                    <h2 class="text-xl font-semibold text-gray-900">
                        <i class="fas fa-cog mr-2"></i>Preferences & Settings
                    </h2>
                </div>
                <div class="p-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-3">Preferred Service Types</label>
                            <div class="view-mode">
                                <div class="flex flex-wrap gap-2">
                                    <span class="bg-kwikr-green text-white px-3 py-1 rounded-full text-sm">Cleaning Services</span>
                                    <span class="bg-kwikr-green text-white px-3 py-1 rounded-full text-sm">Plumbing</span>
                                    <span class="bg-kwikr-green text-white px-3 py-1 rounded-full text-sm">Electrical Work</span>
                                </div>
                            </div>
                            <div class="edit-mode hidden">
                                <div class="space-y-2 max-h-40 overflow-y-auto border border-gray-300 rounded-md p-3">
                                    <label class="flex items-center">
                                        <input type="checkbox" name="preferredServices" value="Cleaning Services" checked class="mr-2">
                                        <span class="text-sm">Cleaning Services</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" name="preferredServices" value="Plumbing" checked class="mr-2">
                                        <span class="text-sm">Plumbing</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" name="preferredServices" value="Handyman Services" class="mr-2">
                                        <span class="text-sm">Handyman Services</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" name="preferredServices" value="Electrical Work" checked class="mr-2">
                                        <span class="text-sm">Electrical Work</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" name="preferredServices" value="Carpentry" class="mr-2">
                                        <span class="text-sm">Carpentry</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" name="preferredServices" value="Painting" class="mr-2">
                                        <span class="text-sm">Painting</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" name="preferredServices" value="HVAC Services" class="mr-2">
                                        <span class="text-sm">HVAC Services</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" name="preferredServices" value="Roofing" class="mr-2">
                                        <span class="text-sm">Roofing</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" name="preferredServices" value="Flooring" class="mr-2">
                                        <span class="text-sm">Flooring</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" name="preferredServices" value="Landscaping" class="mr-2">
                                        <span class="text-sm">Landscaping</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" name="preferredServices" value="Moving Services" class="mr-2">
                                        <span class="text-sm">Moving Services</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" name="preferredServices" value="Appliance Repair" class="mr-2">
                                        <span class="text-sm">Appliance Repair</span>
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-3">Communication Preference</label>
                            <div class="view-mode">
                                <div class="text-gray-900">Email</div>
                            </div>
                            <div class="edit-mode hidden">
                                <select id="communicationPref" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                    <option value="email" selected>Email</option>
                                    <option value="sms">SMS/Text</option>
                                    <option value="phone">Phone Call</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <!-- Notification Settings -->
                    <div class="mt-6 pt-6 border-t border-gray-200">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">Notification Settings</h3>
                        <div class="space-y-3">
                            <label class="flex items-center">
                                <input type="checkbox" id="emailUpdates" checked class="mr-3" disabled>
                                <span class="text-sm">Receive job updates and messages via email</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" id="smsNotifications" class="mr-3" disabled>
                                <span class="text-sm">Receive urgent notifications via SMS</span>
                            </label>
                            <label class="flex items-center">
                                <input type="checkbox" id="marketingEmails" checked class="mr-3" disabled>
                                <span class="text-sm">Receive promotional emails and service recommendations</span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Account Information -->
            <div class="bg-white rounded-lg shadow-sm border border-gray-200">
                <div class="p-6 border-b border-gray-200">
                    <h2 class="text-xl font-semibold text-gray-900">
                        <i class="fas fa-shield-alt mr-2"></i>Account Information
                    </h2>
                </div>
                <div class="p-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Account Status</label>
                            <div class="flex items-center">
                                <span class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium">Active & Verified</span>
                                <i class="fas fa-check-circle text-green-600 ml-2"></i>
                            </div>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Account Type</label>
                            <div class="text-gray-900">Premium Client</div>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Member Since</label>
                            <div class="text-gray-900">March 15, 2023</div>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-1">Account ID</label>
                            <div class="text-gray-900 font-mono text-sm">CL-${String(t.user_id).padStart(6,"0")}</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script>
          // Embed user information directly from server-side session
          window.currentUser = {
            id: ${t.user_id},
            email: "${t.email}",
            role: "${t.role}",
            firstName: "${t.first_name}",
            lastName: "${t.last_name}",
            province: "${t.province||""}",
            city: "${t.city||""}",
            isVerified: ${t.is_verified||0}
          };
          
          // Client profile inline editing functions
          let isEditMode = false;

          function toggleEditMode() {
            isEditMode = !isEditMode;
            const viewElements = document.querySelectorAll('.view-mode');
            const editElements = document.querySelectorAll('.edit-mode');
            const editBtn = document.getElementById('editProfileBtn');
            const editBtnText = document.getElementById('editBtnText');
            const checkboxes = document.querySelectorAll('input[type="checkbox"]');

            if (isEditMode) {
                // Switch to edit mode
                viewElements.forEach(el => el.classList.add('hidden'));
                editElements.forEach(el => el.classList.remove('hidden'));
                editBtn.classList.remove('bg-white', 'text-kwikr-green', 'hover:bg-gray-50');
                editBtn.classList.add('bg-red-500', 'text-white', 'hover:bg-red-600');
                editBtnText.textContent = 'Cancel Edit';
                
                // Enable checkboxes
                checkboxes.forEach(checkbox => {
                    checkbox.disabled = false;
                });
            } else {
                // Switch to view mode
                viewElements.forEach(el => el.classList.remove('hidden'));
                editElements.forEach(el => el.classList.add('hidden'));
                editBtn.classList.remove('bg-red-500', 'text-white', 'hover:bg-red-600');
                editBtn.classList.add('bg-white', 'text-kwikr-green', 'hover:bg-gray-50');
                editBtnText.textContent = 'Edit Profile';
                
                // Disable checkboxes
                checkboxes.forEach(checkbox => {
                    checkbox.disabled = true;
                });
            }
          }

          function saveProfile() {
            // Collect form data from all edit fields
            const editInputs = document.querySelectorAll('.edit-mode input, .edit-mode select, .edit-mode textarea');
            const checkboxes = document.querySelectorAll('input[type="checkbox"]');
            const formData = {};
            
            editInputs.forEach(input => {
                if (input.name || input.id) {
                    formData[input.name || input.id] = input.value;
                }
            });

            // Collect checkbox data
            const preferredServices = [];
            document.querySelectorAll('input[name="preferredServices"]:checked').forEach(checkbox => {
                preferredServices.push(checkbox.value);
            });
            formData.preferredServices = preferredServices;

            const notifications = {};
            checkboxes.forEach(checkbox => {
                if (checkbox.id && checkbox.id !== 'preferredServices') {
                    notifications[checkbox.id] = checkbox.checked;
                }
            });
            formData.notifications = notifications;

            // Here you would typically send the data to the server
            console.log('Saving client profile data:', formData);
            
            // For demo purposes, just show success and exit edit mode
            alert('Profile updated successfully!');
            toggleEditMode();
          }

          function cancelEdit() {
            // Reset all edit fields to original values and exit edit mode
            const editInputs = document.querySelectorAll('.edit-mode input, .edit-mode select, .edit-mode textarea');
            
            // Reset to original values (you'd typically store these when entering edit mode)
            editInputs.forEach(input => {
                if (input.dataset.originalValue) {
                    input.value = input.dataset.originalValue;
                }
            });

            toggleEditMode();
          }
        <\/script>
        <script src="/static/client-profile.js"><\/script>
    </body>
    </html>
  `)});Y.get("/client/post-job",Q,async e=>{const t=e.get("user");return t.role!=="client"?e.redirect("/dashboard"):e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Post a Job - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/dashboard/client" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Breadcrumb Navigation -->
            <nav class="flex items-center space-x-2 text-sm text-gray-500 mb-6">
                <a href="/dashboard/client" class="hover:text-kwikr-green">Dashboard</a>
                <i class="fas fa-chevron-right text-xs"></i>
                <span class="text-gray-900 font-medium">Post a Job</span>
            </nav>
            
            <!-- Job Posting Form -->
            <div class="bg-white rounded-lg shadow-sm">
                <div class="p-6 border-b border-gray-200">
                    <h1 class="text-2xl font-bold text-gray-900">Post a New Job</h1>
                    <p class="text-gray-600 mt-2">Find the right service provider for your project</p>
                </div>
                
                <div id="jobPostingContainer" class="p-6">
                    <div class="text-center py-8 text-gray-500">
                        <i class="fas fa-spinner fa-spin text-2xl mb-3"></i>
                        <p>Loading job categories...</p>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script>
          // Embed user information directly from server-side session
          window.currentUser = {
            id: ${t.user_id},
            email: "${t.email}",
            role: "${t.role}",
            firstName: "${t.first_name}",
            lastName: "${t.last_name}",
            province: "${t.province||""}",
            city: "${t.city||""}",
            isVerified: ${t.is_verified||0}
          };
          
          // Load job posting form on page load
          document.addEventListener('DOMContentLoaded', function() {
            loadJobPostingPage();
          });
        <\/script>
        <script src="/static/client-job-posting.js"><\/script>
    </body>
    </html>
  `)});Y.get("/client/browse-workers",Q,async e=>{const t=e.get("user");return t.role!=="client"?e.redirect("/dashboard"):e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Browse Service Providers - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/dashboard/client" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Breadcrumb Navigation -->
            <nav class="flex items-center space-x-2 text-sm text-gray-500 mb-6">
                <a href="/dashboard/client" class="hover:text-kwikr-green">Dashboard</a>
                <i class="fas fa-chevron-right text-xs"></i>
                <span class="text-gray-900 font-medium">Browse Service Providers</span>
            </nav>
            
            <!-- Search and Results -->
            <div class="space-y-6">
                <!-- Search Filters -->
                <div class="bg-white rounded-lg shadow-sm">
                    <div class="p-6 border-b border-gray-200">
                        <h1 class="text-2xl font-bold text-gray-900">Browse Service Providers</h1>
                        <p class="text-gray-600 mt-2">Find qualified professionals for your projects</p>
                    </div>
                    
                    <div id="searchFilters" class="p-6">
                        <div class="space-y-4">
                            <!-- Search Bar -->
                            <div class="flex flex-col md:flex-row gap-4">
                                <div class="flex-1">
                                    <input type="text" id="search-input" placeholder="Search by skills, name, or location..."
                                           class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-kwikr-green focus:border-kwikr-green"
                                           onkeyup="handleSearch()" />
                                </div>
                                <button onclick="performSearch()" class="bg-kwikr-green text-white px-6 py-2 rounded-md hover:bg-green-600">
                                    <i class="fas fa-search mr-2"></i>Search
                                </button>
                            </div>
                            
                            <!-- Advanced Filters -->
                            <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Service Category</label>
                                    <select id="category-filter" onchange="applyFilters()" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                        <option value="">All Categories</option>
                                        <option value="Cleaning Services">Cleaning Services</option>
                                        <option value="Plumbing">Plumbing</option>
                                        <option value="Handyman Services">Handyman Services</option>
                                        <option value="Electrical Work">Electrical Work</option>
                                        <option value="Carpentry">Carpentry</option>
                                        <option value="Painting">Painting</option>
                                        <option value="HVAC Services">HVAC Services</option>
                                        <option value="Roofing">Roofing</option>
                                        <option value="Flooring">Flooring</option>
                                        <option value="Landscaping">Landscaping</option>
                                        <option value="Moving Services">Moving Services</option>
                                        <option value="Appliance Repair">Appliance Repair</option>
                                    </select>
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Experience Level</label>
                                    <select id="experience-filter" onchange="applyFilters()" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                        <option value="">Any Level</option>
                                        <option value="Beginner">Beginner (1-2 years)</option>
                                        <option value="Intermediate">Intermediate (3-7 years)</option>
                                        <option value="Expert">Expert (8+ years)</option>
                                    </select>
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Hourly Rate</label>
                                    <select id="rate-filter" onchange="applyFilters()" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                        <option value="">Any Rate</option>
                                        <option value="0-40">Under $40/hour</option>
                                        <option value="40-60">$40 - $60/hour</option>
                                        <option value="60-80">$60 - $80/hour</option>
                                        <option value="80-120">$80 - $120/hour</option>
                                        <option value="120+">$120+/hour</option>
                                    </select>
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Location</label>
                                    <select id="location-filter" onchange="applyFilters()" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                        <option value="">All Locations</option>
                                        <option value="Toronto, ON">Toronto, ON</option>
                                        <option value="Vancouver, BC">Vancouver, BC</option>
                                        <option value="Montreal, QC">Montreal, QC</option>
                                        <option value="Calgary, AB">Calgary, AB</option>
                                        <option value="Edmonton, AB">Edmonton, AB</option>
                                        <option value="Ottawa, ON">Ottawa, ON</option>
                                        <option value="Winnipeg, MB">Winnipeg, MB</option>
                                        <option value="Quebec City, QC">Quebec City, QC</option>
                                        <option value="Hamilton, ON">Hamilton, ON</option>
                                        <option value="Kitchener, ON">Kitchener, ON</option>
                                        <option value="London, ON">London, ON</option>
                                        <option value="Victoria, BC">Victoria, BC</option>
                                        <option value="Halifax, NS">Halifax, NS</option>
                                        <option value="Oshawa, ON">Oshawa, ON</option>
                                        <option value="Windsor, ON">Windsor, ON</option>
                                    </select>
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Availability</label>
                                    <select id="availability-filter" onchange="applyFilters()" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                        <option value="">Any Availability</option>
                                        <option value="available">Available Now</option>
                                        <option value="part-time">Part Time</option>
                                        <option value="full-time">Full Time</option>
                                    </select>
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Minimum Rating</label>
                                    <select id="rating-filter" onchange="applyFilters()" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                        <option value="">Any Rating</option>
                                        <option value="4">4+ Stars</option>
                                        <option value="4.5">4.5+ Stars</option>
                                        <option value="4.8">4.8+ Stars</option>
                                    </select>
                                </div>
                                
                                <div class="md:col-span-2">
                                    <label class="block text-sm font-medium text-gray-700 mb-2">&nbsp;</label>
                                    <div class="flex space-x-2">
                                        <button onclick="clearFilters()" class="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-600 flex-1">
                                            <i class="fas fa-times mr-2"></i>Clear Filters
                                        </button>
                                        <button onclick="toggleAdvancedFilters()" class="bg-kwikr-green text-white px-4 py-2 rounded-md hover:bg-green-600 flex-1">
                                            <i class="fas fa-filter mr-2"></i>Advanced
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Search Results -->
                <div class="bg-white rounded-lg shadow-sm">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex justify-between items-center">
                            <div>
                                <h2 class="text-lg font-semibold text-gray-900">Available Service Providers</h2>
                                <p class="text-sm text-gray-600">Showing 6 qualified professionals in your area</p>
                            </div>
                            <div class="text-sm text-gray-500">
                                Sort by: <select class="ml-2 border border-gray-300 rounded px-2 py-1">
                                    <option>Rating</option>
                                    <option>Price (Low to High)</option>
                                    <option>Experience</option>
                                    <option>Availability</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    
                    <div id="searchResults" class="p-6">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <!-- Service Provider Cards -->
                            <div class="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
                                <div class="flex items-start justify-between mb-4">
                                    <div class="flex items-center">
                                        <div class="w-12 h-12 bg-kwikr-green rounded-full flex items-center justify-center text-white font-bold text-lg mr-4">
                                            SJ
                                        </div>
                                        <div>
                                            <h3 class="font-semibold text-gray-900">Sarah Johnson</h3>
                                            <p class="text-sm text-gray-600">Professional House Cleaner</p>
                                            <div class="flex items-center mt-1">
                                                <div class="flex text-yellow-400 text-sm">
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                </div>
                                                <span class="ml-2 text-sm text-gray-600">4.9 (127 reviews)</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="text-right">
                                        <div class="text-lg font-bold text-kwikr-green">$45/hr</div>
                                        <div class="text-sm text-gray-500">Starting rate</div>
                                    </div>
                                </div>
                                <div class="mb-4">
                                    <p class="text-sm text-gray-600 mb-2">Professional cleaning service with 8+ years experience. Specializing in residential and commercial cleaning with eco-friendly products.</p>
                                    <div class="flex flex-wrap gap-1">
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Deep Cleaning</span>
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Move-in/out</span>
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Eco-friendly</span>
                                    </div>
                                </div>
                                <div class="flex items-center justify-between text-sm text-gray-500 mb-4">
                                    <span><i class="fas fa-map-marker-alt mr-1"></i>Toronto, ON</span>
                                    <span><i class="fas fa-clock mr-1"></i>Available Now</span>
                                    <span><i class="fas fa-check-circle mr-1 text-green-500"></i>89 jobs completed</span>
                                </div>
                                <div class="flex space-x-2">
                                    <button class="flex-1 bg-kwikr-green text-white py-2 px-4 rounded hover:bg-green-600">
                                        <i class="fas fa-eye mr-2"></i>View Profile
                                    </button>
                                    <button class="flex-1 bg-gray-100 text-gray-700 py-2 px-4 rounded hover:bg-gray-200">
                                        <i class="fas fa-envelope mr-2"></i>Message
                                    </button>
                                </div>
                            </div>

                            <div class="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
                                <div class="flex items-start justify-between mb-4">
                                    <div class="flex items-center">
                                        <div class="w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold text-lg mr-4">
                                            DC
                                        </div>
                                        <div>
                                            <h3 class="font-semibold text-gray-900">David Chen</h3>
                                            <p class="text-sm text-gray-600">Licensed Plumber</p>
                                            <div class="flex items-center mt-1">
                                                <div class="flex text-yellow-400 text-sm">
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                </div>
                                                <span class="ml-2 text-sm text-gray-600">4.8 (94 reviews)</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="text-right">
                                        <div class="text-lg font-bold text-kwikr-green">$85/hr</div>
                                        <div class="text-sm text-gray-500">Starting rate</div>
                                    </div>
                                </div>
                                <div class="mb-4">
                                    <p class="text-sm text-gray-600 mb-2">Licensed plumber with 12+ years experience. Available for residential and commercial plumbing repairs and installations.</p>
                                    <div class="flex flex-wrap gap-1">
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Pipe Repair</span>
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Emergency</span>
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Licensed</span>
                                    </div>
                                </div>
                                <div class="flex items-center justify-between text-sm text-gray-500 mb-4">
                                    <span><i class="fas fa-map-marker-alt mr-1"></i>Vancouver, BC</span>
                                    <span><i class="fas fa-clock mr-1"></i>Available Now</span>
                                    <span><i class="fas fa-check-circle mr-1 text-green-500"></i>156 jobs completed</span>
                                </div>
                                <div class="flex space-x-2">
                                    <button class="flex-1 bg-kwikr-green text-white py-2 px-4 rounded hover:bg-green-600">
                                        <i class="fas fa-eye mr-2"></i>View Profile
                                    </button>
                                    <button class="flex-1 bg-gray-100 text-gray-700 py-2 px-4 rounded hover:bg-gray-200">
                                        <i class="fas fa-envelope mr-2"></i>Message
                                    </button>
                                </div>
                            </div>

                            <div class="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
                                <div class="flex items-start justify-between mb-4">
                                    <div class="flex items-center">
                                        <div class="w-12 h-12 bg-orange-500 rounded-full flex items-center justify-center text-white font-bold text-lg mr-4">
                                            MR
                                        </div>
                                        <div>
                                            <h3 class="font-semibold text-gray-900">Maria Rodriguez</h3>
                                            <p class="text-sm text-gray-600">Handyman Services</p>
                                            <div class="flex items-center mt-1">
                                                <div class="flex text-yellow-400 text-sm">
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star-half-alt"></i>
                                                </div>
                                                <span class="ml-2 text-sm text-gray-600">4.7 (73 reviews)</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="text-right">
                                        <div class="text-lg font-bold text-kwikr-green">$55/hr</div>
                                        <div class="text-sm text-gray-500">Starting rate</div>
                                    </div>
                                </div>
                                <div class="mb-4">
                                    <p class="text-sm text-gray-600 mb-2">Reliable handyman providing general repair and maintenance services for homes and offices throughout Calgary.</p>
                                    <div class="flex flex-wrap gap-1">
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">General Repairs</span>
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Assembly</span>
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Maintenance</span>
                                    </div>
                                </div>
                                <div class="flex items-center justify-between text-sm text-gray-500 mb-4">
                                    <span><i class="fas fa-map-marker-alt mr-1"></i>Calgary, AB</span>
                                    <span><i class="fas fa-clock mr-1"></i>Full Time</span>
                                    <span><i class="fas fa-check-circle mr-1 text-green-500"></i>52 jobs completed</span>
                                </div>
                                <div class="flex space-x-2">
                                    <button class="flex-1 bg-kwikr-green text-white py-2 px-4 rounded hover:bg-green-600">
                                        <i class="fas fa-eye mr-2"></i>View Profile
                                    </button>
                                    <button class="flex-1 bg-gray-100 text-gray-700 py-2 px-4 rounded hover:bg-gray-200">
                                        <i class="fas fa-envelope mr-2"></i>Message
                                    </button>
                                </div>
                            </div>

                            <div class="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
                                <div class="flex items-start justify-between mb-4">
                                    <div class="flex items-center">
                                        <div class="w-12 h-12 bg-yellow-500 rounded-full flex items-center justify-center text-white font-bold text-lg mr-4">
                                            AK
                                        </div>
                                        <div>
                                            <h3 class="font-semibold text-gray-900">Alex Kumar</h3>
                                            <p class="text-sm text-gray-600">Licensed Electrician</p>
                                            <div class="flex items-center mt-1">
                                                <div class="flex text-yellow-400 text-sm">
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                </div>
                                                <span class="ml-2 text-sm text-gray-600">4.9 (145 reviews)</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="text-right">
                                        <div class="text-lg font-bold text-kwikr-green">$95/hr</div>
                                        <div class="text-sm text-gray-500">Starting rate</div>
                                    </div>
                                </div>
                                <div class="mb-4">
                                    <p class="text-sm text-gray-600 mb-2">Licensed electrician specializing in residential and commercial electrical work. Available for emergency calls.</p>
                                    <div class="flex flex-wrap gap-1">
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Wiring</span>
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Panel Upgrades</span>
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Emergency</span>
                                    </div>
                                </div>
                                <div class="flex items-center justify-between text-sm text-gray-500 mb-4">
                                    <span><i class="fas fa-map-marker-alt mr-1"></i>Ottawa, ON</span>
                                    <span><i class="fas fa-clock mr-1"></i>Available Now</span>
                                    <span><i class="fas fa-check-circle mr-1 text-green-500"></i>97 jobs completed</span>
                                </div>
                                <div class="flex space-x-2">
                                    <button class="flex-1 bg-kwikr-green text-white py-2 px-4 rounded hover:bg-green-600">
                                        <i class="fas fa-eye mr-2"></i>View Profile
                                    </button>
                                    <button class="flex-1 bg-gray-100 text-gray-700 py-2 px-4 rounded hover:bg-gray-200">
                                        <i class="fas fa-envelope mr-2"></i>Message
                                    </button>
                                </div>
                            </div>

                            <div class="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
                                <div class="flex items-start justify-between mb-4">
                                    <div class="flex items-center">
                                        <div class="w-12 h-12 bg-purple-500 rounded-full flex items-center justify-center text-white font-bold text-lg mr-4">
                                            EW
                                        </div>
                                        <div>
                                            <h3 class="font-semibold text-gray-900">Emily Watson</h3>
                                            <p class="text-sm text-gray-600">Carpenter & Woodworker</p>
                                            <div class="flex items-center mt-1">
                                                <div class="flex text-yellow-400 text-sm">
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                </div>
                                                <span class="ml-2 text-sm text-gray-600">4.8 (68 reviews)</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="text-right">
                                        <div class="text-lg font-bold text-kwikr-green">$75/hr</div>
                                        <div class="text-sm text-gray-500">Starting rate</div>
                                    </div>
                                </div>
                                <div class="mb-4">
                                    <p class="text-sm text-gray-600 mb-2">Skilled carpenter with expertise in custom woodwork, furniture making, and home renovations.</p>
                                    <div class="flex flex-wrap gap-1">
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Custom Furniture</span>
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Deck Building</span>
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Renovations</span>
                                    </div>
                                </div>
                                <div class="flex items-center justify-between text-sm text-gray-500 mb-4">
                                    <span><i class="fas fa-map-marker-alt mr-1"></i>Montreal, QC</span>
                                    <span><i class="fas fa-clock mr-1"></i>Part Time</span>
                                    <span><i class="fas fa-check-circle mr-1 text-green-500"></i>134 jobs completed</span>
                                </div>
                                <div class="flex space-x-2">
                                    <button class="flex-1 bg-kwikr-green text-white py-2 px-4 rounded hover:bg-green-600">
                                        <i class="fas fa-eye mr-2"></i>View Profile
                                    </button>
                                    <button class="flex-1 bg-gray-100 text-gray-700 py-2 px-4 rounded hover:bg-gray-200">
                                        <i class="fas fa-envelope mr-2"></i>Message
                                    </button>
                                </div>
                            </div>

                            <div class="border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
                                <div class="flex items-start justify-between mb-4">
                                    <div class="flex items-center">
                                        <div class="w-12 h-12 bg-green-500 rounded-full flex items-center justify-center text-white font-bold text-lg mr-4">
                                            MT
                                        </div>
                                        <div>
                                            <h3 class="font-semibold text-gray-900">Michael Thompson</h3>
                                            <p class="text-sm text-gray-600">Professional Painter</p>
                                            <div class="flex items-center mt-1">
                                                <div class="flex text-yellow-400 text-sm">
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star"></i>
                                                    <i class="fas fa-star-half-alt"></i>
                                                </div>
                                                <span class="ml-2 text-sm text-gray-600">4.6 (91 reviews)</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="text-right">
                                        <div class="text-lg font-bold text-kwikr-green">$50/hr</div>
                                        <div class="text-sm text-gray-500">Starting rate</div>
                                    </div>
                                </div>
                                <div class="mb-4">
                                    <p class="text-sm text-gray-600 mb-2">Professional painter providing interior and exterior painting services for residential and commercial properties.</p>
                                    <div class="flex flex-wrap gap-1">
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Interior</span>
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Exterior</span>
                                        <span class="bg-gray-100 text-gray-700 px-2 py-1 rounded-full text-xs">Commercial</span>
                                    </div>
                                </div>
                                <div class="flex items-center justify-between text-sm text-gray-500 mb-4">
                                    <span><i class="fas fa-map-marker-alt mr-1"></i>Edmonton, AB</span>
                                    <span><i class="fas fa-clock mr-1"></i>Available Now</span>
                                    <span><i class="fas fa-check-circle mr-1 text-green-500"></i>76 jobs completed</span>
                                </div>
                                <div class="flex space-x-2">
                                    <button class="flex-1 bg-kwikr-green text-white py-2 px-4 rounded hover:bg-green-600">
                                        <i class="fas fa-eye mr-2"></i>View Profile
                                    </button>
                                    <button class="flex-1 bg-gray-100 text-gray-700 py-2 px-4 rounded hover:bg-gray-200">
                                        <i class="fas fa-envelope mr-2"></i>Message
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Pagination -->
                        <div class="mt-8 flex justify-center">
                            <nav class="flex space-x-2">
                                <button class="px-3 py-2 border border-gray-300 rounded text-gray-500 cursor-not-allowed">
                                    <i class="fas fa-chevron-left"></i>
                                </button>
                                <button class="px-3 py-2 bg-kwikr-green text-white rounded">1</button>
                                <button class="px-3 py-2 border border-gray-300 rounded text-gray-700 hover:bg-gray-50">2</button>
                                <button class="px-3 py-2 border border-gray-300 rounded text-gray-700 hover:bg-gray-50">3</button>
                                <button class="px-3 py-2 border border-gray-300 rounded text-gray-700 hover:bg-gray-50">
                                    <i class="fas fa-chevron-right"></i>
                                </button>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script>
          // Embed user information directly from server-side session
          window.currentUser = {
            id: ${t.user_id},
            email: "${t.email}",
            role: "${t.role}",
            firstName: "${t.first_name}",
            lastName: "${t.last_name}",
            province: "${t.province||""}",
            city: "${t.city||""}",
            isVerified: ${t.is_verified||0}
          };
          
          // Load worker browser on page load
          document.addEventListener('DOMContentLoaded', function() {
            loadWorkerBrowserPage();
          });
        <\/script>
        <script src="/static/client-worker-browser.js"><\/script>
    </body>
    </html>
  `)});Y.get("/client/job/:id",Q,async e=>{const t=e.get("user"),s=e.req.param("id");return t.role!=="client"?e.redirect("/dashboard"):e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Job Details - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/dashboard/client" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="flex items-center justify-between mb-6">
                <div class="flex items-center">
                    <a href="/dashboard/client" class="text-gray-500 hover:text-kwikr-green mr-4">
                        <i class="fas fa-arrow-left mr-2"></i>Back to Dashboard
                    </a>
                    <h1 class="text-2xl font-bold text-gray-900">Job Details</h1>
                </div>
            </div>
            
            <div id="job-details-container">
                <div class="text-center py-8">
                    <i class="fas fa-spinner fa-spin text-gray-400 text-2xl mb-2"></i>
                    <p class="text-gray-500">Loading job details...</p>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script>
          window.currentJobId = ${s};
          window.currentUser = {
            id: ${t.user_id},
            email: "${t.email}",
            role: "${t.role}",
            firstName: "${t.first_name}",
            lastName: "${t.last_name}"
          };
        <\/script>
        <script src="/static/client-job-details.js"><\/script>
    </body>
    </html>
  `)});Y.get("/client/job/:id/edit",Q,async e=>{const t=e.get("user"),s=e.req.param("id");return t.role!=="client"?e.redirect("/dashboard"):e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Edit Job - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/dashboard/client" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="flex items-center justify-between mb-6">
                <div class="flex items-center">
                    <a href="/dashboard/client/job/${s}" class="text-gray-500 hover:text-kwikr-green mr-4">
                        <i class="fas fa-arrow-left mr-2"></i>Back to Job Details
                    </a>
                    <h1 class="text-2xl font-bold text-gray-900">Edit Job</h1>
                </div>
            </div>
            
            <div id="edit-job-container">
                <div class="text-center py-8">
                    <i class="fas fa-spinner fa-spin text-gray-400 text-2xl mb-2"></i>
                    <p class="text-gray-500">Loading job edit form...</p>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script>
          window.currentJobId = ${s};
          window.currentUser = {
            id: ${t.user_id},
            email: "${t.email}",
            role: "${t.role}",
            firstName: "${t.first_name}",
            lastName: "${t.last_name}"
          };
        <\/script>
        <script src="/static/client-edit-job.js"><\/script>
    </body>
    </html>
  `)});Y.get("/client/worker/:id",Q,async e=>{const t=e.get("user"),s=e.req.param("id");return t.role!=="client"?e.redirect("/dashboard"):e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Worker Profile - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/dashboard/client" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="flex items-center justify-between mb-6">
                <div class="flex items-center">
                    <a href="/dashboard/client/browse-workers" class="text-gray-500 hover:text-kwikr-green mr-4">
                        <i class="fas fa-arrow-left mr-2"></i>Back to Browse Workers
                    </a>
                    <h1 class="text-2xl font-bold text-gray-900">Worker Profile</h1>
                </div>
            </div>
            
            <div id="worker-profile-container">
                <div class="text-center py-8">
                    <i class="fas fa-spinner fa-spin text-gray-400 text-2xl mb-2"></i>
                    <p class="text-gray-500">Loading worker profile...</p>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script>
          window.currentWorkerId = ${s};
          window.currentUser = {
            id: ${t.user_id},
            email: "${t.email}",
            role: "${t.role}",
            firstName: "${t.first_name}",
            lastName: "${t.last_name}"
          };
        <\/script>
        <script src="/static/client-worker-profile.js"><\/script>
    </body>
    </html>
  `)});Y.get("/worker/kanban",Q,async e=>{const t=e.get("user");return t.role!=="worker"?e.redirect("/dashboard"):e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Job Tracking Board - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <style>
          .drag-over {
            background-color: rgba(59, 130, 246, 0.1) !important;
            border: 2px dashed #3b82f6 !important;
          }
          .dragging {
            opacity: 0.5 !important;
            transform: rotate(5deg) !important;
            z-index: 1000 !important;
          }
          .kanban-column {
            min-height: 400px;
            transition: all 0.2s ease;
          }
          .job-card {
            transition: all 0.2s ease;
          }
          .job-card:hover {
            transform: translateY(-2px);
          }
        </style>
    </head>
    <body class="bg-gray-100">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/dashboard/worker" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Main Content -->
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="flex items-center justify-between mb-6">
                <div class="flex items-center">
                    <a href="/dashboard/worker" class="text-gray-500 hover:text-kwikr-green mr-4">
                        <i class="fas fa-arrow-left mr-2"></i>Back to Dashboard
                    </a>
                    <h1 class="text-2xl font-bold text-gray-900">
                        <i class="fas fa-tasks mr-2"></i>Job Tracking Board
                    </h1>
                </div>
                <div class="flex items-center space-x-4">
                    <button onclick="loadWorkerJobs()" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors">
                        <i class="fas fa-sync-alt mr-2"></i>Refresh
                    </button>
                </div>
            </div>

            <!-- Kanban Board Container -->
            <div id="kanban-container" class="w-full">
                <div class="text-center py-8">
                    <i class="fas fa-spinner fa-spin text-gray-400 text-2xl mb-2"></i>
                    <p class="text-gray-500">Loading job tracking board...</p>
                </div>
            </div>
        </div>

        <!-- Scripts -->
        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script>
          window.currentUser = {
            id: ${t.user_id},
            email: "${t.email}",
            role: "${t.role}",
            firstName: "${t.first_name}",
            lastName: "${t.last_name}"
          };
        <\/script>
        <script src="/static/worker-kanban.js"><\/script>
        <script>
          // Initialize Kanban board when page loads
          document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded, initializing Kanban board');
            initializeKanban();
          });
        <\/script>
    </body>
    </html>
  `)});Y.get("/worker/bids",Q,async e=>{const t=e.get("user");return t.role!=="worker"?e.redirect("/dashboard"):e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>My Bids - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gray-100">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/dashboard/worker" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Main Content -->
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="flex items-center justify-between mb-6">
                <div class="flex items-center">
                    <a href="/dashboard/worker" class="text-gray-500 hover:text-kwikr-green mr-4">
                        <i class="fas fa-arrow-left mr-2"></i>Back to Dashboard
                    </a>
                    <h1 class="text-2xl font-bold text-gray-900">
                        <i class="fas fa-eye mr-2"></i>My Bids
                    </h1>
                </div>
            </div>

            <!-- Coming Soon Notice -->
            <div class="bg-white rounded-lg shadow-sm p-8 text-center">
                <i class="fas fa-hammer text-6xl text-gray-300 mb-4"></i>
                <h2 class="text-xl font-semibold text-gray-900 mb-2">Bid Management Coming Soon</h2>
                <p class="text-gray-600 mb-6">We're working on a comprehensive bid management system where you can view, edit, and track all your submitted bids.</p>
                <div class="flex justify-center space-x-4">
                    <a href="/dashboard/worker" class="bg-kwikr-green text-white px-6 py-3 rounded-lg hover:bg-green-600">
                        <i class="fas fa-arrow-left mr-2"></i>Back to Dashboard
                    </a>
                    <a href="/dashboard/worker/kanban" class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700">
                        <i class="fas fa-tasks mr-2"></i>View Job Board
                    </a>
                </div>
            </div>
        </div>

        <!-- Scripts -->
        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script>
          window.currentUser = {
            id: ${t.user_id},
            email: "${t.email}",
            role: "${t.role}",
            firstName: "${t.first_name}",
            lastName: "${t.last_name}"
          };
        <\/script>
    </body>
    </html>
  `)});Y.get("/worker/payments",Q,nt,async e=>{const t=e.get("user");if(t.role!=="worker")return e.redirect("/dashboard");const s={totalEarnings:12450,pendingPayments:765,escrowAmount:325,lastPayment:new Date().toLocaleDateString()};return e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Payment Management - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <h1 class="text-2xl font-bold text-kwikr-green">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </h1>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900">Payment Management</h1>
                <p class="text-gray-600">Manage your payment methods and track earnings</p>
            </div>

            <!-- Tab Navigation -->
            <div class="bg-white rounded-lg shadow-sm mb-8">
                <div class="border-b border-gray-200">
                    <nav class="flex space-x-8 px-6" aria-label="Tabs">
                        <a href="/dashboard/worker" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-user mr-2"></i>Profile View
                        </a>
                        <a href="/dashboard/worker/profile" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-edit mr-2"></i>Edit Profile
                        </a>
                        <a href="/dashboard/worker/payments" class="py-4 px-1 border-b-2 border-kwikr-green text-kwikr-green font-medium text-sm">
                            <i class="fas fa-credit-card mr-2"></i>Payment Management
                        </a>
                        <a href="/dashboard/worker/compliance" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-shield-check mr-2"></i>Manage Compliance
                        </a>
                        <a href="/dashboard/worker/services" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-tools mr-2"></i>Manage Services
                        </a>
                    </nav>
                </div>
            </div>

            <!-- Payment Overview Stats -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white p-6 rounded-lg shadow-sm">
                    <div class="flex items-center">
                        <div class="text-green-500 text-2xl mr-4">
                            <i class="fas fa-wallet"></i>
                        </div>
                        <div>
                            <p class="text-2xl font-bold text-gray-900">$${s.totalEarnings.toFixed(2)}</p>
                            <p class="text-sm text-gray-600">Total Earnings</p>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm">
                    <div class="flex items-center">
                        <div class="text-yellow-500 text-2xl mr-4">
                            <i class="fas fa-clock"></i>
                        </div>
                        <div>
                            <p class="text-2xl font-bold text-gray-900">$${s.pendingPayments.toFixed(2)}</p>
                            <p class="text-sm text-gray-600">Pending Payments</p>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm">
                    <div class="flex items-center">
                        <div class="text-blue-500 text-2xl mr-4">
                            <i class="fas fa-shield-alt"></i>
                        </div>
                        <div>
                            <p class="text-2xl font-bold text-gray-900">$${s.escrowAmount.toFixed(2)}</p>
                            <p class="text-sm text-gray-600">In Escrow</p>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm">
                    <div class="flex items-center">
                        <div class="text-purple-500 text-2xl mr-4">
                            <i class="fas fa-calendar-alt"></i>
                        </div>
                        <div>
                            <p class="text-lg font-bold text-gray-900">${s.lastPayment}</p>
                            <p class="text-sm text-gray-600">Last Payment</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Payment Methods Setup -->
            <div class="bg-white rounded-lg shadow-sm mb-8">
                <div class="p-6 border-b border-gray-200">
                    <h2 class="text-xl font-semibold text-gray-900">Payment Methods</h2>
                    <p class="text-gray-600">Configure how you want to receive payments</p>
                </div>
                <div class="p-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                        <!-- Bank Transfer -->
                        <div class="border-2 border-gray-200 rounded-lg p-4 hover:border-kwikr-green cursor-pointer">
                            <div class="text-center">
                                <i class="fas fa-university text-blue-600 text-3xl mb-3"></i>
                                <h3 class="font-medium text-gray-900">Bank Transfer</h3>
                                <p class="text-sm text-gray-600">Direct deposit</p>
                            </div>
                        </div>

                        <!-- PayPal -->
                        <div class="border-2 border-gray-200 rounded-lg p-4 hover:border-kwikr-green cursor-pointer">
                            <div class="text-center">
                                <i class="fab fa-paypal text-blue-600 text-3xl mb-3"></i>
                                <h3 class="font-medium text-gray-900">PayPal</h3>
                                <p class="text-sm text-gray-600">PayPal account</p>
                            </div>
                        </div>

                        <!-- Stripe -->
                        <div class="border-2 border-gray-200 rounded-lg p-4 hover:border-kwikr-green cursor-pointer">
                            <div class="text-center">
                                <i class="fab fa-stripe-s text-purple-600 text-3xl mb-3"></i>
                                <h3 class="font-medium text-gray-900">Stripe</h3>
                                <p class="text-sm text-gray-600">Credit cards</p>
                            </div>
                        </div>

                        <!-- Interac e-Transfer -->
                        <div class="border-2 border-gray-200 rounded-lg p-4 hover:border-kwikr-green cursor-pointer">
                            <div class="text-center">
                                <i class="fas fa-exchange-alt text-red-600 text-3xl mb-3"></i>
                                <h3 class="font-medium text-gray-900">Interac e-Transfer</h3>
                                <p class="text-sm text-gray-600">Email transfer</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Basic Payment Settings -->
            <div class="bg-white rounded-lg shadow-sm mb-8">
                <div class="p-6 border-b border-gray-200">
                    <h2 class="text-xl font-semibold text-gray-900">Payment Settings</h2>
                </div>
                <div class="p-6">
                    <form class="space-y-6">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Bank Account</label>
                                <input type="text" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-kwikr-green focus:border-transparent" placeholder="Account number">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Bank Name</label>
                                <input type="text" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-kwikr-green focus:border-transparent" placeholder="Bank name">
                            </div>
                        </div>
                        
                        <div class="flex justify-end">
                            <button type="submit" class="bg-kwikr-green text-white px-6 py-2 rounded-md hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-kwikr-green focus:ring-offset-2">
                                Save Settings
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Recent Transactions -->
            <div class="bg-white rounded-lg shadow-sm">
                <div class="p-6 border-b border-gray-200">
                    <h2 class="text-xl font-semibold text-gray-900">Recent Transactions</h2>
                </div>
                <div class="p-6">
                    <div class="text-center py-12 text-gray-500">
                        <i class="fas fa-receipt text-4xl mb-4"></i>
                        <p class="text-lg font-medium">No transactions yet</p>
                        <p class="text-sm">Complete jobs to see your payment history here</p>
                    </div>
                </div>
            </div>
        </div>

        <script>
            function logout() {
                if (confirm('Are you sure you want to logout?')) {
                    window.location.href = '/api/auth/logout'
                }
            }
        <\/script>
    </body>
    </html>
  `)});Y.get("/worker/earnings",Q,async e=>{const t=e.get("user");return t.role!=="worker"?e.redirect("/dashboard"):e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Earnings & Tracking - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"><\/script>
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/worker" class="text-2xl font-bold text-kwikr-green">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
            <!-- Breadcrumb -->
            <div class="mb-6">
                <nav class="text-sm">
                    <a href="/dashboard" class="text-kwikr-green hover:underline">Dashboard</a>
                    <span class="mx-2 text-gray-400">/</span>
                    <span class="text-gray-600">Earnings History</span>
                </nav>
            </div>

            <!-- Page Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900">Earnings History</h1>
                <p class="text-gray-600 mt-2">Track your earnings and performance over time</p>
            </div>

            <!-- Earnings Summary -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">This Month</p>
                            <p class="text-2xl font-bold text-gray-900">$1,285</p>
                        </div>
                        <div class="bg-kwikr-green bg-opacity-10 p-3 rounded-lg">
                            <i class="fas fa-dollar-sign text-kwikr-green text-xl"></i>
                        </div>
                    </div>
                    <div class="mt-4">
                        <span class="text-green-600 text-sm font-medium">+12.5%</span>
                        <span class="text-gray-600 text-sm"> from last month</span>
                    </div>
                </div>

                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">Total Earnings</p>
                            <p class="text-2xl font-bold text-gray-900">$8,750</p>
                        </div>
                        <div class="bg-blue-100 p-3 rounded-lg">
                            <i class="fas fa-chart-line text-blue-600 text-xl"></i>
                        </div>
                    </div>
                    <div class="mt-4">
                        <span class="text-gray-600 text-sm">Since joining</span>
                    </div>
                </div>

                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">Jobs Completed</p>
                            <p class="text-2xl font-bold text-gray-900">47</p>
                        </div>
                        <div class="bg-green-100 p-3 rounded-lg">
                            <i class="fas fa-check-circle text-green-600 text-xl"></i>
                        </div>
                    </div>
                    <div class="mt-4">
                        <span class="text-green-600 text-sm font-medium">95.7%</span>
                        <span class="text-gray-600 text-sm"> success rate</span>
                    </div>
                </div>

                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">Avg. Rating</p>
                            <p class="text-2xl font-bold text-gray-900">4.8</p>
                        </div>
                        <div class="bg-yellow-100 p-3 rounded-lg">
                            <i class="fas fa-star text-yellow-600 text-xl"></i>
                        </div>
                    </div>
                    <div class="mt-4">
                        <div class="flex text-yellow-400">
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                            <i class="fas fa-star"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Charts and Tables -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                <!-- Earnings Chart -->
                <div class="bg-white rounded-lg shadow">
                    <div class="p-6">
                        <h2 class="text-xl font-semibold text-gray-900 mb-4">Monthly Earnings</h2>
                        <canvas id="earningsChart" width="400" height="200"></canvas>
                    </div>
                </div>

                <!-- Service Breakdown -->
                <div class="bg-white rounded-lg shadow">
                    <div class="p-6">
                        <h2 class="text-xl font-semibold text-gray-900 mb-4">Earnings by Service</h2>
                        <canvas id="servicesChart" width="400" height="200"></canvas>
                    </div>
                </div>
            </div>

            <!-- Recent Earnings -->
            <div class="mt-8 bg-white rounded-lg shadow">
                <div class="p-6">
                    <div class="flex justify-between items-center mb-6">
                        <h2 class="text-xl font-semibold text-gray-900">Recent Earnings</h2>
                        <div class="flex space-x-2">
                            <button class="px-3 py-1 text-sm border border-gray-300 rounded-md hover:bg-gray-50">All Time</button>
                            <button class="px-3 py-1 text-sm border border-gray-300 rounded-md hover:bg-gray-50">This Year</button>
                            <button class="px-3 py-1 text-sm bg-kwikr-green text-white rounded-md">This Month</button>
                        </div>
                    </div>

                    <div class="overflow-x-auto">
                        <table class="w-full">
                            <thead>
                                <tr class="border-b border-gray-200">
                                    <th class="text-left py-3 text-sm font-medium text-gray-700">Date</th>
                                    <th class="text-left py-3 text-sm font-medium text-gray-700">Job</th>
                                    <th class="text-left py-3 text-sm font-medium text-gray-700">Service</th>
                                    <th class="text-left py-3 text-sm font-medium text-gray-700">Client</th>
                                    <th class="text-left py-3 text-sm font-medium text-gray-700">Amount</th>
                                    <th class="text-left py-3 text-sm font-medium text-gray-700">Status</th>
                                </tr>
                            </thead>
                            <tbody class="divide-y divide-gray-200">
                                <tr>
                                    <td class="py-3 text-sm text-gray-900">Jan 15, 2024</td>
                                    <td class="py-3 text-sm text-gray-900">Kitchen Sink Repair</td>
                                    <td class="py-3 text-sm text-gray-600">Plumbing</td>
                                    <td class="py-3 text-sm text-gray-600">Sarah Johnson</td>
                                    <td class="py-3 text-sm font-medium text-gray-900">$185.00</td>
                                    <td class="py-3">
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">Paid</span>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="py-3 text-sm text-gray-900">Jan 12, 2024</td>
                                    <td class="py-3 text-sm text-gray-900">Electrical Outlet Installation</td>
                                    <td class="py-3 text-sm text-gray-600">Electrical</td>
                                    <td class="py-3 text-sm text-gray-600">Mike Chen</td>
                                    <td class="py-3 text-sm font-medium text-gray-900">$125.00</td>
                                    <td class="py-3">
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">Paid</span>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="py-3 text-sm text-gray-900">Jan 10, 2024</td>
                                    <td class="py-3 text-sm text-gray-900">Cabinet Installation</td>
                                    <td class="py-3 text-sm text-gray-600">Carpentry</td>
                                    <td class="py-3 text-sm text-gray-600">Emma Wilson</td>
                                    <td class="py-3 text-sm font-medium text-gray-900">$275.00</td>
                                    <td class="py-3">
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-yellow-100 text-yellow-800">Pending</span>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="py-3 text-sm text-gray-900">Jan 8, 2024</td>
                                    <td class="py-3 text-sm text-gray-900">Bathroom Tile Cleaning</td>
                                    <td class="py-3 text-sm text-gray-600">Cleaning</td>
                                    <td class="py-3 text-sm text-gray-600">David Rodriguez</td>
                                    <td class="py-3 text-sm font-medium text-gray-900">$95.00</td>
                                    <td class="py-3">
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">Paid</span>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="py-3 text-sm text-gray-900">Jan 5, 2024</td>
                                    <td class="py-3 text-sm text-gray-900">Living Room Painting</td>
                                    <td class="py-3 text-sm text-gray-600">Painting</td>
                                    <td class="py-3 text-sm text-gray-600">Lisa Park</td>
                                    <td class="py-3 text-sm font-medium text-gray-900">$320.00</td>
                                    <td class="py-3">
                                        <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">Paid</span>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Scripts -->
        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script>
          window.currentUser = {
            id: ${t.user_id},
            email: "${t.email}",
            role: "${t.role}",
            firstName: "${t.first_name}",
            lastName: "${t.last_name}"
          };

          // Initialize charts
          document.addEventListener('DOMContentLoaded', function() {
            // Earnings Chart
            const earningsCtx = document.getElementById('earningsChart').getContext('2d');
            new Chart(earningsCtx, {
              type: 'line',
              data: {
                labels: ['Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'Jan'],
                datasets: [{
                  label: 'Monthly Earnings',
                  data: [850, 920, 1100, 980, 1140, 1285],
                  borderColor: '#00C881',
                  backgroundColor: 'rgba(0, 200, 129, 0.1)',
                  tension: 0.4,
                  fill: true
                }]
              },
              options: {
                responsive: true,
                scales: {
                  y: {
                    beginAtZero: true,
                    ticks: {
                      callback: function(value) {
                        return '$' + value;
                      }
                    }
                  }
                },
                plugins: {
                  legend: {
                    display: false
                  }
                }
              }
            });

            // Services Chart
            const servicesCtx = document.getElementById('servicesChart').getContext('2d');
            new Chart(servicesCtx, {
              type: 'doughnut',
              data: {
                labels: ['Plumbing', 'Electrical', 'Carpentry', 'Painting', 'Cleaning'],
                datasets: [{
                  data: [2850, 1920, 1650, 1200, 1130],
                  backgroundColor: [
                    '#00C881',
                    '#3B82F6',
                    '#F59E0B',
                    '#EF4444',
                    '#8B5CF6'
                  ]
                }]
              },
              options: {
                responsive: true,
                plugins: {
                  legend: {
                    position: 'bottom'
                  }
                }
              }
            });
          });
        <\/script>
    </body>
    </html>
  `)});Y.get("/worker/calendar",Q,async e=>{const t=e.get("user");return t.role!=="worker"?e.redirect("/dashboard"):e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Calendar & Scheduling - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <style>
          .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 1px;
          }
          .calendar-day {
            min-height: 120px;
            position: relative;
          }
          .calendar-event {
            font-size: 0.75rem;
            padding: 2px 6px;
            margin: 1px 0;
            border-radius: 4px;
            cursor: pointer;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
          }
          .event-appointment { background-color: #dbeafe; color: #1e40af; }
          .event-work { background-color: #dcfce7; color: #166534; }
          .event-personal { background-color: #fef3c7; color: #92400e; }
        </style>
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/worker" class="text-2xl font-bold text-kwikr-green">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <div class="flex items-center justify-between">
                    <div>
                        <h1 class="text-3xl font-bold text-gray-900">
                            <i class="fas fa-calendar-alt text-kwikr-green mr-3"></i>
                            Calendar & Scheduling
                        </h1>
                        <p class="text-gray-600 mt-2">Manage appointments, job schedules, and availability</p>
                    </div>
                    <div class="flex space-x-3">
                        <button onclick="showAvailabilityModal()" class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">
                            <i class="fas fa-clock mr-2"></i>Set Availability
                        </button>
                        <button onclick="showAppointmentModal()" class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600">
                            <i class="fas fa-plus mr-2"></i>New Appointment
                        </button>
                    </div>
                </div>
            </div>

            <!-- Calendar Controls -->
            <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-4">
                        <button onclick="previousMonth()" class="p-2 rounded-lg border border-gray-300 hover:bg-gray-50">
                            <i class="fas fa-chevron-left"></i>
                        </button>
                        <h2 id="currentMonth" class="text-2xl font-semibold text-gray-900"></h2>
                        <button onclick="nextMonth()" class="p-2 rounded-lg border border-gray-300 hover:bg-gray-50">
                            <i class="fas fa-chevron-right"></i>
                        </button>
                        <button onclick="goToToday()" class="px-4 py-2 text-sm bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200">
                            Today
                        </button>
                    </div>
                    <div class="flex items-center space-x-4">
                        <div class="flex items-center space-x-2 text-sm">
                            <div class="w-3 h-3 bg-blue-200 rounded"></div>
                            <span>Appointments</span>
                        </div>
                        <div class="flex items-center space-x-2 text-sm">
                            <div class="w-3 h-3 bg-green-200 rounded"></div>
                            <span>Work Blocks</span>
                        </div>
                        <div class="flex items-center space-x-2 text-sm">
                            <div class="w-3 h-3 bg-yellow-200 rounded"></div>
                            <span>Personal</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Calendar -->
            <div class="bg-white rounded-lg shadow-sm overflow-hidden mb-6">
                <!-- Calendar Header -->
                <div class="calendar-grid bg-gray-50 border-b">
                    <div class="p-4 text-center text-sm font-medium text-gray-700 border-r">Sun</div>
                    <div class="p-4 text-center text-sm font-medium text-gray-700 border-r">Mon</div>
                    <div class="p-4 text-center text-sm font-medium text-gray-700 border-r">Tue</div>
                    <div class="p-4 text-center text-sm font-medium text-gray-700 border-r">Wed</div>
                    <div class="p-4 text-center text-sm font-medium text-gray-700 border-r">Thu</div>
                    <div class="p-4 text-center text-sm font-medium text-gray-700 border-r">Fri</div>
                    <div class="p-4 text-center text-sm font-medium text-gray-700">Sat</div>
                </div>
                
                <!-- Calendar Days -->
                <div id="calendarDays" class="calendar-grid bg-white">
                    <!-- Calendar days will be generated here -->
                </div>
            </div>

            <!-- Upcoming Events -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                <!-- Today's Schedule -->
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">
                        <i class="fas fa-calendar-day text-kwikr-green mr-2"></i>
                        Today's Schedule
                    </h3>
                    <div id="todaySchedule" class="space-y-3">
                        <!-- Today's events will be loaded here -->
                    </div>
                </div>

                <!-- Upcoming Appointments -->
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">
                        <i class="fas fa-clock text-blue-500 mr-2"></i>
                        Upcoming Appointments
                    </h3>
                    <div id="upcomingAppointments" class="space-y-3">
                        <!-- Upcoming appointments will be loaded here -->
                    </div>
                </div>
            </div>
        </div>

        <!-- New Appointment Modal -->
        <div id="appointmentModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div class="bg-white rounded-lg max-w-md w-full mx-4">
                <div class="p-6 border-b border-gray-200">
                    <h3 class="text-xl font-bold text-gray-900">Schedule New Appointment</h3>
                </div>
                
                <form id="appointmentForm" class="p-6 space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Client</label>
                        <select id="clientSelect" required class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                            <option value="">Select a client</option>
                        </select>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Job (Optional)</label>
                        <select id="jobSelect" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                            <option value="">Select a job (optional)</option>
                        </select>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Title</label>
                        <input type="text" id="appointmentTitle" required class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" placeholder="e.g., Site Visit">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Type</label>
                        <select id="appointmentType" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                            <option value="meeting">Meeting</option>
                            <option value="site_visit">Site Visit</option>
                            <option value="consultation">Consultation</option>
                            <option value="work_session">Work Session</option>
                        </select>
                    </div>
                    
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Start Date & Time</label>
                            <input type="datetime-local" id="startDateTime" required class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">End Date & Time</label>
                            <input type="datetime-local" id="endDateTime" required class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                        </div>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Location</label>
                        <select id="locationType" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green mb-2">
                            <option value="client_site">Client Site</option>
                            <option value="worker_office">My Office</option>
                            <option value="virtual">Virtual Meeting</option>
                            <option value="other">Other</option>
                        </select>
                        <input type="text" id="locationAddress" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" placeholder="Address or meeting link">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Description (Optional)</label>
                        <textarea id="appointmentDescription" rows="3" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" placeholder="Additional notes..."></textarea>
                    </div>
                    
                    <div class="flex justify-end space-x-3 pt-4">
                        <button type="button" onclick="closeAppointmentModal()" class="px-4 py-2 text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50">
                            Cancel
                        </button>
                        <button type="submit" class="px-4 py-2 bg-kwikr-green text-white rounded-lg hover:bg-green-600">
                            Create Appointment
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Scripts -->
        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script src="/static/calendar.js"><\/script>
        <script>
          // Initialize calendar when page loads
          document.addEventListener('DOMContentLoaded', function() {
            initializeCalendar();
            loadTodaySchedule();
            loadUpcomingAppointments();
          });
        <\/script>
    </body>
    </html>
  `)});Y.get("/worker/messages",Q,async e=>{const t=e.get("user");return t.role!=="worker"?e.redirect("/dashboard"):e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Messages & Communication - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/worker" class="text-2xl font-bold text-kwikr-green">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <div class="relative">
                            <button id="notificationBtn" class="relative p-2 text-gray-600 hover:text-gray-900">
                                <i class="fas fa-bell text-xl"></i>
                                <span id="notificationBadge" class="hidden absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center">0</span>
                            </button>
                        </div>
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <div class="flex items-center justify-between">
                    <div>
                        <h1 class="text-3xl font-bold text-gray-900">
                            <i class="fas fa-comments text-kwikr-green mr-3"></i>
                            Messages & Communication
                        </h1>
                        <p class="text-gray-600 mt-2">Stay connected with your clients and manage job updates</p>
                    </div>
                    <div class="flex space-x-3">
                        <button onclick="showProgressUpdateModal()" class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600">
                            <i class="fas fa-clipboard-check mr-2"></i>Progress Update
                        </button>
                        <button onclick="showFileShareModal()" class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600">
                            <i class="fas fa-share mr-2"></i>Share Files
                        </button>
                    </div>
                </div>
            </div>

            <!-- Main Communication Interface -->
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                <!-- Message Threads List -->
                <div class="bg-white rounded-lg shadow-sm">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex justify-between items-center">
                            <h2 class="text-xl font-semibold text-gray-900">Conversations</h2>
                            <div class="flex items-center space-x-2">
                                <select id="threadFilter" class="border border-gray-300 rounded-lg px-3 py-2 text-sm">
                                    <option value="active">Active</option>
                                    <option value="archived">Archived</option>
                                </select>
                                <button onclick="loadMessageThreads()" class="text-kwikr-green hover:text-green-600">
                                    <i class="fas fa-sync-alt"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <div id="messageThreadsList" class="divide-y divide-gray-200 max-h-96 overflow-y-auto">
                        <!-- Message threads will be loaded here -->
                    </div>
                </div>

                <!-- Message View -->
                <div class="lg:col-span-2 bg-white rounded-lg shadow-sm">
                    <!-- Chat Header -->
                    <div id="chatHeader" class="hidden p-6 border-b border-gray-200">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="w-10 h-10 bg-gray-300 rounded-full flex items-center justify-center mr-3">
                                    <i class="fas fa-user text-gray-600"></i>
                                </div>
                                <div>
                                    <h3 id="clientName" class="font-semibold text-gray-900">Select a conversation</h3>
                                    <p id="jobTitle" class="text-sm text-gray-600">Choose a client to start messaging</p>
                                </div>
                            </div>
                            <div class="flex items-center space-x-2">
                                <button onclick="toggleQuickReplies()" class="text-gray-600 hover:text-gray-900">
                                    <i class="fas fa-bolt text-sm"></i>
                                </button>
                                <button onclick="archiveThread()" class="text-gray-600 hover:text-gray-900">
                                    <i class="fas fa-archive text-sm"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Quick Replies Panel -->
                    <div id="quickRepliesPanel" class="hidden p-4 bg-blue-50 border-b border-gray-200">
                        <div class="flex justify-between items-center mb-2">
                            <span class="text-sm font-medium text-blue-900">Quick Replies</span>
                            <button onclick="toggleQuickReplies()" class="text-blue-600 hover:text-blue-800">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                        <div id="quickRepliesList" class="flex flex-wrap gap-2">
                            <!-- Quick reply templates will be loaded here -->
                        </div>
                    </div>

                    <!-- Messages Area -->
                    <div id="messagesArea" class="flex-1 p-6">
                        <div class="text-center text-gray-500 py-12">
                            <i class="fas fa-comments text-4xl mb-4"></i>
                            <h3 class="text-lg font-medium mb-2">No conversation selected</h3>
                            <p class="text-sm">Choose a client conversation from the list to start messaging</p>
                        </div>
                    </div>

                    <!-- Message Input -->
                    <div id="messageInput" class="hidden p-6 border-t border-gray-200">
                        <form id="messageForm" onsubmit="sendMessage(event)" class="flex items-center space-x-3">
                            <div class="flex-1 relative">
                                <input type="text" id="messageText" placeholder="Type your message..." 
                                       class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green pr-12">
                                <button type="button" onclick="showFileUpload()" class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-gray-700">
                                    <i class="fas fa-paperclip"></i>
                                </button>
                            </div>
                            <button type="submit" class="bg-kwikr-green text-white px-6 py-3 rounded-lg hover:bg-green-600">
                                <i class="fas fa-paper-plane"></i>
                            </button>
                        </form>
                        <input type="file" id="fileUploadInput" class="hidden" accept="image/*,application/pdf" onchange="handleFileSelect(this)">
                    </div>
                </div>
            </div>

            <!-- Recent Activity -->
            <div class="mt-8 grid grid-cols-1 lg:grid-cols-2 gap-8">
                <!-- Recent Progress Updates -->
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">
                        <i class="fas fa-chart-line text-blue-500 mr-2"></i>
                        Recent Progress Updates
                    </h3>
                    <div id="recentUpdates">
                        <!-- Recent updates will be loaded here -->
                    </div>
                </div>

                <!-- Notifications -->
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-4">
                        <i class="fas fa-bell text-yellow-500 mr-2"></i>
                        Recent Notifications
                    </h3>
                    <div id="recentNotifications">
                        <!-- Notifications will be loaded here -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Progress Update Modal -->
        <div id="progressUpdateModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div class="bg-white rounded-lg max-w-2xl w-full mx-4 max-h-screen overflow-y-auto">
                <div class="p-6 border-b border-gray-200">
                    <h3 class="text-xl font-bold text-gray-900">Create Progress Update</h3>
                </div>
                
                <form id="progressUpdateForm" class="p-6 space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Job</label>
                        <select id="updateJobSelect" required class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                            <option value="">Select a job</option>
                        </select>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Update Title</label>
                        <input type="text" id="updateTitle" required class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" placeholder="e.g., Completed foundation work">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                        <textarea id="updateDescription" rows="4" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" placeholder="Describe the work completed and current status..."></textarea>
                    </div>
                    
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Progress Percentage</label>
                            <input type="number" id="updateProgress" min="0" max="100" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" placeholder="0-100">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Update Type</label>
                            <select id="updateType" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                                <option value="progress">Progress Update</option>
                                <option value="milestone">Milestone Reached</option>
                                <option value="issue">Issue/Delay</option>
                                <option value="completion">Job Complete</option>
                            </select>
                        </div>
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Photos (Optional)</label>
                        <input type="file" id="updatePhotos" multiple accept="image/*" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                    </div>
                    
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">Next Steps</label>
                        <textarea id="updateNextSteps" rows="2" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" placeholder="What will happen next..."></textarea>
                    </div>
                    
                    <div class="flex items-center">
                        <input type="checkbox" id="clientApprovalRequired" class="rounded border-gray-300 text-kwikr-green">
                        <label for="clientApprovalRequired" class="ml-2 text-sm text-gray-600">Client approval required</label>
                    </div>
                    
                    <div class="flex justify-end space-x-3 pt-4">
                        <button type="button" onclick="closeProgressUpdateModal()" class="px-4 py-2 text-gray-700 border border-gray-300 rounded-lg hover:bg-gray-50">
                            Cancel
                        </button>
                        <button type="submit" class="px-4 py-2 bg-kwikr-green text-white rounded-lg hover:bg-green-600">
                            Send Update
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Scripts -->
        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script src="/static/messages.js"><\/script>
        <script>
          // Initialize messaging when page loads
          document.addEventListener('DOMContentLoaded', function() {
            loadMessageThreads();
            loadNotifications();
            loadQuickReplies();
            loadActiveJobs();
            
            // Start notification polling
            setInterval(checkNotifications, 30000); // Check every 30 seconds
          });
        <\/script>
    </body>
    </html>
  `)});Y.get("/worker/portfolio",Q,async e=>{const t=e.get("user");return t.role!=="worker"?e.redirect("/dashboard"):e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Service Portfolio - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <style>
          .portfolio-card {
            transition: all 0.3s ease;
          }
          .portfolio-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
          }
          .image-gallery {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 10px;
          }
          .gallery-image {
            aspect-ratio: 4/3;
            object-fit: cover;
            cursor: pointer;
            transition: opacity 0.2s ease;
          }
          .gallery-image:hover {
            opacity: 0.8;
          }
          .modal {
            display: none;
          }
          .modal.active {
            display: flex;
          }
          .drop-zone {
            border: 2px dashed #d1d5db;
            transition: all 0.3s ease;
          }
          .drop-zone.dragover {
            border-color: #00C881;
            background-color: rgba(0, 200, 129, 0.1);
          }
        </style>
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/dashboard/worker" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Main Content -->
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="flex items-center justify-between mb-8">
                <div class="flex items-center">
                    <a href="/dashboard/worker" class="text-gray-500 hover:text-kwikr-green mr-4">
                        <i class="fas fa-arrow-left mr-2"></i>Back to Dashboard
                    </a>
                    <div>
                        <h1 class="text-3xl font-bold text-gray-900">
                            <i class="fas fa-briefcase text-kwikr-green mr-3"></i>Service Portfolio
                        </h1>
                        <p class="text-gray-600 mt-2">Showcase your work and manage your service offerings</p>
                    </div>
                </div>
                <div class="flex items-center space-x-3">
                    <button onclick="showCreatePortfolioModal()" class="bg-kwikr-green text-white px-6 py-3 rounded-lg hover:bg-green-600 transition-colors">
                        <i class="fas fa-plus mr-2"></i>Create Portfolio
                    </button>
                    <button onclick="loadPortfolios()" class="bg-gray-600 text-white px-4 py-3 rounded-lg hover:bg-gray-700 transition-colors">
                        <i class="fas fa-sync-alt mr-2"></i>Refresh
                    </button>
                </div>
            </div>

            <!-- Portfolio Statistics -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex items-center">
                        <div class="bg-kwikr-green bg-opacity-10 p-3 rounded-full">
                            <i class="fas fa-briefcase text-kwikr-green text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-2xl font-bold text-gray-900" id="totalPortfolios">0</p>
                            <p class="text-sm text-gray-600">Active Portfolios</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex items-center">
                        <div class="bg-blue-100 p-3 rounded-full">
                            <i class="fas fa-eye text-blue-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-2xl font-bold text-gray-900" id="totalViews">0</p>
                            <p class="text-sm text-gray-600">Total Views</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex items-center">
                        <div class="bg-yellow-100 p-3 rounded-full">
                            <i class="fas fa-star text-yellow-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-2xl font-bold text-gray-900" id="avgRating">0.0</p>
                            <p class="text-sm text-gray-600">Average Rating</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow-sm p-6">
                    <div class="flex items-center">
                        <div class="bg-green-100 p-3 rounded-full">
                            <i class="fas fa-comments text-green-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-2xl font-bold text-gray-900" id="totalTestimonials">0</p>
                            <p class="text-sm text-gray-600">Testimonials</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Portfolio Grid -->
            <div id="portfolioGrid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                <!-- Portfolios will be loaded here -->
                <div class="col-span-full text-center py-12">
                    <i class="fas fa-spinner fa-spin text-gray-400 text-3xl mb-4"></i>
                    <p class="text-gray-500 text-lg">Loading your portfolios...</p>
                </div>
            </div>
        </div>

        <!-- Create/Edit Portfolio Modal -->
        <div id="portfolioModal" class="modal fixed inset-0 bg-black bg-opacity-50 z-50 items-center justify-center">
            <div class="bg-white rounded-lg shadow-xl max-w-4xl w-full mx-4 max-h-screen overflow-y-auto">
                <div class="p-6 border-b border-gray-200">
                    <div class="flex justify-between items-center">
                        <h2 id="modalTitle" class="text-2xl font-bold text-gray-900">Create New Portfolio</h2>
                        <button onclick="closePortfolioModal()" class="text-gray-400 hover:text-gray-600">
                            <i class="fas fa-times text-xl"></i>
                        </button>
                    </div>
                </div>

                <form id="portfolioForm" class="p-6">
                    <div class="space-y-6">
                        <!-- Basic Information -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Portfolio Title *</label>
                                <input type="text" id="portfolioTitle" required 
                                       class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green"
                                       placeholder="e.g., Professional Plumbing Services">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Service Category</label>
                                <select id="portfolioCategory" 
                                        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                    <option value="">Select Category</option>
                                    <option value="Plumbing">Plumbing</option>
                                    <option value="Electrical">Electrical</option>
                                    <option value="House Cleaning">House Cleaning</option>
                                    <option value="Landscaping">Landscaping</option>
                                    <option value="Painting">Painting</option>
                                    <option value="Carpentry">Carpentry</option>
                                    <option value="HVAC">HVAC</option>
                                    <option value="Roofing">Roofing</option>
                                </select>
                            </div>
                        </div>

                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Service Type *</label>
                                <input type="text" id="portfolioServiceType" required
                                       class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green"
                                       placeholder="e.g., Emergency Repairs, Installation">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Base Price</label>
                                <div class="flex">
                                    <span class="inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500">$</span>
                                    <input type="number" id="portfolioPrice" min="0" step="0.01"
                                           class="w-full px-3 py-2 border border-gray-300 rounded-r-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                    <select id="portfolioPriceUnit" class="ml-2 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                        <option value="hour">per hour</option>
                                        <option value="project">per project</option>
                                        <option value="sqft">per sq ft</option>
                                        <option value="day">per day</option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                            <textarea id="portfolioDescription" rows="4"
                                      class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green"
                                      placeholder="Describe your service, experience, and what makes you unique..."></textarea>
                        </div>

                        <!-- Image Upload Section -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Portfolio Images</label>
                            <div id="imageUploadZone" class="drop-zone border-2 border-dashed border-gray-300 rounded-lg p-8 text-center">
                                <i class="fas fa-cloud-upload-alt text-gray-400 text-4xl mb-4"></i>
                                <p class="text-gray-600 mb-2">Drag and drop images here, or click to browse</p>
                                <p class="text-sm text-gray-500">Supported formats: JPG, PNG. Max size: 5MB each</p>
                                <input type="file" id="portfolioImages" multiple accept="image/*" class="hidden">
                                <button type="button" onclick="document.getElementById('portfolioImages').click()" 
                                        class="mt-4 bg-kwikr-green text-white px-4 py-2 rounded-md hover:bg-green-600">
                                    Browse Files
                                </button>
                            </div>
                            <div id="imagePreview" class="mt-4 image-gallery"></div>
                        </div>

                        <!-- Pricing Tiers -->
                        <div>
                            <div class="flex justify-between items-center mb-4">
                                <label class="block text-sm font-medium text-gray-700">Pricing Tiers</label>
                                <button type="button" onclick="addPricingTier()" 
                                        class="text-kwikr-green hover:text-green-600 text-sm font-medium">
                                    <i class="fas fa-plus mr-1"></i>Add Pricing Tier
                                </button>
                            </div>
                            <div id="pricingTiers" class="space-y-4">
                                <!-- Pricing tiers will be added here -->
                            </div>
                        </div>

                        <!-- Service Areas -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Service Areas</label>
                            <div id="serviceAreas">
                                <div class="flex items-center space-x-2 mb-2">
                                    <input type="text" placeholder="Area name (e.g., Downtown Toronto)" 
                                           class="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green service-area-input">
                                    <input type="text" placeholder="Postal code" 
                                           class="w-24 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green postal-code-input">
                                    <button type="button" onclick="addServiceArea()" class="text-kwikr-green hover:text-green-600">
                                        <i class="fas fa-plus"></i>
                                    </button>
                                </div>
                            </div>
                            <div id="serviceAreasList" class="mt-2 space-y-1"></div>
                        </div>

                        <!-- Tags -->
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Tags</label>
                            <input type="text" id="portfolioTags" 
                                   class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green"
                                   placeholder="Enter tags separated by commas (e.g., emergency, licensed, insured)">
                            <p class="text-sm text-gray-500 mt-1">Tags help clients find your services more easily</p>
                        </div>

                        <!-- Settings -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div class="flex items-center">
                                <input type="checkbox" id="portfolioFeatured" class="h-4 w-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                <label for="portfolioFeatured" class="ml-2 block text-sm text-gray-700">
                                    Featured Portfolio
                                </label>
                            </div>
                            <div class="flex items-center">
                                <input type="checkbox" id="portfolioActive" checked class="h-4 w-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                <label for="portfolioActive" class="ml-2 block text-sm text-gray-700">
                                    Active (visible to clients)
                                </label>
                            </div>
                        </div>
                    </div>

                    <!-- Form Actions -->
                    <div class="flex justify-end space-x-4 mt-8 pt-6 border-t border-gray-200">
                        <button type="button" onclick="closePortfolioModal()" 
                                class="px-6 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50">
                            Cancel
                        </button>
                        <button type="submit" 
                                class="bg-kwikr-green text-white px-6 py-2 rounded-md hover:bg-green-600 transition-colors">
                            <i class="fas fa-save mr-2"></i><span id="submitText">Create Portfolio</span>
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Image View Modal -->
        <div id="imageModal" class="modal fixed inset-0 bg-black bg-opacity-75 z-50 items-center justify-center">
            <div class="max-w-4xl w-full mx-4">
                <div class="relative">
                    <img id="modalImage" class="w-full h-auto rounded-lg" src="" alt="">
                    <button onclick="closeImageModal()" 
                            class="absolute top-4 right-4 text-white bg-black bg-opacity-50 rounded-full p-2 hover:bg-opacity-75">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
        </div>

        <!-- Scripts -->
        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script>
            window.currentUser = {
                id: ${t.user_id},
                email: "${t.email}",
                role: "${t.role}",
                firstName: "${t.first_name}",
                lastName: "${t.last_name}"
            };
        <\/script>
        <script src="/static/portfolio.js"><\/script>
        <script>
            // Initialize portfolio management when page loads
            document.addEventListener('DOMContentLoaded', function() {
                console.log('DOM loaded, initializing portfolio management');
                initializePortfolioManager();
            });
        <\/script>
    </body>
    </html>
  `)});Y.post("/api/worker/profile/update",Q,async e=>{const t=e.get("user");if(t.role!=="worker")return e.json({success:!1,error:"Unauthorized"},403);try{const s=await e.req.json();return console.log("Updating worker profile for user:",t.user_id,s),await e.env.DB.prepare(`
      UPDATE users 
      SET email = ?, phone = ?, city = ?, province = ?, updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(s.primaryEmail,s.phone,s.city,s.province,t.user_id).run(),await e.env.DB.prepare(`
      SELECT id FROM user_profiles WHERE user_id = ?
    `).bind(t.user_id).first()?await e.env.DB.prepare(`
        UPDATE user_profiles 
        SET company_description = ?, updated_at = CURRENT_TIMESTAMP
        WHERE user_id = ?
      `).bind(s.businessDescription,t.user_id).run():await e.env.DB.prepare(`
        INSERT INTO user_profiles (user_id, company_description, created_at, updated_at)
        VALUES (?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
      `).bind(t.user_id,s.businessDescription).run(),console.log("Profile updated successfully for user:",t.user_id),e.json({success:!0,message:"Profile updated successfully",updatedData:{email:s.primaryEmail,phone:s.phone,city:s.city,province:s.province,businessDescription:s.businessDescription}})}catch(s){return console.error("Error updating worker profile:",s),e.json({success:!1,error:"Failed to update profile. Please try again."},500)}});Y.get("/worker/services",Q,nt,async e=>{var r;const t=e.get("user");if(t.role!=="worker")return e.redirect("/dashboard");const s=await e.env.DB.prepare(`
    SELECT * FROM worker_services 
    WHERE user_id = ? AND is_available = 1
    ORDER BY service_name
  `).bind(t.user_id).all();return e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Manage Services - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <h1 class="text-2xl font-bold text-kwikr-green">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </h1>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900">Manage Services</h1>
                <p class="text-gray-600">Configure your services, pricing, and availability</p>
            </div>

            <!-- Tab Navigation -->
            <div class="bg-white rounded-lg shadow-sm mb-8">
                <div class="border-b border-gray-200">
                    <nav class="flex space-x-8 px-6" aria-label="Tabs">
                        <a href="/dashboard/worker" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-user mr-2"></i>Profile View
                        </a>
                        <a href="/dashboard/worker/profile" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-edit mr-2"></i>Edit Profile
                        </a>
                        <a href="/dashboard/worker/payments" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-credit-card mr-2"></i>Payment Management
                        </a>
                        <a href="/dashboard/worker/compliance" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-shield-check mr-2"></i>Manage Compliance
                        </a>
                        <a href="/dashboard/worker/services" class="py-4 px-1 border-b-2 border-kwikr-green text-kwikr-green font-medium text-sm">
                            <i class="fas fa-tools mr-2"></i>Manage Services
                        </a>
                    </nav>
                </div>
            </div>

            <!-- Services and Pricing Management -->
            <div class="space-y-8">
                <!-- Current Services -->
                <div class="bg-white rounded-lg shadow-sm">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex justify-between items-center">
                            <h2 class="text-xl font-semibold text-gray-900">Your Services</h2>
                            <button onclick="showServicesModal()" class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">
                                <i class="fas fa-plus mr-2"></i>Add Service
                            </button>
                        </div>
                    </div>
                    <div class="p-6">
                        ${((r=s.results)==null?void 0:r.length)>0?`
                            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                                ${s.results.map(i=>`
                                    <div class="border border-gray-200 rounded-lg p-6">
                                        <div class="flex items-center mb-4">
                                            <i class="fas fa-tools text-kwikr-green text-xl mr-3"></i>
                                            <h3 class="font-semibold text-gray-900">${i.service_name}</h3>
                                        </div>
                                        <p class="text-gray-600 text-sm mb-4">${i.description||"Professional service"}</p>
                                        <div class="flex justify-between items-center mb-4">
                                            <span class="text-2xl font-bold text-kwikr-green">$${i.hourly_rate}/hr</span>
                                            <span class="px-2 py-1 bg-green-100 text-green-800 rounded-full text-xs">Active</span>
                                        </div>
                                        <div class="flex space-x-2">
                                            <button onclick="editService(${i.id})" class="flex-1 text-blue-600 hover:text-blue-800 text-sm">
                                                <i class="fas fa-edit mr-1"></i>Edit
                                            </button>
                                            <button onclick="toggleServiceStatus(${i.id})" class="flex-1 text-gray-600 hover:text-gray-800 text-sm">
                                                <i class="fas fa-pause mr-1"></i>Pause
                                            </button>
                                        </div>
                                    </div>
                                `).join("")}
                            </div>
                        `:`
                            <div class="text-center py-12">
                                <i class="fas fa-tools text-4xl text-gray-300 mb-4"></i>
                                <h3 class="text-lg font-medium text-gray-900 mb-2">No Services Added Yet</h3>
                                <p class="text-gray-500 mb-6">Add your first service to start receiving job offers</p>
                                <button onclick="showServicesModal()" class="bg-kwikr-green text-white px-6 py-3 rounded-lg hover:bg-green-600">
                                    <i class="fas fa-plus mr-2"></i>Add Your First Service
                                </button>
                            </div>
                        `}
                    </div>
                </div>

                <!-- Service Areas -->
                <div class="bg-white rounded-lg shadow-sm">
                    <div class="p-6 border-b border-gray-200">
                        <h2 class="text-xl font-semibold text-gray-900">Service Areas</h2>
                        <p class="text-gray-600">Specify the areas where you provide services</p>
                    </div>
                    <div class="p-6">
                        <div id="serviceAreasContainer">
                            <!-- Service areas will be loaded here -->
                        </div>
                    </div>
                </div>

                <!-- Hours of Operation -->
                <div class="bg-white rounded-lg shadow-sm">
                    <div class="p-6 border-b border-gray-200">
                        <h2 class="text-xl font-semibold text-gray-900">Hours of Operation</h2>
                        <p class="text-gray-600">Set your availability schedule</p>
                    </div>
                    <div class="p-6">
                        <div id="hoursContainer">
                            <!-- Hours will be loaded here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Include the worker dashboard JavaScript -->
        <script src="/static/worker-dashboard.js"><\/script>
        <script>
            function logout() {
                if (confirm('Are you sure you want to logout?')) {
                    window.location.href = '/api/auth/logout'
                }
            }
            
            // Initialize page
            document.addEventListener('DOMContentLoaded', function() {
                loadServiceAreas()
                loadHours()
            })
        <\/script>
    </body>
    </html>
  `)});Y.get("/worker/compliance",Q,nt,async e=>{const t=e.get("user");return t.role!=="worker"?e.redirect("/dashboard"):e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Manage Compliance - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <h1 class="text-2xl font-bold text-kwikr-green">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </h1>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-600">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-700 hover:text-red-600">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900">Manage Compliance</h1>
                <p class="text-gray-600">Update your certifications, licenses, and insurance</p>
            </div>

            <!-- Tab Navigation -->
            <div class="bg-white rounded-lg shadow-sm mb-8">
                <div class="border-b border-gray-200">
                    <nav class="flex space-x-8 px-6" aria-label="Tabs">
                        <a href="/dashboard/worker" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-user mr-2"></i>Profile View
                        </a>
                        <a href="/dashboard/worker/profile" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-edit mr-2"></i>Edit Profile
                        </a>
                        <a href="/dashboard/worker/payments" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-credit-card mr-2"></i>Payment Management
                        </a>
                        <a href="/dashboard/worker/compliance" class="py-4 px-1 border-b-2 border-kwikr-green text-kwikr-green font-medium text-sm">
                            <i class="fas fa-shield-check mr-2"></i>Manage Compliance
                        </a>
                        <a href="/dashboard/worker/services" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-tools mr-2"></i>Manage Services
                        </a>
                    </nav>
                </div>
            </div>

            <!-- Compliance Management Content -->
            <div class="space-y-8">
                <!-- Compliance Overview -->
                <div class="bg-white rounded-lg shadow-sm">
                    <div class="p-6 border-b border-gray-200">
                        <h2 class="text-xl font-semibold text-gray-900">Compliance Overview</h2>
                        <p class="text-gray-600">Keep your certifications and documentation up to date</p>
                    </div>
                    <div class="p-6">
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                            <div class="text-center p-6 bg-green-50 rounded-lg">
                                <i class="fas fa-shield-check text-green-600 text-3xl mb-3"></i>
                                <h3 class="font-semibold text-green-800">Identity Verified</h3>
                                <p class="text-sm text-green-600 mt-1">Completed</p>
                            </div>
                            <div class="text-center p-6 bg-yellow-50 rounded-lg">
                                <i class="fas fa-clock text-yellow-600 text-3xl mb-3"></i>
                                <h3 class="font-semibold text-yellow-800">Background Check</h3>
                                <p class="text-sm text-yellow-600 mt-1">Pending</p>
                            </div>
                            <div class="text-center p-6 bg-red-50 rounded-lg">
                                <i class="fas fa-times text-red-600 text-3xl mb-3"></i>
                                <h3 class="font-semibold text-red-800">Insurance</h3>
                                <p class="text-sm text-red-600 mt-1">Required</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Quick Action -->
                <div class="bg-white rounded-lg shadow-sm">
                    <div class="p-6 text-center">
                        <h2 class="text-xl font-semibold text-gray-900 mb-4">Update Compliance Information</h2>
                        <p class="text-gray-600 mb-6">Use our comprehensive form to manage all your compliance requirements</p>
                        <button onclick="toggleComplianceForm()" class="bg-kwikr-green text-white px-8 py-3 rounded-lg hover:bg-green-600 font-semibold">
                            <i class="fas fa-shield-check mr-2"></i>Manage Compliance
                        </button>
                    </div>
                </div>

                <!-- Canadian Compliance Management Form -->
                <div id="complianceForm" class="bg-white rounded-lg shadow-sm" style="display: none;">
                    <div class="p-6 border-b border-gray-200">
                        <h2 class="text-xl font-semibold text-gray-900">Canadian Business Compliance Information</h2>
                        <p class="text-gray-600">Required for service providers in Canada</p>
                    </div>
                    <div class="p-6">
                        <form id="complianceUpdateForm" class="space-y-6">
                            <!-- WSIB Information -->
                            <div class="bg-blue-50 p-4 rounded-lg">
                                <h3 class="text-lg font-semibold text-blue-900 mb-4">
                                    <i class="fas fa-hard-hat mr-2"></i>WSIB (Workplace Safety and Insurance Board)
                                </h3>
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">WSIB Number</label>
                                        <input type="text" id="wsibNumber" placeholder="e.g., 12345678-9" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                        <p class="text-xs text-gray-500 mt-1">Required for construction and high-risk services in Ontario</p>
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">WSIB Valid Until</label>
                                        <input type="date" id="wsibValidUntil" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                    </div>
                                </div>
                            </div>

                            <!-- Insurance Information -->
                            <div class="bg-green-50 p-4 rounded-lg">
                                <h3 class="text-lg font-semibold text-green-900 mb-4">
                                    <i class="fas fa-shield-alt mr-2"></i>General Liability Insurance
                                </h3>
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Insurance Provider</label>
                                        <input type="text" id="insuranceProvider" placeholder="e.g., Intact Insurance, Aviva" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Policy Number</label>
                                        <input type="text" id="insurancePolicyNumber" placeholder="Policy number" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Insurance Valid Until</label>
                                        <input type="date" id="insuranceValidUntil" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Coverage Amount</label>
                                        <select id="coverageAmount" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                            <option value="">Select coverage</option>
                                            <option value="1000000">$1,000,000 CAD</option>
                                            <option value="2000000">$2,000,000 CAD (Recommended)</option>
                                            <option value="5000000">$5,000,000 CAD</option>
                                            <option value="10000000">$10,000,000 CAD</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <!-- Professional License Information -->
                            <div class="bg-yellow-50 p-4 rounded-lg">
                                <h3 class="text-lg font-semibold text-yellow-900 mb-4">
                                    <i class="fas fa-certificate mr-2"></i>Professional Licenses & Certifications
                                </h3>
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">License Type</label>
                                        <select id="licenseType" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                            <option value="">Select license type</option>
                                            <option value="electrical">Electrical License (ECRA/ESA)</option>
                                            <option value="plumbing">Plumbing License</option>
                                            <option value="gasfitting">Gas Fitting License</option>
                                            <option value="hvac">HVAC Technician</option>
                                            <option value="contractor">General Contractor</option>
                                            <option value="home_inspector">Home Inspector</option>
                                            <option value="pest_control">Pest Control License</option>
                                            <option value="other">Other Professional License</option>
                                        </select>
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">License Number</label>
                                        <input type="text" id="licenseNumber" placeholder="License/certification number" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">License Valid Until</label>
                                        <input type="date" id="licenseValidUntil" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                    </div>
                                    <div>
                                        <label class="block text-sm font-medium text-gray-700 mb-2">Issuing Authority</label>
                                        <input type="text" id="licensingAuthority" placeholder="e.g., ESA, Provincial College" 
                                               class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                    </div>
                                </div>
                            </div>

                            <!-- Document Upload Section -->
                            <div class="bg-gray-50 p-4 rounded-lg">
                                <h3 class="text-lg font-semibold text-gray-900 mb-4">
                                    <i class="fas fa-file-upload mr-2"></i>Supporting Documents
                                </h3>
                                <p class="text-sm text-gray-600 mb-4">Upload copies of your insurance certificates, licenses, and WSIB clearance certificates</p>
                                <div class="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center">
                                    <i class="fas fa-cloud-upload-alt text-gray-400 text-3xl mb-2"></i>
                                    <p class="text-gray-600">Drag & drop files here or click to upload</p>
                                    <p class="text-xs text-gray-500 mt-1">PDF, JPG, PNG files up to 10MB each</p>
                                    <input type="file" id="complianceDocuments" multiple accept=".pdf,.jpg,.jpeg,.png" class="hidden">
                                    <button type="button" onclick="document.getElementById('complianceDocuments').click()" 
                                            class="mt-2 px-4 py-2 bg-kwikr-green text-white rounded hover:bg-green-600">
                                        Select Files
                                    </button>
                                </div>
                            </div>

                            <!-- Action Buttons -->
                            <div class="flex justify-end space-x-4 pt-6">
                                <button type="button" onclick="toggleComplianceForm()" 
                                        class="px-6 py-2 border border-gray-300 text-gray-700 rounded-md hover:bg-gray-50">
                                    Cancel
                                </button>
                                <button type="submit" 
                                        class="px-6 py-2 bg-kwikr-green text-white rounded-md hover:bg-green-600">
                                    <i class="fas fa-save mr-2"></i>Save Compliance Information
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Include the worker dashboard JavaScript -->
        <script src="/static/worker-dashboard.js"><\/script>
        <script>
            function logout() {
                if (confirm('Are you sure you want to logout?')) {
                    window.location.href = '/api/auth/logout'
                }
            }

            // Compliance form management
            function toggleComplianceForm() {
                const form = document.getElementById('complianceForm');
                if (form.style.display === 'none') {
                    form.style.display = 'block';
                    loadComplianceData();
                } else {
                    form.style.display = 'none';
                }
            }

            // Load existing compliance data
            async function loadComplianceData() {
                try {
                    const response = await fetch('/api/worker/compliance', {
                        credentials: 'include'  // Include session cookies
                    });
                    if (response.ok) {
                        const data = await response.json();
                        if (data.compliance) {
                            const c = data.compliance;
                            document.getElementById('wsibNumber').value = c.wsib_number || '';
                            document.getElementById('wsibValidUntil').value = c.wsib_valid_until || '';
                            document.getElementById('insuranceProvider').value = c.insurance_provider || '';
                            document.getElementById('insurancePolicyNumber').value = c.insurance_policy_number || '';
                            document.getElementById('insuranceValidUntil').value = c.insurance_valid_until || '';
                            document.getElementById('licenseType').value = c.license_type || '';
                            document.getElementById('licenseNumber').value = c.license_number || '';
                            document.getElementById('licenseValidUntil').value = c.license_valid_until || '';
                        }
                    }
                } catch (error) {
                    console.log('No existing compliance data found');
                }
            }

            // Handle compliance form submission
            document.getElementById('complianceUpdateForm').addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const formData = {
                    wsib_number: document.getElementById('wsibNumber').value,
                    wsib_valid_until: document.getElementById('wsibValidUntil').value,
                    insurance_provider: document.getElementById('insuranceProvider').value,
                    insurance_policy_number: document.getElementById('insurancePolicyNumber').value,
                    insurance_valid_until: document.getElementById('insuranceValidUntil').value,
                    license_type: document.getElementById('licenseType').value,
                    license_number: document.getElementById('licenseNumber').value,
                    license_valid_until: document.getElementById('licenseValidUntil').value
                };

                try {
                    const response = await fetch('/api/worker/compliance/update', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        credentials: 'include',  // Include session cookies
                        body: JSON.stringify(formData)
                    });

                    const result = await response.json();
                    
                    if (response.ok) {
                        alert('Compliance information updated successfully!');
                        toggleComplianceForm();
                        // Refresh the page to show updated compliance status
                        window.location.reload();
                    } else {
                        alert('Error: ' + result.error);
                    }
                } catch (error) {
                    console.error('Compliance update error:', error);
                    alert('Failed to update compliance information. Please try again.');
                }
            });
        <\/script>
    </body>
    </html>
  `)});Y.post("/api/worker/payment-settings/update",Q,nt,async e=>{const t=e.get("user");if(t.role!=="worker")return e.json({success:!1,error:"Unauthorized"},403);try{const s=await e.req.json();return await e.env.DB.prepare(`
      SELECT id FROM worker_payment_settings WHERE user_id = ?
    `).bind(t.user_id).first()?await e.env.DB.prepare(`
        UPDATE worker_payment_settings 
        SET preferred_payment_method = ?, 
            bank_name = ?, 
            bank_account_holder = ?, 
            bank_account_number = ?, 
            bank_routing_number = ?, 
            paypal_email = ?, 
            interac_email = ?, 
            etransfer_security_question = ?, 
            etransfer_security_answer = ?, 
            minimum_payout_amount = ?, 
            payout_frequency = ?, 
            auto_payout_enabled = ?, 
            updated_at = CURRENT_TIMESTAMP
        WHERE user_id = ?
      `).bind(s.preferred_payment_method,s.bank_name,s.bank_account_holder,s.bank_account_number,s.bank_routing_number,s.paypal_email,s.interac_email,s.etransfer_security_question,s.etransfer_security_answer,s.minimum_payout_amount,s.payout_frequency,s.auto_payout_enabled,t.user_id).run():await e.env.DB.prepare(`
        INSERT INTO worker_payment_settings (
          user_id, preferred_payment_method, bank_name, bank_account_holder, 
          bank_account_number, bank_routing_number, paypal_email, interac_email, 
          etransfer_security_question, etransfer_security_answer, minimum_payout_amount, 
          payout_frequency, auto_payout_enabled, created_at, updated_at
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
      `).bind(t.user_id,s.preferred_payment_method,s.bank_name,s.bank_account_holder,s.bank_account_number,s.bank_routing_number,s.paypal_email,s.interac_email,s.etransfer_security_question,s.etransfer_security_answer,s.minimum_payout_amount,s.payout_frequency,s.auto_payout_enabled).run(),e.json({success:!0,message:"Payment settings updated successfully"})}catch(s){return console.error("Error updating payment settings:",s),e.json({success:!1,error:"Failed to update payment settings. Please try again."},500)}});Y.get("/api/worker/compliance",Q,nt,async e=>{const t=e.get("user");if(t.role!=="worker")return e.json({success:!1,error:"Unauthorized"},403);try{const s=await e.env.DB.prepare(`
      SELECT * FROM worker_compliance WHERE user_id = ?
    `).bind(t.user_id).first();return e.json({success:!0,compliance:s||{}})}catch(s){return console.error("Error fetching compliance data:",s),e.json({success:!1,error:"Failed to fetch compliance data"},500)}});Y.post("/api/worker/compliance/update",Q,nt,async e=>{const t=e.get("user");if(t.role!=="worker")return e.json({success:!1,error:"Unauthorized"},403);try{const s=await e.req.json();return await e.env.DB.prepare(`
      SELECT id FROM worker_compliance WHERE user_id = ?
    `).bind(t.user_id).first()?await e.env.DB.prepare(`
        UPDATE worker_compliance 
        SET wsib_number = ?, 
            wsib_valid_until = ?, 
            insurance_provider = ?, 
            insurance_policy_number = ?, 
            insurance_valid_until = ?, 
            license_type = ?, 
            license_number = ?, 
            license_valid_until = ?, 
            updated_at = CURRENT_TIMESTAMP
        WHERE user_id = ?
      `).bind(s.wsib_number,s.wsib_valid_until,s.insurance_provider,s.insurance_policy_number,s.insurance_valid_until,s.license_type,s.license_number,s.license_valid_until,t.user_id).run():await e.env.DB.prepare(`
        INSERT INTO worker_compliance (
          user_id, wsib_number, wsib_valid_until, insurance_provider, 
          insurance_policy_number, insurance_valid_until, license_type, 
          license_number, license_valid_until, created_at, updated_at
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
      `).bind(t.user_id,s.wsib_number,s.wsib_valid_until,s.insurance_provider,s.insurance_policy_number,s.insurance_valid_until,s.license_type,s.license_number,s.license_valid_until).run(),e.json({success:!0,message:"Compliance information updated successfully"})}catch(s){return console.error("Error updating compliance data:",s),e.json({success:!1,error:"Failed to update compliance information. Please try again."},500)}});Y.post("/api/worker/services",Q,nt,async e=>{const t=e.get("user");if(t.role!=="worker")return e.json({success:!1,error:"Unauthorized"},403);try{const s=await e.req.json();return await e.env.DB.prepare(`
      INSERT INTO worker_services (
        user_id, service_category, service_name, hourly_rate, 
        description, is_available, created_at, updated_at
      ) VALUES (?, ?, ?, ?, ?, 1, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
    `).bind(t.user_id,s.category,s.service_name,s.hourly_rate,s.description).run(),e.json({success:!0,message:"Service added successfully"})}catch(s){return console.error("Error adding service:",s),e.json({success:!1,error:"Failed to add service. Please try again."},500)}});Y.get("/api/worker/payment-settings",Q,nt,async e=>{const t=e.get("user");if(t.role!=="worker")return e.json({success:!1,error:"Unauthorized"},403);try{const s=await e.env.DB.prepare(`
      SELECT * FROM worker_payment_settings WHERE user_id = ?
    `).bind(t.user_id).first();return e.json({success:!0,paymentSettings:s||{}})}catch(s){return console.error("Error fetching payment settings:",s),e.json({success:!1,error:"Failed to fetch payment settings"},500)}});const js=new ce,yr=async(e,t)=>{e.req.path;let s=null;const r=e.req.header("Cookie");if(r){const a=r.match(/session=([^;]+)/);if(a&&(s=a[1]),!s){const n=r.match(/demo_session=([^;]+)/);if(n){const o=n[1],[l,d]=o.split(":"),c=Math.random().toString(36).substring(2,15);s=btoa(`demo-${l}:${d}:${c}`)}}}if(!s){const a=e.req.header("Authorization");a&&a.startsWith("Bearer ")&&(s=a.replace("Bearer ",""))}if(s||(s=e.req.query("token")),!s)return e.json({error:"Authentication required"},401);const i=await e.env.DB.prepare(`
    SELECT s.user_id, u.role, u.email, u.first_name, u.last_name, u.province
    FROM user_sessions s
    JOIN users u ON s.user_id = u.id
    WHERE s.session_token = ? AND u.is_active = 1
  `).bind(s).first();if(!i)return e.json({error:"Invalid or expired session"},401);e.set("user",i),await t()};js.get("/requirements/:province/:trade",yr,async e=>{try{const t=e.req.param("province").toUpperCase(),s=decodeURIComponent(e.req.param("trade")),r=await e.env.DB.prepare(`
      SELECT 
        id, province, trade_type, requirement_category, requirement_name,
        requirement_description, is_required, issuing_authority,
        minimum_coverage_amount, coverage_currency, includes_completed_operations,
        applies_to_employees, applies_to_subcontractors, applies_to_commercial, applies_to_residential,
        contract_threshold_amount, verification_method, renewal_frequency_months
      FROM compliance_requirements
      WHERE province = ? AND trade_type = ? AND is_active = 1
      ORDER BY requirement_category, is_required DESC, requirement_name
    `).bind(t,s).all();return e.json({province:t,trade_type:s,requirements:r.results||[]})}catch(t){return console.error("Error fetching compliance requirements:",t),e.json({error:"Failed to fetch requirements"},500)}});js.get("/worker/:userId/status",yr,async e=>{try{const t=parseInt(e.req.param("userId")),s=e.get("user");if(s.role!=="admin"&&s.user_id!==t)return e.json({error:"Access denied"},403);const r=await e.env.DB.prepare(`
      SELECT * FROM worker_compliance_summary WHERE user_id = ?
    `).bind(t).first(),i=await e.env.DB.prepare(`
      SELECT 
        wcr.*,
        cr.requirement_name,
        cr.requirement_description,
        cr.requirement_category,
        cr.issuing_authority,
        cr.is_required
      FROM worker_compliance_records wcr
      JOIN compliance_requirements cr ON wcr.requirement_id = cr.id
      WHERE wcr.user_id = ?
      ORDER BY cr.requirement_category, cr.is_required DESC, wcr.expiry_date ASC
    `).bind(t).all(),a=await e.env.DB.prepare(`
      SELECT * FROM compliance_alerts 
      WHERE user_id = ? AND is_resolved = 0
      ORDER BY alert_priority DESC, alert_date ASC
    `).bind(t).all();return e.json({summary:r||null,records:i.results||[],alerts:a.results||[]})}catch(t){return console.error("Error fetching compliance status:",t),e.json({error:"Failed to fetch compliance status"},500)}});js.post("/worker/:userId/document",yr,async e=>{try{const t=parseInt(e.req.param("userId")),s=e.get("user");if(s.role!=="admin"&&s.user_id!==t)return e.json({error:"Access denied"},403);const{requirement_id:r,document_type:i,document_number:a,document_file_path:n,issue_date:o,expiry_date:l,coverage_amount:d,insurer_name:c,policy_details:u,notes:p}=await e.req.json();if(!r||!i)return e.json({error:"Requirement ID and document type are required"},400);const m=await e.env.DB.prepare(`
      SELECT id FROM worker_compliance_records 
      WHERE user_id = ? AND requirement_id = ?
    `).bind(t,r).first();if(m){if((await e.env.DB.prepare(`
        UPDATE worker_compliance_records 
        SET document_type = ?, document_number = ?, document_file_path = ?,
            issue_date = ?, expiry_date = ?, coverage_amount = ?, insurer_name = ?,
            policy_details = ?, notes = ?, compliance_status = 'pending',
            verification_status = 'unverified', updated_at = CURRENT_TIMESTAMP
        WHERE user_id = ? AND requirement_id = ?
      `).bind(i,a,n,o,l,d,c,u,p,t,r).run()).success)return await e.env.DB.prepare(`
          INSERT INTO compliance_audit_log 
          (user_id, requirement_id, compliance_record_id, action_type, new_status, performed_by, details)
          VALUES (?, ?, ?, 'document_upload', 'pending', ?, 'Document updated')
        `).bind(t,r,m.id,s.user_id).run(),e.json({message:"Document updated successfully",record_id:m.id})}else{const b=await e.env.DB.prepare(`
        INSERT INTO worker_compliance_records 
        (user_id, requirement_id, document_type, document_number, document_file_path,
         issue_date, expiry_date, coverage_amount, insurer_name, policy_details, notes,
         compliance_status, verification_status)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'pending', 'unverified')
      `).bind(t,r,i,a,n,o,l,d,c,u,p).run();if(b.success)return await e.env.DB.prepare(`
          INSERT INTO compliance_audit_log 
          (user_id, requirement_id, compliance_record_id, action_type, new_status, performed_by, details)
          VALUES (?, ?, ?, 'document_upload', 'pending', ?, 'New document uploaded')
        `).bind(t,r,b.meta.last_row_id,s.user_id).run(),e.json({message:"Document uploaded successfully",record_id:b.meta.last_row_id})}return e.json({error:"Failed to save document"},500)}catch(t){return console.error("Error uploading compliance document:",t),e.json({error:"Failed to upload document"},500)}});js.post("/admin/verify/:recordId",yr,async e=>{try{const t=parseInt(e.req.param("recordId")),s=e.get("user");if(s.role!=="admin")return e.json({error:"Admin access required"},403);const{verification_status:r,compliance_status:i,notes:a}=await e.req.json();if(!r||!i)return e.json({error:"Verification status and compliance status are required"},400);const n=await e.env.DB.prepare(`
      SELECT * FROM worker_compliance_records WHERE id = ?
    `).bind(t).first();return n?(await e.env.DB.prepare(`
      UPDATE worker_compliance_records 
      SET verification_status = ?, compliance_status = ?, verified_by = ?, 
          verified_at = CURRENT_TIMESTAMP, notes = COALESCE(?, notes),
          updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(r,i,s.user_id,a,t).run()).success?(await e.env.DB.prepare(`
        INSERT INTO compliance_audit_log 
        (user_id, requirement_id, compliance_record_id, action_type, 
         old_status, new_status, performed_by, details)
        VALUES (?, ?, ?, 'verification', ?, ?, ?, ?)
      `).bind(n.user_id,n.requirement_id,t,n.compliance_status,i,s.user_id,`Verification: ${r}, Status: ${i}`).run(),await Og(e.env.DB,n.user_id),e.json({message:"Compliance verification updated successfully"})):e.json({error:"Failed to update verification"},500):e.json({error:"Compliance record not found"},404)}catch(t){return console.error("Error verifying compliance:",t),e.json({error:"Failed to verify compliance"},500)}});js.get("/admin/dashboard",yr,async e=>{try{if(e.get("user").role!=="admin")return e.json({error:"Admin access required"},403);const s=await e.env.DB.prepare(`
      SELECT 
        COUNT(DISTINCT wcs.user_id) as total_workers,
        COUNT(CASE WHEN wcs.overall_compliance_status = 'compliant' THEN 1 END) as compliant_workers,
        COUNT(CASE WHEN wcs.overall_compliance_status = 'non_compliant' THEN 1 END) as non_compliant_workers,
        COUNT(CASE WHEN wcs.overall_compliance_status = 'partial' THEN 1 END) as partial_compliant_workers,
        COUNT(CASE WHEN wcs.has_critical_missing = 1 THEN 1 END) as critical_missing_workers,
        COUNT(CASE WHEN wcs.has_expiring_soon = 1 THEN 1 END) as expiring_soon_workers,
        AVG(wcs.compliance_percentage) as avg_compliance_percentage
      FROM worker_compliance_summary wcs
      JOIN users u ON wcs.user_id = u.id
      WHERE u.role = 'worker' AND u.is_active = 1
    `).first(),r=await e.env.DB.prepare(`
      SELECT 
        cal.*, u.first_name, u.last_name, u.email,
        cr.requirement_name, cr.trade_type
      FROM compliance_audit_log cal
      JOIN users u ON cal.user_id = u.id
      LEFT JOIN compliance_requirements cr ON cal.requirement_id = cr.id
      ORDER BY cal.performed_at DESC
      LIMIT 20
    `).all(),i=await e.env.DB.prepare(`
      SELECT 
        u.id, u.first_name, u.last_name, u.email, u.province,
        wcs.overall_compliance_status, wcs.compliance_percentage,
        wcs.has_critical_missing, wcs.next_expiry_date
      FROM worker_compliance_summary wcs
      JOIN users u ON wcs.user_id = u.id
      WHERE u.role = 'worker' AND u.is_active = 1 
        AND (wcs.has_critical_missing = 1 OR wcs.has_expiring_soon = 1)
      ORDER BY wcs.has_critical_missing DESC, wcs.next_expiry_date ASC
      LIMIT 50
    `).all(),a=await e.env.DB.prepare(`
      SELECT 
        wcs.province,
        COUNT(*) as total_workers,
        AVG(wcs.compliance_percentage) as avg_compliance,
        COUNT(CASE WHEN wcs.overall_compliance_status = 'compliant' THEN 1 END) as compliant_count
      FROM worker_compliance_summary wcs
      JOIN users u ON wcs.user_id = u.id
      WHERE u.role = 'worker' AND u.is_active = 1
      GROUP BY wcs.province
      ORDER BY avg_compliance DESC
    `).all();return e.json({statistics:s||{},recent_activities:r.results||[],critical_issues:i.results||[],province_stats:a.results||[]})}catch(t){return console.error("Error fetching compliance dashboard:",t),e.json({error:"Failed to fetch compliance dashboard"},500)}});async function Og(e,t){var s;try{const r=await e.prepare(`
      SELECT province, primary_trade FROM users 
      LEFT JOIN user_profiles ON users.id = user_profiles.user_id
      WHERE users.id = ?
    `).bind(t).first();if(!r)return;const i=r.province||"ON",a=r.primary_trade||"General Services",o=((s=(await e.prepare(`
      SELECT id FROM compliance_requirements
      WHERE province = ? AND trade_type = ? AND is_active = 1
    `).bind(i,a).all()).results)==null?void 0:s.length)||0,d=(await e.prepare(`
      SELECT compliance_status, expiry_date, risk_level
      FROM worker_compliance_records wcr
      JOIN compliance_requirements cr ON wcr.requirement_id = cr.id
      WHERE wcr.user_id = ? AND cr.province = ? AND cr.trade_type = ?
    `).bind(t,i,a).all()).results||[],c=d.filter(x=>x.compliance_status==="compliant").length,u=d.filter(x=>x.compliance_status==="pending").length,p=d.filter(x=>x.compliance_status==="expired").length,m=o>0?c/o*100:0;let b="non_compliant";m>=100?b="compliant":m>=50&&(b="partial");const v=d.some(x=>x.risk_level==="high"&&x.compliance_status!=="compliant"),f=d.filter(x=>x.expiry_date&&x.compliance_status==="compliant"),h=f.length>0?f.sort((x,S)=>new Date(x.expiry_date).getTime()-new Date(S.expiry_date).getTime())[0].expiry_date:null,y=new Date;y.setDate(y.getDate()+30);const w=f.some(x=>new Date(x.expiry_date)<=y);await e.prepare(`
      INSERT OR REPLACE INTO worker_compliance_summary 
      (user_id, province, primary_trade, overall_compliance_status, compliance_percentage,
       overall_risk_level, total_requirements, compliant_requirements, pending_requirements,
       expired_requirements, last_compliance_check, next_expiry_date, has_critical_missing,
       has_expiring_soon, updated_at)
      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, CURRENT_TIMESTAMP, ?, ?, ?, CURRENT_TIMESTAMP)
    `).bind(t,i,a,b,m,v?"high":"medium",o,c,u,p,h,v?1:0,w?1:0).run()}catch(r){console.error("Error updating compliance summary:",r)}}const et=new ce,Ft=async(e,t)=>{e.req.path;let s=null;const r=e.req.header("Cookie");if(r){const i=r.match(/session=([^;]+)/);if(i&&(s=i[1]),!s){const a=r.match(/demo_session=([^;]+)/);if(a){const n=a[1],[o,l]=n.split(":"),d=Math.random().toString(36).substring(2,15);s=btoa(`demo-${o}:${l}:${d}`)}}}if(!s){const i=e.req.header("Authorization");i&&i.startsWith("Bearer ")&&(s=i.replace("Bearer ",""))}if(s||(s=e.req.query("token")),!s)return e.json({error:"Authentication required",expired:!0},401);try{const i=await e.env.DB.prepare(`
      SELECT s.user_id, u.role, u.first_name, u.last_name, u.email, u.is_verified
      FROM user_sessions s
      JOIN users u ON s.user_id = u.id
      WHERE s.session_token = ? AND u.is_active = 1
    `).bind(s).first();if(!i)return e.json({error:"Invalid or expired session",expired:!0},401);e.set("user",i),await t()}catch(i){return console.error("Auth middleware error:",i),e.json({error:"Authentication failed"},500)}},un=async(e,t)=>{if(e.get("user").role!=="admin")return e.json({error:"Admin access required"},403);await t()};et.get("/plans",async e=>{var t;try{const s=await e.env.DB.prepare(`
      SELECT 
        sp.*,
        (SELECT COUNT(*) FROM worker_subscriptions ws WHERE ws.plan_id = sp.id AND ws.subscription_status = 'active') as active_subscribers
      FROM subscription_plans sp
      WHERE sp.is_active = 1
      ORDER BY sp.display_order, sp.monthly_price
    `).all();return e.json({plans:s.results||[],total:((t=s.results)==null?void 0:t.length)||0})}catch(s){return console.error("Error fetching subscription plans:",s),e.json({error:"Failed to fetch subscription plans"},500)}});et.get("/plans/:planId/features",async e=>{var t;try{const s=e.req.param("planId"),r=await e.env.DB.prepare(`
      SELECT spf.*, sp.plan_name
      FROM subscription_plan_features spf
      JOIN subscription_plans sp ON spf.plan_id = sp.id
      WHERE spf.plan_id = ? AND spf.is_active = 1
      ORDER BY spf.display_order
    `).bind(s).all();return e.json({features:r.results||[],total:((t=r.results)==null?void 0:t.length)||0})}catch(s){return console.error("Error fetching plan features:",s),e.json({error:"Failed to fetch plan features"},500)}});et.get("/current",Ft,async e=>{try{const t=e.get("user");if(t.role!=="worker")return e.json({error:"Only workers can have subscriptions"},403);const s=await e.env.DB.prepare(`
      SELECT 
        ws.*,
        sp.plan_name,
        sp.plan_slug,
        sp.description as plan_description,
        sp.monthly_price as current_plan_monthly_price,
        sp.annual_price as current_plan_annual_price
      FROM worker_subscriptions ws
      JOIN subscription_plans sp ON ws.plan_id = sp.id
      WHERE ws.user_id = ? AND ws.subscription_status IN ('active', 'cancelled')
      ORDER BY ws.created_at DESC
      LIMIT 1
    `).bind(t.user_id).first();if(!s)return e.json({error:"No subscription found"},404);const r=await e.env.DB.prepare(`
      SELECT feature_key, feature_name, feature_value, feature_type
      FROM subscription_plan_features
      WHERE plan_id = ? AND is_active = 1
      ORDER BY display_order
    `).bind(s.plan_id).all();return e.json({subscription:s,features:r.results||[]})}catch(t){return console.error("Error fetching current subscription:",t),e.json({error:"Failed to fetch subscription"},500)}});et.post("/subscribe",Ft,async e=>{try{const t=e.get("user"),{plan_id:s,billing_cycle:r="monthly"}=await e.req.json();if(t.role!=="worker")return e.json({error:"Only workers can subscribe to plans"},403);const i=await e.env.DB.prepare(`
      SELECT * FROM subscription_plans WHERE id = ? AND is_active = 1
    `).bind(s).first();if(!i)return e.json({error:"Invalid or inactive plan"},400);const a=await e.env.DB.prepare(`
      SELECT * FROM worker_subscriptions 
      WHERE user_id = ? AND subscription_status = 'active'
    `).bind(t.user_id).first(),n=new Date().toISOString(),o=new Date(Date.now()+720*60*60*1e3).toISOString();return a?await e.env.DB.prepare(`
        UPDATE worker_subscriptions
        SET 
          plan_id = ?,
          billing_cycle = ?,
          current_monthly_price = ?,
          current_annual_price = ?,
          current_period_start = ?,
          current_period_end = ?,
          updated_at = ?
        WHERE id = ?
      `).bind(s,r,i.monthly_price,i.annual_price,n,o,n,a.id).run():await e.env.DB.prepare(`
        INSERT INTO worker_subscriptions (
          user_id, plan_id, subscription_status, billing_cycle,
          current_monthly_price, current_annual_price,
          subscription_start_date, current_period_start, current_period_end,
          cancel_at_period_end, grandfathered_pricing, created_at, updated_at
        ) VALUES (?, ?, 'active', ?, ?, ?, ?, ?, ?, 0, 0, ?, ?)
      `).bind(t.user_id,s,r,i.monthly_price,i.annual_price,n,n,o,n,n).run(),await e.env.DB.prepare(`
      INSERT INTO subscription_history (
        user_id, old_plan_id, new_plan_id, change_type,
        old_monthly_price, new_monthly_price, effective_date, created_at
      ) VALUES (?, ?, ?, 'new', 0, ?, ?, ?)
    `).bind(t.user_id,null,s,i.monthly_price,n,n).run(),e.json({success:!0,message:"Subscription activated successfully",plan_name:i.plan_name,monthly_price:i.monthly_price})}catch(t){return console.error("Subscription error:",t),e.json({error:"Failed to activate subscription"},500)}});et.post("/subscribe/:planId",Ft,async e=>{try{const t=e.get("user"),s=parseInt(e.req.param("planId")),{billing_cycle:r="monthly",payment_method:i=null}=await e.req.json();if(t.role!=="worker")return e.json({error:"Only workers can subscribe to plans"},403);const a=await e.env.DB.prepare(`
      SELECT * FROM subscription_plans WHERE id = ? AND is_active = 1
    `).bind(s).first();if(!a)return e.json({error:"Invalid or inactive plan"},400);const n=await e.env.DB.prepare(`
      SELECT * FROM worker_subscriptions 
      WHERE user_id = ? AND subscription_status IN ('active', 'cancelled')
      ORDER BY created_at DESC
      LIMIT 1
    `).bind(t.user_id).first(),o=new Date().toISOString(),l=new Date(Date.now()+720*60*60*1e3).toISOString();return n?(await e.env.DB.prepare(`
        UPDATE worker_subscriptions
        SET 
          plan_id = ?,
          subscription_status = 'active',
          billing_cycle = ?,
          current_monthly_price = ?,
          current_annual_price = ?,
          current_period_start = ?,
          current_period_end = ?,
          cancel_at_period_end = 0,
          cancelled_at = NULL,
          payment_method = ?,
          updated_at = ?
        WHERE id = ?
      `).bind(s,r,a.monthly_price,a.annual_price,o,l,i,o,n.id).run(),await e.env.DB.prepare(`
        INSERT INTO subscription_history (
          user_id, old_plan_id, new_plan_id, old_monthly_price, new_monthly_price,
          change_type, effective_date
        ) VALUES (?, ?, ?, ?, ?, ?, ?)
      `).bind(t.user_id,n.plan_id,s,n.current_monthly_price,a.monthly_price,n.plan_id===s?"reactivated":a.monthly_price>n.current_monthly_price?"upgrade":"downgrade",o).run()):(await e.env.DB.prepare(`
        INSERT INTO worker_subscriptions (
          user_id, plan_id, subscription_status, billing_cycle,
          current_monthly_price, current_annual_price, current_period_start,
          current_period_end, payment_method
        ) VALUES (?, ?, 'active', ?, ?, ?, ?, ?, ?)
      `).bind(t.user_id,s,r,a.monthly_price,a.annual_price,o,l,i).run(),await e.env.DB.prepare(`
        INSERT INTO subscription_history (
          user_id, new_plan_id, new_monthly_price, change_type, effective_date
        ) VALUES (?, ?, ?, 'new', ?)
      `).bind(t.user_id,s,a.monthly_price,o).run()),e.json({success:!0,message:`Successfully subscribed to ${a.plan_name}`,plan_name:a.plan_name,monthly_price:a.monthly_price,billing_cycle:r})}catch(t){return console.error("Error processing subscription:",t),e.json({error:"Failed to process subscription"},500)}});et.post("/cancel",Ft,async e=>{try{const t=e.get("user"),{cancel_immediately:s=!1,cancellation_reason:r=""}=await e.req.json();if(t.role!=="worker")return e.json({error:"Only workers can cancel subscriptions"},403);const i=await e.env.DB.prepare(`
      SELECT * FROM worker_subscriptions 
      WHERE user_id = ? AND subscription_status = 'active'
      ORDER BY created_at DESC
      LIMIT 1
    `).bind(t.user_id).first();if(!i)return e.json({error:"No active subscription found"},404);const a=new Date().toISOString();return s?await e.env.DB.prepare(`
        UPDATE worker_subscriptions
        SET 
          plan_id = 1,
          subscription_status = 'active',
          current_monthly_price = 0,
          current_annual_price = 0,
          cancelled_at = ?,
          updated_at = ?
        WHERE id = ?
      `).bind(a,a,i.id).run():await e.env.DB.prepare(`
        UPDATE worker_subscriptions
        SET 
          cancel_at_period_end = 1,
          cancelled_at = ?,
          updated_at = ?
        WHERE id = ?
      `).bind(a,a,i.id).run(),await e.env.DB.prepare(`
      INSERT INTO subscription_history (
        user_id, old_plan_id, new_plan_id, old_monthly_price, new_monthly_price,
        change_type, change_reason, effective_date
      ) VALUES (?, ?, ?, ?, ?, 'cancelled', ?, ?)
    `).bind(t.user_id,i.plan_id,s?1:i.plan_id,i.current_monthly_price,s?0:i.current_monthly_price,r,a).run(),e.json({success:!0,message:s?"Subscription cancelled immediately and downgraded to Pay-as-you-go":"Subscription will be cancelled at the end of the current billing period",cancel_immediately:s})}catch(t){return console.error("Error cancelling subscription:",t),e.json({error:"Failed to cancel subscription"},500)}});et.get("/usage",Ft,async e=>{var t;try{const s=e.get("user"),{months:r=6}=e.req.query();if(s.role!=="worker")return e.json({error:"Only workers can access usage analytics"},403);const i=await e.env.DB.prepare(`
      SELECT 
        usage_month,
        leads_generated,
        jobs_completed,
        categories_used,
        search_impressions,
        profile_views,
        messages_sent,
        booking_requests,
        revenue_generated,
        platform_fees_paid,
        sp.plan_name
      FROM subscription_usage_analytics sua
      JOIN subscription_plans sp ON sua.plan_id = sp.id
      WHERE sua.user_id = ?
      ORDER BY sua.usage_month DESC
      LIMIT ?
    `).bind(s.user_id,parseInt(r)).all();return e.json({usage:i.results||[],total_months:((t=i.results)==null?void 0:t.length)||0})}catch(s){return console.error("Error fetching usage analytics:",s),e.json({error:"Failed to fetch usage analytics"},500)}});et.get("/admin/subscriptions",Ft,un,async e=>{try{const{page:t="1",limit:s="20",plan_id:r,status:i,search:a}=e.req.query(),n=(parseInt(t)-1)*parseInt(s);let o=["1 = 1"],l=[];r&&(o.push("ws.plan_id = ?"),l.push(parseInt(r))),i&&(o.push("ws.subscription_status = ?"),l.push(i)),a&&(o.push("(u.first_name LIKE ? OR u.last_name LIKE ? OR u.email LIKE ?)"),l.push(`%${a}%`,`%${a}%`,`%${a}%`));const d=await e.env.DB.prepare(`
      SELECT 
        ws.*,
        sp.plan_name,
        sp.plan_slug,
        u.first_name,
        u.last_name,
        u.email,
        u.province,
        u.city
      FROM worker_subscriptions ws
      JOIN subscription_plans sp ON ws.plan_id = sp.id
      JOIN users u ON ws.user_id = u.id
      WHERE ${o.join(" AND ")}
      ORDER BY ws.created_at DESC
      LIMIT ? OFFSET ?
    `).bind(...l,parseInt(s),n).all(),c=await e.env.DB.prepare(`
      SELECT COUNT(*) as total
      FROM worker_subscriptions ws
      JOIN users u ON ws.user_id = u.id
      WHERE ${o.join(" AND ")}
    `).bind(...l).first();return e.json({subscriptions:d.results||[],pagination:{page:parseInt(t),limit:parseInt(s),total:(c==null?void 0:c.total)||0,pages:Math.ceil(((c==null?void 0:c.total)||0)/parseInt(s))}})}catch(t){return console.error("Error fetching admin subscriptions:",t),e.json({error:"Failed to fetch subscriptions"},500)}});et.post("/admin/plans/:planId/pricing",Ft,un,async e=>{try{const t=e.get("user"),s=parseInt(e.req.param("planId")),{monthly_price:r,annual_price:i,grandfather_existing:a=!0,change_notes:n=""}=await e.req.json(),o=await e.env.DB.prepare(`
      SELECT * FROM subscription_plans WHERE id = ?
    `).bind(s).first();if(!o)return e.json({error:"Plan not found"},404);const l=new Date().toISOString();return await e.env.DB.prepare(`
      INSERT INTO subscription_price_history (
        plan_id, old_monthly_price, new_monthly_price, old_annual_price, new_annual_price,
        change_effective_date, grandfather_existing_users, admin_user_id, change_notes
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(s,o.monthly_price,r,o.annual_price,i,l,a?1:0,t.user_id,n).run(),await e.env.DB.prepare(`
      UPDATE subscription_plans
      SET monthly_price = ?, annual_price = ?, updated_at = ?
      WHERE id = ?
    `).bind(r,i||null,l,s).run(),a?await e.env.DB.prepare(`
        UPDATE worker_subscriptions
        SET grandfathered_pricing = 1, updated_at = ?
        WHERE plan_id = ? AND subscription_status = 'active'
      `).bind(l,s).run():await e.env.DB.prepare(`
        UPDATE worker_subscriptions
        SET 
          current_monthly_price = ?,
          current_annual_price = ?,
          grandfathered_pricing = 0,
          updated_at = ?
        WHERE plan_id = ? AND subscription_status = 'active'
      `).bind(r,i||null,l,s).run(),e.json({success:!0,message:`Plan pricing updated successfully. ${a?"Existing subscribers have been grandfathered.":"All subscribers updated to new pricing."}`,old_monthly_price:o.monthly_price,new_monthly_price:r,grandfathered:a})}catch(t){return console.error("Error updating plan pricing:",t),e.json({error:"Failed to update plan pricing"},500)}});et.get("/admin/analytics",Ft,un,async e=>{try{const t=await e.env.DB.prepare(`
      SELECT 
        sp.plan_name,
        sp.monthly_price,
        COUNT(ws.id) as subscriber_count,
        SUM(ws.current_monthly_price) as monthly_revenue
      FROM subscription_plans sp
      LEFT JOIN worker_subscriptions ws ON sp.id = ws.plan_id AND ws.subscription_status = 'active'
      GROUP BY sp.id, sp.plan_name, sp.monthly_price
      ORDER BY sp.display_order
    `).all(),s=await e.env.DB.prepare(`
      SELECT 
        DATE(created_at, 'start of month') as month,
        COUNT(*) as new_subscriptions,
        SUM(current_monthly_price) as monthly_revenue
      FROM worker_subscriptions
      WHERE created_at >= date('now', '-12 months')
      GROUP BY DATE(created_at, 'start of month')
      ORDER BY month DESC
    `).all(),r=await e.env.DB.prepare(`
      SELECT 
        COUNT(CASE WHEN subscription_status = 'cancelled' THEN 1 END) as cancelled_count,
        COUNT(CASE WHEN subscription_status = 'active' THEN 1 END) as active_count,
        COUNT(CASE WHEN cancel_at_period_end = 1 THEN 1 END) as scheduled_cancellations,
        COUNT(CASE WHEN grandfathered_pricing = 1 THEN 1 END) as grandfathered_count
      FROM worker_subscriptions
    `).first(),i=await e.env.DB.prepare(`
      SELECT 
        SUM(current_monthly_price) as total_monthly_revenue,
        AVG(current_monthly_price) as average_monthly_price,
        COUNT(*) as total_active_subscriptions
      FROM worker_subscriptions
      WHERE subscription_status = 'active'
    `).first();return e.json({plan_distribution:t.results||[],monthly_trends:s.results||[],churn_analytics:r||{},revenue_analytics:i||{},generated_at:new Date().toISOString()})}catch(t){return console.error("Error fetching subscription analytics:",t),e.json({error:"Failed to fetch subscription analytics"},500)}});const Bd=new ce;Bd.get("/pricing",async e=>{try{const t=await e.env.DB.prepare(`
      SELECT * FROM subscription_plans 
      WHERE is_active = 1 
      ORDER BY display_order, monthly_price
    `).all(),s=new Map;for(const r of t.results||[]){const i=await e.env.DB.prepare(`
        SELECT feature_key, feature_name, feature_value, feature_type
        FROM subscription_plan_features
        WHERE plan_id = ? AND is_active = 1
        ORDER BY display_order
      `).bind(r.id).all();s.set(r.id,i.results||[])}return e.html(`
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Subscription Plans - Kwikr Directory</title>
          <script src="https://cdn.tailwindcss.com"><\/script>
          <script>
            tailwind.config = {
              theme: {
                extend: {
                  colors: {
                    'kwikr-green': '#00C881',
                    'kwikr-dark': '#1a1a1a',
                    'kwikr-gray': '#f8f9fa'
                  }
                }
              }
            }
          <\/script>
          <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
      </head>
      <body class="bg-gray-50">
          <!-- Navigation -->
          <nav class="bg-white shadow-sm border-b border-gray-200">
              <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                  <div class="flex justify-between items-center h-16">
                      <div class="flex items-center">
                          <a href="/" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                              <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                          </a>
                      </div>
                      <div class="flex items-center space-x-4">
                          <a href="/" class="text-gray-700 hover:text-kwikr-green">Home</a>
                          <button onclick="showLoginModal()" class="text-gray-700 hover:text-kwikr-green">
                              Sign In
                          </button>
                          <button onclick="showSignupModal()" class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">
                              Get Started
                          </button>
                      </div>
                  </div>
              </div>
          </nav>

          <!-- Subscription Plans Section -->
          <div class="py-16 bg-gradient-to-br from-kwikr-green to-green-600 text-white">
              <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                  <div class="text-center mb-12">
                      <div class="inline-flex items-center px-4 py-2 bg-white bg-opacity-20 rounded-full text-sm font-medium mb-4">
                          <i class="fas fa-star mr-2"></i>Choose Your Plan
                      </div>
                      <h1 class="text-3xl md:text-4xl font-bold mb-4">Subscription Plans for Workers</h1>
                      <p class="text-lg md:text-xl text-green-100 mb-8">Get more leads, grow your business, and dominate your local market</p>
                      
                      <!-- Billing Toggle -->
                      <div class="flex justify-center items-center space-x-4 mb-8">
                          <span class="text-green-100">Monthly</span>
                          <button id="billingToggle" onclick="toggleBilling()" class="relative inline-flex h-6 w-11 items-center rounded-full bg-green-700 transition-colors focus:outline-none">
                              <span id="billingSlider" class="inline-block h-4 w-4 transform rounded-full bg-white transition-transform translate-x-1"></span>
                          </button>
                          <span class="text-green-100">Annual <span class="text-yellow-300 font-medium">(Save 10%)</span></span>
                      </div>
                  </div>
                  
                  <div class="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto">
                      <!-- Pay-as-you-go Plan -->
                      <div class="bg-white text-gray-900 p-8 rounded-2xl shadow-xl border-2 border-transparent relative">
                          <div class="text-center">
                              <div class="text-kwikr-green text-4xl mb-4">
                                  <i class="fas fa-rocket"></i>
                              </div>
                              <h3 class="text-2xl font-bold mb-2">Pay-as-you-go</h3>
                              <p class="text-gray-600 mb-6">Perfect for new contractors testing the platform</p>
                              <div class="mb-6">
                                  <span class="text-4xl font-bold text-kwikr-green">$0</span>
                                  <span class="text-gray-600">/month</span>
                              </div>
                              <div class="mb-6">
                                  <span class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium">939 Active Workers</span>
                              </div>
                          </div>
                          
                          <!-- Features -->
                          <div class="space-y-3 mb-8">
                              <div class="flex items-center">
                                  <i class="fas fa-check text-kwikr-green mr-3"></i>
                                  <span class="text-sm">$2.00 fee per completed booking</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-kwikr-green mr-3"></i>
                                  <span class="text-sm">Keep 90% of revenue</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-kwikr-green mr-3"></i>
                                  <span class="text-sm">Listed in 1 category</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-kwikr-green mr-3"></i>
                                  <span class="text-sm">Access to booking tools</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-kwikr-green mr-3"></i>
                                  <span class="text-sm">Lead inbox access</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-kwikr-green mr-3"></i>
                                  <span class="text-sm">Basic dashboard access</span>
                              </div>
                          </div>
                          
                          <a href="/signup/worker?plan=payasyougo" class="w-full bg-kwikr-green text-white px-6 py-3 rounded-lg font-medium hover:bg-green-600 transition-colors block text-center">
                              <i class="fas fa-arrow-right mr-2"></i>Start Free
                          </a>
                      </div>
                      
                      <!-- Growth Plan -->
                      <div class="bg-white text-gray-900 p-8 rounded-2xl shadow-xl border-2 border-blue-500 relative transform scale-105">
                          <div class="absolute -top-4 left-1/2 transform -translate-x-1/2">
                              <span class="bg-blue-500 text-white px-4 py-1 rounded-full text-sm font-medium">Most Popular</span>
                          </div>
                          <div class="text-center">
                              <div class="text-blue-500 text-4xl mb-4">
                                  <i class="fas fa-chart-line"></i>
                              </div>
                              <h3 class="text-2xl font-bold mb-2">Growth Plan</h3>
                              <p class="text-gray-600 mb-6">Ready to grow and lower cost per job</p>
                              <div class="mb-6">
                                  <span class="text-4xl font-bold text-blue-500 monthly-price">$99</span>
                                  <span class="text-4xl font-bold text-blue-500 annual-price hidden">$90</span>
                                  <span class="text-gray-600">/month</span>
                              </div>
                              <div class="mb-6">
                                  <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">1 Active Worker</span>
                              </div>
                          </div>
                          
                          <!-- Features -->
                          <div class="space-y-3 mb-8">
                              <div class="flex items-center">
                                  <i class="fas fa-check text-blue-500 mr-3"></i>
                                  <span class="text-sm">No per-booking fees</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-blue-500 mr-3"></i>
                                  <span class="text-sm">Keep 100% of revenue</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-blue-500 mr-3"></i>
                                  <span class="text-sm">Listed in 3 categories</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-blue-500 mr-3"></i>
                                  <span class="text-sm">Priority search placement (Tier 2)</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-blue-500 mr-3"></i>
                                  <span class="text-sm">Advanced booking tools</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-blue-500 mr-3"></i>
                                  <span class="text-sm">Enhanced dashboard</span>
                              </div>
                          </div>
                          
                          <a href="/signup/worker?plan=growth" class="w-full bg-blue-500 text-white px-6 py-3 rounded-lg font-medium hover:bg-blue-600 transition-colors block text-center">
                              <i class="fas fa-crown mr-2"></i>Choose Growth
                          </a>
                      </div>
                      
                      <!-- Pro Plan -->
                      <div class="bg-white text-gray-900 p-8 rounded-2xl shadow-xl border-2 border-transparent relative">
                          <div class="text-center">
                              <div class="text-purple-500 text-4xl mb-4">
                                  <i class="fas fa-trophy"></i>
                              </div>
                              <h3 class="text-2xl font-bold mb-2">Pro Plan</h3>
                              <p class="text-gray-600 mb-6">Dominate local visibility and automate growth</p>
                              <div class="mb-6">
                                  <span class="text-4xl font-bold text-purple-500 monthly-price">$199</span>
                                  <span class="text-4xl font-bold text-purple-500 annual-price hidden">$179</span>
                                  <span class="text-gray-600">/month</span>
                              </div>
                              <div class="mb-6">
                                  <span class="bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm font-medium">0 Active Workers</span>
                              </div>
                          </div>
                          
                          <!-- Features -->
                          <div class="space-y-3 mb-8">
                              <div class="flex items-center">
                                  <i class="fas fa-check text-purple-500 mr-3"></i>
                                  <span class="text-sm">No per-booking fees</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-purple-500 mr-3"></i>
                                  <span class="text-sm">Keep 100% of revenue</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-purple-500 mr-3"></i>
                                  <span class="text-sm">Listed in unlimited categories</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-purple-500 mr-3"></i>
                                  <span class="text-sm">Top search placement (Tier 1)</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-purple-500 mr-3"></i>
                                  <span class="text-sm">Premium booking tools</span>
                              </div>
                              <div class="flex items-center">
                                  <i class="fas fa-check text-purple-500 mr-3"></i>
                                  <span class="text-sm">Advanced analytics dashboard</span>
                              </div>
                          </div>
                          
                          <a href="/signup/worker?plan=pro" class="w-full bg-purple-500 text-white px-6 py-3 rounded-lg font-medium hover:bg-purple-600 transition-colors block text-center">
                              <i class="fas fa-rocket mr-2"></i>Go Pro
                          </a>
                      </div>
                  </div>
                  
                  <!-- Demo Access Info -->
                  <div class="mt-12 bg-white bg-opacity-10 p-6 rounded-lg backdrop-blur-sm max-w-4xl mx-auto">
                      <h4 class="text-lg font-semibold text-white mb-4 text-center">
                          <i class="fas fa-eye text-yellow-300 mr-2"></i>Want to See the Platform First?
                      </h4>
                      <div class="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
                          <a href="/dashboard/client" class="block bg-white bg-opacity-20 p-4 rounded-lg hover:bg-opacity-30 transition-all">
                              <i class="fas fa-user text-yellow-300 text-2xl mb-2 block"></i>
                              <div class="font-medium text-white">Client Dashboard</div>
                              <div class="text-green-100 text-sm">Post jobs & manage projects</div>
                          </a>
                          <a href="/dashboard/worker" class="block bg-white bg-opacity-20 p-4 rounded-lg hover:bg-opacity-30 transition-all">
                              <i class="fas fa-tools text-yellow-300 text-2xl mb-2 block"></i>
                              <div class="font-medium text-white">Worker Dashboard</div>
                              <div class="text-green-100 text-sm">Browse jobs & track earnings</div>
                          </a>
                          <a href="/api/admin/subscriptions" class="block bg-white bg-opacity-20 p-4 rounded-lg hover:bg-opacity-30 transition-all">
                              <i class="fas fa-cog text-yellow-300 text-2xl mb-2 block"></i>
                              <div class="font-medium text-white">Admin Dashboard</div>
                              <div class="text-green-100 text-sm">Manage users & view analytics</div>
                          </a>
                      </div>
                  </div>
              </div>
          </div>

          <!-- FAQ Section -->
          <div class="bg-gray-50 py-16">
              <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
                  <div class="text-center mb-12">
                      <h2 class="text-3xl font-bold text-gray-900 mb-4">
                          Frequently Asked Questions
                      </h2>
                  </div>

                  <div class="space-y-6">
                      <div class="bg-white rounded-lg shadow-sm p-6">
                          <h3 class="text-lg font-semibold text-gray-900 mb-2">
                              Can I change plans at any time?
                          </h3>
                          <p class="text-gray-600">
                              Yes! You can upgrade or downgrade your plan at any time. Changes take effect immediately, and we'll prorate any charges.
                          </p>
                      </div>

                      <div class="bg-white rounded-lg shadow-sm p-6">
                          <h3 class="text-lg font-semibold text-gray-900 mb-2">
                              What happens if I cancel my subscription?
                          </h3>
                          <p class="text-gray-600">
                              You can cancel anytime and continue using your current plan until the end of your billing period. After that, you'll be moved to the Pay-as-you-go plan.
                          </p>
                      </div>

                      <div class="bg-white rounded-lg shadow-sm p-6">
                          <h3 class="text-lg font-semibold text-gray-900 mb-2">
                              Do you offer annual discounts?
                          </h3>
                          <p class="text-gray-600">
                              Yes! Save 10% when you choose annual billing. You can switch between monthly and annual billing at any time.
                          </p>
                      </div>
                  </div>
              </div>
          </div>

          <script>
              let isAnnual = false;

              function toggleBilling() {
                  isAnnual = !isAnnual;
                  const slider = document.getElementById('billingSlider');
                  
                  if (isAnnual) {
                      slider.classList.add('translate-x-6');
                      slider.classList.remove('translate-x-1');
                  } else {
                      slider.classList.add('translate-x-1');
                      slider.classList.remove('translate-x-6');
                  }

                  // Toggle price displays
                  const monthlyPrices = document.querySelectorAll('.monthly-price');
                  const annualPrices = document.querySelectorAll('.annual-price');
                  
                  monthlyPrices.forEach(price => {
                      if (isAnnual) {
                          price.classList.add('hidden');
                      } else {
                          price.classList.remove('hidden');
                      }
                  });
                  
                  annualPrices.forEach(price => {
                      if (isAnnual) {
                          price.classList.remove('hidden');
                      } else {
                          price.classList.add('hidden');
                      }
                  });
              }

              function showLoginModal() {
                  alert('Login modal coming soon!');
              }

              function showSignupModal() {
                  alert('Signup modal coming soon!');
              }
          <\/script>
      </body>
      </html>
    `)}catch(t){return console.error("Error loading subscription pricing:",t),e.html(`
      <div class="flex items-center justify-center min-h-screen">
          <div class="text-center">
              <h1 class="text-2xl font-bold text-red-600 mb-4">Error Loading Pricing</h1>
              <p class="text-gray-600">Please try again later</p>
              <a href="/" class="bg-blue-500 text-white px-4 py-2 rounded mt-4 inline-block">Back to Home</a>
          </div>
      </div>
    `)}});const mi=new ce;mi.get("/client",async e=>e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Sign Up as Client - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gray-50 min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="/" class="text-gray-700 hover:text-kwikr-green">Home</a>
                        <a href="/auth/login" class="text-gray-700 hover:text-kwikr-green">Sign In</a>
                    </div>
                </div>
            </div>
        </nav>

        <div class="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
            <div class="max-w-md w-full space-y-8">
                <div>
                    <div class="text-center">
                        <div class="mx-auto h-16 w-16 bg-blue-100 rounded-full flex items-center justify-center mb-6">
                            <i class="fas fa-user text-2xl text-blue-600"></i>
                        </div>
                        <h2 class="text-3xl font-bold text-gray-900">Sign up as Client</h2>
                        <p class="mt-2 text-gray-600">Create your account to hire trusted service providers</p>
                    </div>
                </div>
                
                <form id="clientSignupForm" class="mt-8 space-y-6">
                    <input type="hidden" id="userRole" value="client">
                    
                    <!-- Personal Information -->
                    <div class="space-y-4">
                        <div class="grid grid-cols-2 gap-4">
                            <div>
                                <label for="firstName" class="block text-sm font-medium text-gray-700">First Name</label>
                                <input id="firstName" name="firstName" type="text" required 
                                       class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                            </div>
                            <div>
                                <label for="lastName" class="block text-sm font-medium text-gray-700">Last Name</label>
                                <input id="lastName" name="lastName" type="text" required 
                                       class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                            </div>
                        </div>
                        
                        <div>
                            <label for="signupEmail" class="block text-sm font-medium text-gray-700">Email Address</label>
                            <input id="signupEmail" name="email" type="email" required 
                                   class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                        </div>
                        
                        <div>
                            <label for="signupPassword" class="block text-sm font-medium text-gray-700">Password</label>
                            <input id="signupPassword" name="password" type="password" required 
                                   class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                            <p class="mt-1 text-xs text-gray-500">Must be at least 8 characters long</p>
                        </div>
                        
                        <!-- Location Information -->
                        <div class="grid grid-cols-2 gap-4">
                            <div>
                                <label for="province" class="block text-sm font-medium text-gray-700">Province</label>
                                <select id="province" name="province" required 
                                        class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                    <option value="">Select Province</option>
                                    <option value="ON">Ontario</option>
                                    <option value="BC">British Columbia</option>
                                    <option value="AB">Alberta</option>
                                    <option value="MB">Manitoba</option>
                                    <option value="SK">Saskatchewan</option>
                                    <option value="QC">Quebec</option>
                                    <option value="NB">New Brunswick</option>
                                    <option value="NS">Nova Scotia</option>
                                    <option value="PE">Prince Edward Island</option>
                                    <option value="NL">Newfoundland and Labrador</option>
                                    <option value="NT">Northwest Territories</option>
                                    <option value="NU">Nunavut</option>
                                    <option value="YT">Yukon</option>
                                </select>
                            </div>
                            <div>
                                <label for="city" class="block text-sm font-medium text-gray-700">City</label>
                                <input id="city" name="city" type="text" required 
                                       class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                            </div>
                        </div>
                    </div>

                    <!-- Agreement Checkbox -->
                    <div class="flex items-center">
                        <input id="agreeTermsClient" name="agreeTerms" type="checkbox" required 
                               class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                        <label for="agreeTermsClient" class="ml-2 block text-sm text-gray-900">
                            I agree to the <button type="button" onclick="showTermsModal()" class="text-blue-600 hover:text-blue-700 underline">Terms of Service</button> and <button type="button" onclick="showPrivacyModal()" class="text-blue-600 hover:text-blue-700 underline">Privacy Policy</button>
                        </label>
                    </div>

                    <!-- Submit Button -->
                    <div>
                        <button type="submit" 
                                class="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                            <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                                <i class="fas fa-user-plus text-blue-500 group-hover:text-blue-400"></i>
                            </span>
                            Create Client Account
                        </button>
                    </div>
                </form>

                <div class="text-center">
                    <p class="text-sm text-gray-600">
                        Need to provide services instead? 
                        <a href="/signup/worker" class="font-medium text-kwikr-green hover:text-green-600">Sign up as Service Provider</a>
                    </p>
                    <p class="text-sm text-gray-600 mt-2">
                        Already have an account? 
                        <a href="/auth/login" class="font-medium text-kwikr-green hover:text-green-600">Sign in</a>
                    </p>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script>
            document.getElementById('clientSignupForm').addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const formData = {
                    first_name: document.getElementById('firstName').value.trim(),
                    last_name: document.getElementById('lastName').value.trim(),
                    email: document.getElementById('signupEmail').value.trim(),
                    password: document.getElementById('signupPassword').value,
                    role: 'client',
                    province: document.getElementById('province').value,
                    city: document.getElementById('city').value.trim()
                };
                
                // Validation
                if (!formData.first_name || !formData.last_name || !formData.email || 
                    !formData.password || !formData.province || !formData.city) {
                    if (!formData.first_name) showFieldError('firstName', 'First name is required');
                    if (!formData.last_name) showFieldError('lastName', 'Last name is required');
                    if (!formData.email) showFieldError('signupEmail', 'Email address is required');
                    if (!formData.password) showFieldError('signupPassword', 'Password is required');
                    if (!formData.province) showFieldError('province', 'Province is required');
                    if (!formData.city) showFieldError('city', 'City is required');
                    return;
                }
                
                if (formData.password.length < 8) {
                    showFieldError('signupPassword', 'Password must be at least 8 characters long');
                    return;
                }
                
                if (!document.getElementById('agreeTermsClient').checked) {
                    showFieldError('agreeTermsClient', 'Please agree to the Terms of Service and Privacy Policy');
                    return;
                }
                
                try {
                    const response = await fetch('/api/auth/register', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formData)
                    });
                    
                    const data = await response.json();
                    
                    if (response.ok) {
                        // Redirect directly to client dashboard after successful account creation
                        window.location.href = '/dashboard/client';
                    } else {
                        // Show error message inline instead of popup
                        console.error('Registration failed:', data.error);
                        // Could add inline error display here in future
                    }
                } catch (error) {
                    console.error('Signup error:', error);
                    // Show error message inline instead of popup
                    console.error('Registration failed - network or server error');
                    // Could add inline error display here in future
                }
            });
            
            // Field validation helper function
            function showFieldError(fieldId, message) {
                const field = document.getElementById(fieldId);
                if (!field) return;
                
                // Clear any existing error for this field
                const container = field.closest('div');
                if (container) {
                    const existingError = container.querySelector('.field-error');
                    if (existingError) {
                        existingError.remove();
                    }
                }
                
                // Add error styling to field
                field.classList.add('border-red-500', 'focus:border-red-500');
                field.classList.remove('border-gray-300', 'focus:border-kwikr-green');
                
                // Create and show error message
                const errorDiv = document.createElement('div');
                errorDiv.className = 'field-error text-red-500 text-sm mt-1';
                errorDiv.innerHTML = '<i class="fas fa-exclamation-circle mr-1"></i>' + message;
                
                if (container) {
                    container.appendChild(errorDiv);
                }
                
                // Scroll the field into view and focus
                field.scrollIntoView({ behavior: 'smooth', block: 'center' });
                field.focus();
            }
        <\/script>

        <!-- Terms of Service Modal -->
        <div id="termsModal" class="hidden fixed inset-0 z-50 overflow-y-auto bg-black bg-opacity-50 flex items-center justify-center p-4">
            <div class="bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-hidden shadow-xl">
                <div class="flex items-center justify-between p-6 border-b border-gray-200">
                    <h3 class="text-2xl font-bold text-gray-900">Terms of Service</h3>
                    <button type="button" onclick="closeModal('termsModal')" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
                <div class="p-6 overflow-y-auto max-h-[70vh]">
                    <div class="prose max-w-none">
                        <p class="text-sm text-gray-500 mb-6">Last Updated: September 5, 2025</p>
                        
                        <h4 class="text-lg font-semibold mb-3">1. Acceptance of Terms</h4>
                        <p class="mb-4">By accessing and using Kwikr Directory, you accept and agree to be bound by the terms and provision of this agreement.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">2. Service Description</h4>
                        <p class="mb-4">Kwikr Directory is a platform that connects clients with service providers across Canada. We facilitate connections but do not directly provide services.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">3. User Obligations</h4>
                        <ul class="list-disc pl-6 mb-4">
                            <li>Provide accurate and truthful information</li>
                            <li>Maintain the confidentiality of your account</li>
                            <li>Use the service in accordance with applicable laws</li>
                            <li>Respect other users and maintain professional conduct</li>
                        </ul>
                        
                        <h4 class="text-lg font-semibold mb-3">4. Service Provider Requirements</h4>
                        <ul class="list-disc pl-6 mb-4">
                            <li>Must have appropriate licenses and insurance</li>
                            <li>Must provide quality services as advertised</li>
                            <li>Must maintain professional standards</li>
                            <li>Must comply with subscription plan requirements</li>
                        </ul>
                        
                        <h4 class="text-lg font-semibold mb-3">5. Payment Terms</h4>
                        <p class="mb-4">Payment terms vary by subscription plan. Service fees and subscription costs are outlined in your chosen plan. All payments are processed securely through our payment partners.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">6. Limitation of Liability</h4>
                        <p class="mb-4">Kwikr Directory acts as a platform facilitator. We are not liable for the quality, safety, or legality of services provided by third-party service providers.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">7. Privacy</h4>
                        <p class="mb-4">Your privacy is important to us. Please review our Privacy Policy to understand how we collect, use, and protect your information.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">8. Termination</h4>
                        <p class="mb-4">We reserve the right to terminate accounts that violate these terms or engage in fraudulent activity.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">9. Changes to Terms</h4>
                        <p class="mb-4">We may update these terms from time to time. Users will be notified of significant changes via email or platform notification.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">10. Contact Information</h4>
                        <p>For questions about these Terms of Service, please contact us at legal@kwikr.ca or through our support system.</p>
                    </div>
                </div>
                <div class="flex justify-end p-6 border-t border-gray-200">
                    <button type="button" onclick="closeModal('termsModal')" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                        Close
                    </button>
                </div>
            </div>
        </div>

        <!-- Privacy Policy Modal -->
        <div id="privacyModal" class="hidden fixed inset-0 z-50 overflow-y-auto bg-black bg-opacity-50 flex items-center justify-center p-4">
            <div class="bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-hidden shadow-xl">
                <div class="flex items-center justify-between p-6 border-b border-gray-200">
                    <h3 class="text-2xl font-bold text-gray-900">Privacy Policy</h3>
                    <button type="button" onclick="closeModal('privacyModal')" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
                <div class="p-6 overflow-y-auto max-h-[70vh]">
                    <div class="prose max-w-none">
                        <p class="text-sm text-gray-500 mb-6">Last Updated: September 5, 2025</p>
                        
                        <h4 class="text-lg font-semibold mb-3">1. Information We Collect</h4>
                        <p class="mb-2"><strong>Personal Information:</strong></p>
                        <ul class="list-disc pl-6 mb-4">
                            <li>Name, email address, phone number</li>
                            <li>Business information (for service providers)</li>
                            <li>Location data (province, city)</li>
                            <li>Payment information (processed securely by third parties)</li>
                        </ul>
                        
                        <p class="mb-2"><strong>Usage Information:</strong></p>
                        <ul class="list-disc pl-6 mb-4">
                            <li>Platform usage analytics</li>
                            <li>Job posting and bidding activity</li>
                            <li>Communication between users</li>
                            <li>Device and browser information</li>
                        </ul>
                        
                        <h4 class="text-lg font-semibold mb-3">2. How We Use Your Information</h4>
                        <ul class="list-disc pl-6 mb-4">
                            <li>To facilitate connections between clients and service providers</li>
                            <li>To process payments and manage subscriptions</li>
                            <li>To improve our platform and user experience</li>
                            <li>To send important notifications and updates</li>
                            <li>To ensure platform security and prevent fraud</li>
                        </ul>
                        
                        <h4 class="text-lg font-semibold mb-3">3. Information Sharing</h4>
                        <p class="mb-4">We do not sell your personal information. We may share information in the following circumstances:</p>
                        <ul class="list-disc pl-6 mb-4">
                            <li>With other users as part of the platform functionality</li>
                            <li>With service providers (payment processors, analytics)</li>
                            <li>When required by law or to protect our rights</li>
                            <li>With your explicit consent</li>
                        </ul>
                        
                        <h4 class="text-lg font-semibold mb-3">4. Data Security</h4>
                        <p class="mb-4">We implement industry-standard security measures to protect your information, including encryption, secure servers, and regular security audits.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">5. Data Retention</h4>
                        <p class="mb-4">We retain your information as long as your account is active or as needed to provide services. You may request deletion of your account and associated data at any time.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">6. Your Rights</h4>
                        <ul class="list-disc pl-6 mb-4">
                            <li>Access your personal information</li>
                            <li>Correct inaccurate information</li>
                            <li>Request deletion of your data</li>
                            <li>Opt-out of non-essential communications</li>
                            <li>Data portability (receive a copy of your data)</li>
                        </ul>
                        
                        <h4 class="text-lg font-semibold mb-3">7. Cookies and Tracking</h4>
                        <p class="mb-4">We use cookies and similar technologies to enhance your experience, analyze usage, and provide personalized content. You can control cookie settings through your browser.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">8. Third-Party Services</h4>
                        <p class="mb-4">Our platform integrates with third-party services for payments, analytics, and communication. These services have their own privacy policies.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">9. Changes to This Policy</h4>
                        <p class="mb-4">We may update this privacy policy from time to time. We will notify users of significant changes via email or platform notification.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">10. Contact Us</h4>
                        <p>For questions about this Privacy Policy or to exercise your rights, contact us at privacy@kwikr.ca or through our support system.</p>
                    </div>
                </div>
                <div class="flex justify-end p-6 border-t border-gray-200">
                    <button type="button" onclick="closeModal('privacyModal')" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                        Close
                    </button>
                </div>
            </div>
        </div>

        <script src="/static/terms-modal.js"><\/script>
    </body>
    </html>
  `));mi.get("/worker",async e=>e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Sign Up as Service Provider - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gray-50 min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="/" class="text-gray-700 hover:text-kwikr-green">Home</a>
                        <a href="/auth/login" class="text-gray-700 hover:text-kwikr-green">Sign In</a>
                    </div>
                </div>
            </div>
        </nav>

        <div class="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
            <div class="max-w-lg w-full space-y-8">
                <div>
                    <div class="text-center">
                        <div class="mx-auto h-16 w-16 bg-kwikr-green bg-opacity-10 rounded-full flex items-center justify-center mb-6">
                            <i class="fas fa-tools text-2xl text-kwikr-green"></i>
                        </div>
                        <h2 class="text-3xl font-bold text-gray-900">Join as Service Provider</h2>
                        <p class="mt-2 text-gray-600">Start growing your business with verified clients</p>
                    </div>
                </div>
                
                <form id="workerSignupForm" class="mt-8 space-y-6 bg-white p-8 rounded-lg shadow-lg">
                    <input type="hidden" id="userRole" value="worker">
                    
                    <!-- Personal Information Section -->
                    <div class="space-y-4">
                        <h3 class="text-lg font-medium text-gray-900 border-b pb-2">
                            <i class="fas fa-user mr-2 text-kwikr-green"></i>Personal Information
                        </h3>
                        
                        <div class="grid grid-cols-2 gap-4">
                            <div>
                                <label for="firstName" class="block text-sm font-medium text-gray-700">First Name *</label>
                                <input id="firstName" name="firstName" type="text" required 
                                       class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                            </div>
                            <div>
                                <label for="lastName" class="block text-sm font-medium text-gray-700">Last Name *</label>
                                <input id="lastName" name="lastName" type="text" required 
                                       class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                            </div>
                        </div>
                        
                        <div>
                            <label for="signupEmail" class="block text-sm font-medium text-gray-700">Email Address *</label>
                            <input id="signupEmail" name="email" type="email" required 
                                   class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                        </div>
                        
                        <div>
                            <label for="signupPassword" class="block text-sm font-medium text-gray-700">Password *</label>
                            <input id="signupPassword" name="password" type="password" required 
                                   class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                            <p class="mt-1 text-xs text-gray-500">Must be at least 8 characters long</p>
                        </div>
                    </div>

                    <!-- Location Information Section -->
                    <div class="space-y-4">
                        <h3 class="text-lg font-medium text-gray-900 border-b pb-2">
                            <i class="fas fa-map-marker-alt mr-2 text-kwikr-green"></i>Service Location
                        </h3>
                        
                        <div class="grid grid-cols-2 gap-4">
                            <div>
                                <label for="province" class="block text-sm font-medium text-gray-700">Province *</label>
                                <select id="province" name="province" required 
                                        class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                    <option value="">Select Province</option>
                                    <option value="ON">Ontario</option>
                                    <option value="BC">British Columbia</option>
                                    <option value="AB">Alberta</option>
                                    <option value="MB">Manitoba</option>
                                    <option value="SK">Saskatchewan</option>
                                    <option value="QC">Quebec</option>
                                    <option value="NB">New Brunswick</option>
                                    <option value="NS">Nova Scotia</option>
                                    <option value="PE">Prince Edward Island</option>
                                    <option value="NL">Newfoundland and Labrador</option>
                                    <option value="NT">Northwest Territories</option>
                                    <option value="NU">Nunavut</option>
                                    <option value="YT">Yukon</option>
                                </select>
                            </div>
                            <div>
                                <label for="city" class="block text-sm font-medium text-gray-700">City *</label>
                                <input id="city" name="city" type="text" required 
                                       class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                            </div>
                        </div>
                    </div>

                    <!-- Business Information Section -->
                    <div class="space-y-4">
                        <h3 class="text-lg font-medium text-gray-900 border-b pb-2">
                            <i class="fas fa-briefcase mr-2 text-kwikr-green"></i>Business Information
                        </h3>
                        
                        <div>
                            <label for="businessName" class="block text-sm font-medium text-gray-700">Company Name *</label>
                            <input id="businessName" name="businessName" type="text" required
                                   class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green"
                                   placeholder="Your Company Name">
                        </div>
                        
                        <div>
                            <label for="businessEmail" class="block text-sm font-medium text-gray-700">Company Email *</label>
                            <input id="businessEmail" name="businessEmail" type="email" required
                                   class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green"
                                   placeholder="company@example.com">
                            <p class="mt-1 text-xs text-gray-500">This will be your primary business contact email</p>
                        </div>
                        
                        <div>
                            <label for="phone" class="block text-sm font-medium text-gray-700">Company Phone *</label>
                            <input id="phone" name="phone" type="tel" required
                                   class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green"
                                   placeholder="(555) 123-4567">
                        </div>
                        
                        <div>
                            <label for="serviceType" class="block text-sm font-medium text-gray-700">Primary Service Category *</label>
                            <select id="serviceType" name="serviceType" required
                                    class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                                <option value="">Select Service Type</option>
                                <option value="Cleaning Services">Cleaning Services</option>
                                <option value="Plumbers">Plumbers</option>
                                <option value="Carpenters">Carpenters</option>
                                <option value="Electricians">Electricians</option>
                                <option value="Painters">Painters</option>
                                <option value="Handyman">Handyman Services</option>
                                <option value="HVAC Services">HVAC Services</option>
                                <option value="Landscaping">Landscaping</option>
                                <option value="Roofing">Roofing</option>
                                <option value="Flooring">Flooring</option>
                                <option value="Renovations">Renovations</option>
                                <option value="General Contractor">General Contractor</option>
                            </select>
                        </div>
                    </div>

                    <!-- Agreement Checkbox -->
                    <div class="flex items-center">
                        <input id="agreeTerms" name="agreeTerms" type="checkbox" required 
                               class="h-4 w-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                        <label for="agreeTerms" class="ml-2 block text-sm text-gray-900">
                            I agree to the <button type="button" onclick="showTermsModal()" class="text-kwikr-green hover:text-green-600 underline">Terms of Service</button> and <button type="button" onclick="showPrivacyModal()" class="text-kwikr-green hover:text-green-600 underline">Privacy Policy</button>
                        </label>
                    </div>

                    <!-- Submit Button -->
                    <div>
                        <button type="submit" 
                                class="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-kwikr-green hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-kwikr-green">
                            <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                                <i class="fas fa-tools text-green-500 group-hover:text-green-400"></i>
                            </span>
                            Create Service Provider Account
                        </button>
                    </div>
                </form>

                <div class="text-center">
                    <p class="text-sm text-gray-600">
                        Looking to hire services instead? 
                        <a href="/signup/client" class="font-medium text-kwikr-green hover:text-green-600">Sign up as Client</a>
                    </p>
                    <p class="text-sm text-gray-600 mt-2">
                        Already have an account? 
                        <a href="/auth/login" class="font-medium text-kwikr-green hover:text-green-600">Sign in</a>
                    </p>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script>
            document.getElementById('workerSignupForm').addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const formData = {
                    firstName: document.getElementById('firstName').value.trim(),
                    lastName: document.getElementById('lastName').value.trim(),
                    email: document.getElementById('signupEmail').value.trim(),
                    password: document.getElementById('signupPassword').value,
                    role: 'worker',
                    province: document.getElementById('province').value,
                    city: document.getElementById('city').value.trim(),
                    businessName: document.getElementById('businessName').value.trim(),
                    businessEmail: document.getElementById('businessEmail').value.trim(),
                    phone: document.getElementById('phone').value.trim(),
                    serviceType: document.getElementById('serviceType').value
                };
                
                console.log('Form data being submitted:', formData);
                
                // Validation
                if (!formData.firstName || !formData.lastName || !formData.email || 
                    !formData.password || !formData.province || !formData.city ||
                    !formData.businessName || !formData.businessEmail || !formData.phone || 
                    !formData.serviceType) {
                    if (!formData.firstName) showFieldError('firstName', 'First name is required');
                    if (!formData.lastName) showFieldError('lastName', 'Last name is required');
                    if (!formData.email) showFieldError('signupEmail', 'Email address is required');
                    if (!formData.password) showFieldError('signupPassword', 'Password is required');
                    if (!formData.province) showFieldError('province', 'Province is required');
                    if (!formData.city) showFieldError('city', 'City is required');
                    if (!formData.businessName) showFieldError('businessName', 'Business name is required');
                    if (!formData.businessEmail) showFieldError('businessEmail', 'Business email is required');
                    if (!formData.phone) showFieldError('phone', 'Phone number is required');
                    if (!formData.serviceType) showFieldError('serviceType', 'Service type is required');
                    return;
                }
                
                if (formData.password.length < 8) {
                    showFieldError('signupPassword', 'Password must be at least 8 characters long');
                    return;
                }
                
                // Validate business email format (more permissive regex)
                const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,}$/;
                if (!emailRegex.test(formData.businessEmail)) {
                    showFieldError('businessEmail', 'Please enter a valid business email address');
                    return;
                }
                
                // Validate phone format (basic validation)
                const phoneRegex = /^[+]?[1-9][d]{0,15}$/;
                const cleanPhone = formData.phone.replace(/[s()-.]/g, '');
                if (cleanPhone.length < 10) {
                    alert('Please enter a valid phone number (at least 10 digits)');
                    return;
                }
                
                if (!document.getElementById('agreeTerms').checked) {
                    alert('Please agree to the Terms of Service and Privacy Policy');
                    return;
                }
                
                try {
                    const response = await fetch('/api/auth/register', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formData)
                    });
                    
                    const data = await response.json();
                    console.log('Registration response:', data);
                    
                    if (response.ok && data.success) {
                        // Check if user selected a specific plan
                        const urlParams = new URLSearchParams(window.location.search);
                        const selectedPlan = urlParams.get('plan');
                        
                        if (selectedPlan && data.session_token) {
                            // Auto-subscribe to the selected plan
                            await subscribeToSelectedPlan(selectedPlan, data.session_token);
                        } else {
                            // Redirect to subscription selection after account creation
                            window.location.href = '/subscriptions/pricing';
                        }
                    } else {
                        // Show error message inline instead of popup
                        console.error('Registration failed:', data.error);
                        // Could add inline error display here in future
                    }
                } catch (error) {
                    console.error('Signup error:', error);
                    // Show error message inline instead of popup
                    console.error('Registration failed - network or server error');
                    // Could add inline error display here in future
                }
            });
            
            // Auto-subscribe to selected plan
            async function subscribeToSelectedPlan(planSlug, sessionToken) {
                try {
                    // Map plan slugs to IDs
                    const planMap = {
                        'payasyougo': 1,
                        'growth': 2,
                        'pro': 3
                    };
                    
                    const planId = planMap[planSlug];
                    if (!planId) {
                        // Invalid plan - redirect to subscription selection without popup
                        window.location.href = '/subscriptions/pricing';
                        return;
                    }
                    
                    const response = await fetch('/api/subscriptions/subscribe', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': \`Bearer \${sessionToken}\`
                        },
                        body: JSON.stringify({
                            plan_id: planId,
                            billing_cycle: 'monthly'
                        })
                    });
                    
                    const data = await response.json();
                    
                    if (response.ok && data.success) {
                        // Redirect directly to dashboard after successful signup - no popup needed
                        window.location.href = '/dashboard/worker/profile';
                    } else {
                        // Redirect to subscription selection - no popup needed
                        window.location.href = '/subscriptions/pricing';
                    }
                } catch (error) {
                    console.error('Subscription error:', error);
                    // Redirect to subscription selection after signup - no popup needed
                    window.location.href = '/subscriptions/pricing';
                }
            }
            
            // Field validation helper functions for worker signup
            function showFieldError(fieldId, message) {
                const field = document.getElementById(fieldId);
                if (!field) return;
                
                // Clear any existing error for this field
                const container = field.closest('div');
                if (container) {
                    const existingError = container.querySelector('.field-error');
                    if (existingError) {
                        existingError.remove();
                    }
                }
                
                // Add error styling to field
                field.classList.add('border-red-500', 'focus:border-red-500');
                field.classList.remove('border-gray-300', 'focus:border-kwikr-green');
                
                // Create and show error message
                const errorDiv = document.createElement('div');
                errorDiv.className = 'field-error text-red-500 text-sm mt-1';
                errorDiv.innerHTML = '<i class="fas fa-exclamation-circle mr-1"></i>' + message;
                
                if (container) {
                    container.appendChild(errorDiv);
                }
                
                // Scroll the field into view and focus
                field.scrollIntoView({ behavior: 'smooth', block: 'center' });
                field.focus();
            }
        <\/script>

        <!-- Terms of Service Modal -->
        <div id="termsModal" class="hidden fixed inset-0 z-50 overflow-y-auto bg-black bg-opacity-50 flex items-center justify-center p-4">
            <div class="bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-hidden shadow-xl">
                <div class="flex items-center justify-between p-6 border-b border-gray-200">
                    <h3 class="text-2xl font-bold text-gray-900">Terms of Service</h3>
                    <button type="button" onclick="closeModal('termsModal')" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
                <div class="p-6 overflow-y-auto max-h-[70vh]">
                    <div class="prose max-w-none">
                        <p class="text-sm text-gray-500 mb-6">Last Updated: September 5, 2025</p>
                        
                        <h4 class="text-lg font-semibold mb-3">1. Acceptance of Terms</h4>
                        <p class="mb-4">By accessing and using Kwikr Directory, you accept and agree to be bound by the terms and provision of this agreement.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">2. Service Description</h4>
                        <p class="mb-4">Kwikr Directory is a platform that connects clients with service providers across Canada. We facilitate connections but do not directly provide services.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">3. User Obligations</h4>
                        <ul class="list-disc pl-6 mb-4">
                            <li>Provide accurate and truthful information</li>
                            <li>Maintain the confidentiality of your account</li>
                            <li>Use the service in accordance with applicable laws</li>
                            <li>Respect other users and maintain professional conduct</li>
                        </ul>
                        
                        <h4 class="text-lg font-semibold mb-3">4. Service Provider Requirements</h4>
                        <ul class="list-disc pl-6 mb-4">
                            <li>Must have appropriate licenses and insurance</li>
                            <li>Must provide quality services as advertised</li>
                            <li>Must maintain professional standards</li>
                            <li>Must comply with subscription plan requirements</li>
                        </ul>
                        
                        <h4 class="text-lg font-semibold mb-3">5. Payment Terms</h4>
                        <p class="mb-4">Payment terms vary by subscription plan. Service fees and subscription costs are outlined in your chosen plan. All payments are processed securely through our payment partners.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">6. Limitation of Liability</h4>
                        <p class="mb-4">Kwikr Directory acts as a platform facilitator. We are not liable for the quality, safety, or legality of services provided by third-party service providers.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">7. Privacy</h4>
                        <p class="mb-4">Your privacy is important to us. Please review our Privacy Policy to understand how we collect, use, and protect your information.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">8. Termination</h4>
                        <p class="mb-4">We reserve the right to terminate accounts that violate these terms or engage in fraudulent activity.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">9. Changes to Terms</h4>
                        <p class="mb-4">We may update these terms from time to time. Users will be notified of significant changes via email or platform notification.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">10. Contact Information</h4>
                        <p>For questions about these Terms of Service, please contact us at legal@kwikr.ca or through our support system.</p>
                    </div>
                </div>
                <div class="flex justify-end p-6 border-t border-gray-200">
                    <button type="button" onclick="closeModal('termsModal')" class="px-4 py-2 bg-kwikr-green text-white rounded-lg hover:bg-green-700">
                        Close
                    </button>
                </div>
            </div>
        </div>

        <!-- Privacy Policy Modal -->
        <div id="privacyModal" class="hidden fixed inset-0 z-50 overflow-y-auto bg-black bg-opacity-50 flex items-center justify-center p-4">
            <div class="bg-white rounded-lg max-w-4xl w-full max-h-[90vh] overflow-hidden shadow-xl">
                <div class="flex items-center justify-between p-6 border-b border-gray-200">
                    <h3 class="text-2xl font-bold text-gray-900">Privacy Policy</h3>
                    <button type="button" onclick="closeModal('privacyModal')" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
                <div class="p-6 overflow-y-auto max-h-[70vh]">
                    <div class="prose max-w-none">
                        <p class="text-sm text-gray-500 mb-6">Last Updated: September 5, 2025</p>
                        
                        <h4 class="text-lg font-semibold mb-3">1. Information We Collect</h4>
                        <p class="mb-2"><strong>Personal Information:</strong></p>
                        <ul class="list-disc pl-6 mb-4">
                            <li>Name, email address, phone number</li>
                            <li>Business information (for service providers)</li>
                            <li>Location data (province, city)</li>
                            <li>Payment information (processed securely by third parties)</li>
                        </ul>
                        
                        <p class="mb-2"><strong>Usage Information:</strong></p>
                        <ul class="list-disc pl-6 mb-4">
                            <li>Platform usage analytics</li>
                            <li>Job posting and bidding activity</li>
                            <li>Communication between users</li>
                            <li>Device and browser information</li>
                        </ul>
                        
                        <h4 class="text-lg font-semibold mb-3">2. How We Use Your Information</h4>
                        <ul class="list-disc pl-6 mb-4">
                            <li>To facilitate connections between clients and service providers</li>
                            <li>To process payments and manage subscriptions</li>
                            <li>To improve our platform and user experience</li>
                            <li>To send important notifications and updates</li>
                            <li>To ensure platform security and prevent fraud</li>
                        </ul>
                        
                        <h4 class="text-lg font-semibold mb-3">3. Information Sharing</h4>
                        <p class="mb-4">We do not sell your personal information. We may share information in the following circumstances:</p>
                        <ul class="list-disc pl-6 mb-4">
                            <li>With other users as part of the platform functionality</li>
                            <li>With service providers (payment processors, analytics)</li>
                            <li>When required by law or to protect our rights</li>
                            <li>With your explicit consent</li>
                        </ul>
                        
                        <h4 class="text-lg font-semibold mb-3">4. Data Security</h4>
                        <p class="mb-4">We implement industry-standard security measures to protect your information, including encryption, secure servers, and regular security audits.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">5. Data Retention</h4>
                        <p class="mb-4">We retain your information as long as your account is active or as needed to provide services. You may request deletion of your account and associated data at any time.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">6. Your Rights</h4>
                        <ul class="list-disc pl-6 mb-4">
                            <li>Access your personal information</li>
                            <li>Correct inaccurate information</li>
                            <li>Request deletion of your data</li>
                            <li>Opt-out of non-essential communications</li>
                            <li>Data portability (receive a copy of your data)</li>
                        </ul>
                        
                        <h4 class="text-lg font-semibold mb-3">7. Cookies and Tracking</h4>
                        <p class="mb-4">We use cookies and similar technologies to enhance your experience, analyze usage, and provide personalized content. You can control cookie settings through your browser.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">8. Third-Party Services</h4>
                        <p class="mb-4">Our platform integrates with third-party services for payments, analytics, and communication. These services have their own privacy policies.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">9. Changes to This Policy</h4>
                        <p class="mb-4">We may update this privacy policy from time to time. We will notify users of significant changes via email or platform notification.</p>
                        
                        <h4 class="text-lg font-semibold mb-3">10. Contact Us</h4>
                        <p>For questions about this Privacy Policy or to exercise your rights, contact us at privacy@kwikr.ca or through our support system.</p>
                    </div>
                </div>
                <div class="flex justify-end p-6 border-t border-gray-200">
                    <button type="button" onclick="closeModal('privacyModal')" class="px-4 py-2 bg-kwikr-green text-white rounded-lg hover:bg-green-700">
                        Close
                    </button>
                </div>
            </div>
        </div>

        <script src="/static/terms-modal.js"><\/script>
    </body>
    </html>
  `));mi.get("/",async e=>e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Join Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gray-50 min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="/" class="text-gray-700 hover:text-kwikr-green">Home</a>
                        <a href="/login" class="text-gray-700 hover:text-kwikr-green">Sign In</a>
                    </div>
                </div>
            </div>
        </nav>

        <div class="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
            <div class="max-w-4xl w-full space-y-8">
                <div class="text-center">
                    <h2 class="text-4xl font-bold text-gray-900">Join Kwikr Directory</h2>
                    <p class="mt-4 text-xl text-gray-600">Choose how you want to get started</p>
                </div>
                
                <div class="grid md:grid-cols-2 gap-8 mt-12">
                    <!-- Client Signup -->
                    <div class="bg-white rounded-lg shadow-lg p-8 text-center hover:shadow-xl transition-shadow">
                        <div class="mx-auto h-20 w-20 bg-blue-100 rounded-full flex items-center justify-center mb-6">
                            <i class="fas fa-user text-3xl text-blue-600"></i>
                        </div>
                        <h3 class="text-2xl font-bold text-gray-900 mb-4">I need services</h3>
                        <p class="text-gray-600 mb-6">Find and hire trusted service providers for your projects</p>
                        <ul class="text-left text-gray-600 mb-8 space-y-2">
                            <li><i class="fas fa-check text-green-500 mr-2"></i>Post job requests</li>
                            <li><i class="fas fa-check text-green-500 mr-2"></i>Get quotes from providers</li>
                            <li><i class="fas fa-check text-green-500 mr-2"></i>Secure payment protection</li>
                            <li><i class="fas fa-check text-green-500 mr-2"></i>Rate and review services</li>
                        </ul>
                        <a href="/signup/client" 
                           class="block w-full bg-blue-600 text-white py-3 px-6 rounded-lg font-medium hover:bg-blue-700 transition-colors">
                            Sign up as Client
                        </a>
                    </div>
                    
                    <!-- Worker Signup -->
                    <div class="bg-white rounded-lg shadow-lg p-8 text-center hover:shadow-xl transition-shadow border-2 border-kwikr-green">
                        <div class="mx-auto h-20 w-20 bg-kwikr-green bg-opacity-10 rounded-full flex items-center justify-center mb-6">
                            <i class="fas fa-tools text-3xl text-kwikr-green"></i>
                        </div>
                        <h3 class="text-2xl font-bold text-gray-900 mb-4">I provide services</h3>
                        <p class="text-gray-600 mb-6">Grow your business by connecting with clients across Canada</p>
                        <ul class="text-left text-gray-600 mb-8 space-y-2">
                            <li><i class="fas fa-check text-green-500 mr-2"></i>Access to verified clients</li>
                            <li><i class="fas fa-check text-green-500 mr-2"></i>Flexible pricing plans</li>
                            <li><i class="fas fa-check text-green-500 mr-2"></i>Business profile & portfolio</li>
                            <li><i class="fas fa-check text-green-500 mr-2"></i>Secure payment processing</li>
                        </ul>
                        <a href="/signup/worker" 
                           class="block w-full bg-kwikr-green text-white py-3 px-6 rounded-lg font-medium hover:bg-green-700 transition-colors">
                            Sign up as Service Provider
                        </a>
                        <p class="text-sm text-gray-500 mt-3">
                            <i class="fas fa-star text-yellow-400 mr-1"></i>Most Popular Choice
                        </p>
                    </div>
                </div>
                
                <div class="text-center mt-8">
                    <p class="text-gray-600">
                        Already have an account? 
                        <a href="/login" class="font-medium text-kwikr-green hover:text-green-600">Sign in here</a>
                    </p>
                </div>
            </div>
        </div>
    </body>
    </html>
  `));const Ud=new ce;Ud.get("/",async e=>{try{return e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Sign In - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gray-50">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="/" class="text-gray-700 hover:text-kwikr-green">Home</a>
                        <a href="/signup/client" class="text-gray-700 hover:text-kwikr-green">Sign Up</a>
                    </div>
                </div>
            </div>
        </nav>

        <div class="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
            <div class="max-w-md w-full space-y-8 bg-white rounded-lg shadow-md p-8">
                <div>
                    <div class="text-center">
                        <div class="mx-auto h-16 w-16 bg-kwikr-green bg-opacity-10 rounded-full flex items-center justify-center mb-6">
                            <i class="fas fa-sign-in-alt text-2xl text-kwikr-green"></i>
                        </div>
                        <h2 class="text-3xl font-bold text-gray-900">Welcome Back</h2>
                        <p class="mt-2 text-gray-600">Sign in to your Kwikr Directory account</p>
                    </div>
                </div>
                
                <form id="loginForm" class="space-y-6">
                    <div class="space-y-4">
                        <div>
                            <label for="loginEmail" class="block text-sm font-medium text-gray-700">Email Address</label>
                            <input id="loginEmail" name="email" type="email" required 
                                   class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                        </div>
                        
                        <div>
                            <label for="loginPassword" class="block text-sm font-medium text-gray-700">Password</label>
                            <input id="loginPassword" name="password" type="password" required 
                                   class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-kwikr-green focus:border-kwikr-green">
                        </div>
                    </div>

                    <div class="flex items-center justify-between">
                        <div class="flex items-center">
                            <input id="remember-me" name="remember-me" type="checkbox" class="h-4 w-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                            <label for="remember-me" class="ml-2 block text-sm text-gray-900">
                                Remember me
                            </label>
                        </div>

                        <div class="text-sm">
                            <a href="#" class="font-medium text-kwikr-green hover:text-green-600">
                                Forgot your password?
                            </a>
                        </div>
                    </div>

                    <div>
                        <button type="submit" 
                                class="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-kwikr-green hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-kwikr-green">
                            <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                                <i class="fas fa-sign-in-alt text-green-500 group-hover:text-green-400"></i>
                            </span>
                            Sign In
                        </button>
                    </div>

                    <!-- Demo Login Buttons -->
                    <div class="mt-6">
                        <div class="relative">
                            <div class="absolute inset-0 flex items-center">
                                <div class="w-full border-t border-gray-300"></div>
                            </div>
                            <div class="relative flex justify-center text-sm">
                                <span class="px-2 bg-white text-gray-500">Or try demo accounts</span>
                            </div>
                        </div>

                        <div class="mt-4 grid grid-cols-2 gap-3">
                            <button type="button" data-demo-role="client"
                                    class="w-full inline-flex justify-center items-center py-2 px-3 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors">
                                <i class="fas fa-user mr-2"></i>
                                Demo Client
                            </button>

                            <button type="button" data-demo-role="worker"
                                    class="w-full inline-flex justify-center items-center py-2 px-3 border border-gray-300 rounded-md shadow-sm bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors">
                                <i class="fas fa-tools mr-2"></i>
                                Demo Worker
                            </button>
                        </div>
                    </div>
                </form>

                <div class="text-center">
                    <p class="text-sm text-gray-600">
                        Don't have an account? 
                        <a href="/signup/client" class="font-medium text-kwikr-green hover:text-green-600">Sign up here</a>
                    </p>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js"><\/script>
        <script>
            document.getElementById('loginForm').addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const email = document.getElementById('loginEmail').value.trim();
                const password = document.getElementById('loginPassword').value;
                
                if (!email || !password) {
                    alert('Please enter both email and password');
                    return;
                }
                
                try {
                    const response = await fetch('/api/auth/login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        credentials: 'include', // Essential for cookie handling
                        body: JSON.stringify({ email, password })
                    });
                    
                    const data = await response.json();
                    
                    if (response.ok) {
                        // Session cookie is automatically set by the server
                        // Store session token in localStorage as backup
                        if (data.sessionToken) {
                            localStorage.setItem('sessionToken', data.sessionToken);
                        }
                        
                        // Success - no alert needed
                        
                        // Redirect based on user role
                        if (data.user.role === 'client') {
                            window.location.href = '/dashboard/client';
                        } else if (data.user.role === 'worker') {
                            window.location.href = '/dashboard/worker';
                        } else if (data.user.role === 'admin') {
                            window.location.href = '/dashboard/admin';
                        } else {
                            window.location.href = '/dashboard';
                        }
                    } else {
                        alert(data.error || 'Login failed. Please check your credentials.');
                    }
                } catch (error) {
                    console.error('Login error:', error);
                    alert('Login failed. Please try again.');
                }
            });

            // Demo login function
            async function demoLogin(userType, button) {
                const originalText = button.innerHTML;
                
                try {
                    // Show loading state
                    button.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Logging in...';
                    button.disabled = true;
                    
                    // Call demo login API
                    const response = await fetch('/api/auth/demo-login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        credentials: 'include', // Essential for cookie handling
                        body: JSON.stringify({ role: userType })
                    });
                    
                    if (response.ok) {
                        const data = await response.json();
                        
                        // Store session token in multiple places for reliability
                        if (data.sessionToken) {
                            // Store in localStorage as backup
                            localStorage.setItem('sessionToken', data.sessionToken);
                            
                            // Also set cookie manually as additional backup
                            document.cookie = \`session=\${data.sessionToken}; path=/; max-age=31536000; samesite=lax\`;
                        }
                        
                        // Extended delay to ensure cookie is set properly in all browsers  
                        setTimeout(() => {
                            // Verify cookie was set before redirecting
                            const cookieSet = document.cookie.includes('session=');
                            console.log('Cookie verification before redirect:', cookieSet);
                            
                            if (!cookieSet) {
                                console.warn('Session cookie not found, retrying...');
                                // If cookie not set, try again with longer delay
                                setTimeout(() => {
                                    window.location.href = userType === 'client' ? '/dashboard/client' : 
                                                         userType === 'worker' ? '/dashboard/worker' : '/dashboard/admin';
                                }, 1000);
                                return;
                            }
                            
                            // Redirect to appropriate dashboard
                            if (userType === 'client') {
                                window.location.href = '/dashboard/client';
                            } else if (userType === 'worker') {
                                window.location.href = '/dashboard/worker';
                            } else if (userType === 'admin') {
                                window.location.href = '/dashboard/admin';
                            }
                        }, 500); // Increased from 100ms to 500ms
                        
                    } else {
                        const error = await response.json();
                        alert('Demo login failed: ' + (error.error || 'Please try again'));
                        
                        // Restore button state
                        button.innerHTML = originalText;
                        button.disabled = false;
                    }
                } catch (error) {
                    console.error('Demo login error:', error);
                    alert('Demo login failed. Please try again.');
                    
                    // Restore button state
                    button.innerHTML = originalText;
                    button.disabled = false;
                }
            }

            // Add event listeners for demo login buttons
            document.addEventListener('DOMContentLoaded', function() {
                document.querySelectorAll('[data-demo-role]').forEach(button => {
                    button.addEventListener('click', function() {
                        const userType = this.getAttribute('data-demo-role');
                        demoLogin(userType, this);
                    });
                });
            });
        <\/script>
    </body>
    </html>
  `)}catch(t){return console.error("Login page error:",t),e.html("<html><body><h1>Login Page Error</h1><p>Please try again later.</p></body></html>")}});const pn=new ce;pn.get("/terms",async e=>e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Terms of Service - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gray-50 min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="/" class="text-gray-700 hover:text-kwikr-green">Home</a>
                        <a href="/legal/privacy" class="text-gray-700 hover:text-kwikr-green">Privacy Policy</a>
                        <a href="/auth/login" class="text-gray-700 hover:text-kwikr-green">Sign In</a>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-4xl mx-auto px-4 py-12">
            <div class="bg-white rounded-lg shadow-lg p-8">
                <h1 class="text-4xl font-bold text-gray-900 mb-8">Terms of Service</h1>
                <p class="text-sm text-gray-500 mb-8">Last Updated: September 5, 2025</p>
                
                <div class="prose max-w-none">
                    <h2 class="text-2xl font-semibold mb-4">1. Acceptance of Terms</h2>
                    <p class="mb-6">By accessing and using Kwikr Directory, you accept and agree to be bound by the terms and provision of this agreement.</p>
                    
                    <h2 class="text-2xl font-semibold mb-4">2. Service Description</h2>
                    <p class="mb-6">Kwikr Directory is a platform that connects clients with service providers across Canada. We facilitate connections but do not directly provide services.</p>
                    
                    <h2 class="text-2xl font-semibold mb-4">3. User Obligations</h2>
                    <ul class="list-disc pl-6 mb-6">
                        <li>Provide accurate and truthful information</li>
                        <li>Maintain the confidentiality of your account</li>
                        <li>Use the service in accordance with applicable laws</li>
                        <li>Respect other users and maintain professional conduct</li>
                    </ul>
                    
                    <h2 class="text-2xl font-semibold mb-4">4. Service Provider Requirements</h2>
                    <ul class="list-disc pl-6 mb-6">
                        <li>Must have appropriate licenses and insurance</li>
                        <li>Must provide quality services as advertised</li>
                        <li>Must maintain professional standards</li>
                        <li>Must comply with subscription plan requirements</li>
                    </ul>
                    
                    <h2 class="text-2xl font-semibold mb-4">5. Payment Terms</h2>
                    <p class="mb-6">Payment terms vary by subscription plan. Service fees and subscription costs are outlined in your chosen plan. All payments are processed securely through our payment partners.</p>
                    
                    <h2 class="text-2xl font-semibold mb-4">6. Limitation of Liability</h2>
                    <p class="mb-6">Kwikr Directory acts as a platform facilitator. We are not liable for the quality, safety, or legality of services provided by third-party service providers.</p>
                    
                    <h2 class="text-2xl font-semibold mb-4">7. Privacy</h2>
                    <p class="mb-6">Your privacy is important to us. Please review our <a href="/legal/privacy" class="text-kwikr-green hover:text-green-600">Privacy Policy</a> to understand how we collect, use, and protect your information.</p>
                    
                    <h2 class="text-2xl font-semibold mb-4">8. Termination</h2>
                    <p class="mb-6">We reserve the right to terminate accounts that violate these terms or engage in fraudulent activity.</p>
                    
                    <h2 class="text-2xl font-semibold mb-4">9. Changes to Terms</h2>
                    <p class="mb-6">We may update these terms from time to time. Users will be notified of significant changes via email or platform notification.</p>
                    
                    <h2 class="text-2xl font-semibold mb-4">10. Contact Information</h2>
                    <p class="mb-6">For questions about these Terms of Service, please contact us at legal@kwikr.ca or through our support system.</p>
                </div>

                <div class="mt-8 pt-8 border-t border-gray-200">
                    <a href="/" class="inline-flex items-center text-kwikr-green hover:text-green-600">
                        <i class="fas fa-arrow-left mr-2"></i>
                        Back to Home
                    </a>
                </div>
            </div>
        </div>
    </body>
    </html>
  `));pn.get("/privacy",async e=>e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Privacy Policy - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gray-50 min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="/" class="text-gray-700 hover:text-kwikr-green">Home</a>
                        <a href="/legal/terms" class="text-gray-700 hover:text-kwikr-green">Terms of Service</a>
                        <a href="/auth/login" class="text-gray-700 hover:text-kwikr-green">Sign In</a>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-4xl mx-auto px-4 py-12">
            <div class="bg-white rounded-lg shadow-lg p-8">
                <h1 class="text-4xl font-bold text-gray-900 mb-8">Privacy Policy</h1>
                <p class="text-sm text-gray-500 mb-8">Last Updated: September 5, 2025</p>
                
                <div class="prose max-w-none">
                    <h2 class="text-2xl font-semibold mb-4">1. Information We Collect</h2>
                    <p class="mb-2"><strong>Personal Information:</strong></p>
                    <ul class="list-disc pl-6 mb-4">
                        <li>Name, email address, phone number</li>
                        <li>Business information (for service providers)</li>
                        <li>Location data (province, city)</li>
                        <li>Payment information (processed securely by third parties)</li>
                    </ul>
                    
                    <p class="mb-2"><strong>Usage Information:</strong></p>
                    <ul class="list-disc pl-6 mb-6">
                        <li>Platform usage analytics</li>
                        <li>Job posting and bidding activity</li>
                        <li>Communication between users</li>
                        <li>Device and browser information</li>
                    </ul>
                    
                    <h2 class="text-2xl font-semibold mb-4">2. How We Use Your Information</h2>
                    <ul class="list-disc pl-6 mb-6">
                        <li>To facilitate connections between clients and service providers</li>
                        <li>To process payments and manage subscriptions</li>
                        <li>To improve our platform and user experience</li>
                        <li>To send important notifications and updates</li>
                        <li>To ensure platform security and prevent fraud</li>
                    </ul>
                    
                    <h2 class="text-2xl font-semibold mb-4">3. Information Sharing</h2>
                    <p class="mb-4">We do not sell your personal information. We may share information in the following circumstances:</p>
                    <ul class="list-disc pl-6 mb-6">
                        <li>With other users as part of the platform functionality</li>
                        <li>With service providers (payment processors, analytics)</li>
                        <li>When required by law or to protect our rights</li>
                        <li>With your explicit consent</li>
                    </ul>
                    
                    <h2 class="text-2xl font-semibold mb-4">4. Data Security</h2>
                    <p class="mb-6">We implement industry-standard security measures to protect your information, including encryption, secure servers, and regular security audits.</p>
                    
                    <h2 class="text-2xl font-semibold mb-4">5. Data Retention</h2>
                    <p class="mb-6">We retain your information as long as your account is active or as needed to provide services. You may request deletion of your account and associated data at any time.</p>
                    
                    <h2 class="text-2xl font-semibold mb-4">6. Your Rights</h2>
                    <ul class="list-disc pl-6 mb-6">
                        <li>Access your personal information</li>
                        <li>Correct inaccurate information</li>
                        <li>Request deletion of your data</li>
                        <li>Opt-out of non-essential communications</li>
                        <li>Data portability (receive a copy of your data)</li>
                    </ul>
                    
                    <h2 class="text-2xl font-semibold mb-4">7. Cookies and Tracking</h2>
                    <p class="mb-6">We use cookies and similar technologies to enhance your experience, analyze usage, and provide personalized content. You can control cookie settings through your browser.</p>
                    
                    <h2 class="text-2xl font-semibold mb-4">8. Third-Party Services</h2>
                    <p class="mb-6">Our platform integrates with third-party services for payments, analytics, and communication. These services have their own privacy policies.</p>
                    
                    <h2 class="text-2xl font-semibold mb-4">9. Changes to This Policy</h2>
                    <p class="mb-6">We may update this privacy policy from time to time. We will notify users of significant changes via email or platform notification.</p>
                    
                    <h2 class="text-2xl font-semibold mb-4">10. Contact Us</h2>
                    <p class="mb-6">For questions about this Privacy Policy or to exercise your rights, contact us at privacy@kwikr.ca or through our support system.</p>
                </div>

                <div class="mt-8 pt-8 border-t border-gray-200">
                    <a href="/" class="inline-flex items-center text-kwikr-green hover:text-green-600">
                        <i class="fas fa-arrow-left mr-2"></i>
                        Back to Home
                    </a>
                </div>
            </div>
        </div>
    </body>
    </html>
  `));const Is=new ce;Is.post("/send-verification",async e=>{try{const{email:t}=await e.req.json();if(!t)return e.json({error:"Email is required"},400);const s=await e.env.DB.prepare(`
      SELECT id, email, email_verified FROM users WHERE email = ? AND is_active = 1
    `).bind(t).first();if(!s)return e.json({error:"User not found"},404);if(s.email_verified)return e.json({message:"Email is already verified"});const r=new Uint8Array(32);crypto.getRandomValues(r);const i=Array.from(r,o=>o.toString(16).padStart(2,"0")).join(""),a=new Date;a.setHours(a.getHours()+24),await e.env.DB.prepare(`
      INSERT INTO email_verification_tokens (user_id, token, email, expires_at)
      VALUES (?, ?, ?, ?)
    `).bind(s.id,i,t,a.toISOString()).run();const n=`${e.req.header("origin")||"http://localhost:3000"}/auth/verify-email?token=${i}`;return console.log("Email verification link:",n),e.json({success:!0,message:"Verification email sent successfully",verification_link:n})}catch(t){return console.error("Send verification error:",t),e.json({error:"Failed to send verification email"},500)}});Is.get("/verify-email",async e=>{try{const t=e.req.query("token");if(!t)return e.html(`
        <!DOCTYPE html>
        <html>
        <head>
          <title>Email Verification - Kwikr Directory</title>
          <script src="https://cdn.tailwindcss.com"><\/script>
        </head>
        <body class="bg-gray-50 flex items-center justify-center min-h-screen">
          <div class="bg-white p-8 rounded-lg shadow-lg text-center">
            <div class="text-red-600 text-5xl mb-4">❌</div>
            <h1 class="text-2xl font-bold text-gray-900 mb-2">Invalid Verification Link</h1>
            <p class="text-gray-600 mb-4">This verification link is invalid or missing the token.</p>
            <a href="/login" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
              Go to Login
            </a>
          </div>
        </body>
        </html>
      `);const s=await e.env.DB.prepare(`
      SELECT evt.*, u.email, u.email_verified 
      FROM email_verification_tokens evt
      JOIN users u ON evt.user_id = u.id
      WHERE evt.token = ? AND evt.used_at IS NULL
    `).bind(t).first();if(!s)return e.html(`
        <!DOCTYPE html>
        <html>
        <head>
          <title>Email Verification - Kwikr Directory</title>
          <script src="https://cdn.tailwindcss.com"><\/script>
        </head>
        <body class="bg-gray-50 flex items-center justify-center min-h-screen">
          <div class="bg-white p-8 rounded-lg shadow-lg text-center">
            <div class="text-red-600 text-5xl mb-4">❌</div>
            <h1 class="text-2xl font-bold text-gray-900 mb-2">Invalid Token</h1>
            <p class="text-gray-600 mb-4">This verification token is invalid or has already been used.</p>
            <a href="/auth/resend-verification" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 mr-2">
              Resend Verification
            </a>
            <a href="/login" class="bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700">
              Go to Login
            </a>
          </div>
        </body>
        </html>
      `);const r=new Date,i=new Date(s.expires_at);return r>i?e.html(`
        <!DOCTYPE html>
        <html>
        <head>
          <title>Email Verification - Kwikr Directory</title>
          <script src="https://cdn.tailwindcss.com"><\/script>
        </head>
        <body class="bg-gray-50 flex items-center justify-center min-h-screen">
          <div class="bg-white p-8 rounded-lg shadow-lg text-center">
            <div class="text-orange-500 text-5xl mb-4">⏰</div>
            <h1 class="text-2xl font-bold text-gray-900 mb-2">Token Expired</h1>
            <p class="text-gray-600 mb-4">This verification token has expired. Please request a new one.</p>
            <a href="/auth/resend-verification" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 mr-2">
              Resend Verification
            </a>
            <a href="/login" class="bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700">
              Go to Login
            </a>
          </div>
        </body>
        </html>
      `):(await e.env.DB.prepare(`
      UPDATE users SET email_verified = 1, updated_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(s.user_id).run(),await e.env.DB.prepare(`
      UPDATE email_verification_tokens SET used_at = CURRENT_TIMESTAMP
      WHERE id = ?
    `).bind(s.id).run(),e.html(`
      <!DOCTYPE html>
      <html>
      <head>
        <title>Email Verified - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
      </head>
      <body class="bg-gray-50 flex items-center justify-center min-h-screen">
        <div class="bg-white p-8 rounded-lg shadow-lg text-center">
          <div class="text-green-600 text-5xl mb-4">✅</div>
          <h1 class="text-2xl font-bold text-gray-900 mb-2">Email Verified!</h1>
          <p class="text-gray-600 mb-4">Your email address has been successfully verified.</p>
          <a href="/login" class="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700">
            Continue to Login
          </a>
        </div>
      </body>
      </html>
    `))}catch(t){return console.error("Email verification error:",t),e.html(`
      <!DOCTYPE html>
      <html>
      <head>
        <title>Verification Error - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
      </head>
      <body class="bg-gray-50 flex items-center justify-center min-h-screen">
        <div class="bg-white p-8 rounded-lg shadow-lg text-center">
          <div class="text-red-600 text-5xl mb-4">❌</div>
          <h1 class="text-2xl font-bold text-gray-900 mb-2">Verification Failed</h1>
          <p class="text-gray-600 mb-4">An error occurred during email verification.</p>
          <a href="/login" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700">
            Go to Login
          </a>
        </div>
      </body>
      </html>
    `)}});Is.get("/status/:userId",async e=>{try{const t=parseInt(e.req.param("userId")),s=await e.env.DB.prepare(`
      SELECT email_verified, is_verified FROM users WHERE id = ?
    `).bind(t).first();return s?e.json({email_verified:!!s.email_verified,profile_verified:!!s.is_verified}):e.json({error:"User not found"},404)}catch(t){return console.error("Verification status error:",t),e.json({error:"Failed to get verification status"},500)}});Is.post("/request-business-verification",async e=>{var t,s,r;try{const i=((t=e.req.header("Authorization"))==null?void 0:t.replace("Bearer ",""))||((r=(s=e.req.header("Cookie"))==null?void 0:s.match(/session=([^;]+)/))==null?void 0:r[1]);if(!i)return e.json({error:"Authentication required"},401);const a=await e.env.DB.prepare(`
      SELECT s.user_id, u.role FROM user_sessions s
      JOIN users u ON s.user_id = u.id
      WHERE s.session_token = ? AND u.is_active = 1
    `).bind(i).first();if(!a||a.role!=="worker")return e.json({error:"Worker account required"},403);const{business_license_number:n,business_registration_number:o,license_document_url:l,registration_document_url:d,insurance_document_url:c}=await e.req.json(),u=await e.env.DB.prepare(`
      SELECT bio FROM user_profiles WHERE user_id = ?
    `).bind(a.user_id).first();if(!(u!=null&&u.bio))return e.json({error:"Business information not found"},400);let p;try{p=JSON.parse(u.bio)}catch{return e.json({error:"Invalid business information format"},400)}return await e.env.DB.prepare(`
      SELECT id, status FROM business_verification_requests 
      WHERE user_id = ? AND status = 'pending'
    `).bind(a.user_id).first()?e.json({error:"Verification request already pending"},409):(await e.env.DB.prepare(`
      INSERT INTO business_verification_requests 
      (user_id, business_name, business_email, business_phone, 
       business_license_number, business_registration_number,
       license_document_url, registration_document_url, insurance_document_url)
      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(a.user_id,p.company_name||"",p.business_email||"",p.business_phone||"",n||null,o||null,l||null,d||null,c||null).run(),e.json({success:!0,message:"Business verification request submitted successfully"}))}catch(i){return console.error("Business verification request error:",i),e.json({error:"Failed to submit verification request"},500)}});var po=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function jg(e){if(Object.prototype.hasOwnProperty.call(e,"__esModule"))return e;var t=e.default;if(typeof t=="function"){var s=function r(){return this instanceof r?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};s.prototype=t.prototype}else s={};return Object.defineProperty(s,"__esModule",{value:!0}),Object.keys(e).forEach(function(r){var i=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(s,r,i.get?i:{enumerable:!0,get:function(){return e[r]}})}),s}var Mi,mo;function Ms(){return mo||(mo=1,Mi=TypeError),Mi}const Ig={},Mg=Object.freeze(Object.defineProperty({__proto__:null,default:Ig},Symbol.toStringTag,{value:"Module"})),Lg=jg(Mg);var Li,fo;function fi(){if(fo)return Li;fo=1;var e=typeof Map=="function"&&Map.prototype,t=Object.getOwnPropertyDescriptor&&e?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,s=e&&t&&typeof t.get=="function"?t.get:null,r=e&&Map.prototype.forEach,i=typeof Set=="function"&&Set.prototype,a=Object.getOwnPropertyDescriptor&&i?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,n=i&&a&&typeof a.get=="function"?a.get:null,o=i&&Set.prototype.forEach,l=typeof WeakMap=="function"&&WeakMap.prototype,d=l?WeakMap.prototype.has:null,c=typeof WeakSet=="function"&&WeakSet.prototype,u=c?WeakSet.prototype.has:null,p=typeof WeakRef=="function"&&WeakRef.prototype,m=p?WeakRef.prototype.deref:null,b=Boolean.prototype.valueOf,v=Object.prototype.toString,f=Function.prototype.toString,h=String.prototype.match,y=String.prototype.slice,w=String.prototype.replace,x=String.prototype.toUpperCase,S=String.prototype.toLowerCase,R=RegExp.prototype.test,C=Array.prototype.concat,N=Array.prototype.join,I=Array.prototype.slice,j=Math.floor,M=typeof BigInt=="function"?BigInt.prototype.valueOf:null,$=Object.getOwnPropertySymbols,Ee=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?Symbol.prototype.toString:null,pe=typeof Symbol=="function"&&typeof Symbol.iterator=="object",Ae=typeof Symbol=="function"&&Symbol.toStringTag&&(typeof Symbol.toStringTag===pe||!0)?Symbol.toStringTag:null,ot=Object.prototype.propertyIsEnumerable,lt=(typeof Reflect=="function"?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(_){return _.__proto__}:null);function G(_,E){if(_===1/0||_===-1/0||_!==_||_&&_>-1e3&&_<1e3||R.call(/e/,E))return E;var J=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if(typeof _=="number"){var te=_<0?-j(-_):j(_);if(te!==_){var ie=String(te),q=y.call(E,ie.length+1);return w.call(ie,J,"$&_")+"."+w.call(w.call(q,/([0-9]{3})/g,"$&_"),/_$/,"")}}return w.call(E,J,"$&_")}var Oe=Lg,dt=Oe.custom,Bt=ke(dt)?dt:null,yt={__proto__:null,double:'"',single:"'"},xt={__proto__:null,double:/(["\\])/g,single:/(['\\])/g};Li=function _(E,J,te,ie){var q=J||{};if(De(q,"quoteStyle")&&!De(yt,q.quoteStyle))throw new TypeError('option "quoteStyle" must be "single" or "double"');if(De(q,"maxStringLength")&&(typeof q.maxStringLength=="number"?q.maxStringLength<0&&q.maxStringLength!==1/0:q.maxStringLength!==null))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var Tt=De(q,"customInspect")?q.customInspect:!0;if(typeof Tt!="boolean"&&Tt!=="symbol")throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");if(De(q,"indent")&&q.indent!==null&&q.indent!=="	"&&!(parseInt(q.indent,10)===q.indent&&q.indent>0))throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');if(De(q,"numericSeparator")&&typeof q.numericSeparator!="boolean")throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');var Ut=q.numericSeparator;if(typeof E>"u")return"undefined";if(E===null)return"null";if(typeof E=="boolean")return E?"true":"false";if(typeof E=="string")return Rn(E,q);if(typeof E=="number"){if(E===0)return 1/0/E>0?"0":"-0";var je=String(E);return Ut?G(E,je):je}if(typeof E=="bigint"){var St=String(E)+"n";return Ut?G(E,St):St}var Ei=typeof q.depth>"u"?5:q.depth;if(typeof te>"u"&&(te=0),te>=Ei&&Ei>0&&typeof E=="object")return _t(E)?"[Array]":"[Object]";var cs=kc(q,te);if(typeof ie>"u")ie=[];else if(kt(ie,E)>=0)return"[Circular]";function Je(us,_r,Sc){if(_r&&(ie=I.call(ie),ie.push(_r)),Sc){var Mn={depth:q.depth};return De(q,"quoteStyle")&&(Mn.quoteStyle=q.quoteStyle),_(us,Mn,te+1,ie)}return _(us,q,te+1,ie)}if(typeof E=="function"&&!ye(E)){var Dn=ns(E),Nn=xr(E,Je);return"[Function"+(Dn?": "+Dn:" (anonymous)")+"]"+(Nn.length>0?" { "+N.call(Nn,", ")+" }":"")}if(ke(E)){var Pn=pe?w.call(String(E),/^(Symbol\(.*\))_[^)]*$/,"$1"):Ee.call(E);return typeof E=="object"&&!pe?Fs(Pn):Pn}if(wc(E)){for(var Bs="<"+S.call(String(E.nodeName)),ki=E.attributes||[],wr=0;wr<ki.length;wr++)Bs+=" "+ki[wr].name+"="+wt(ct(ki[wr].value),"double",q);return Bs+=">",E.childNodes&&E.childNodes.length&&(Bs+="..."),Bs+="</"+S.call(String(E.nodeName))+">",Bs}if(_t(E)){if(E.length===0)return"[]";var Ti=xr(E,Je);return cs&&!Ec(Ti)?"["+_i(Ti,cs)+"]":"[ "+N.call(Ti,", ")+" ]"}if(z(E)){var Si=xr(E,Je);return!("cause"in Error.prototype)&&"cause"in E&&!ot.call(E,"cause")?"{ ["+String(E)+"] "+N.call(C.call("[cause]: "+Je(E.cause),Si),", ")+" }":Si.length===0?"["+String(E)+"]":"{ ["+String(E)+"] "+N.call(Si,", ")+" }"}if(typeof E=="object"&&Tt){if(Bt&&typeof E[Bt]=="function"&&Oe)return Oe(E,{depth:Ei-te});if(Tt!=="symbol"&&typeof E.inspect=="function")return E.inspect()}if(ze(E)){var An=[];return r&&r.call(E,function(us,_r){An.push(Je(_r,E,!0)+" => "+Je(us,E))}),Cn("Map",s.call(E),An,cs)}if(ds(E)){var On=[];return o&&o.call(E,function(us){On.push(Je(us,E))}),Cn("Set",n.call(E),On,cs)}if(os(E))return wi("WeakMap");if(xc(E))return wi("WeakSet");if(ls(E))return wi("WeakRef");if(ee(E))return Fs(Je(Number(E)));if(Fe(E))return Fs(Je(M.call(E)));if(fe(E))return Fs(b.call(E));if(ue(E))return Fs(Je(String(E)));if(typeof window<"u"&&E===window)return"{ [object Window] }";if(typeof globalThis<"u"&&E===globalThis||typeof po<"u"&&E===po)return"{ [object globalThis] }";if(!Et(E)&&!ye(E)){var Ri=xr(E,Je),jn=lt?lt(E)===Object.prototype:E instanceof Object||E.constructor===Object,Ci=E instanceof Object?"":"null prototype",In=!jn&&Ae&&Object(E)===E&&Ae in E?y.call(Be(E),8,-1):Ci?"Object":"",Tc=jn||typeof E.constructor!="function"?"":E.constructor.name?E.constructor.name+" ":"",Di=Tc+(In||Ci?"["+N.call(C.call([],In||[],Ci||[]),": ")+"] ":"");return Ri.length===0?Di+"{}":cs?Di+"{"+_i(Ri,cs)+"}":Di+"{ "+N.call(Ri,", ")+" }"}return String(E)};function wt(_,E,J){var te=J.quoteStyle||E,ie=yt[te];return ie+_+ie}function ct(_){return w.call(String(_),/"/g,"&quot;")}function $e(_){return!Ae||!(typeof _=="object"&&(Ae in _||typeof _[Ae]<"u"))}function _t(_){return Be(_)==="[object Array]"&&$e(_)}function Et(_){return Be(_)==="[object Date]"&&$e(_)}function ye(_){return Be(_)==="[object RegExp]"&&$e(_)}function z(_){return Be(_)==="[object Error]"&&$e(_)}function ue(_){return Be(_)==="[object String]"&&$e(_)}function ee(_){return Be(_)==="[object Number]"&&$e(_)}function fe(_){return Be(_)==="[object Boolean]"&&$e(_)}function ke(_){if(pe)return _&&typeof _=="object"&&_ instanceof Symbol;if(typeof _=="symbol")return!0;if(!_||typeof _!="object"||!Ee)return!1;try{return Ee.call(_),!0}catch{}return!1}function Fe(_){if(!_||typeof _!="object"||!M)return!1;try{return M.call(_),!0}catch{}return!1}var Te=Object.prototype.hasOwnProperty||function(_){return _ in this};function De(_,E){return Te.call(_,E)}function Be(_){return v.call(_)}function ns(_){if(_.name)return _.name;var E=h.call(f.call(_),/^function\s*([\w$]+)/);return E?E[1]:null}function kt(_,E){if(_.indexOf)return _.indexOf(E);for(var J=0,te=_.length;J<te;J++)if(_[J]===E)return J;return-1}function ze(_){if(!s||!_||typeof _!="object")return!1;try{s.call(_);try{n.call(_)}catch{return!0}return _ instanceof Map}catch{}return!1}function os(_){if(!d||!_||typeof _!="object")return!1;try{d.call(_,d);try{u.call(_,u)}catch{return!0}return _ instanceof WeakMap}catch{}return!1}function ls(_){if(!m||!_||typeof _!="object")return!1;try{return m.call(_),!0}catch{}return!1}function ds(_){if(!n||!_||typeof _!="object")return!1;try{n.call(_);try{s.call(_)}catch{return!0}return _ instanceof Set}catch{}return!1}function xc(_){if(!u||!_||typeof _!="object")return!1;try{u.call(_,u);try{d.call(_,d)}catch{return!0}return _ instanceof WeakSet}catch{}return!1}function wc(_){return!_||typeof _!="object"?!1:typeof HTMLElement<"u"&&_ instanceof HTMLElement?!0:typeof _.nodeName=="string"&&typeof _.getAttribute=="function"}function Rn(_,E){if(_.length>E.maxStringLength){var J=_.length-E.maxStringLength,te="... "+J+" more character"+(J>1?"s":"");return Rn(y.call(_,0,E.maxStringLength),E)+te}var ie=xt[E.quoteStyle||"single"];ie.lastIndex=0;var q=w.call(w.call(_,ie,"\\$1"),/[\x00-\x1f]/g,_c);return wt(q,"single",E)}function _c(_){var E=_.charCodeAt(0),J={8:"b",9:"t",10:"n",12:"f",13:"r"}[E];return J?"\\"+J:"\\x"+(E<16?"0":"")+x.call(E.toString(16))}function Fs(_){return"Object("+_+")"}function wi(_){return _+" { ? }"}function Cn(_,E,J,te){var ie=te?_i(J,te):N.call(J,", ");return _+" ("+E+") {"+ie+"}"}function Ec(_){for(var E=0;E<_.length;E++)if(kt(_[E],`
`)>=0)return!1;return!0}function kc(_,E){var J;if(_.indent==="	")J="	";else if(typeof _.indent=="number"&&_.indent>0)J=N.call(Array(_.indent+1)," ");else return null;return{base:J,prev:N.call(Array(E+1),J)}}function _i(_,E){if(_.length===0)return"";var J=`
`+E.prev+E.base;return J+N.call(_,","+J)+`
`+E.prev}function xr(_,E){var J=_t(_),te=[];if(J){te.length=_.length;for(var ie=0;ie<_.length;ie++)te[ie]=De(_,ie)?E(_[ie],_):""}var q=typeof $=="function"?$(_):[],Tt;if(pe){Tt={};for(var Ut=0;Ut<q.length;Ut++)Tt["$"+q[Ut]]=q[Ut]}for(var je in _)De(_,je)&&(J&&String(Number(je))===je&&je<_.length||pe&&Tt["$"+je]instanceof Symbol||(R.call(/[^\w$]/,je)?te.push(E(je,_)+": "+E(_[je],_)):te.push(je+": "+E(_[je],_))));if(typeof $=="function")for(var St=0;St<q.length;St++)ot.call(_,q[St])&&te.push("["+E(q[St])+"]: "+E(_[q[St]],_));return te}return Li}var $i,go;function $g(){if(go)return $i;go=1;var e=fi(),t=Ms(),s=function(o,l,d){for(var c=o,u;(u=c.next)!=null;c=u)if(u.key===l)return c.next=u.next,d||(u.next=o.next,o.next=u),u},r=function(o,l){if(o){var d=s(o,l);return d&&d.value}},i=function(o,l,d){var c=s(o,l);c?c.value=d:o.next={key:l,next:o.next,value:d}},a=function(o,l){return o?!!s(o,l):!1},n=function(o,l){if(o)return s(o,l,!0)};return $i=function(){var l,d={assert:function(c){if(!d.has(c))throw new t("Side channel does not contain "+e(c))},delete:function(c){var u=l&&l.next,p=n(l,c);return p&&u&&u===p&&(l=void 0),!!p},get:function(c){return r(l,c)},has:function(c){return a(l,c)},set:function(c,u){l||(l={next:void 0}),i(l,c,u)}};return d},$i}var Fi,vo;function Hd(){return vo||(vo=1,Fi=Object),Fi}var Bi,ho;function Fg(){return ho||(ho=1,Bi=Error),Bi}var Ui,bo;function Bg(){return bo||(bo=1,Ui=EvalError),Ui}var Hi,yo;function Ug(){return yo||(yo=1,Hi=RangeError),Hi}var qi,xo;function Hg(){return xo||(xo=1,qi=ReferenceError),qi}var Wi,wo;function qg(){return wo||(wo=1,Wi=SyntaxError),Wi}var Gi,_o;function Wg(){return _o||(_o=1,Gi=URIError),Gi}var zi,Eo;function Gg(){return Eo||(Eo=1,zi=Math.abs),zi}var Ji,ko;function zg(){return ko||(ko=1,Ji=Math.floor),Ji}var Vi,To;function Jg(){return To||(To=1,Vi=Math.max),Vi}var Yi,So;function Vg(){return So||(So=1,Yi=Math.min),Yi}var Ki,Ro;function Yg(){return Ro||(Ro=1,Ki=Math.pow),Ki}var Zi,Co;function Kg(){return Co||(Co=1,Zi=Math.round),Zi}var Qi,Do;function Zg(){return Do||(Do=1,Qi=Number.isNaN||function(t){return t!==t}),Qi}var Xi,No;function Qg(){if(No)return Xi;No=1;var e=Zg();return Xi=function(s){return e(s)||s===0?s:s<0?-1:1},Xi}var ea,Po;function Xg(){return Po||(Po=1,ea=Object.getOwnPropertyDescriptor),ea}var ta,Ao;function qd(){if(Ao)return ta;Ao=1;var e=Xg();if(e)try{e([],"length")}catch{e=null}return ta=e,ta}var sa,Oo;function ev(){if(Oo)return sa;Oo=1;var e=Object.defineProperty||!1;if(e)try{e({},"a",{value:1})}catch{e=!1}return sa=e,sa}var ra,jo;function tv(){return jo||(jo=1,ra=function(){if(typeof Symbol!="function"||typeof Object.getOwnPropertySymbols!="function")return!1;if(typeof Symbol.iterator=="symbol")return!0;var t={},s=Symbol("test"),r=Object(s);if(typeof s=="string"||Object.prototype.toString.call(s)!=="[object Symbol]"||Object.prototype.toString.call(r)!=="[object Symbol]")return!1;var i=42;t[s]=i;for(var a in t)return!1;if(typeof Object.keys=="function"&&Object.keys(t).length!==0||typeof Object.getOwnPropertyNames=="function"&&Object.getOwnPropertyNames(t).length!==0)return!1;var n=Object.getOwnPropertySymbols(t);if(n.length!==1||n[0]!==s||!Object.prototype.propertyIsEnumerable.call(t,s))return!1;if(typeof Object.getOwnPropertyDescriptor=="function"){var o=Object.getOwnPropertyDescriptor(t,s);if(o.value!==i||o.enumerable!==!0)return!1}return!0}),ra}var ia,Io;function sv(){if(Io)return ia;Io=1;var e=typeof Symbol<"u"&&Symbol,t=tv();return ia=function(){return typeof e!="function"||typeof Symbol!="function"||typeof e("foo")!="symbol"||typeof Symbol("bar")!="symbol"?!1:t()},ia}var aa,Mo;function Wd(){return Mo||(Mo=1,aa=typeof Reflect<"u"&&Reflect.getPrototypeOf||null),aa}var na,Lo;function Gd(){if(Lo)return na;Lo=1;var e=Hd();return na=e.getPrototypeOf||null,na}var oa,$o;function rv(){if($o)return oa;$o=1;var e="Function.prototype.bind called on incompatible ",t=Object.prototype.toString,s=Math.max,r="[object Function]",i=function(l,d){for(var c=[],u=0;u<l.length;u+=1)c[u]=l[u];for(var p=0;p<d.length;p+=1)c[p+l.length]=d[p];return c},a=function(l,d){for(var c=[],u=d,p=0;u<l.length;u+=1,p+=1)c[p]=l[u];return c},n=function(o,l){for(var d="",c=0;c<o.length;c+=1)d+=o[c],c+1<o.length&&(d+=l);return d};return oa=function(l){var d=this;if(typeof d!="function"||t.apply(d)!==r)throw new TypeError(e+d);for(var c=a(arguments,1),u,p=function(){if(this instanceof u){var h=d.apply(this,i(c,arguments));return Object(h)===h?h:this}return d.apply(l,i(c,arguments))},m=s(0,d.length-c.length),b=[],v=0;v<m;v++)b[v]="$"+v;if(u=Function("binder","return function ("+n(b,",")+"){ return binder.apply(this,arguments); }")(p),d.prototype){var f=function(){};f.prototype=d.prototype,u.prototype=new f,f.prototype=null}return u},oa}var la,Fo;function gi(){if(Fo)return la;Fo=1;var e=rv();return la=Function.prototype.bind||e,la}var da,Bo;function mn(){return Bo||(Bo=1,da=Function.prototype.call),da}var ca,Uo;function zd(){return Uo||(Uo=1,ca=Function.prototype.apply),ca}var ua,Ho;function iv(){return Ho||(Ho=1,ua=typeof Reflect<"u"&&Reflect&&Reflect.apply),ua}var pa,qo;function av(){if(qo)return pa;qo=1;var e=gi(),t=zd(),s=mn(),r=iv();return pa=r||e.call(s,t),pa}var ma,Wo;function Jd(){if(Wo)return ma;Wo=1;var e=gi(),t=Ms(),s=mn(),r=av();return ma=function(a){if(a.length<1||typeof a[0]!="function")throw new t("a function is required");return r(e,s,a)},ma}var fa,Go;function nv(){if(Go)return fa;Go=1;var e=Jd(),t=qd(),s;try{s=[].__proto__===Array.prototype}catch(n){if(!n||typeof n!="object"||!("code"in n)||n.code!=="ERR_PROTO_ACCESS")throw n}var r=!!s&&t&&t(Object.prototype,"__proto__"),i=Object,a=i.getPrototypeOf;return fa=r&&typeof r.get=="function"?e([r.get]):typeof a=="function"?function(o){return a(o==null?o:i(o))}:!1,fa}var ga,zo;function ov(){if(zo)return ga;zo=1;var e=Wd(),t=Gd(),s=nv();return ga=e?function(i){return e(i)}:t?function(i){if(!i||typeof i!="object"&&typeof i!="function")throw new TypeError("getProto: not an object");return t(i)}:s?function(i){return s(i)}:null,ga}var va,Jo;function lv(){if(Jo)return va;Jo=1;var e=Function.prototype.call,t=Object.prototype.hasOwnProperty,s=gi();return va=s.call(e,t),va}var ha,Vo;function fn(){if(Vo)return ha;Vo=1;var e,t=Hd(),s=Fg(),r=Bg(),i=Ug(),a=Hg(),n=qg(),o=Ms(),l=Wg(),d=Gg(),c=zg(),u=Jg(),p=Vg(),m=Yg(),b=Kg(),v=Qg(),f=Function,h=function(ye){try{return f('"use strict"; return ('+ye+").constructor;")()}catch{}},y=qd(),w=ev(),x=function(){throw new o},S=y?(function(){try{return arguments.callee,x}catch{try{return y(arguments,"callee").get}catch{return x}}})():x,R=sv()(),C=ov(),N=Gd(),I=Wd(),j=zd(),M=mn(),$={},Ee=typeof Uint8Array>"u"||!C?e:C(Uint8Array),pe={__proto__:null,"%AggregateError%":typeof AggregateError>"u"?e:AggregateError,"%Array%":Array,"%ArrayBuffer%":typeof ArrayBuffer>"u"?e:ArrayBuffer,"%ArrayIteratorPrototype%":R&&C?C([][Symbol.iterator]()):e,"%AsyncFromSyncIteratorPrototype%":e,"%AsyncFunction%":$,"%AsyncGenerator%":$,"%AsyncGeneratorFunction%":$,"%AsyncIteratorPrototype%":$,"%Atomics%":typeof Atomics>"u"?e:Atomics,"%BigInt%":typeof BigInt>"u"?e:BigInt,"%BigInt64Array%":typeof BigInt64Array>"u"?e:BigInt64Array,"%BigUint64Array%":typeof BigUint64Array>"u"?e:BigUint64Array,"%Boolean%":Boolean,"%DataView%":typeof DataView>"u"?e:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":s,"%eval%":eval,"%EvalError%":r,"%Float16Array%":typeof Float16Array>"u"?e:Float16Array,"%Float32Array%":typeof Float32Array>"u"?e:Float32Array,"%Float64Array%":typeof Float64Array>"u"?e:Float64Array,"%FinalizationRegistry%":typeof FinalizationRegistry>"u"?e:FinalizationRegistry,"%Function%":f,"%GeneratorFunction%":$,"%Int8Array%":typeof Int8Array>"u"?e:Int8Array,"%Int16Array%":typeof Int16Array>"u"?e:Int16Array,"%Int32Array%":typeof Int32Array>"u"?e:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":R&&C?C(C([][Symbol.iterator]())):e,"%JSON%":typeof JSON=="object"?JSON:e,"%Map%":typeof Map>"u"?e:Map,"%MapIteratorPrototype%":typeof Map>"u"||!R||!C?e:C(new Map()[Symbol.iterator]()),"%Math%":Math,"%Number%":Number,"%Object%":t,"%Object.getOwnPropertyDescriptor%":y,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":typeof Promise>"u"?e:Promise,"%Proxy%":typeof Proxy>"u"?e:Proxy,"%RangeError%":i,"%ReferenceError%":a,"%Reflect%":typeof Reflect>"u"?e:Reflect,"%RegExp%":RegExp,"%Set%":typeof Set>"u"?e:Set,"%SetIteratorPrototype%":typeof Set>"u"||!R||!C?e:C(new Set()[Symbol.iterator]()),"%SharedArrayBuffer%":typeof SharedArrayBuffer>"u"?e:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":R&&C?C(""[Symbol.iterator]()):e,"%Symbol%":R?Symbol:e,"%SyntaxError%":n,"%ThrowTypeError%":S,"%TypedArray%":Ee,"%TypeError%":o,"%Uint8Array%":typeof Uint8Array>"u"?e:Uint8Array,"%Uint8ClampedArray%":typeof Uint8ClampedArray>"u"?e:Uint8ClampedArray,"%Uint16Array%":typeof Uint16Array>"u"?e:Uint16Array,"%Uint32Array%":typeof Uint32Array>"u"?e:Uint32Array,"%URIError%":l,"%WeakMap%":typeof WeakMap>"u"?e:WeakMap,"%WeakRef%":typeof WeakRef>"u"?e:WeakRef,"%WeakSet%":typeof WeakSet>"u"?e:WeakSet,"%Function.prototype.call%":M,"%Function.prototype.apply%":j,"%Object.defineProperty%":w,"%Object.getPrototypeOf%":N,"%Math.abs%":d,"%Math.floor%":c,"%Math.max%":u,"%Math.min%":p,"%Math.pow%":m,"%Math.round%":b,"%Math.sign%":v,"%Reflect.getPrototypeOf%":I};if(C)try{null.error}catch(ye){var Ae=C(C(ye));pe["%Error.prototype%"]=Ae}var ot=function ye(z){var ue;if(z==="%AsyncFunction%")ue=h("async function () {}");else if(z==="%GeneratorFunction%")ue=h("function* () {}");else if(z==="%AsyncGeneratorFunction%")ue=h("async function* () {}");else if(z==="%AsyncGenerator%"){var ee=ye("%AsyncGeneratorFunction%");ee&&(ue=ee.prototype)}else if(z==="%AsyncIteratorPrototype%"){var fe=ye("%AsyncGenerator%");fe&&C&&(ue=C(fe.prototype))}return pe[z]=ue,ue},lt={__proto__:null,"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},G=gi(),Oe=lv(),dt=G.call(M,Array.prototype.concat),Bt=G.call(j,Array.prototype.splice),yt=G.call(M,String.prototype.replace),xt=G.call(M,String.prototype.slice),wt=G.call(M,RegExp.prototype.exec),ct=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,$e=/\\(\\)?/g,_t=function(z){var ue=xt(z,0,1),ee=xt(z,-1);if(ue==="%"&&ee!=="%")throw new n("invalid intrinsic syntax, expected closing `%`");if(ee==="%"&&ue!=="%")throw new n("invalid intrinsic syntax, expected opening `%`");var fe=[];return yt(z,ct,function(ke,Fe,Te,De){fe[fe.length]=Te?yt(De,$e,"$1"):Fe||ke}),fe},Et=function(z,ue){var ee=z,fe;if(Oe(lt,ee)&&(fe=lt[ee],ee="%"+fe[0]+"%"),Oe(pe,ee)){var ke=pe[ee];if(ke===$&&(ke=ot(ee)),typeof ke>"u"&&!ue)throw new o("intrinsic "+z+" exists, but is not available. Please file an issue!");return{alias:fe,name:ee,value:ke}}throw new n("intrinsic "+z+" does not exist!")};return ha=function(z,ue){if(typeof z!="string"||z.length===0)throw new o("intrinsic name must be a non-empty string");if(arguments.length>1&&typeof ue!="boolean")throw new o('"allowMissing" argument must be a boolean');if(wt(/^%?[^%]*%?$/,z)===null)throw new n("`%` may not be present anywhere but at the beginning and end of the intrinsic name");var ee=_t(z),fe=ee.length>0?ee[0]:"",ke=Et("%"+fe+"%",ue),Fe=ke.name,Te=ke.value,De=!1,Be=ke.alias;Be&&(fe=Be[0],Bt(ee,dt([0,1],Be)));for(var ns=1,kt=!0;ns<ee.length;ns+=1){var ze=ee[ns],os=xt(ze,0,1),ls=xt(ze,-1);if((os==='"'||os==="'"||os==="`"||ls==='"'||ls==="'"||ls==="`")&&os!==ls)throw new n("property names with quotes must have matching quotes");if((ze==="constructor"||!kt)&&(De=!0),fe+="."+ze,Fe="%"+fe+"%",Oe(pe,Fe))Te=pe[Fe];else if(Te!=null){if(!(ze in Te)){if(!ue)throw new o("base intrinsic for "+z+" exists, but the property is not available.");return}if(y&&ns+1>=ee.length){var ds=y(Te,ze);kt=!!ds,kt&&"get"in ds&&!("originalValue"in ds.get)?Te=ds.get:Te=Te[ze]}else kt=Oe(Te,ze),Te=Te[ze];kt&&!De&&(pe[Fe]=Te)}}return Te},ha}var ba,Yo;function Vd(){if(Yo)return ba;Yo=1;var e=fn(),t=Jd(),s=t([e("%String.prototype.indexOf%")]);return ba=function(i,a){var n=e(i,!!a);return typeof n=="function"&&s(i,".prototype.")>-1?t([n]):n},ba}var ya,Ko;function Yd(){if(Ko)return ya;Ko=1;var e=fn(),t=Vd(),s=fi(),r=Ms(),i=e("%Map%",!0),a=t("Map.prototype.get",!0),n=t("Map.prototype.set",!0),o=t("Map.prototype.has",!0),l=t("Map.prototype.delete",!0),d=t("Map.prototype.size",!0);return ya=!!i&&function(){var u,p={assert:function(m){if(!p.has(m))throw new r("Side channel does not contain "+s(m))},delete:function(m){if(u){var b=l(u,m);return d(u)===0&&(u=void 0),b}return!1},get:function(m){if(u)return a(u,m)},has:function(m){return u?o(u,m):!1},set:function(m,b){u||(u=new i),n(u,m,b)}};return p},ya}var xa,Zo;function dv(){if(Zo)return xa;Zo=1;var e=fn(),t=Vd(),s=fi(),r=Yd(),i=Ms(),a=e("%WeakMap%",!0),n=t("WeakMap.prototype.get",!0),o=t("WeakMap.prototype.set",!0),l=t("WeakMap.prototype.has",!0),d=t("WeakMap.prototype.delete",!0);return xa=a?function(){var u,p,m={assert:function(b){if(!m.has(b))throw new i("Side channel does not contain "+s(b))},delete:function(b){if(a&&b&&(typeof b=="object"||typeof b=="function")){if(u)return d(u,b)}else if(r&&p)return p.delete(b);return!1},get:function(b){return a&&b&&(typeof b=="object"||typeof b=="function")&&u?n(u,b):p&&p.get(b)},has:function(b){return a&&b&&(typeof b=="object"||typeof b=="function")&&u?l(u,b):!!p&&p.has(b)},set:function(b,v){a&&b&&(typeof b=="object"||typeof b=="function")?(u||(u=new a),o(u,b,v)):r&&(p||(p=r()),p.set(b,v))}};return m}:r,xa}var wa,Qo;function cv(){if(Qo)return wa;Qo=1;var e=Ms(),t=fi(),s=$g(),r=Yd(),i=dv(),a=i||r||s;return wa=function(){var o,l={assert:function(d){if(!l.has(d))throw new e("Side channel does not contain "+t(d))},delete:function(d){return!!o&&o.delete(d)},get:function(d){return o&&o.get(d)},has:function(d){return!!o&&o.has(d)},set:function(d,c){o||(o=a()),o.set(d,c)}};return l},wa}var _a,Xo;function gn(){if(Xo)return _a;Xo=1;var e=String.prototype.replace,t=/%20/g,s={RFC1738:"RFC1738",RFC3986:"RFC3986"};return _a={default:s.RFC3986,formatters:{RFC1738:function(r){return e.call(r,t,"+")},RFC3986:function(r){return String(r)}},RFC1738:s.RFC1738,RFC3986:s.RFC3986},_a}var Ea,el;function Kd(){if(el)return Ea;el=1;var e=gn(),t=Object.prototype.hasOwnProperty,s=Array.isArray,r=(function(){for(var f=[],h=0;h<256;++h)f.push("%"+((h<16?"0":"")+h.toString(16)).toUpperCase());return f})(),i=function(h){for(;h.length>1;){var y=h.pop(),w=y.obj[y.prop];if(s(w)){for(var x=[],S=0;S<w.length;++S)typeof w[S]<"u"&&x.push(w[S]);y.obj[y.prop]=x}}},a=function(h,y){for(var w=y&&y.plainObjects?{__proto__:null}:{},x=0;x<h.length;++x)typeof h[x]<"u"&&(w[x]=h[x]);return w},n=function f(h,y,w){if(!y)return h;if(typeof y!="object"&&typeof y!="function"){if(s(h))h.push(y);else if(h&&typeof h=="object")(w&&(w.plainObjects||w.allowPrototypes)||!t.call(Object.prototype,y))&&(h[y]=!0);else return[h,y];return h}if(!h||typeof h!="object")return[h].concat(y);var x=h;return s(h)&&!s(y)&&(x=a(h,w)),s(h)&&s(y)?(y.forEach(function(S,R){if(t.call(h,R)){var C=h[R];C&&typeof C=="object"&&S&&typeof S=="object"?h[R]=f(C,S,w):h.push(S)}else h[R]=S}),h):Object.keys(y).reduce(function(S,R){var C=y[R];return t.call(S,R)?S[R]=f(S[R],C,w):S[R]=C,S},x)},o=function(h,y){return Object.keys(y).reduce(function(w,x){return w[x]=y[x],w},h)},l=function(f,h,y){var w=f.replace(/\+/g," ");if(y==="iso-8859-1")return w.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(w)}catch{return w}},d=1024,c=function(h,y,w,x,S){if(h.length===0)return h;var R=h;if(typeof h=="symbol"?R=Symbol.prototype.toString.call(h):typeof h!="string"&&(R=String(h)),w==="iso-8859-1")return escape(R).replace(/%u[0-9a-f]{4}/gi,function(Ee){return"%26%23"+parseInt(Ee.slice(2),16)+"%3B"});for(var C="",N=0;N<R.length;N+=d){for(var I=R.length>=d?R.slice(N,N+d):R,j=[],M=0;M<I.length;++M){var $=I.charCodeAt(M);if($===45||$===46||$===95||$===126||$>=48&&$<=57||$>=65&&$<=90||$>=97&&$<=122||S===e.RFC1738&&($===40||$===41)){j[j.length]=I.charAt(M);continue}if($<128){j[j.length]=r[$];continue}if($<2048){j[j.length]=r[192|$>>6]+r[128|$&63];continue}if($<55296||$>=57344){j[j.length]=r[224|$>>12]+r[128|$>>6&63]+r[128|$&63];continue}M+=1,$=65536+(($&1023)<<10|I.charCodeAt(M)&1023),j[j.length]=r[240|$>>18]+r[128|$>>12&63]+r[128|$>>6&63]+r[128|$&63]}C+=j.join("")}return C},u=function(h){for(var y=[{obj:{o:h},prop:"o"}],w=[],x=0;x<y.length;++x)for(var S=y[x],R=S.obj[S.prop],C=Object.keys(R),N=0;N<C.length;++N){var I=C[N],j=R[I];typeof j=="object"&&j!==null&&w.indexOf(j)===-1&&(y.push({obj:R,prop:I}),w.push(j))}return i(y),h},p=function(h){return Object.prototype.toString.call(h)==="[object RegExp]"},m=function(h){return!h||typeof h!="object"?!1:!!(h.constructor&&h.constructor.isBuffer&&h.constructor.isBuffer(h))},b=function(h,y){return[].concat(h,y)},v=function(h,y){if(s(h)){for(var w=[],x=0;x<h.length;x+=1)w.push(y(h[x]));return w}return y(h)};return Ea={arrayToObject:a,assign:o,combine:b,compact:u,decode:l,encode:c,isBuffer:m,isRegExp:p,maybeMap:v,merge:n},Ea}var ka,tl;function uv(){if(tl)return ka;tl=1;var e=cv(),t=Kd(),s=gn(),r=Object.prototype.hasOwnProperty,i={brackets:function(f){return f+"[]"},comma:"comma",indices:function(f,h){return f+"["+h+"]"},repeat:function(f){return f}},a=Array.isArray,n=Array.prototype.push,o=function(v,f){n.apply(v,a(f)?f:[f])},l=Date.prototype.toISOString,d=s.default,c={addQueryPrefix:!1,allowDots:!1,allowEmptyArrays:!1,arrayFormat:"indices",charset:"utf-8",charsetSentinel:!1,commaRoundTrip:!1,delimiter:"&",encode:!0,encodeDotInKeys:!1,encoder:t.encode,encodeValuesOnly:!1,filter:void 0,format:d,formatter:s.formatters[d],indices:!1,serializeDate:function(f){return l.call(f)},skipNulls:!1,strictNullHandling:!1},u=function(f){return typeof f=="string"||typeof f=="number"||typeof f=="boolean"||typeof f=="symbol"||typeof f=="bigint"},p={},m=function v(f,h,y,w,x,S,R,C,N,I,j,M,$,Ee,pe,Ae,ot,lt){for(var G=f,Oe=lt,dt=0,Bt=!1;(Oe=Oe.get(p))!==void 0&&!Bt;){var yt=Oe.get(f);if(dt+=1,typeof yt<"u"){if(yt===dt)throw new RangeError("Cyclic object value");Bt=!0}typeof Oe.get(p)>"u"&&(dt=0)}if(typeof I=="function"?G=I(h,G):G instanceof Date?G=$(G):y==="comma"&&a(G)&&(G=t.maybeMap(G,function(Fe){return Fe instanceof Date?$(Fe):Fe})),G===null){if(S)return N&&!Ae?N(h,c.encoder,ot,"key",Ee):h;G=""}if(u(G)||t.isBuffer(G)){if(N){var xt=Ae?h:N(h,c.encoder,ot,"key",Ee);return[pe(xt)+"="+pe(N(G,c.encoder,ot,"value",Ee))]}return[pe(h)+"="+pe(String(G))]}var wt=[];if(typeof G>"u")return wt;var ct;if(y==="comma"&&a(G))Ae&&N&&(G=t.maybeMap(G,N)),ct=[{value:G.length>0?G.join(",")||null:void 0}];else if(a(I))ct=I;else{var $e=Object.keys(G);ct=j?$e.sort(j):$e}var _t=C?String(h).replace(/\./g,"%2E"):String(h),Et=w&&a(G)&&G.length===1?_t+"[]":_t;if(x&&a(G)&&G.length===0)return Et+"[]";for(var ye=0;ye<ct.length;++ye){var z=ct[ye],ue=typeof z=="object"&&z&&typeof z.value<"u"?z.value:G[z];if(!(R&&ue===null)){var ee=M&&C?String(z).replace(/\./g,"%2E"):String(z),fe=a(G)?typeof y=="function"?y(Et,ee):Et:Et+(M?"."+ee:"["+ee+"]");lt.set(f,dt);var ke=e();ke.set(p,lt),o(wt,v(ue,fe,y,w,x,S,R,C,y==="comma"&&Ae&&a(G)?null:N,I,j,M,$,Ee,pe,Ae,ot,ke))}}return wt},b=function(f){if(!f)return c;if(typeof f.allowEmptyArrays<"u"&&typeof f.allowEmptyArrays!="boolean")throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");if(typeof f.encodeDotInKeys<"u"&&typeof f.encodeDotInKeys!="boolean")throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");if(f.encoder!==null&&typeof f.encoder<"u"&&typeof f.encoder!="function")throw new TypeError("Encoder has to be a function.");var h=f.charset||c.charset;if(typeof f.charset<"u"&&f.charset!=="utf-8"&&f.charset!=="iso-8859-1")throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var y=s.default;if(typeof f.format<"u"){if(!r.call(s.formatters,f.format))throw new TypeError("Unknown format option provided.");y=f.format}var w=s.formatters[y],x=c.filter;(typeof f.filter=="function"||a(f.filter))&&(x=f.filter);var S;if(f.arrayFormat in i?S=f.arrayFormat:"indices"in f?S=f.indices?"indices":"repeat":S=c.arrayFormat,"commaRoundTrip"in f&&typeof f.commaRoundTrip!="boolean")throw new TypeError("`commaRoundTrip` must be a boolean, or absent");var R=typeof f.allowDots>"u"?f.encodeDotInKeys===!0?!0:c.allowDots:!!f.allowDots;return{addQueryPrefix:typeof f.addQueryPrefix=="boolean"?f.addQueryPrefix:c.addQueryPrefix,allowDots:R,allowEmptyArrays:typeof f.allowEmptyArrays=="boolean"?!!f.allowEmptyArrays:c.allowEmptyArrays,arrayFormat:S,charset:h,charsetSentinel:typeof f.charsetSentinel=="boolean"?f.charsetSentinel:c.charsetSentinel,commaRoundTrip:!!f.commaRoundTrip,delimiter:typeof f.delimiter>"u"?c.delimiter:f.delimiter,encode:typeof f.encode=="boolean"?f.encode:c.encode,encodeDotInKeys:typeof f.encodeDotInKeys=="boolean"?f.encodeDotInKeys:c.encodeDotInKeys,encoder:typeof f.encoder=="function"?f.encoder:c.encoder,encodeValuesOnly:typeof f.encodeValuesOnly=="boolean"?f.encodeValuesOnly:c.encodeValuesOnly,filter:x,format:y,formatter:w,serializeDate:typeof f.serializeDate=="function"?f.serializeDate:c.serializeDate,skipNulls:typeof f.skipNulls=="boolean"?f.skipNulls:c.skipNulls,sort:typeof f.sort=="function"?f.sort:null,strictNullHandling:typeof f.strictNullHandling=="boolean"?f.strictNullHandling:c.strictNullHandling}};return ka=function(v,f){var h=v,y=b(f),w,x;typeof y.filter=="function"?(x=y.filter,h=x("",h)):a(y.filter)&&(x=y.filter,w=x);var S=[];if(typeof h!="object"||h===null)return"";var R=i[y.arrayFormat],C=R==="comma"&&y.commaRoundTrip;w||(w=Object.keys(h)),y.sort&&w.sort(y.sort);for(var N=e(),I=0;I<w.length;++I){var j=w[I],M=h[j];y.skipNulls&&M===null||o(S,m(M,j,R,C,y.allowEmptyArrays,y.strictNullHandling,y.skipNulls,y.encodeDotInKeys,y.encode?y.encoder:null,y.filter,y.sort,y.allowDots,y.serializeDate,y.format,y.formatter,y.encodeValuesOnly,y.charset,N))}var $=S.join(y.delimiter),Ee=y.addQueryPrefix===!0?"?":"";return y.charsetSentinel&&(y.charset==="iso-8859-1"?Ee+="utf8=%26%2310003%3B&":Ee+="utf8=%E2%9C%93&"),$.length>0?Ee+$:""},ka}var Ta,sl;function pv(){if(sl)return Ta;sl=1;var e=Kd(),t=Object.prototype.hasOwnProperty,s=Array.isArray,r={allowDots:!1,allowEmptyArrays:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decodeDotInKeys:!1,decoder:e.decode,delimiter:"&",depth:5,duplicates:"combine",ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictDepth:!1,strictNullHandling:!1,throwOnLimitExceeded:!1},i=function(p){return p.replace(/&#(\d+);/g,function(m,b){return String.fromCharCode(parseInt(b,10))})},a=function(p,m,b){if(p&&typeof p=="string"&&m.comma&&p.indexOf(",")>-1)return p.split(",");if(m.throwOnLimitExceeded&&b>=m.arrayLimit)throw new RangeError("Array limit exceeded. Only "+m.arrayLimit+" element"+(m.arrayLimit===1?"":"s")+" allowed in an array.");return p},n="utf8=%26%2310003%3B",o="utf8=%E2%9C%93",l=function(m,b){var v={__proto__:null},f=b.ignoreQueryPrefix?m.replace(/^\?/,""):m;f=f.replace(/%5B/gi,"[").replace(/%5D/gi,"]");var h=b.parameterLimit===1/0?void 0:b.parameterLimit,y=f.split(b.delimiter,b.throwOnLimitExceeded?h+1:h);if(b.throwOnLimitExceeded&&y.length>h)throw new RangeError("Parameter limit exceeded. Only "+h+" parameter"+(h===1?"":"s")+" allowed.");var w=-1,x,S=b.charset;if(b.charsetSentinel)for(x=0;x<y.length;++x)y[x].indexOf("utf8=")===0&&(y[x]===o?S="utf-8":y[x]===n&&(S="iso-8859-1"),w=x,x=y.length);for(x=0;x<y.length;++x)if(x!==w){var R=y[x],C=R.indexOf("]="),N=C===-1?R.indexOf("="):C+1,I,j;N===-1?(I=b.decoder(R,r.decoder,S,"key"),j=b.strictNullHandling?null:""):(I=b.decoder(R.slice(0,N),r.decoder,S,"key"),j=e.maybeMap(a(R.slice(N+1),b,s(v[I])?v[I].length:0),function($){return b.decoder($,r.decoder,S,"value")})),j&&b.interpretNumericEntities&&S==="iso-8859-1"&&(j=i(String(j))),R.indexOf("[]=")>-1&&(j=s(j)?[j]:j);var M=t.call(v,I);M&&b.duplicates==="combine"?v[I]=e.combine(v[I],j):(!M||b.duplicates==="last")&&(v[I]=j)}return v},d=function(p,m,b,v){var f=0;if(p.length>0&&p[p.length-1]==="[]"){var h=p.slice(0,-1).join("");f=Array.isArray(m)&&m[h]?m[h].length:0}for(var y=v?m:a(m,b,f),w=p.length-1;w>=0;--w){var x,S=p[w];if(S==="[]"&&b.parseArrays)x=b.allowEmptyArrays&&(y===""||b.strictNullHandling&&y===null)?[]:e.combine([],y);else{x=b.plainObjects?{__proto__:null}:{};var R=S.charAt(0)==="["&&S.charAt(S.length-1)==="]"?S.slice(1,-1):S,C=b.decodeDotInKeys?R.replace(/%2E/g,"."):R,N=parseInt(C,10);!b.parseArrays&&C===""?x={0:y}:!isNaN(N)&&S!==C&&String(N)===C&&N>=0&&b.parseArrays&&N<=b.arrayLimit?(x=[],x[N]=y):C!=="__proto__"&&(x[C]=y)}y=x}return y},c=function(m,b,v,f){if(m){var h=v.allowDots?m.replace(/\.([^.[]+)/g,"[$1]"):m,y=/(\[[^[\]]*])/,w=/(\[[^[\]]*])/g,x=v.depth>0&&y.exec(h),S=x?h.slice(0,x.index):h,R=[];if(S){if(!v.plainObjects&&t.call(Object.prototype,S)&&!v.allowPrototypes)return;R.push(S)}for(var C=0;v.depth>0&&(x=w.exec(h))!==null&&C<v.depth;){if(C+=1,!v.plainObjects&&t.call(Object.prototype,x[1].slice(1,-1))&&!v.allowPrototypes)return;R.push(x[1])}if(x){if(v.strictDepth===!0)throw new RangeError("Input depth exceeded depth option of "+v.depth+" and strictDepth is true");R.push("["+h.slice(x.index)+"]")}return d(R,b,v,f)}},u=function(m){if(!m)return r;if(typeof m.allowEmptyArrays<"u"&&typeof m.allowEmptyArrays!="boolean")throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");if(typeof m.decodeDotInKeys<"u"&&typeof m.decodeDotInKeys!="boolean")throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");if(m.decoder!==null&&typeof m.decoder<"u"&&typeof m.decoder!="function")throw new TypeError("Decoder has to be a function.");if(typeof m.charset<"u"&&m.charset!=="utf-8"&&m.charset!=="iso-8859-1")throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");if(typeof m.throwOnLimitExceeded<"u"&&typeof m.throwOnLimitExceeded!="boolean")throw new TypeError("`throwOnLimitExceeded` option must be a boolean");var b=typeof m.charset>"u"?r.charset:m.charset,v=typeof m.duplicates>"u"?r.duplicates:m.duplicates;if(v!=="combine"&&v!=="first"&&v!=="last")throw new TypeError("The duplicates option must be either combine, first, or last");var f=typeof m.allowDots>"u"?m.decodeDotInKeys===!0?!0:r.allowDots:!!m.allowDots;return{allowDots:f,allowEmptyArrays:typeof m.allowEmptyArrays=="boolean"?!!m.allowEmptyArrays:r.allowEmptyArrays,allowPrototypes:typeof m.allowPrototypes=="boolean"?m.allowPrototypes:r.allowPrototypes,allowSparse:typeof m.allowSparse=="boolean"?m.allowSparse:r.allowSparse,arrayLimit:typeof m.arrayLimit=="number"?m.arrayLimit:r.arrayLimit,charset:b,charsetSentinel:typeof m.charsetSentinel=="boolean"?m.charsetSentinel:r.charsetSentinel,comma:typeof m.comma=="boolean"?m.comma:r.comma,decodeDotInKeys:typeof m.decodeDotInKeys=="boolean"?m.decodeDotInKeys:r.decodeDotInKeys,decoder:typeof m.decoder=="function"?m.decoder:r.decoder,delimiter:typeof m.delimiter=="string"||e.isRegExp(m.delimiter)?m.delimiter:r.delimiter,depth:typeof m.depth=="number"||m.depth===!1?+m.depth:r.depth,duplicates:v,ignoreQueryPrefix:m.ignoreQueryPrefix===!0,interpretNumericEntities:typeof m.interpretNumericEntities=="boolean"?m.interpretNumericEntities:r.interpretNumericEntities,parameterLimit:typeof m.parameterLimit=="number"?m.parameterLimit:r.parameterLimit,parseArrays:m.parseArrays!==!1,plainObjects:typeof m.plainObjects=="boolean"?m.plainObjects:r.plainObjects,strictDepth:typeof m.strictDepth=="boolean"?!!m.strictDepth:r.strictDepth,strictNullHandling:typeof m.strictNullHandling=="boolean"?m.strictNullHandling:r.strictNullHandling,throwOnLimitExceeded:typeof m.throwOnLimitExceeded=="boolean"?m.throwOnLimitExceeded:!1}};return Ta=function(p,m){var b=u(m);if(p===""||p===null||typeof p>"u")return b.plainObjects?{__proto__:null}:{};for(var v=typeof p=="string"?l(p,b):p,f=b.plainObjects?{__proto__:null}:{},h=Object.keys(v),y=0;y<h.length;++y){var w=h[y],x=c(w,v[w],b,typeof p=="string");f=e.merge(f,x,b)}return b.allowSparse===!0?f:e.compact(f)},Ta}var Sa,rl;function mv(){if(rl)return Sa;rl=1;var e=uv(),t=pv(),s=gn();return Sa={formats:s,parse:t,stringify:e},Sa}var fv=mv();const vn=["apiKey","idempotencyKey","stripeAccount","apiVersion","maxNetworkRetries","timeout","host","authenticator","stripeContext","additionalHeaders","streaming"];function Zd(e){return e&&typeof e=="object"&&vn.some(t=>Object.prototype.hasOwnProperty.call(e,t))}function vi(e,t){return fv.stringify(e,{serializeDate:s=>Math.floor(s.getTime()/1e3).toString(),arrayFormat:t=="v2"?"repeat":"indices"}).replace(/%5B/g,"[").replace(/%5D/g,"]")}const Ka=(()=>{const e={"\n":"\\n",'"':'\\"',"\u2028":"\\u2028","\u2029":"\\u2029"};return t=>{const s=t.replace(/["\n\r\u2028\u2029]/g,r=>e[r]);return r=>s.replace(/\{([\s\S]+?)\}/g,(i,a)=>{const n=r[a];return gv(n)?encodeURIComponent(n):""})}})();function gv(e){return["number","string","boolean"].includes(typeof e)}function vv(e){const t=e.match(/\{\w+\}/g);return t?t.map(s=>s.replace(/[{}]/g,"")):[]}function hn(e){if(!Array.isArray(e)||!e[0]||typeof e[0]!="object")return{};if(!Zd(e[0]))return e.shift();const t=Object.keys(e[0]),s=t.filter(r=>vn.includes(r));return s.length>0&&s.length!==t.length&&ai(`Options found in arguments (${s.join(", ")}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options.`),{}}function Qd(e){const t={host:null,headers:{},settings:{},streaming:!1};if(e.length>0){const s=e[e.length-1];if(typeof s=="string")t.authenticator=Za(e.pop());else if(Zd(s)){const r=Object.assign({},e.pop()),i=Object.keys(r).filter(a=>!vn.includes(a));if(i.length&&ai(`Invalid options found (${i.join(", ")}); ignoring.`),r.apiKey&&(t.authenticator=Za(r.apiKey)),r.idempotencyKey&&(t.headers["Idempotency-Key"]=r.idempotencyKey),r.stripeAccount&&(t.headers["Stripe-Account"]=r.stripeAccount),r.stripeContext){if(t.headers["Stripe-Account"])throw new Error("Can't specify both stripeAccount and stripeContext.");t.headers["Stripe-Context"]=r.stripeContext}if(r.apiVersion&&(t.headers["Stripe-Version"]=r.apiVersion),Number.isInteger(r.maxNetworkRetries)&&(t.settings.maxNetworkRetries=r.maxNetworkRetries),Number.isInteger(r.timeout)&&(t.settings.timeout=r.timeout),r.host&&(t.host=r.host),r.authenticator){if(r.apiKey)throw new Error("Can't specify both apiKey and authenticator.");if(typeof r.authenticator!="function")throw new Error("The authenticator must be a function receiving a request as the first parameter.");t.authenticator=r.authenticator}r.additionalHeaders&&(t.headers=r.additionalHeaders),r.streaming&&(t.streaming=!0)}}return t}function hv(e){const t=this,s=Object.prototype.hasOwnProperty.call(e,"constructor")?e.constructor:function(...r){t.apply(this,r)};return Object.assign(s,t),s.prototype=Object.create(t.prototype),Object.assign(s.prototype,e),s}function Ra(e){if(typeof e!="object")throw new Error("Argument must be an object");return Object.keys(e).reduce((t,s)=>(e[s]!=null&&(t[s]=e[s]),t),{})}function bv(e){return e&&typeof e=="object"?Object.keys(e).reduce((t,s)=>(t[yv(s)]=e[s],t),{}):e}function yv(e){return e.split("-").map(t=>t.charAt(0).toUpperCase()+t.substr(1).toLowerCase()).join("-")}function bn(e,t){return t?e.then(s=>{setTimeout(()=>{t(null,s)},0)},s=>{setTimeout(()=>{t(s,null)},0)}):e}function xv(e){return e==="OAuth"?"oauth":e[0].toLowerCase()+e.substring(1)}function ai(e){return typeof process.emitWarning!="function"?console.warn(`Stripe: ${e}`):process.emitWarning(e,"Stripe")}function wv(e){const t=typeof e;return(t==="function"||t==="object")&&!!e}function _v(e){const t={},s=(r,i)=>{Object.entries(r).forEach(([a,n])=>{const o=i?`${i}[${a}]`:a;if(wv(n)){if(!(n instanceof Uint8Array)&&!Object.prototype.hasOwnProperty.call(n,"data"))return s(n,o);t[o]=n}else t[o]=String(n)})};return s(e,null),t}function Ca(e,t,s){if(!Number.isInteger(t)){if(s!==void 0)return s;throw new Error(`${e} must be an integer`)}return t}function Ev(){return typeof process>"u"?{}:{lang_version:process.version,platform:process.platform}}function Za(e){const t=s=>(s.headers.Authorization="Bearer "+e,Promise.resolve());return t._apiKey=e,t}function kv(e,t){return this[e]instanceof Date?Math.floor(this[e].getTime()/1e3).toString():t}function Tv(e){return JSON.stringify(e,kv)}function yn(e){return e&&e.startsWith("/v2")?"v2":"v1"}function Qa(e){return Array.isArray(e)?e.join(", "):String(e)}function Sv(e){const t=Array.isArray(e)?e[0]:e;return Number(t)}function Rv(e){return Object.entries(e).map(([t,s])=>[t,Qa(s)])}class He{getClientName(){throw new Error("getClientName not implemented.")}makeRequest(t,s,r,i,a,n,o,l){throw new Error("makeRequest not implemented.")}static makeTimeoutError(){const t=new TypeError(He.TIMEOUT_ERROR_CODE);return t.code=He.TIMEOUT_ERROR_CODE,t}}He.CONNECTION_CLOSED_ERROR_CODES=["ECONNRESET","EPIPE"];He.TIMEOUT_ERROR_CODE="ETIMEDOUT";class Xd{constructor(t,s){this._statusCode=t,this._headers=s}getStatusCode(){return this._statusCode}getHeaders(){return this._headers}getRawResponse(){throw new Error("getRawResponse not implemented.")}toStream(t){throw new Error("toStream not implemented.")}toJSON(){throw new Error("toJSON not implemented.")}}class ni extends He{constructor(t){if(super(),!t){if(!globalThis.fetch)throw new Error("fetch() function not provided and is not defined in the global scope. You must provide a fetch implementation.");t=globalThis.fetch}globalThis.AbortController?this._fetchFn=ni.makeFetchWithAbortTimeout(t):this._fetchFn=ni.makeFetchWithRaceTimeout(t)}static makeFetchWithRaceTimeout(t){return(s,r,i)=>{let a;const n=new Promise((l,d)=>{a=setTimeout(()=>{a=null,d(He.makeTimeoutError())},i)}),o=t(s,r);return Promise.race([o,n]).finally(()=>{a&&clearTimeout(a)})}}static makeFetchWithAbortTimeout(t){return async(s,r,i)=>{const a=new AbortController;let n=setTimeout(()=>{n=null,a.abort(He.makeTimeoutError())},i);try{return await t(s,Object.assign(Object.assign({},r),{signal:a.signal}))}catch(o){throw o.name==="AbortError"?He.makeTimeoutError():o}finally{n&&clearTimeout(n)}}}getClientName(){return"fetch"}async makeRequest(t,s,r,i,a,n,o,l){const d=o==="http",c=new URL(r,`${d?"http":"https"}://${t}`);c.port=s;const u=i=="POST"||i=="PUT"||i=="PATCH",p=n||(u?"":void 0),m=await this._fetchFn(c.toString(),{method:i,headers:Rv(a),body:typeof p=="object"?JSON.stringify(p):p},l);return new xn(m)}}class xn extends Xd{constructor(t){super(t.status,xn._transformHeadersToObject(t.headers)),this._res=t}getRawResponse(){return this._res}toStream(t){return t(),this._res.body}toJSON(){return this._res.json()}static _transformHeadersToObject(t){const s={};for(const r of t){if(!Array.isArray(r)||r.length!=2)throw new Error("Response objects produced by the fetch function given to FetchHttpClient do not have an iterable headers map. Response#headers should be an iterable object.");s[r[0]]=r[1]}return s}}class ec{computeHMACSignature(t,s){throw new Error("computeHMACSignature not implemented.")}computeHMACSignatureAsync(t,s){throw new Error("computeHMACSignatureAsync not implemented.")}computeSHA256Async(t){throw new Error("computeSHA256 not implemented.")}}class tc extends Error{}class Cv extends ec{constructor(t){super(),this.subtleCrypto=t||crypto.subtle}computeHMACSignature(t,s){throw new tc("SubtleCryptoProvider cannot be used in a synchronous context.")}async computeHMACSignatureAsync(t,s){const r=new TextEncoder,i=await this.subtleCrypto.importKey("raw",r.encode(s),{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),a=await this.subtleCrypto.sign("hmac",i,r.encode(t)),n=new Uint8Array(a),o=new Array(n.length);for(let l=0;l<n.length;l++)o[l]=Xa[n[l]];return o.join("")}async computeSHA256Async(t){return new Uint8Array(await this.subtleCrypto.digest("SHA-256",t))}}const Xa=new Array(256);for(let e=0;e<Xa.length;e++)Xa[e]=e.toString(16).padStart(2,"0");class Dv{constructor(){this._fetchFn=null,this._agent=null}getUname(){throw new Error("getUname not implemented.")}uuid4(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,t=>{const s=Math.random()*16|0;return(t==="x"?s:s&3|8).toString(16)})}secureCompare(t,s){if(t.length!==s.length)return!1;const r=t.length;let i=0;for(let a=0;a<r;++a)i|=t.charCodeAt(a)^s.charCodeAt(a);return i===0}createEmitter(){throw new Error("createEmitter not implemented.")}tryBufferData(t){throw new Error("tryBufferData not implemented.")}createNodeHttpClient(t){throw new Error("createNodeHttpClient not implemented.")}createFetchHttpClient(t){return new ni(t)}createDefaultHttpClient(){throw new Error("createDefaultHttpClient not implemented.")}createNodeCryptoProvider(){throw new Error("createNodeCryptoProvider not implemented.")}createSubtleCryptoProvider(t){return new Cv(t)}createDefaultCryptoProvider(){throw new Error("createDefaultCryptoProvider not implemented.")}}class Nv extends Event{constructor(t,s){super(t),this.data=s}}class Pv{constructor(){this.eventTarget=new EventTarget,this.listenerMapping=new Map}on(t,s){const r=i=>{s(i.data)};return this.listenerMapping.set(s,r),this.eventTarget.addEventListener(t,r)}removeListener(t,s){const r=this.listenerMapping.get(s);return this.listenerMapping.delete(s),this.eventTarget.removeEventListener(t,r)}once(t,s){const r=i=>{s(i.data)};return this.listenerMapping.set(s,r),this.eventTarget.addEventListener(t,r,{once:!0})}emit(t,s){return this.eventTarget.dispatchEvent(new Nv(t,s))}}class Av extends Dv{getUname(){return Promise.resolve(null)}createEmitter(){return new Pv}tryBufferData(t){if(t.file.data instanceof ReadableStream)throw new Error("Uploading a file as a stream is not supported in non-Node environments. Please open or upvote an issue at github.com/stripe/stripe-node if you use this, detailing your use-case.");return Promise.resolve(t)}createNodeHttpClient(){throw new Error("Stripe: `createNodeHttpClient()` is not available in non-Node environments. Please use `createFetchHttpClient()` instead.")}createDefaultHttpClient(){return super.createFetchHttpClient()}createNodeCryptoProvider(){throw new Error("Stripe: `createNodeCryptoProvider()` is not available in non-Node environments. Please use `createSubtleCryptoProvider()` instead.")}createDefaultCryptoProvider(){return this.createSubtleCryptoProvider()}}const hi=e=>{switch(e.type){case"card_error":return new rc(e);case"invalid_request_error":return new wn(e);case"api_error":return new _n(e);case"authentication_error":return new En(e);case"rate_limit_error":return new kn(e);case"idempotency_error":return new nc(e);case"invalid_grant":return new oc(e);default:return new lc(e)}},sc=e=>{switch(e.type){case"temporary_session_expired":return new dc(e)}switch(e.code){case"invalid_fields":return new wn(e)}return hi(e)};class Re extends Error{constructor(t={},s=null){var r;super(t.message),this.type=s||this.constructor.name,this.raw=t,this.rawType=t.type,this.code=t.code,this.doc_url=t.doc_url,this.param=t.param,this.detail=t.detail,this.headers=t.headers,this.requestId=t.requestId,this.statusCode=t.statusCode,this.message=(r=t.message)!==null&&r!==void 0?r:"",this.userMessage=t.user_message,this.charge=t.charge,this.decline_code=t.decline_code,this.payment_intent=t.payment_intent,this.payment_method=t.payment_method,this.payment_method_type=t.payment_method_type,this.setup_intent=t.setup_intent,this.source=t.source}}Re.generate=hi;class rc extends Re{constructor(t={}){super(t,"StripeCardError")}}class wn extends Re{constructor(t={}){super(t,"StripeInvalidRequestError")}}class _n extends Re{constructor(t={}){super(t,"StripeAPIError")}}class En extends Re{constructor(t={}){super(t,"StripeAuthenticationError")}}class ic extends Re{constructor(t={}){super(t,"StripePermissionError")}}class kn extends Re{constructor(t={}){super(t,"StripeRateLimitError")}}class ac extends Re{constructor(t={}){super(t,"StripeConnectionError")}}class Nt extends Re{constructor(t,s,r={}){super(r,"StripeSignatureVerificationError"),this.header=t,this.payload=s}}class nc extends Re{constructor(t={}){super(t,"StripeIdempotencyError")}}class oc extends Re{constructor(t={}){super(t,"StripeInvalidGrantError")}}class lc extends Re{constructor(t={}){super(t,"StripeUnknownError")}}class dc extends Re{constructor(t={}){super(t,"TemporarySessionExpiredError")}}const il=Object.freeze(Object.defineProperty({__proto__:null,StripeAPIError:_n,StripeAuthenticationError:En,StripeCardError:rc,StripeConnectionError:ac,StripeError:Re,StripeIdempotencyError:nc,StripeInvalidGrantError:oc,StripeInvalidRequestError:wn,StripePermissionError:ic,StripeRateLimitError:kn,StripeSignatureVerificationError:Nt,StripeUnknownError:lc,TemporarySessionExpiredError:dc,generateV1Error:hi,generateV2Error:sc},Symbol.toStringTag,{value:"Module"})),Ov=60;class dr{constructor(t,s){this._stripe=t,this._maxBufferedRequestMetric=s}_addHeadersDirectlyToObject(t,s){t.requestId=s["request-id"],t.stripeAccount=t.stripeAccount||s["stripe-account"],t.apiVersion=t.apiVersion||s["stripe-version"],t.idempotencyKey=t.idempotencyKey||s["idempotency-key"]}_makeResponseEvent(t,s,r){const i=Date.now(),a=i-t.request_start_time;return Ra({api_version:r["stripe-version"],account:r["stripe-account"],idempotency_key:r["idempotency-key"],method:t.method,path:t.path,status:s,request_id:this._getRequestId(r),elapsed:a,request_start_time:t.request_start_time,request_end_time:i})}_getRequestId(t){return t["request-id"]}_streamingResponseHandler(t,s,r){return i=>{const a=i.getHeaders(),n=()=>{const l=this._makeResponseEvent(t,i.getStatusCode(),a);this._stripe._emitter.emit("response",l),this._recordRequestMetrics(this._getRequestId(a),l.elapsed,s)},o=i.toStream(n);return this._addHeadersDirectlyToObject(o,a),r(null,o)}}_jsonResponseHandler(t,s,r,i){return a=>{const n=a.getHeaders(),o=this._getRequestId(n),l=a.getStatusCode(),d=this._makeResponseEvent(t,l,n);this._stripe._emitter.emit("response",d),a.toJSON().then(c=>{if(c.error){let u;throw typeof c.error=="string"&&(c.error={type:c.error,message:c.error_description}),c.error.headers=n,c.error.statusCode=l,c.error.requestId=o,l===401?u=new En(c.error):l===403?u=new ic(c.error):l===429?u=new kn(c.error):s==="v2"?u=sc(c.error):u=hi(c.error),u}return c},c=>{throw new _n({message:"Invalid JSON received from the Stripe API",exception:c,requestId:n["request-id"]})}).then(c=>{this._recordRequestMetrics(o,d.elapsed,r);const u=a.getRawResponse();this._addHeadersDirectlyToObject(u,n),Object.defineProperty(c,"lastResponse",{enumerable:!1,writable:!1,value:u}),i(null,c)},c=>i(c,null))}}static _generateConnectionErrorMessage(t){return`An error occurred with our connection to Stripe.${t>0?` Request was retried ${t} times.`:""}`}static _shouldRetry(t,s,r,i){return i&&s===0&&He.CONNECTION_CLOSED_ERROR_CODES.includes(i.code)?!0:s>=r?!1:t?t.getHeaders()["stripe-should-retry"]==="false"?!1:t.getHeaders()["stripe-should-retry"]==="true"||t.getStatusCode()===409||t.getStatusCode()>=500:!0}_getSleepTimeInMS(t,s=null){const r=this._stripe.getInitialNetworkRetryDelay(),i=this._stripe.getMaxNetworkRetryDelay();let a=Math.min(r*Math.pow(2,t-1),i);return a*=.5*(1+Math.random()),a=Math.max(r,a),Number.isInteger(s)&&s<=Ov&&(a=Math.max(a,s)),a*1e3}_getMaxNetworkRetries(t={}){return t.maxNetworkRetries!==void 0&&Number.isInteger(t.maxNetworkRetries)?t.maxNetworkRetries:this._stripe.getMaxNetworkRetries()}_defaultIdempotencyKey(t,s,r){const i=this._getMaxNetworkRetries(s),a=()=>`stripe-node-retry-${this._stripe._platformFunctions.uuid4()}`;if(r==="v2"){if(t==="POST"||t==="DELETE")return a()}else if(r==="v1"&&t==="POST"&&i>0)return a();return null}_makeHeaders({contentType:t,contentLength:s,apiVersion:r,clientUserAgent:i,method:a,userSuppliedHeaders:n,userSuppliedSettings:o,stripeAccount:l,stripeContext:d,apiMode:c}){const u={Accept:"application/json","Content-Type":t,"User-Agent":this._getUserAgentString(c),"X-Stripe-Client-User-Agent":i,"X-Stripe-Client-Telemetry":this._getTelemetryHeader(),"Stripe-Version":r,"Stripe-Account":l,"Stripe-Context":d,"Idempotency-Key":this._defaultIdempotencyKey(a,o,c)},p=a=="POST"||a=="PUT"||a=="PATCH";return(p||s)&&(p||ai(`${a} method had non-zero contentLength but no payload is expected for this verb`),u["Content-Length"]=s),Object.assign(Ra(u),bv(n))}_getUserAgentString(t){const s=this._stripe.getConstant("PACKAGE_VERSION"),r=this._stripe._appInfo?this._stripe.getAppInfoAsString():"";return`Stripe/${t} NodeBindings/${s} ${r}`.trim()}_getTelemetryHeader(){if(this._stripe.getTelemetryEnabled()&&this._stripe._prevRequestMetrics.length>0){const t=this._stripe._prevRequestMetrics.shift();return JSON.stringify({last_request_metrics:t})}}_recordRequestMetrics(t,s,r){if(this._stripe.getTelemetryEnabled()&&t)if(this._stripe._prevRequestMetrics.length>this._maxBufferedRequestMetric)ai("Request metrics buffer is full, dropping telemetry message.");else{const i={request_id:t,request_duration_ms:s};r&&r.length>0&&(i.usage=r),this._stripe._prevRequestMetrics.push(i)}}_rawRequest(t,s,r,i){return new Promise((n,o)=>{let l;try{const m=t.toUpperCase();if(m!=="POST"&&r&&Object.keys(r).length!==0)throw new Error("rawRequest only supports params on POST requests. Please pass null and add your parameters to path.");const b=[].slice.call([r,i]),v=hn(b),f=m==="POST"?Object.assign({},v):null,h=Qd(b),y=h.headers,w=h.authenticator;l={requestMethod:m,requestPath:s,bodyData:f,queryData:{},authenticator:w,headers:y,host:h.host,streaming:!!h.streaming,settings:{},usage:["raw_request"]}}catch(m){o(m);return}function d(m,b){m?o(m):n(b)}const{headers:c,settings:u}=l,p=l.authenticator;this._request(l.requestMethod,l.host,s,l.bodyData,p,{headers:c,settings:u,streaming:l.streaming},l.usage,d)})}_request(t,s,r,i,a,n,o=[],l,d=null){var c;let u;a=(c=a??this._stripe._authenticator)!==null&&c!==void 0?c:null;const p=yn(r),m=(f,h,y,w,x)=>setTimeout(f,this._getSleepTimeInMS(w,x),h,y,w+1),b=(f,h,y)=>{const w=n.settings&&n.settings.timeout&&Number.isInteger(n.settings.timeout)&&n.settings.timeout>=0?n.settings.timeout:this._stripe.getApiField("timeout"),x={host:s||this._stripe.getApiField("host"),port:this._stripe.getApiField("port"),path:r,method:t,headers:Object.assign({},h),body:u,protocol:this._stripe.getApiField("protocol")};a(x).then(()=>{const S=this._stripe.getApiField("httpClient").makeRequest(x.host,x.port,x.path,x.method,x.headers,x.body,x.protocol,w),R=Date.now(),C=Ra({api_version:f,account:Qa(h["Stripe-Account"]),idempotency_key:Qa(h["Idempotency-Key"]),method:t,path:r,request_start_time:R}),N=y||0,I=this._getMaxNetworkRetries(n.settings||{});this._stripe._emitter.emit("request",C),S.then(j=>dr._shouldRetry(j,N,I)?m(b,f,h,N,Sv(j.getHeaders()["retry-after"])):n.streaming&&j.getStatusCode()<400?this._streamingResponseHandler(C,o,l)(j):this._jsonResponseHandler(C,p,o,l)(j)).catch(j=>{if(dr._shouldRetry(null,N,I,j))return m(b,f,h,N,null);{const M=j.code&&j.code===He.TIMEOUT_ERROR_CODE;return l(new ac({message:M?`Request aborted due to timeout being reached (${w}ms)`:dr._generateConnectionErrorMessage(N),detail:j}))}})}).catch(S=>{throw new Re({message:"Unable to authenticate the request",exception:S})})},v=(f,h)=>{if(f)return l(f);u=h,this._stripe.getClientUserAgent(y=>{const w=this._stripe.getApiField("version"),x=this._makeHeaders({contentType:p=="v2"?"application/json":"application/x-www-form-urlencoded",contentLength:u.length,apiVersion:w,clientUserAgent:y,method:t,userSuppliedHeaders:n.headers,userSuppliedSettings:n.settings,stripeAccount:p=="v2"?null:this._stripe.getApiField("stripeAccount"),stripeContext:p=="v2"?this._stripe.getApiField("stripeContext"):null,apiMode:p});b(w,x,0)})};if(d)d(t,i,n.headers,v);else{let f;p=="v2"?f=i?Tv(i):"":f=vi(i||{},p),v(null,f)}}}class cc{constructor(t,s,r,i){this.index=0,this.pagePromise=t,this.promiseCache={currentPromise:null},this.requestArgs=s,this.spec=r,this.stripeResource=i}async iterate(t){if(!(t&&t.data&&typeof t.data.length=="number"))throw Error("Unexpected: Stripe API response does not have a well-formed `data` array.");const s=uc(this.requestArgs);if(this.index<t.data.length){const r=s?t.data.length-1-this.index:this.index,i=t.data[r];return this.index+=1,{value:i,done:!1}}else if(t.has_more){this.index=0,this.pagePromise=this.getNextPage(t);const r=await this.pagePromise;return this.iterate(r)}return{done:!0,value:void 0}}getNextPage(t){throw new Error("Unimplemented")}async _next(){return this.iterate(await this.pagePromise)}next(){if(this.promiseCache.currentPromise)return this.promiseCache.currentPromise;const t=(async()=>{const s=await this._next();return this.promiseCache.currentPromise=null,s})();return this.promiseCache.currentPromise=t,t}}class jv extends cc{getNextPage(t){const s=uc(this.requestArgs),r=Uv(t,s);return this.stripeResource._makeRequest(this.requestArgs,this.spec,{[s?"ending_before":"starting_after"]:r})}}class Iv extends cc{getNextPage(t){if(!t.next_page)throw Error("Unexpected: Stripe API response does not have a well-formed `next_page` field, but `has_more` was true.");return this.stripeResource._makeRequest(this.requestArgs,this.spec,{page:t.next_page})}}class Mv{constructor(t,s,r,i){this.currentPageIterator=(async()=>(await t).data[Symbol.iterator]())(),this.nextPageUrl=(async()=>(await t).next_page_url||null)(),this.requestArgs=s,this.spec=r,this.stripeResource=i}async turnPage(){const t=await this.nextPageUrl;if(!t)return null;this.spec.fullPath=t;const s=await this.stripeResource._makeRequest([],this.spec,{});return this.nextPageUrl=Promise.resolve(s.next_page_url),this.currentPageIterator=Promise.resolve(s.data[Symbol.iterator]()),this.currentPageIterator}async next(){{const r=(await this.currentPageIterator).next();if(!r.done)return{done:!1,value:r.value}}const t=await this.turnPage();if(!t)return{done:!0,value:void 0};const s=t.next();return s.done?{done:!0,value:void 0}:{done:!1,value:s.value}}}const Lv=(e,t,s,r)=>{const i=yn(s.fullPath||s.path);return i!=="v2"&&s.methodType==="search"?Da(new Iv(r,t,s,e)):i!=="v2"&&s.methodType==="list"?Da(new jv(r,t,s,e)):i==="v2"&&s.methodType==="list"?Da(new Mv(r,t,s,e)):null},Da=e=>{const t=Hv((...i)=>e.next(...i)),s=qv(t),r={autoPagingEach:t,autoPagingToArray:s,next:()=>e.next(),return:()=>({}),[$v()]:()=>r};return r};function $v(){return typeof Symbol<"u"&&Symbol.asyncIterator?Symbol.asyncIterator:"@@asyncIterator"}function Fv(e){if(e.length<2)return null;const t=e[1];if(typeof t!="function")throw Error(`The second argument to autoPagingEach, if present, must be a callback function; received ${typeof t}`);return t}function Bv(e){if(e.length===0)return;const t=e[0];if(typeof t!="function")throw Error(`The first argument to autoPagingEach, if present, must be a callback function; received ${typeof t}`);if(t.length===2)return t;if(t.length>2)throw Error(`The \`onItem\` callback function passed to autoPagingEach must accept at most two arguments; got ${t}`);return function(r,i){const a=t(r);i(a)}}function Uv(e,t){const s=t?0:e.data.length-1,r=e.data[s],i=r&&r.id;if(!i)throw Error("Unexpected: No `id` found on the last item while auto-paging a list.");return i}function Hv(e){return function(){const s=[].slice.call(arguments),r=Bv(s),i=Fv(s);if(s.length>2)throw Error(`autoPagingEach takes up to two arguments; received ${s}`);const a=Wv(e,r);return bn(a,i)}}function qv(e){return function(s,r){const i=s&&s.limit;if(!i)throw Error("You must pass a `limit` option to autoPagingToArray, e.g., `autoPagingToArray({limit: 1000});`.");if(i>1e4)throw Error("You cannot specify a limit of more than 10,000 items to fetch in `autoPagingToArray`; use `autoPagingEach` to iterate through longer lists.");const a=new Promise((n,o)=>{const l=[];e(d=>{if(l.push(d),l.length>=i)return!1}).then(()=>{n(l)}).catch(o)});return bn(a,r)}}function Wv(e,t){return new Promise((s,r)=>{function i(a){if(a.done){s();return}const n=a.value;return new Promise(o=>{t(n,o)}).then(o=>o===!1?i({done:!0,value:void 0}):e().then(i))}e().then(i).catch(r)})}function uc(e){const t=[].slice.call(e);return!!hn(t).ending_before}function Gv(e){if(e.path!==void 0&&e.fullPath!==void 0)throw new Error(`Method spec specified both a 'path' (${e.path}) and a 'fullPath' (${e.fullPath}).`);return function(...t){const s=typeof t[t.length-1]=="function"&&t.pop();e.urlParams=vv(e.fullPath||this.createResourcePathWithSymbols(e.path||""));const r=bn(this._makeRequest(t,e,{}),s);return Object.assign(r,Lv(this,t,e,r)),r}}g.extend=hv;g.method=Gv;g.MAX_BUFFERED_REQUEST_METRICS=100;function g(e,t){if(this._stripe=e,t)throw new Error("Support for curried url params was dropped in stripe-node v7.0.0. Instead, pass two ids.");this.basePath=Ka(this.basePath||e.getApiField("basePath")),this.resourcePath=this.path,this.path=Ka(this.path),this.initialize(...arguments)}g.prototype={_stripe:null,path:"",resourcePath:"",basePath:null,initialize(){},requestDataProcessor:null,validateRequest:null,createFullPath(e,t){const s=[this.basePath(t),this.path(t)];if(typeof e=="function"){const r=e(t);r&&s.push(r)}else s.push(e);return this._joinUrlParts(s)},createResourcePathWithSymbols(e){return e?`/${this._joinUrlParts([this.resourcePath,e])}`:`/${this.resourcePath}`},_joinUrlParts(e){return e.join("/").replace(/\/{2,}/g,"/")},_getRequestOpts(e,t,s){var r;const i=(t.method||"GET").toUpperCase(),a=t.usage||[],n=t.urlParams||[],o=t.encode||(C=>C),l=!!t.fullPath,d=Ka(l?t.fullPath:t.path||""),c=l?t.fullPath:this.createResourcePathWithSymbols(t.path),u=[].slice.call(e),p=n.reduce((C,N)=>{const I=u.shift();if(typeof I!="string")throw new Error(`Stripe: Argument "${N}" must be a string, but got: ${I} (on API request to \`${i} ${c}\`)`);return C[N]=I,C},{}),m=hn(u),b=o(Object.assign({},m,s)),v=Qd(u),f=v.host||t.host,h=!!t.streaming||!!v.streaming;if(u.filter(C=>C!=null).length)throw new Error(`Stripe: Unknown arguments (${u}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options. (on API request to ${i} \`${c}\`)`);const y=l?d(p):this.createFullPath(d,p),w=Object.assign(v.headers,t.headers);t.validator&&t.validator(b,{headers:w});const x=t.method==="GET"||t.method==="DELETE";return{requestMethod:i,requestPath:y,bodyData:x?null:b,queryData:x?b:{},authenticator:(r=v.authenticator)!==null&&r!==void 0?r:null,headers:w,host:f??null,streaming:h,settings:v.settings,usage:a}},_makeRequest(e,t,s){return new Promise((r,i)=>{var a;let n;try{n=this._getRequestOpts(e,t,s)}catch(p){i(p);return}function o(p,m){p?i(p):r(t.transformResponseData?t.transformResponseData(m):m)}const l=Object.keys(n.queryData).length===0,d=[n.requestPath,l?"":"?",vi(n.queryData,yn(n.requestPath))].join(""),{headers:c,settings:u}=n;this._stripe._requestSender._request(n.requestMethod,n.host,d,n.bodyData,n.authenticator,{headers:c,settings:u,streaming:n.streaming},n.usage,o,(a=this.requestDataProcessor)===null||a===void 0?void 0:a.bind(this))})}};function zv(e){const t={DEFAULT_TOLERANCE:300,signature:null,constructEvent(c,u,p,m,b,v){try{if(!this.signature)throw new Error("ERR: missing signature helper, unable to verify");this.signature.verifyHeader(c,u,p,m||t.DEFAULT_TOLERANCE,b,v)}catch(h){throw h instanceof tc&&(h.message+="\nUse `await constructEventAsync(...)` instead of `constructEvent(...)`"),h}return c instanceof Uint8Array?JSON.parse(new TextDecoder("utf8").decode(c)):JSON.parse(c)},async constructEventAsync(c,u,p,m,b,v){if(!this.signature)throw new Error("ERR: missing signature helper, unable to verify");return await this.signature.verifyHeaderAsync(c,u,p,m||t.DEFAULT_TOLERANCE,b,v),c instanceof Uint8Array?JSON.parse(new TextDecoder("utf8").decode(c)):JSON.parse(c)},generateTestHeaderString:function(c){const u=d(c),p=u.signature||u.cryptoProvider.computeHMACSignature(u.payloadString,u.secret);return u.generateHeaderString(p)},generateTestHeaderStringAsync:async function(c){const u=d(c),p=u.signature||await u.cryptoProvider.computeHMACSignatureAsync(u.payloadString,u.secret);return u.generateHeaderString(p)}},s={EXPECTED_SCHEME:"v1",verifyHeader(c,u,p,m,b,v){const{decodedHeader:f,decodedPayload:h,details:y,suspectPayloadType:w}=i(c,u,this.EXPECTED_SCHEME),x=/\s/.test(p);b=b||l();const S=b.computeHMACSignature(r(h,y),p);return a(h,f,y,S,m,w,x,v),!0},async verifyHeaderAsync(c,u,p,m,b,v){const{decodedHeader:f,decodedPayload:h,details:y,suspectPayloadType:w}=i(c,u,this.EXPECTED_SCHEME),x=/\s/.test(p);b=b||l();const S=await b.computeHMACSignatureAsync(r(h,y),p);return a(h,f,y,S,m,w,x,v)}};function r(c,u){return`${u.timestamp}.${c}`}function i(c,u,p){if(!c)throw new Nt(u,c,{message:"No webhook payload was provided."});const m=typeof c!="string"&&!(c instanceof Uint8Array),b=new TextDecoder("utf8"),v=c instanceof Uint8Array?b.decode(c):c;if(Array.isArray(u))throw new Error("Unexpected: An array was passed as a header, which should not be possible for the stripe-signature header.");if(u==null||u=="")throw new Nt(u,c,{message:"No stripe-signature header value was provided."});const f=u instanceof Uint8Array?b.decode(u):u,h=n(f,p);if(!h||h.timestamp===-1)throw new Nt(f,v,{message:"Unable to extract timestamp and signatures from header"});if(!h.signatures.length)throw new Nt(f,v,{message:"No signatures found with expected scheme"});return{decodedPayload:v,decodedHeader:f,details:h,suspectPayloadType:m}}function a(c,u,p,m,b,v,f,h){const y=!!p.signatures.filter(e.secureCompare.bind(e,m)).length,w=`
Learn more about webhook signing and explore webhook integration examples for various frameworks at https://docs.stripe.com/webhooks/signature`,x=f?`

Note: The provided signing secret contains whitespace. This often indicates an extra newline or space is in the value`:"";if(!y)throw v?new Nt(u,c,{message:`Webhook payload must be provided as a string or a Buffer (https://nodejs.org/api/buffer.html) instance representing the _raw_ request body.Payload was provided as a parsed JavaScript object instead. 
Signature verification is impossible without access to the original signed material. 
`+w+`
`+x}):new Nt(u,c,{message:`No signatures found matching the expected signature for payload. Are you passing the raw request body you received from Stripe? 
 If a webhook request is being forwarded by a third-party tool, ensure that the exact request body, including JSON formatting and new line style, is preserved.
`+w+`
`+x});const S=Math.floor((typeof h=="number"?h:Date.now())/1e3)-p.timestamp;if(b>0&&S>b)throw new Nt(u,c,{message:"Timestamp outside the tolerance zone"});return!0}function n(c,u){return typeof c!="string"?null:c.split(",").reduce((p,m)=>{const b=m.split("=");return b[0]==="t"&&(p.timestamp=parseInt(b[1],10)),b[0]===u&&p.signatures.push(b[1]),p},{timestamp:-1,signatures:[]})}let o=null;function l(){return o||(o=e.createDefaultCryptoProvider()),o}function d(c){if(!c)throw new Re({message:"Options are required"});const u=Math.floor(c.timestamp)||Math.floor(Date.now()/1e3),p=c.scheme||s.EXPECTED_SCHEME,m=c.cryptoProvider||l(),b=`${u}.${c.payload}`,v=f=>`t=${u},${p}=${f}`;return Object.assign(Object.assign({},c),{timestamp:u,scheme:p,cryptoProvider:m,payloadString:b,generateHeaderString:v})}return t.signature=s,t}const pc="2025-08-27.basil";function Jv(e,t){for(const s in t){if(!Object.prototype.hasOwnProperty.call(t,s))continue;const r=s[0].toLowerCase()+s.substring(1),i=new t[s](e);this[r]=i}}function oe(e,t){return function(s){return new Jv(s,t)}}const qt=g.method,Vv=g.extend({retrieve:qt({method:"GET",fullPath:"/v1/financial_connections/accounts/{account}"}),list:qt({method:"GET",fullPath:"/v1/financial_connections/accounts",methodType:"list"}),disconnect:qt({method:"POST",fullPath:"/v1/financial_connections/accounts/{account}/disconnect"}),listOwners:qt({method:"GET",fullPath:"/v1/financial_connections/accounts/{account}/owners",methodType:"list"}),refresh:qt({method:"POST",fullPath:"/v1/financial_connections/accounts/{account}/refresh"}),subscribe:qt({method:"POST",fullPath:"/v1/financial_connections/accounts/{account}/subscribe"}),unsubscribe:qt({method:"POST",fullPath:"/v1/financial_connections/accounts/{account}/unsubscribe"})}),al=g.method,Yv=g.extend({retrieve:al({method:"GET",fullPath:"/v1/entitlements/active_entitlements/{id}"}),list:al({method:"GET",fullPath:"/v1/entitlements/active_entitlements",methodType:"list"})}),ms=g.method,Kv=g.extend({create:ms({method:"POST",fullPath:"/v1/billing/alerts"}),retrieve:ms({method:"GET",fullPath:"/v1/billing/alerts/{id}"}),list:ms({method:"GET",fullPath:"/v1/billing/alerts",methodType:"list"}),activate:ms({method:"POST",fullPath:"/v1/billing/alerts/{id}/activate"}),archive:ms({method:"POST",fullPath:"/v1/billing/alerts/{id}/archive"}),deactivate:ms({method:"POST",fullPath:"/v1/billing/alerts/{id}/deactivate"})}),Hs=g.method,Zv=g.extend({retrieve:Hs({method:"GET",fullPath:"/v1/issuing/authorizations/{authorization}"}),update:Hs({method:"POST",fullPath:"/v1/issuing/authorizations/{authorization}"}),list:Hs({method:"GET",fullPath:"/v1/issuing/authorizations",methodType:"list"}),approve:Hs({method:"POST",fullPath:"/v1/issuing/authorizations/{authorization}/approve"}),decline:Hs({method:"POST",fullPath:"/v1/issuing/authorizations/{authorization}/decline"})}),Wt=g.method,Qv=g.extend({create:Wt({method:"POST",fullPath:"/v1/test_helpers/issuing/authorizations"}),capture:Wt({method:"POST",fullPath:"/v1/test_helpers/issuing/authorizations/{authorization}/capture"}),expire:Wt({method:"POST",fullPath:"/v1/test_helpers/issuing/authorizations/{authorization}/expire"}),finalizeAmount:Wt({method:"POST",fullPath:"/v1/test_helpers/issuing/authorizations/{authorization}/finalize_amount"}),increment:Wt({method:"POST",fullPath:"/v1/test_helpers/issuing/authorizations/{authorization}/increment"}),respond:Wt({method:"POST",fullPath:"/v1/test_helpers/issuing/authorizations/{authorization}/fraud_challenges/respond"}),reverse:Wt({method:"POST",fullPath:"/v1/test_helpers/issuing/authorizations/{authorization}/reverse"})}),Na=g.method,Xv=g.extend({create:Na({method:"POST",fullPath:"/v1/tax/calculations"}),retrieve:Na({method:"GET",fullPath:"/v1/tax/calculations/{calculation}"}),listLineItems:Na({method:"GET",fullPath:"/v1/tax/calculations/{calculation}/line_items",methodType:"list"})}),Cr=g.method,eh=g.extend({create:Cr({method:"POST",fullPath:"/v1/issuing/cardholders"}),retrieve:Cr({method:"GET",fullPath:"/v1/issuing/cardholders/{cardholder}"}),update:Cr({method:"POST",fullPath:"/v1/issuing/cardholders/{cardholder}"}),list:Cr({method:"GET",fullPath:"/v1/issuing/cardholders",methodType:"list"})}),Dr=g.method,th=g.extend({create:Dr({method:"POST",fullPath:"/v1/issuing/cards"}),retrieve:Dr({method:"GET",fullPath:"/v1/issuing/cards/{card}"}),update:Dr({method:"POST",fullPath:"/v1/issuing/cards/{card}"}),list:Dr({method:"GET",fullPath:"/v1/issuing/cards",methodType:"list"})}),qs=g.method,sh=g.extend({deliverCard:qs({method:"POST",fullPath:"/v1/test_helpers/issuing/cards/{card}/shipping/deliver"}),failCard:qs({method:"POST",fullPath:"/v1/test_helpers/issuing/cards/{card}/shipping/fail"}),returnCard:qs({method:"POST",fullPath:"/v1/test_helpers/issuing/cards/{card}/shipping/return"}),shipCard:qs({method:"POST",fullPath:"/v1/test_helpers/issuing/cards/{card}/shipping/ship"}),submitCard:qs({method:"POST",fullPath:"/v1/test_helpers/issuing/cards/{card}/shipping/submit"})}),Nr=g.method,rh=g.extend({create:Nr({method:"POST",fullPath:"/v1/billing_portal/configurations"}),retrieve:Nr({method:"GET",fullPath:"/v1/billing_portal/configurations/{configuration}"}),update:Nr({method:"POST",fullPath:"/v1/billing_portal/configurations/{configuration}"}),list:Nr({method:"GET",fullPath:"/v1/billing_portal/configurations",methodType:"list"})}),Ws=g.method,ih=g.extend({create:Ws({method:"POST",fullPath:"/v1/terminal/configurations"}),retrieve:Ws({method:"GET",fullPath:"/v1/terminal/configurations/{configuration}"}),update:Ws({method:"POST",fullPath:"/v1/terminal/configurations/{configuration}"}),list:Ws({method:"GET",fullPath:"/v1/terminal/configurations",methodType:"list"}),del:Ws({method:"DELETE",fullPath:"/v1/terminal/configurations/{configuration}"})}),ah=g.method,nh=g.extend({create:ah({method:"POST",fullPath:"/v1/test_helpers/confirmation_tokens"})}),oh=g.method,lh=g.extend({create:oh({method:"POST",fullPath:"/v1/terminal/connection_tokens"})}),dh=g.method,ch=g.extend({retrieve:dh({method:"GET",fullPath:"/v1/billing/credit_balance_summary"})}),nl=g.method,uh=g.extend({retrieve:nl({method:"GET",fullPath:"/v1/billing/credit_balance_transactions/{id}"}),list:nl({method:"GET",fullPath:"/v1/billing/credit_balance_transactions",methodType:"list"})}),fs=g.method,ph=g.extend({create:fs({method:"POST",fullPath:"/v1/billing/credit_grants"}),retrieve:fs({method:"GET",fullPath:"/v1/billing/credit_grants/{id}"}),update:fs({method:"POST",fullPath:"/v1/billing/credit_grants/{id}"}),list:fs({method:"GET",fullPath:"/v1/billing/credit_grants",methodType:"list"}),expire:fs({method:"POST",fullPath:"/v1/billing/credit_grants/{id}/expire"}),voidGrant:fs({method:"POST",fullPath:"/v1/billing/credit_grants/{id}/void"})}),Pa=g.method,mh=g.extend({create:Pa({method:"POST",fullPath:"/v1/treasury/credit_reversals"}),retrieve:Pa({method:"GET",fullPath:"/v1/treasury/credit_reversals/{credit_reversal}"}),list:Pa({method:"GET",fullPath:"/v1/treasury/credit_reversals",methodType:"list"})}),fh=g.method,gh=g.extend({fundCashBalance:fh({method:"POST",fullPath:"/v1/test_helpers/customers/{customer}/fund_cash_balance"})}),Aa=g.method,vh=g.extend({create:Aa({method:"POST",fullPath:"/v1/treasury/debit_reversals"}),retrieve:Aa({method:"GET",fullPath:"/v1/treasury/debit_reversals/{debit_reversal}"}),list:Aa({method:"GET",fullPath:"/v1/treasury/debit_reversals",methodType:"list"})}),Gs=g.method,hh=g.extend({create:Gs({method:"POST",fullPath:"/v1/issuing/disputes"}),retrieve:Gs({method:"GET",fullPath:"/v1/issuing/disputes/{dispute}"}),update:Gs({method:"POST",fullPath:"/v1/issuing/disputes/{dispute}"}),list:Gs({method:"GET",fullPath:"/v1/issuing/disputes",methodType:"list"}),submit:Gs({method:"POST",fullPath:"/v1/issuing/disputes/{dispute}/submit"})}),ol=g.method,bh=g.extend({retrieve:ol({method:"GET",fullPath:"/v1/radar/early_fraud_warnings/{early_fraud_warning}"}),list:ol({method:"GET",fullPath:"/v1/radar/early_fraud_warnings",methodType:"list"})}),Rt=g.method,yh=g.extend({create:Rt({method:"POST",fullPath:"/v2/core/event_destinations"}),retrieve:Rt({method:"GET",fullPath:"/v2/core/event_destinations/{id}"}),update:Rt({method:"POST",fullPath:"/v2/core/event_destinations/{id}"}),list:Rt({method:"GET",fullPath:"/v2/core/event_destinations",methodType:"list"}),del:Rt({method:"DELETE",fullPath:"/v2/core/event_destinations/{id}"}),disable:Rt({method:"POST",fullPath:"/v2/core/event_destinations/{id}/disable"}),enable:Rt({method:"POST",fullPath:"/v2/core/event_destinations/{id}/enable"}),ping:Rt({method:"POST",fullPath:"/v2/core/event_destinations/{id}/ping"})}),Oa=g.method,xh=g.extend({retrieve(...e){return Oa({method:"GET",fullPath:"/v2/core/events/{id}",transformResponseData:s=>this.addFetchRelatedObjectIfNeeded(s)}).apply(this,e)},list(...e){return Oa({method:"GET",fullPath:"/v2/core/events",methodType:"list",transformResponseData:s=>Object.assign(Object.assign({},s),{data:s.data.map(this.addFetchRelatedObjectIfNeeded.bind(this))})}).apply(this,e)},addFetchRelatedObjectIfNeeded(e){return!e.related_object||!e.related_object.url?e:Object.assign(Object.assign({},e),{fetchRelatedObject:()=>Oa({method:"GET",fullPath:e.related_object.url}).apply(this,[{stripeAccount:e.context}])})}}),Pr=g.method,wh=g.extend({create:Pr({method:"POST",fullPath:"/v1/entitlements/features"}),retrieve:Pr({method:"GET",fullPath:"/v1/entitlements/features/{id}"}),update:Pr({method:"POST",fullPath:"/v1/entitlements/features/{id}"}),list:Pr({method:"GET",fullPath:"/v1/entitlements/features",methodType:"list"})}),Gt=g.method,_h=g.extend({create:Gt({method:"POST",fullPath:"/v1/treasury/financial_accounts"}),retrieve:Gt({method:"GET",fullPath:"/v1/treasury/financial_accounts/{financial_account}"}),update:Gt({method:"POST",fullPath:"/v1/treasury/financial_accounts/{financial_account}"}),list:Gt({method:"GET",fullPath:"/v1/treasury/financial_accounts",methodType:"list"}),close:Gt({method:"POST",fullPath:"/v1/treasury/financial_accounts/{financial_account}/close"}),retrieveFeatures:Gt({method:"GET",fullPath:"/v1/treasury/financial_accounts/{financial_account}/features"}),updateFeatures:Gt({method:"POST",fullPath:"/v1/treasury/financial_accounts/{financial_account}/features"})}),ja=g.method,Eh=g.extend({fail:ja({method:"POST",fullPath:"/v1/test_helpers/treasury/inbound_transfers/{id}/fail"}),returnInboundTransfer:ja({method:"POST",fullPath:"/v1/test_helpers/treasury/inbound_transfers/{id}/return"}),succeed:ja({method:"POST",fullPath:"/v1/test_helpers/treasury/inbound_transfers/{id}/succeed"})}),Ar=g.method,kh=g.extend({create:Ar({method:"POST",fullPath:"/v1/treasury/inbound_transfers"}),retrieve:Ar({method:"GET",fullPath:"/v1/treasury/inbound_transfers/{id}"}),list:Ar({method:"GET",fullPath:"/v1/treasury/inbound_transfers",methodType:"list"}),cancel:Ar({method:"POST",fullPath:"/v1/treasury/inbound_transfers/{inbound_transfer}/cancel"})}),zs=g.method,Th=g.extend({create:zs({method:"POST",fullPath:"/v1/terminal/locations"}),retrieve:zs({method:"GET",fullPath:"/v1/terminal/locations/{location}"}),update:zs({method:"POST",fullPath:"/v1/terminal/locations/{location}"}),list:zs({method:"GET",fullPath:"/v1/terminal/locations",methodType:"list"}),del:zs({method:"DELETE",fullPath:"/v1/terminal/locations/{location}"})}),Sh=g.method,Rh=g.extend({create:Sh({method:"POST",fullPath:"/v1/billing/meter_event_adjustments"})}),Ch=g.method,Dh=g.extend({create:Ch({method:"POST",fullPath:"/v2/billing/meter_event_adjustments"})}),Nh=g.method,Ph=g.extend({create:Nh({method:"POST",fullPath:"/v2/billing/meter_event_session"})}),Ah=g.method,Oh=g.extend({create:Ah({method:"POST",fullPath:"/v2/billing/meter_event_stream",host:"meter-events.stripe.com"})}),jh=g.method,Ih=g.extend({create:jh({method:"POST",fullPath:"/v1/billing/meter_events"})}),Mh=g.method,Lh=g.extend({create:Mh({method:"POST",fullPath:"/v2/billing/meter_events"})}),zt=g.method,$h=g.extend({create:zt({method:"POST",fullPath:"/v1/billing/meters"}),retrieve:zt({method:"GET",fullPath:"/v1/billing/meters/{id}"}),update:zt({method:"POST",fullPath:"/v1/billing/meters/{id}"}),list:zt({method:"GET",fullPath:"/v1/billing/meters",methodType:"list"}),deactivate:zt({method:"POST",fullPath:"/v1/billing/meters/{id}/deactivate"}),listEventSummaries:zt({method:"GET",fullPath:"/v1/billing/meters/{id}/event_summaries",methodType:"list"}),reactivate:zt({method:"POST",fullPath:"/v1/billing/meters/{id}/reactivate"})}),Js=g.method,Fh=g.extend({create:Js({method:"POST",fullPath:"/v1/climate/orders"}),retrieve:Js({method:"GET",fullPath:"/v1/climate/orders/{order}"}),update:Js({method:"POST",fullPath:"/v1/climate/orders/{order}"}),list:Js({method:"GET",fullPath:"/v1/climate/orders",methodType:"list"}),cancel:Js({method:"POST",fullPath:"/v1/climate/orders/{order}/cancel"})}),Or=g.method,Bh=g.extend({update:Or({method:"POST",fullPath:"/v1/test_helpers/treasury/outbound_payments/{id}"}),fail:Or({method:"POST",fullPath:"/v1/test_helpers/treasury/outbound_payments/{id}/fail"}),post:Or({method:"POST",fullPath:"/v1/test_helpers/treasury/outbound_payments/{id}/post"}),returnOutboundPayment:Or({method:"POST",fullPath:"/v1/test_helpers/treasury/outbound_payments/{id}/return"})}),jr=g.method,Uh=g.extend({create:jr({method:"POST",fullPath:"/v1/treasury/outbound_payments"}),retrieve:jr({method:"GET",fullPath:"/v1/treasury/outbound_payments/{id}"}),list:jr({method:"GET",fullPath:"/v1/treasury/outbound_payments",methodType:"list"}),cancel:jr({method:"POST",fullPath:"/v1/treasury/outbound_payments/{id}/cancel"})}),Ir=g.method,Hh=g.extend({update:Ir({method:"POST",fullPath:"/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}"}),fail:Ir({method:"POST",fullPath:"/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/fail"}),post:Ir({method:"POST",fullPath:"/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/post"}),returnOutboundTransfer:Ir({method:"POST",fullPath:"/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/return"})}),Mr=g.method,qh=g.extend({create:Mr({method:"POST",fullPath:"/v1/treasury/outbound_transfers"}),retrieve:Mr({method:"GET",fullPath:"/v1/treasury/outbound_transfers/{outbound_transfer}"}),list:Mr({method:"GET",fullPath:"/v1/treasury/outbound_transfers",methodType:"list"}),cancel:Mr({method:"POST",fullPath:"/v1/treasury/outbound_transfers/{outbound_transfer}/cancel"})}),Lr=g.method,Wh=g.extend({create:Lr({method:"POST",fullPath:"/v1/issuing/personalization_designs"}),retrieve:Lr({method:"GET",fullPath:"/v1/issuing/personalization_designs/{personalization_design}"}),update:Lr({method:"POST",fullPath:"/v1/issuing/personalization_designs/{personalization_design}"}),list:Lr({method:"GET",fullPath:"/v1/issuing/personalization_designs",methodType:"list"})}),Ia=g.method,Gh=g.extend({activate:Ia({method:"POST",fullPath:"/v1/test_helpers/issuing/personalization_designs/{personalization_design}/activate"}),deactivate:Ia({method:"POST",fullPath:"/v1/test_helpers/issuing/personalization_designs/{personalization_design}/deactivate"}),reject:Ia({method:"POST",fullPath:"/v1/test_helpers/issuing/personalization_designs/{personalization_design}/reject"})}),ll=g.method,zh=g.extend({retrieve:ll({method:"GET",fullPath:"/v1/issuing/physical_bundles/{physical_bundle}"}),list:ll({method:"GET",fullPath:"/v1/issuing/physical_bundles",methodType:"list"})}),dl=g.method,Jh=g.extend({retrieve:dl({method:"GET",fullPath:"/v1/climate/products/{product}"}),list:dl({method:"GET",fullPath:"/v1/climate/products",methodType:"list"})}),Ie=g.method,Vh=g.extend({create:Ie({method:"POST",fullPath:"/v1/terminal/readers"}),retrieve:Ie({method:"GET",fullPath:"/v1/terminal/readers/{reader}"}),update:Ie({method:"POST",fullPath:"/v1/terminal/readers/{reader}"}),list:Ie({method:"GET",fullPath:"/v1/terminal/readers",methodType:"list"}),del:Ie({method:"DELETE",fullPath:"/v1/terminal/readers/{reader}"}),cancelAction:Ie({method:"POST",fullPath:"/v1/terminal/readers/{reader}/cancel_action"}),collectInputs:Ie({method:"POST",fullPath:"/v1/terminal/readers/{reader}/collect_inputs"}),collectPaymentMethod:Ie({method:"POST",fullPath:"/v1/terminal/readers/{reader}/collect_payment_method"}),confirmPaymentIntent:Ie({method:"POST",fullPath:"/v1/terminal/readers/{reader}/confirm_payment_intent"}),processPaymentIntent:Ie({method:"POST",fullPath:"/v1/terminal/readers/{reader}/process_payment_intent"}),processSetupIntent:Ie({method:"POST",fullPath:"/v1/terminal/readers/{reader}/process_setup_intent"}),refundPayment:Ie({method:"POST",fullPath:"/v1/terminal/readers/{reader}/refund_payment"}),setReaderDisplay:Ie({method:"POST",fullPath:"/v1/terminal/readers/{reader}/set_reader_display"})}),Ma=g.method,Yh=g.extend({presentPaymentMethod:Ma({method:"POST",fullPath:"/v1/test_helpers/terminal/readers/{reader}/present_payment_method"}),succeedInputCollection:Ma({method:"POST",fullPath:"/v1/test_helpers/terminal/readers/{reader}/succeed_input_collection"}),timeoutInputCollection:Ma({method:"POST",fullPath:"/v1/test_helpers/terminal/readers/{reader}/timeout_input_collection"})}),Kh=g.method,Zh=g.extend({create:Kh({method:"POST",fullPath:"/v1/test_helpers/treasury/received_credits"})}),cl=g.method,Qh=g.extend({retrieve:cl({method:"GET",fullPath:"/v1/treasury/received_credits/{id}"}),list:cl({method:"GET",fullPath:"/v1/treasury/received_credits",methodType:"list"})}),Xh=g.method,eb=g.extend({create:Xh({method:"POST",fullPath:"/v1/test_helpers/treasury/received_debits"})}),ul=g.method,tb=g.extend({retrieve:ul({method:"GET",fullPath:"/v1/treasury/received_debits/{id}"}),list:ul({method:"GET",fullPath:"/v1/treasury/received_debits",methodType:"list"})}),sb=g.method,rb=g.extend({expire:sb({method:"POST",fullPath:"/v1/test_helpers/refunds/{refund}/expire"})}),$r=g.method,ib=g.extend({create:$r({method:"POST",fullPath:"/v1/tax/registrations"}),retrieve:$r({method:"GET",fullPath:"/v1/tax/registrations/{id}"}),update:$r({method:"POST",fullPath:"/v1/tax/registrations/{id}"}),list:$r({method:"GET",fullPath:"/v1/tax/registrations",methodType:"list"})}),La=g.method,ab=g.extend({create:La({method:"POST",fullPath:"/v1/reporting/report_runs"}),retrieve:La({method:"GET",fullPath:"/v1/reporting/report_runs/{report_run}"}),list:La({method:"GET",fullPath:"/v1/reporting/report_runs",methodType:"list"})}),pl=g.method,nb=g.extend({retrieve:pl({method:"GET",fullPath:"/v1/reporting/report_types/{report_type}"}),list:pl({method:"GET",fullPath:"/v1/reporting/report_types",methodType:"list"})}),$a=g.method,ob=g.extend({create:$a({method:"POST",fullPath:"/v1/forwarding/requests"}),retrieve:$a({method:"GET",fullPath:"/v1/forwarding/requests/{id}"}),list:$a({method:"GET",fullPath:"/v1/forwarding/requests",methodType:"list"})}),ml=g.method,lb=g.extend({retrieve:ml({method:"GET",fullPath:"/v1/sigma/scheduled_query_runs/{scheduled_query_run}"}),list:ml({method:"GET",fullPath:"/v1/sigma/scheduled_query_runs",methodType:"list"})}),Fr=g.method,db=g.extend({create:Fr({method:"POST",fullPath:"/v1/apps/secrets"}),list:Fr({method:"GET",fullPath:"/v1/apps/secrets",methodType:"list"}),deleteWhere:Fr({method:"POST",fullPath:"/v1/apps/secrets/delete"}),find:Fr({method:"GET",fullPath:"/v1/apps/secrets/find"})}),cb=g.method,ub=g.extend({create:cb({method:"POST",fullPath:"/v1/billing_portal/sessions"})}),gs=g.method,pb=g.extend({create:gs({method:"POST",fullPath:"/v1/checkout/sessions"}),retrieve:gs({method:"GET",fullPath:"/v1/checkout/sessions/{session}"}),update:gs({method:"POST",fullPath:"/v1/checkout/sessions/{session}"}),list:gs({method:"GET",fullPath:"/v1/checkout/sessions",methodType:"list"}),expire:gs({method:"POST",fullPath:"/v1/checkout/sessions/{session}/expire"}),listLineItems:gs({method:"GET",fullPath:"/v1/checkout/sessions/{session}/line_items",methodType:"list"})}),fl=g.method,mb=g.extend({create:fl({method:"POST",fullPath:"/v1/financial_connections/sessions"}),retrieve:fl({method:"GET",fullPath:"/v1/financial_connections/sessions/{session}"})}),gl=g.method,fb=g.extend({retrieve:gl({method:"GET",fullPath:"/v1/tax/settings"}),update:gl({method:"POST",fullPath:"/v1/tax/settings"})}),vl=g.method,gb=g.extend({retrieve:vl({method:"GET",fullPath:"/v1/climate/suppliers/{supplier}"}),list:vl({method:"GET",fullPath:"/v1/climate/suppliers",methodType:"list"})}),Vs=g.method,vb=g.extend({create:Vs({method:"POST",fullPath:"/v1/test_helpers/test_clocks"}),retrieve:Vs({method:"GET",fullPath:"/v1/test_helpers/test_clocks/{test_clock}"}),list:Vs({method:"GET",fullPath:"/v1/test_helpers/test_clocks",methodType:"list"}),del:Vs({method:"DELETE",fullPath:"/v1/test_helpers/test_clocks/{test_clock}"}),advance:Vs({method:"POST",fullPath:"/v1/test_helpers/test_clocks/{test_clock}/advance"})}),Fa=g.method,hb=g.extend({retrieve:Fa({method:"GET",fullPath:"/v1/issuing/tokens/{token}"}),update:Fa({method:"POST",fullPath:"/v1/issuing/tokens/{token}"}),list:Fa({method:"GET",fullPath:"/v1/issuing/tokens",methodType:"list"})}),hl=g.method,bb=g.extend({retrieve:hl({method:"GET",fullPath:"/v1/treasury/transaction_entries/{id}"}),list:hl({method:"GET",fullPath:"/v1/treasury/transaction_entries",methodType:"list"})}),bl=g.method,yb=g.extend({retrieve:bl({method:"GET",fullPath:"/v1/financial_connections/transactions/{transaction}"}),list:bl({method:"GET",fullPath:"/v1/financial_connections/transactions",methodType:"list"})}),Ba=g.method,xb=g.extend({retrieve:Ba({method:"GET",fullPath:"/v1/issuing/transactions/{transaction}"}),update:Ba({method:"POST",fullPath:"/v1/issuing/transactions/{transaction}"}),list:Ba({method:"GET",fullPath:"/v1/issuing/transactions",methodType:"list"})}),Br=g.method,wb=g.extend({retrieve:Br({method:"GET",fullPath:"/v1/tax/transactions/{transaction}"}),createFromCalculation:Br({method:"POST",fullPath:"/v1/tax/transactions/create_from_calculation"}),createReversal:Br({method:"POST",fullPath:"/v1/tax/transactions/create_reversal"}),listLineItems:Br({method:"GET",fullPath:"/v1/tax/transactions/{transaction}/line_items",methodType:"list"})}),Ua=g.method,_b=g.extend({createForceCapture:Ua({method:"POST",fullPath:"/v1/test_helpers/issuing/transactions/create_force_capture"}),createUnlinkedRefund:Ua({method:"POST",fullPath:"/v1/test_helpers/issuing/transactions/create_unlinked_refund"}),refund:Ua({method:"POST",fullPath:"/v1/test_helpers/issuing/transactions/{transaction}/refund"})}),yl=g.method,Eb=g.extend({retrieve:yl({method:"GET",fullPath:"/v1/treasury/transactions/{id}"}),list:yl({method:"GET",fullPath:"/v1/treasury/transactions",methodType:"list"})}),Ur=g.method,kb=g.extend({create:Ur({method:"POST",fullPath:"/v1/radar/value_list_items"}),retrieve:Ur({method:"GET",fullPath:"/v1/radar/value_list_items/{item}"}),list:Ur({method:"GET",fullPath:"/v1/radar/value_list_items",methodType:"list"}),del:Ur({method:"DELETE",fullPath:"/v1/radar/value_list_items/{item}"})}),Ys=g.method,Tb=g.extend({create:Ys({method:"POST",fullPath:"/v1/radar/value_lists"}),retrieve:Ys({method:"GET",fullPath:"/v1/radar/value_lists/{value_list}"}),update:Ys({method:"POST",fullPath:"/v1/radar/value_lists/{value_list}"}),list:Ys({method:"GET",fullPath:"/v1/radar/value_lists",methodType:"list"}),del:Ys({method:"DELETE",fullPath:"/v1/radar/value_lists/{value_list}"})}),xl=g.method,Sb=g.extend({retrieve:xl({method:"GET",fullPath:"/v1/identity/verification_reports/{report}"}),list:xl({method:"GET",fullPath:"/v1/identity/verification_reports",methodType:"list"})}),vs=g.method,Rb=g.extend({create:vs({method:"POST",fullPath:"/v1/identity/verification_sessions"}),retrieve:vs({method:"GET",fullPath:"/v1/identity/verification_sessions/{session}"}),update:vs({method:"POST",fullPath:"/v1/identity/verification_sessions/{session}"}),list:vs({method:"GET",fullPath:"/v1/identity/verification_sessions",methodType:"list"}),cancel:vs({method:"POST",fullPath:"/v1/identity/verification_sessions/{session}/cancel"}),redact:vs({method:"POST",fullPath:"/v1/identity/verification_sessions/{session}/redact"})}),de=g.method,wl=g.extend({create:de({method:"POST",fullPath:"/v1/accounts"}),retrieve(e,...t){return typeof e=="string"?de({method:"GET",fullPath:"/v1/accounts/{id}"}).apply(this,[e,...t]):(e==null&&[].shift.apply([e,...t]),de({method:"GET",fullPath:"/v1/account"}).apply(this,[e,...t]))},update:de({method:"POST",fullPath:"/v1/accounts/{account}"}),list:de({method:"GET",fullPath:"/v1/accounts",methodType:"list"}),del:de({method:"DELETE",fullPath:"/v1/accounts/{account}"}),createExternalAccount:de({method:"POST",fullPath:"/v1/accounts/{account}/external_accounts"}),createLoginLink:de({method:"POST",fullPath:"/v1/accounts/{account}/login_links"}),createPerson:de({method:"POST",fullPath:"/v1/accounts/{account}/persons"}),deleteExternalAccount:de({method:"DELETE",fullPath:"/v1/accounts/{account}/external_accounts/{id}"}),deletePerson:de({method:"DELETE",fullPath:"/v1/accounts/{account}/persons/{person}"}),listCapabilities:de({method:"GET",fullPath:"/v1/accounts/{account}/capabilities",methodType:"list"}),listExternalAccounts:de({method:"GET",fullPath:"/v1/accounts/{account}/external_accounts",methodType:"list"}),listPersons:de({method:"GET",fullPath:"/v1/accounts/{account}/persons",methodType:"list"}),reject:de({method:"POST",fullPath:"/v1/accounts/{account}/reject"}),retrieveCurrent:de({method:"GET",fullPath:"/v1/account"}),retrieveCapability:de({method:"GET",fullPath:"/v1/accounts/{account}/capabilities/{capability}"}),retrieveExternalAccount:de({method:"GET",fullPath:"/v1/accounts/{account}/external_accounts/{id}"}),retrievePerson:de({method:"GET",fullPath:"/v1/accounts/{account}/persons/{person}"}),updateCapability:de({method:"POST",fullPath:"/v1/accounts/{account}/capabilities/{capability}"}),updateExternalAccount:de({method:"POST",fullPath:"/v1/accounts/{account}/external_accounts/{id}"}),updatePerson:de({method:"POST",fullPath:"/v1/accounts/{account}/persons/{person}"})}),Cb=g.method,Db=g.extend({create:Cb({method:"POST",fullPath:"/v1/account_links"})}),Nb=g.method,Pb=g.extend({create:Nb({method:"POST",fullPath:"/v1/account_sessions"})}),Hr=g.method,Ab=g.extend({create:Hr({method:"POST",fullPath:"/v1/apple_pay/domains"}),retrieve:Hr({method:"GET",fullPath:"/v1/apple_pay/domains/{domain}"}),list:Hr({method:"GET",fullPath:"/v1/apple_pay/domains",methodType:"list"}),del:Hr({method:"DELETE",fullPath:"/v1/apple_pay/domains/{domain}"})}),hs=g.method,Ob=g.extend({retrieve:hs({method:"GET",fullPath:"/v1/application_fees/{id}"}),list:hs({method:"GET",fullPath:"/v1/application_fees",methodType:"list"}),createRefund:hs({method:"POST",fullPath:"/v1/application_fees/{id}/refunds"}),listRefunds:hs({method:"GET",fullPath:"/v1/application_fees/{id}/refunds",methodType:"list"}),retrieveRefund:hs({method:"GET",fullPath:"/v1/application_fees/{fee}/refunds/{id}"}),updateRefund:hs({method:"POST",fullPath:"/v1/application_fees/{fee}/refunds/{id}"})}),jb=g.method,Ib=g.extend({retrieve:jb({method:"GET",fullPath:"/v1/balance"})}),_l=g.method,Mb=g.extend({retrieve:_l({method:"GET",fullPath:"/v1/balance_transactions/{id}"}),list:_l({method:"GET",fullPath:"/v1/balance_transactions",methodType:"list"})}),bs=g.method,Lb=g.extend({create:bs({method:"POST",fullPath:"/v1/charges"}),retrieve:bs({method:"GET",fullPath:"/v1/charges/{charge}"}),update:bs({method:"POST",fullPath:"/v1/charges/{charge}"}),list:bs({method:"GET",fullPath:"/v1/charges",methodType:"list"}),capture:bs({method:"POST",fullPath:"/v1/charges/{charge}/capture"}),search:bs({method:"GET",fullPath:"/v1/charges/search",methodType:"search"})}),$b=g.method,Fb=g.extend({retrieve:$b({method:"GET",fullPath:"/v1/confirmation_tokens/{confirmation_token}"})}),El=g.method,Bb=g.extend({retrieve:El({method:"GET",fullPath:"/v1/country_specs/{country}"}),list:El({method:"GET",fullPath:"/v1/country_specs",methodType:"list"})}),Ks=g.method,Ub=g.extend({create:Ks({method:"POST",fullPath:"/v1/coupons"}),retrieve:Ks({method:"GET",fullPath:"/v1/coupons/{coupon}"}),update:Ks({method:"POST",fullPath:"/v1/coupons/{coupon}"}),list:Ks({method:"GET",fullPath:"/v1/coupons",methodType:"list"}),del:Ks({method:"DELETE",fullPath:"/v1/coupons/{coupon}"})}),Ct=g.method,Hb=g.extend({create:Ct({method:"POST",fullPath:"/v1/credit_notes"}),retrieve:Ct({method:"GET",fullPath:"/v1/credit_notes/{id}"}),update:Ct({method:"POST",fullPath:"/v1/credit_notes/{id}"}),list:Ct({method:"GET",fullPath:"/v1/credit_notes",methodType:"list"}),listLineItems:Ct({method:"GET",fullPath:"/v1/credit_notes/{credit_note}/lines",methodType:"list"}),listPreviewLineItems:Ct({method:"GET",fullPath:"/v1/credit_notes/preview/lines",methodType:"list"}),preview:Ct({method:"GET",fullPath:"/v1/credit_notes/preview"}),voidCreditNote:Ct({method:"POST",fullPath:"/v1/credit_notes/{id}/void"})}),qb=g.method,Wb=g.extend({create:qb({method:"POST",fullPath:"/v1/customer_sessions"})}),Z=g.method,Gb=g.extend({create:Z({method:"POST",fullPath:"/v1/customers"}),retrieve:Z({method:"GET",fullPath:"/v1/customers/{customer}"}),update:Z({method:"POST",fullPath:"/v1/customers/{customer}"}),list:Z({method:"GET",fullPath:"/v1/customers",methodType:"list"}),del:Z({method:"DELETE",fullPath:"/v1/customers/{customer}"}),createBalanceTransaction:Z({method:"POST",fullPath:"/v1/customers/{customer}/balance_transactions"}),createFundingInstructions:Z({method:"POST",fullPath:"/v1/customers/{customer}/funding_instructions"}),createSource:Z({method:"POST",fullPath:"/v1/customers/{customer}/sources"}),createTaxId:Z({method:"POST",fullPath:"/v1/customers/{customer}/tax_ids"}),deleteDiscount:Z({method:"DELETE",fullPath:"/v1/customers/{customer}/discount"}),deleteSource:Z({method:"DELETE",fullPath:"/v1/customers/{customer}/sources/{id}"}),deleteTaxId:Z({method:"DELETE",fullPath:"/v1/customers/{customer}/tax_ids/{id}"}),listBalanceTransactions:Z({method:"GET",fullPath:"/v1/customers/{customer}/balance_transactions",methodType:"list"}),listCashBalanceTransactions:Z({method:"GET",fullPath:"/v1/customers/{customer}/cash_balance_transactions",methodType:"list"}),listPaymentMethods:Z({method:"GET",fullPath:"/v1/customers/{customer}/payment_methods",methodType:"list"}),listSources:Z({method:"GET",fullPath:"/v1/customers/{customer}/sources",methodType:"list"}),listTaxIds:Z({method:"GET",fullPath:"/v1/customers/{customer}/tax_ids",methodType:"list"}),retrieveBalanceTransaction:Z({method:"GET",fullPath:"/v1/customers/{customer}/balance_transactions/{transaction}"}),retrieveCashBalance:Z({method:"GET",fullPath:"/v1/customers/{customer}/cash_balance"}),retrieveCashBalanceTransaction:Z({method:"GET",fullPath:"/v1/customers/{customer}/cash_balance_transactions/{transaction}"}),retrievePaymentMethod:Z({method:"GET",fullPath:"/v1/customers/{customer}/payment_methods/{payment_method}"}),retrieveSource:Z({method:"GET",fullPath:"/v1/customers/{customer}/sources/{id}"}),retrieveTaxId:Z({method:"GET",fullPath:"/v1/customers/{customer}/tax_ids/{id}"}),search:Z({method:"GET",fullPath:"/v1/customers/search",methodType:"search"}),updateBalanceTransaction:Z({method:"POST",fullPath:"/v1/customers/{customer}/balance_transactions/{transaction}"}),updateCashBalance:Z({method:"POST",fullPath:"/v1/customers/{customer}/cash_balance"}),updateSource:Z({method:"POST",fullPath:"/v1/customers/{customer}/sources/{id}"}),verifySource:Z({method:"POST",fullPath:"/v1/customers/{customer}/sources/{id}/verify"})}),qr=g.method,zb=g.extend({retrieve:qr({method:"GET",fullPath:"/v1/disputes/{dispute}"}),update:qr({method:"POST",fullPath:"/v1/disputes/{dispute}"}),list:qr({method:"GET",fullPath:"/v1/disputes",methodType:"list"}),close:qr({method:"POST",fullPath:"/v1/disputes/{dispute}/close"})}),kl=g.method,Jb=g.extend({create:kl({method:"POST",fullPath:"/v1/ephemeral_keys",validator:(e,t)=>{if(!t.headers||!t.headers["Stripe-Version"])throw new Error("Passing apiVersion in a separate options hash is required to create an ephemeral key. See https://stripe.com/docs/api/versioning?lang=node")}}),del:kl({method:"DELETE",fullPath:"/v1/ephemeral_keys/{key}"})}),Tl=g.method,Vb=g.extend({retrieve:Tl({method:"GET",fullPath:"/v1/events/{id}"}),list:Tl({method:"GET",fullPath:"/v1/events",methodType:"list"})}),Sl=g.method,Yb=g.extend({retrieve:Sl({method:"GET",fullPath:"/v1/exchange_rates/{rate_id}"}),list:Sl({method:"GET",fullPath:"/v1/exchange_rates",methodType:"list"})}),Wr=g.method,Kb=g.extend({create:Wr({method:"POST",fullPath:"/v1/file_links"}),retrieve:Wr({method:"GET",fullPath:"/v1/file_links/{link}"}),update:Wr({method:"POST",fullPath:"/v1/file_links/{link}"}),list:Wr({method:"GET",fullPath:"/v1/file_links",methodType:"list"})}),Zb=(e,t,s)=>{const r=(Math.round(Math.random()*1e16)+Math.round(Math.random()*1e16)).toString();s["Content-Type"]=`multipart/form-data; boundary=${r}`;const i=new TextEncoder;let a=new Uint8Array(0);const n=i.encode(`\r
`);function o(c){const u=a,p=c instanceof Uint8Array?c:new Uint8Array(i.encode(c));a=new Uint8Array(u.length+p.length+2),a.set(u),a.set(p,u.length),a.set(n,a.length-2)}function l(c){return`"${c.replace(/"|"/g,"%22").replace(/\r\n|\r|\n/g," ")}"`}const d=_v(t);for(const c in d){if(!Object.prototype.hasOwnProperty.call(d,c))continue;const u=d[c];if(o(`--${r}`),Object.prototype.hasOwnProperty.call(u,"data")){const p=u;o(`Content-Disposition: form-data; name=${l(c)}; filename=${l(p.name||"blob")}`),o(`Content-Type: ${p.type||"application/octet-stream"}`),o(""),o(p.data)}else o(`Content-Disposition: form-data; name=${l(c)}`),o(""),o(u)}return o(`--${r}--`),a};function Qb(e,t,s,r){if(t=t||{},e!=="POST")return r(null,vi(t));this._stripe._platformFunctions.tryBufferData(t).then(i=>{const a=Zb(e,i,s);return r(null,a)}).catch(i=>r(i,null))}const Ha=g.method,Xb=g.extend({create:Ha({method:"POST",fullPath:"/v1/files",headers:{"Content-Type":"multipart/form-data"},host:"files.stripe.com"}),retrieve:Ha({method:"GET",fullPath:"/v1/files/{file}"}),list:Ha({method:"GET",fullPath:"/v1/files",methodType:"list"}),requestDataProcessor:Qb}),Zs=g.method,ey=g.extend({create:Zs({method:"POST",fullPath:"/v1/invoiceitems"}),retrieve:Zs({method:"GET",fullPath:"/v1/invoiceitems/{invoiceitem}"}),update:Zs({method:"POST",fullPath:"/v1/invoiceitems/{invoiceitem}"}),list:Zs({method:"GET",fullPath:"/v1/invoiceitems",methodType:"list"}),del:Zs({method:"DELETE",fullPath:"/v1/invoiceitems/{invoiceitem}"})}),Rl=g.method,ty=g.extend({retrieve:Rl({method:"GET",fullPath:"/v1/invoice_payments/{invoice_payment}"}),list:Rl({method:"GET",fullPath:"/v1/invoice_payments",methodType:"list"})}),Gr=g.method,sy=g.extend({retrieve:Gr({method:"GET",fullPath:"/v1/invoice_rendering_templates/{template}"}),list:Gr({method:"GET",fullPath:"/v1/invoice_rendering_templates",methodType:"list"}),archive:Gr({method:"POST",fullPath:"/v1/invoice_rendering_templates/{template}/archive"}),unarchive:Gr({method:"POST",fullPath:"/v1/invoice_rendering_templates/{template}/unarchive"})}),be=g.method,ry=g.extend({create:be({method:"POST",fullPath:"/v1/invoices"}),retrieve:be({method:"GET",fullPath:"/v1/invoices/{invoice}"}),update:be({method:"POST",fullPath:"/v1/invoices/{invoice}"}),list:be({method:"GET",fullPath:"/v1/invoices",methodType:"list"}),del:be({method:"DELETE",fullPath:"/v1/invoices/{invoice}"}),addLines:be({method:"POST",fullPath:"/v1/invoices/{invoice}/add_lines"}),attachPayment:be({method:"POST",fullPath:"/v1/invoices/{invoice}/attach_payment"}),createPreview:be({method:"POST",fullPath:"/v1/invoices/create_preview"}),finalizeInvoice:be({method:"POST",fullPath:"/v1/invoices/{invoice}/finalize"}),listLineItems:be({method:"GET",fullPath:"/v1/invoices/{invoice}/lines",methodType:"list"}),markUncollectible:be({method:"POST",fullPath:"/v1/invoices/{invoice}/mark_uncollectible"}),pay:be({method:"POST",fullPath:"/v1/invoices/{invoice}/pay"}),removeLines:be({method:"POST",fullPath:"/v1/invoices/{invoice}/remove_lines"}),search:be({method:"GET",fullPath:"/v1/invoices/search",methodType:"search"}),sendInvoice:be({method:"POST",fullPath:"/v1/invoices/{invoice}/send"}),updateLines:be({method:"POST",fullPath:"/v1/invoices/{invoice}/update_lines"}),updateLineItem:be({method:"POST",fullPath:"/v1/invoices/{invoice}/lines/{line_item_id}"}),voidInvoice:be({method:"POST",fullPath:"/v1/invoices/{invoice}/void"})}),iy=g.method,ay=g.extend({retrieve:iy({method:"GET",fullPath:"/v1/mandates/{mandate}"})}),Cl=g.method,qa="connect.stripe.com",ny=g.extend({basePath:"/",authorizeUrl(e,t){e=e||{},t=t||{};let s="oauth/authorize";return t.express&&(s=`express/${s}`),e.response_type||(e.response_type="code"),e.client_id||(e.client_id=this._stripe.getClientId()),e.scope||(e.scope="read_write"),`https://${qa}/${s}?${vi(e)}`},token:Cl({method:"POST",path:"oauth/token",host:qa}),deauthorize(e,...t){return e.client_id||(e.client_id=this._stripe.getClientId()),Cl({method:"POST",path:"oauth/deauthorize",host:qa}).apply(this,[e,...t])}}),Ve=g.method,oy=g.extend({create:Ve({method:"POST",fullPath:"/v1/payment_intents"}),retrieve:Ve({method:"GET",fullPath:"/v1/payment_intents/{intent}"}),update:Ve({method:"POST",fullPath:"/v1/payment_intents/{intent}"}),list:Ve({method:"GET",fullPath:"/v1/payment_intents",methodType:"list"}),applyCustomerBalance:Ve({method:"POST",fullPath:"/v1/payment_intents/{intent}/apply_customer_balance"}),cancel:Ve({method:"POST",fullPath:"/v1/payment_intents/{intent}/cancel"}),capture:Ve({method:"POST",fullPath:"/v1/payment_intents/{intent}/capture"}),confirm:Ve({method:"POST",fullPath:"/v1/payment_intents/{intent}/confirm"}),incrementAuthorization:Ve({method:"POST",fullPath:"/v1/payment_intents/{intent}/increment_authorization"}),search:Ve({method:"GET",fullPath:"/v1/payment_intents/search",methodType:"search"}),verifyMicrodeposits:Ve({method:"POST",fullPath:"/v1/payment_intents/{intent}/verify_microdeposits"})}),Qs=g.method,ly=g.extend({create:Qs({method:"POST",fullPath:"/v1/payment_links"}),retrieve:Qs({method:"GET",fullPath:"/v1/payment_links/{payment_link}"}),update:Qs({method:"POST",fullPath:"/v1/payment_links/{payment_link}"}),list:Qs({method:"GET",fullPath:"/v1/payment_links",methodType:"list"}),listLineItems:Qs({method:"GET",fullPath:"/v1/payment_links/{payment_link}/line_items",methodType:"list"})}),zr=g.method,dy=g.extend({create:zr({method:"POST",fullPath:"/v1/payment_method_configurations"}),retrieve:zr({method:"GET",fullPath:"/v1/payment_method_configurations/{configuration}"}),update:zr({method:"POST",fullPath:"/v1/payment_method_configurations/{configuration}"}),list:zr({method:"GET",fullPath:"/v1/payment_method_configurations",methodType:"list"})}),Xs=g.method,cy=g.extend({create:Xs({method:"POST",fullPath:"/v1/payment_method_domains"}),retrieve:Xs({method:"GET",fullPath:"/v1/payment_method_domains/{payment_method_domain}"}),update:Xs({method:"POST",fullPath:"/v1/payment_method_domains/{payment_method_domain}"}),list:Xs({method:"GET",fullPath:"/v1/payment_method_domains",methodType:"list"}),validate:Xs({method:"POST",fullPath:"/v1/payment_method_domains/{payment_method_domain}/validate"})}),ys=g.method,uy=g.extend({create:ys({method:"POST",fullPath:"/v1/payment_methods"}),retrieve:ys({method:"GET",fullPath:"/v1/payment_methods/{payment_method}"}),update:ys({method:"POST",fullPath:"/v1/payment_methods/{payment_method}"}),list:ys({method:"GET",fullPath:"/v1/payment_methods",methodType:"list"}),attach:ys({method:"POST",fullPath:"/v1/payment_methods/{payment_method}/attach"}),detach:ys({method:"POST",fullPath:"/v1/payment_methods/{payment_method}/detach"})}),xs=g.method,py=g.extend({create:xs({method:"POST",fullPath:"/v1/payouts"}),retrieve:xs({method:"GET",fullPath:"/v1/payouts/{payout}"}),update:xs({method:"POST",fullPath:"/v1/payouts/{payout}"}),list:xs({method:"GET",fullPath:"/v1/payouts",methodType:"list"}),cancel:xs({method:"POST",fullPath:"/v1/payouts/{payout}/cancel"}),reverse:xs({method:"POST",fullPath:"/v1/payouts/{payout}/reverse"})}),er=g.method,my=g.extend({create:er({method:"POST",fullPath:"/v1/plans"}),retrieve:er({method:"GET",fullPath:"/v1/plans/{plan}"}),update:er({method:"POST",fullPath:"/v1/plans/{plan}"}),list:er({method:"GET",fullPath:"/v1/plans",methodType:"list"}),del:er({method:"DELETE",fullPath:"/v1/plans/{plan}"})}),tr=g.method,fy=g.extend({create:tr({method:"POST",fullPath:"/v1/prices"}),retrieve:tr({method:"GET",fullPath:"/v1/prices/{price}"}),update:tr({method:"POST",fullPath:"/v1/prices/{price}"}),list:tr({method:"GET",fullPath:"/v1/prices",methodType:"list"}),search:tr({method:"GET",fullPath:"/v1/prices/search",methodType:"search"})}),it=g.method,gy=g.extend({create:it({method:"POST",fullPath:"/v1/products"}),retrieve:it({method:"GET",fullPath:"/v1/products/{id}"}),update:it({method:"POST",fullPath:"/v1/products/{id}"}),list:it({method:"GET",fullPath:"/v1/products",methodType:"list"}),del:it({method:"DELETE",fullPath:"/v1/products/{id}"}),createFeature:it({method:"POST",fullPath:"/v1/products/{product}/features"}),deleteFeature:it({method:"DELETE",fullPath:"/v1/products/{product}/features/{id}"}),listFeatures:it({method:"GET",fullPath:"/v1/products/{product}/features",methodType:"list"}),retrieveFeature:it({method:"GET",fullPath:"/v1/products/{product}/features/{id}"}),search:it({method:"GET",fullPath:"/v1/products/search",methodType:"search"})}),Jr=g.method,vy=g.extend({create:Jr({method:"POST",fullPath:"/v1/promotion_codes"}),retrieve:Jr({method:"GET",fullPath:"/v1/promotion_codes/{promotion_code}"}),update:Jr({method:"POST",fullPath:"/v1/promotion_codes/{promotion_code}"}),list:Jr({method:"GET",fullPath:"/v1/promotion_codes",methodType:"list"})}),at=g.method,hy=g.extend({create:at({method:"POST",fullPath:"/v1/quotes"}),retrieve:at({method:"GET",fullPath:"/v1/quotes/{quote}"}),update:at({method:"POST",fullPath:"/v1/quotes/{quote}"}),list:at({method:"GET",fullPath:"/v1/quotes",methodType:"list"}),accept:at({method:"POST",fullPath:"/v1/quotes/{quote}/accept"}),cancel:at({method:"POST",fullPath:"/v1/quotes/{quote}/cancel"}),finalizeQuote:at({method:"POST",fullPath:"/v1/quotes/{quote}/finalize"}),listComputedUpfrontLineItems:at({method:"GET",fullPath:"/v1/quotes/{quote}/computed_upfront_line_items",methodType:"list"}),listLineItems:at({method:"GET",fullPath:"/v1/quotes/{quote}/line_items",methodType:"list"}),pdf:at({method:"GET",fullPath:"/v1/quotes/{quote}/pdf",host:"files.stripe.com",streaming:!0})}),sr=g.method,by=g.extend({create:sr({method:"POST",fullPath:"/v1/refunds"}),retrieve:sr({method:"GET",fullPath:"/v1/refunds/{refund}"}),update:sr({method:"POST",fullPath:"/v1/refunds/{refund}"}),list:sr({method:"GET",fullPath:"/v1/refunds",methodType:"list"}),cancel:sr({method:"POST",fullPath:"/v1/refunds/{refund}/cancel"})}),Wa=g.method,yy=g.extend({retrieve:Wa({method:"GET",fullPath:"/v1/reviews/{review}"}),list:Wa({method:"GET",fullPath:"/v1/reviews",methodType:"list"}),approve:Wa({method:"POST",fullPath:"/v1/reviews/{review}/approve"})}),xy=g.method,wy=g.extend({list:xy({method:"GET",fullPath:"/v1/setup_attempts",methodType:"list"})}),Jt=g.method,_y=g.extend({create:Jt({method:"POST",fullPath:"/v1/setup_intents"}),retrieve:Jt({method:"GET",fullPath:"/v1/setup_intents/{intent}"}),update:Jt({method:"POST",fullPath:"/v1/setup_intents/{intent}"}),list:Jt({method:"GET",fullPath:"/v1/setup_intents",methodType:"list"}),cancel:Jt({method:"POST",fullPath:"/v1/setup_intents/{intent}/cancel"}),confirm:Jt({method:"POST",fullPath:"/v1/setup_intents/{intent}/confirm"}),verifyMicrodeposits:Jt({method:"POST",fullPath:"/v1/setup_intents/{intent}/verify_microdeposits"})}),Vr=g.method,Ey=g.extend({create:Vr({method:"POST",fullPath:"/v1/shipping_rates"}),retrieve:Vr({method:"GET",fullPath:"/v1/shipping_rates/{shipping_rate_token}"}),update:Vr({method:"POST",fullPath:"/v1/shipping_rates/{shipping_rate_token}"}),list:Vr({method:"GET",fullPath:"/v1/shipping_rates",methodType:"list"})}),rr=g.method,ky=g.extend({create:rr({method:"POST",fullPath:"/v1/sources"}),retrieve:rr({method:"GET",fullPath:"/v1/sources/{source}"}),update:rr({method:"POST",fullPath:"/v1/sources/{source}"}),listSourceTransactions:rr({method:"GET",fullPath:"/v1/sources/{source}/source_transactions",methodType:"list"}),verify:rr({method:"POST",fullPath:"/v1/sources/{source}/verify"})}),ir=g.method,Ty=g.extend({create:ir({method:"POST",fullPath:"/v1/subscription_items"}),retrieve:ir({method:"GET",fullPath:"/v1/subscription_items/{item}"}),update:ir({method:"POST",fullPath:"/v1/subscription_items/{item}"}),list:ir({method:"GET",fullPath:"/v1/subscription_items",methodType:"list"}),del:ir({method:"DELETE",fullPath:"/v1/subscription_items/{item}"})}),ws=g.method,Sy=g.extend({create:ws({method:"POST",fullPath:"/v1/subscription_schedules"}),retrieve:ws({method:"GET",fullPath:"/v1/subscription_schedules/{schedule}"}),update:ws({method:"POST",fullPath:"/v1/subscription_schedules/{schedule}"}),list:ws({method:"GET",fullPath:"/v1/subscription_schedules",methodType:"list"}),cancel:ws({method:"POST",fullPath:"/v1/subscription_schedules/{schedule}/cancel"}),release:ws({method:"POST",fullPath:"/v1/subscription_schedules/{schedule}/release"})}),ut=g.method,Ry=g.extend({create:ut({method:"POST",fullPath:"/v1/subscriptions"}),retrieve:ut({method:"GET",fullPath:"/v1/subscriptions/{subscription_exposed_id}"}),update:ut({method:"POST",fullPath:"/v1/subscriptions/{subscription_exposed_id}"}),list:ut({method:"GET",fullPath:"/v1/subscriptions",methodType:"list"}),cancel:ut({method:"DELETE",fullPath:"/v1/subscriptions/{subscription_exposed_id}"}),deleteDiscount:ut({method:"DELETE",fullPath:"/v1/subscriptions/{subscription_exposed_id}/discount"}),migrate:ut({method:"POST",fullPath:"/v1/subscriptions/{subscription}/migrate"}),resume:ut({method:"POST",fullPath:"/v1/subscriptions/{subscription}/resume"}),search:ut({method:"GET",fullPath:"/v1/subscriptions/search",methodType:"search"})}),Dl=g.method,Cy=g.extend({retrieve:Dl({method:"GET",fullPath:"/v1/tax_codes/{id}"}),list:Dl({method:"GET",fullPath:"/v1/tax_codes",methodType:"list"})}),Yr=g.method,Dy=g.extend({create:Yr({method:"POST",fullPath:"/v1/tax_ids"}),retrieve:Yr({method:"GET",fullPath:"/v1/tax_ids/{id}"}),list:Yr({method:"GET",fullPath:"/v1/tax_ids",methodType:"list"}),del:Yr({method:"DELETE",fullPath:"/v1/tax_ids/{id}"})}),Kr=g.method,Ny=g.extend({create:Kr({method:"POST",fullPath:"/v1/tax_rates"}),retrieve:Kr({method:"GET",fullPath:"/v1/tax_rates/{tax_rate}"}),update:Kr({method:"POST",fullPath:"/v1/tax_rates/{tax_rate}"}),list:Kr({method:"GET",fullPath:"/v1/tax_rates",methodType:"list"})}),Nl=g.method,Py=g.extend({create:Nl({method:"POST",fullPath:"/v1/tokens"}),retrieve:Nl({method:"GET",fullPath:"/v1/tokens/{token}"})}),ar=g.method,Ay=g.extend({create:ar({method:"POST",fullPath:"/v1/topups"}),retrieve:ar({method:"GET",fullPath:"/v1/topups/{topup}"}),update:ar({method:"POST",fullPath:"/v1/topups/{topup}"}),list:ar({method:"GET",fullPath:"/v1/topups",methodType:"list"}),cancel:ar({method:"POST",fullPath:"/v1/topups/{topup}/cancel"})}),Dt=g.method,Oy=g.extend({create:Dt({method:"POST",fullPath:"/v1/transfers"}),retrieve:Dt({method:"GET",fullPath:"/v1/transfers/{transfer}"}),update:Dt({method:"POST",fullPath:"/v1/transfers/{transfer}"}),list:Dt({method:"GET",fullPath:"/v1/transfers",methodType:"list"}),createReversal:Dt({method:"POST",fullPath:"/v1/transfers/{id}/reversals"}),listReversals:Dt({method:"GET",fullPath:"/v1/transfers/{id}/reversals",methodType:"list"}),retrieveReversal:Dt({method:"GET",fullPath:"/v1/transfers/{transfer}/reversals/{id}"}),updateReversal:Dt({method:"POST",fullPath:"/v1/transfers/{transfer}/reversals/{id}"})}),nr=g.method,jy=g.extend({create:nr({method:"POST",fullPath:"/v1/webhook_endpoints"}),retrieve:nr({method:"GET",fullPath:"/v1/webhook_endpoints/{webhook_endpoint}"}),update:nr({method:"POST",fullPath:"/v1/webhook_endpoints/{webhook_endpoint}"}),list:nr({method:"GET",fullPath:"/v1/webhook_endpoints",methodType:"list"}),del:nr({method:"DELETE",fullPath:"/v1/webhook_endpoints/{webhook_endpoint}"})}),Iy=oe("apps",{Secrets:db}),My=oe("billing",{Alerts:Kv,CreditBalanceSummary:ch,CreditBalanceTransactions:uh,CreditGrants:ph,MeterEventAdjustments:Rh,MeterEvents:Ih,Meters:$h}),Ly=oe("billingPortal",{Configurations:rh,Sessions:ub}),$y=oe("checkout",{Sessions:pb}),Fy=oe("climate",{Orders:Fh,Products:Jh,Suppliers:gb}),By=oe("entitlements",{ActiveEntitlements:Yv,Features:wh}),Uy=oe("financialConnections",{Accounts:Vv,Sessions:mb,Transactions:yb}),Hy=oe("forwarding",{Requests:ob}),qy=oe("identity",{VerificationReports:Sb,VerificationSessions:Rb}),Wy=oe("issuing",{Authorizations:Zv,Cardholders:eh,Cards:th,Disputes:hh,PersonalizationDesigns:Wh,PhysicalBundles:zh,Tokens:hb,Transactions:xb}),Gy=oe("radar",{EarlyFraudWarnings:bh,ValueListItems:kb,ValueLists:Tb}),zy=oe("reporting",{ReportRuns:ab,ReportTypes:nb}),Jy=oe("sigma",{ScheduledQueryRuns:lb}),Vy=oe("tax",{Calculations:Xv,Registrations:ib,Settings:fb,Transactions:wb}),Yy=oe("terminal",{Configurations:ih,ConnectionTokens:lh,Locations:Th,Readers:Vh}),Ky=oe("testHelpers",{ConfirmationTokens:nh,Customers:gh,Refunds:rb,TestClocks:vb,Issuing:oe("issuing",{Authorizations:Qv,Cards:sh,PersonalizationDesigns:Gh,Transactions:_b}),Terminal:oe("terminal",{Readers:Yh}),Treasury:oe("treasury",{InboundTransfers:Eh,OutboundPayments:Bh,OutboundTransfers:Hh,ReceivedCredits:Zh,ReceivedDebits:eb})}),Zy=oe("treasury",{CreditReversals:mh,DebitReversals:vh,FinancialAccounts:_h,InboundTransfers:kh,OutboundPayments:Uh,OutboundTransfers:qh,ReceivedCredits:Qh,ReceivedDebits:tb,TransactionEntries:bb,Transactions:Eb}),Qy=oe("v2",{Billing:oe("billing",{MeterEventAdjustments:Dh,MeterEventSession:Ph,MeterEventStream:Oh,MeterEvents:Lh}),Core:oe("core",{EventDestinations:yh,Events:xh})}),Zr=Object.freeze(Object.defineProperty({__proto__:null,Account:wl,AccountLinks:Db,AccountSessions:Pb,Accounts:wl,ApplePayDomains:Ab,ApplicationFees:Ob,Apps:Iy,Balance:Ib,BalanceTransactions:Mb,Billing:My,BillingPortal:Ly,Charges:Lb,Checkout:$y,Climate:Fy,ConfirmationTokens:Fb,CountrySpecs:Bb,Coupons:Ub,CreditNotes:Hb,CustomerSessions:Wb,Customers:Gb,Disputes:zb,Entitlements:By,EphemeralKeys:Jb,Events:Vb,ExchangeRates:Yb,FileLinks:Kb,Files:Xb,FinancialConnections:Uy,Forwarding:Hy,Identity:qy,InvoiceItems:ey,InvoicePayments:ty,InvoiceRenderingTemplates:sy,Invoices:ry,Issuing:Wy,Mandates:ay,OAuth:ny,PaymentIntents:oy,PaymentLinks:ly,PaymentMethodConfigurations:dy,PaymentMethodDomains:cy,PaymentMethods:uy,Payouts:py,Plans:my,Prices:fy,Products:gy,PromotionCodes:vy,Quotes:hy,Radar:Gy,Refunds:by,Reporting:zy,Reviews:yy,SetupAttempts:wy,SetupIntents:_y,ShippingRates:Ey,Sigma:Jy,Sources:ky,SubscriptionItems:Ty,SubscriptionSchedules:Sy,Subscriptions:Ry,Tax:Vy,TaxCodes:Cy,TaxIds:Dy,TaxRates:Ny,Terminal:Yy,TestHelpers:Ky,Tokens:Py,Topups:Ay,Transfers:Oy,Treasury:Zy,V2:Qy,WebhookEndpoints:jy},Symbol.toStringTag,{value:"Module"})),Pl="api.stripe.com",Al="443",Ol="/v1/",jl=pc,Il=8e4,Ml=5,Ll=.5,Xy=["name","version","url","partner_id"],$l=["authenticator","apiVersion","typescript","maxNetworkRetries","httpAgent","httpClient","timeout","host","port","protocol","telemetry","appInfo","stripeAccount","stripeContext"],e0=e=>new dr(e,g.MAX_BUFFERED_REQUEST_METRICS);function t0(e,t=e0){s.PACKAGE_VERSION="18.5.0",s.API_VERSION=pc,s.USER_AGENT=Object.assign({bindings_version:s.PACKAGE_VERSION,lang:"node",publisher:"stripe",uname:null,typescript:!1},Ev()),s.StripeResource=g,s.resources=Zr,s.HttpClient=He,s.HttpClientResponse=Xd,s.CryptoProvider=ec,s.webhooks=zv(e);function s(r,i={}){if(!(this instanceof s))return new s(r,i);const a=this._getPropsFromConfig(i);this._platformFunctions=e,Object.defineProperty(this,"_emitter",{value:this._platformFunctions.createEmitter(),enumerable:!1,configurable:!1,writable:!1}),this.VERSION=s.PACKAGE_VERSION,this.on=this._emitter.on.bind(this._emitter),this.once=this._emitter.once.bind(this._emitter),this.off=this._emitter.removeListener.bind(this._emitter);const n=a.httpAgent||null;this._api={host:a.host||Pl,port:a.port||Al,protocol:a.protocol||"https",basePath:Ol,version:a.apiVersion||jl,timeout:Ca("timeout",a.timeout,Il),maxNetworkRetries:Ca("maxNetworkRetries",a.maxNetworkRetries,2),agent:n,httpClient:a.httpClient||(n?this._platformFunctions.createNodeHttpClient(n):this._platformFunctions.createDefaultHttpClient()),dev:!1,stripeAccount:a.stripeAccount||null,stripeContext:a.stripeContext||null};const o=a.typescript||!1;o!==s.USER_AGENT.typescript&&(s.USER_AGENT.typescript=o),a.appInfo&&this._setAppInfo(a.appInfo),this._prepResources(),this._setAuthenticator(r,a.authenticator),this.errors=il,this.webhooks=s.webhooks,this._prevRequestMetrics=[],this._enableTelemetry=a.telemetry!==!1,this._requestSender=t(this),this.StripeResource=s.StripeResource}return s.errors=il,s.createNodeHttpClient=e.createNodeHttpClient,s.createFetchHttpClient=e.createFetchHttpClient,s.createNodeCryptoProvider=e.createNodeCryptoProvider,s.createSubtleCryptoProvider=e.createSubtleCryptoProvider,s.prototype={_appInfo:void 0,on:null,off:null,once:null,VERSION:null,StripeResource:null,webhooks:null,errors:null,_api:null,_prevRequestMetrics:null,_emitter:null,_enableTelemetry:null,_requestSender:null,_platformFunctions:null,rawRequest(r,i,a,n){return this._requestSender._rawRequest(r,i,a,n)},_setAuthenticator(r,i){if(r&&i)throw new Error("Can't specify both apiKey and authenticator");if(!r&&!i)throw new Error("Neither apiKey nor config.authenticator provided");this._authenticator=r?Za(r):i},_setAppInfo(r){if(r&&typeof r!="object")throw new Error("AppInfo must be an object.");if(r&&!r.name)throw new Error("AppInfo.name is required");r=r||{},this._appInfo=Xy.reduce((i,a)=>(typeof r[a]=="string"&&(i=i||{},i[a]=r[a]),i),{})},_setApiField(r,i){this._api[r]=i},getApiField(r){return this._api[r]},setClientId(r){this._clientId=r},getClientId(){return this._clientId},getConstant:r=>{switch(r){case"DEFAULT_HOST":return Pl;case"DEFAULT_PORT":return Al;case"DEFAULT_BASE_PATH":return Ol;case"DEFAULT_API_VERSION":return jl;case"DEFAULT_TIMEOUT":return Il;case"MAX_NETWORK_RETRY_DELAY_SEC":return Ml;case"INITIAL_NETWORK_RETRY_DELAY_SEC":return Ll}return s[r]},getMaxNetworkRetries(){return this.getApiField("maxNetworkRetries")},_setApiNumberField(r,i,a){const n=Ca(r,i,a);this._setApiField(r,n)},getMaxNetworkRetryDelay(){return Ml},getInitialNetworkRetryDelay(){return Ll},getClientUserAgent(r){return this.getClientUserAgentSeeded(s.USER_AGENT,r)},getClientUserAgentSeeded(r,i){this._platformFunctions.getUname().then(a=>{var n;const o={};for(const d in r)Object.prototype.hasOwnProperty.call(r,d)&&(o[d]=encodeURIComponent((n=r[d])!==null&&n!==void 0?n:"null"));o.uname=encodeURIComponent(a||"UNKNOWN");const l=this.getApiField("httpClient");l&&(o.httplib=encodeURIComponent(l.getClientName())),this._appInfo&&(o.application=this._appInfo),i(JSON.stringify(o))})},getAppInfoAsString(){if(!this._appInfo)return"";let r=this._appInfo.name;return this._appInfo.version&&(r+=`/${this._appInfo.version}`),this._appInfo.url&&(r+=` (${this._appInfo.url})`),r},getTelemetryEnabled(){return this._enableTelemetry},_prepResources(){for(const r in Zr)Object.prototype.hasOwnProperty.call(Zr,r)&&(this[xv(r)]=new Zr[r](this))},_getPropsFromConfig(r){if(!r)return{};const i=typeof r=="string";if(!(r===Object(r)&&!Array.isArray(r))&&!i)throw new Error("Config must either be an object or a string");if(i)return{apiVersion:r};if(Object.keys(r).filter(o=>!$l.includes(o)).length>0)throw new Error(`Config object may only contain the following: ${$l.join(", ")}`);return r},parseThinEvent(r,i,a,n,o,l){return this.webhooks.constructEvent(r,i,a,n,o,l)}},s}const Pe=t0(new Av);class Tn{constructor(t,s){O(this,"stripe");O(this,"db");this.stripe=t,this.db=s}async validateEscrowTransaction(t,s,r,i,a){const n={valid:!0,errors:[],warnings:[]};try{const o=await this.db.prepare(`
        SELECT * FROM jobs 
        WHERE job_id = ? AND client_id = ? AND worker_id = ?
      `).bind(t,s,r).first();if(!o)return n.errors.push("Job not found or user not authorized"),n.valid=!1,n;["accepted","in_progress","pending_completion"].includes(o.status)||(n.errors.push(`Cannot process payment for job with status: ${o.status}`),n.valid=!1),i<5&&(n.errors.push("Minimum payment amount is $5.00"),n.valid=!1),i>5e4&&(n.errors.push("Maximum payment amount is $50,000.00"),n.valid=!1);const d=await this.db.prepare(`
        SELECT COUNT(*) as count FROM escrow_transactions 
        WHERE job_id = ? AND status IN ('pending', 'held') AND milestone_id IS NULL
      `).bind(t).first();if((d==null?void 0:d.count)>0&&!a&&n.warnings.push("Job already has active escrow transaction"),a){const m=await this.db.prepare(`
          SELECT * FROM escrow_milestones 
          WHERE id = ? AND job_id = ?
        `).bind(a,t).first();m?m.status!=="pending"&&(n.errors.push(`Milestone status must be pending, current: ${m.status}`),n.valid=!1):(n.errors.push("Milestone not found"),n.valid=!1)}const[c,u]=await Promise.all([this.db.prepare("SELECT status FROM users WHERE user_id = ?").bind(s).first(),this.db.prepare("SELECT status FROM users WHERE user_id = ?").bind(r).first()]);(c==null?void 0:c.status)!=="active"&&(n.errors.push("Client account is not active"),n.valid=!1),(u==null?void 0:u.status)!=="active"&&(n.errors.push("Worker account is not active"),n.valid=!1);const p=await this.db.prepare(`
        SELECT COUNT(*) as count FROM user_payment_methods 
        WHERE user_id = ? AND is_default = 1 AND status = 'active'
      `).bind(s).first();(p==null?void 0:p.count)===0&&n.warnings.push("Client has no default payment method configured")}catch(o){n.errors.push(`Validation error: ${o.message}`),n.valid=!1}return n}calculatePlatformFee(t,s=!1,r="standard"){let i=.05;r==="premium"?i=.04:r==="elite"&&(i=.035),s&&(i*=.9);let a=t*i;const n=2,o=50;a<n&&(a=n),a>o&&(a=o);const l=t-a,d={platformFee:Math.round(a*100)/100,workerAmount:Math.round(l*100)/100,feeRate:i};return s&&(d.discountApplied="Recurring client discount (10% off fees)"),d}async createEscrowTransaction(t,s,r,i,a,n,o){const l=await this.validateEscrowTransaction(t,s,r,i,n);if(!l.valid)throw new Error(`Escrow validation failed: ${l.errors.join(", ")}`);const d=await this.checkRecurringClient(s),c=await this.getWorkerTier(r),u=this.calculatePlatformFee(i,d,c),p=new Date,m=o||new Date(p.getTime()+720*60*60*1e3),b=new Date(m.getTime()+10080*60*1e3),v=await this.db.prepare(`
      INSERT INTO escrow_transactions (
        job_id, client_id, worker_id, amount, platform_fee, worker_amount,
        payment_intent_id, status, milestone_id, deadline_at, auto_release_at, created_at, updated_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, 'held', ?, ?, ?, datetime('now'), datetime('now'))
    `).bind(t,s,r,i,u.platformFee,u.workerAmount,a,n||null,m.toISOString(),b.toISOString()).run(),f=await this.db.prepare(`
      SELECT * FROM escrow_transactions WHERE id = ?
    `).bind(v.meta.last_row_id).first();return await this.logEscrowActivity(f.id,"created",`Escrow created for $${i} (fee: $${u.platformFee})`,s),f}async releaseEscrow(t,s,r="Job completed",i=!1){const a=await this.db.prepare(`
      SELECT et.*, j.status as job_status, j.completion_date
      FROM escrow_transactions et
      JOIN jobs j ON et.job_id = j.job_id
      WHERE et.id = ?
    `).bind(t).first();if(!a)return{success:!1,message:"Escrow transaction not found"};if(a.status!=="held")return{success:!1,message:`Cannot release escrow with status: ${a.status}`};if(!(s===a.client_id||s===a.worker_id||i))return{success:!1,message:"Not authorized to release escrow"};if(!i){if(!["completed","approved"].includes(a.job_status))return{success:!1,message:`Job must be completed before releasing escrow. Current status: ${a.job_status}`};const l=new Date(a.created_at),d=new Date(l.getTime()+1440*60*1e3);if(new Date<d&&s===a.client_id)return{success:!1,message:"Minimum 24-hour hold period has not passed"}}try{const o=await this.stripe.paymentIntents.capture(a.payment_intent_id);return await this.db.prepare(`
        UPDATE escrow_transactions 
        SET status = 'released', updated_at = datetime('now'), notes = ?
        WHERE id = ?
      `).bind(r,t).run(),a.job_status!=="completed"&&await this.db.prepare(`
          UPDATE jobs 
          SET status = 'completed', completion_date = datetime('now')
          WHERE job_id = ?
        `).bind(a.job_id).run(),await this.logEscrowActivity(t,"released",`Escrow released: ${r}`,s),await this.createEscrowNotification(a.worker_id,"escrow_released",`Payment of $${a.worker_amount} has been released`,a.job_id),{success:!0,message:"Escrow released successfully",chargeId:o.latest_charge}}catch(o){return await this.logEscrowActivity(t,"release_failed",`Release failed: ${o.message}`,s),{success:!1,message:`Failed to release escrow: ${o.message}`}}}async refundEscrow(t,s,r,i){const a=await this.db.prepare(`
      SELECT et.*, j.status as job_status
      FROM escrow_transactions et
      JOIN jobs j ON et.job_id = j.job_id
      WHERE et.id = ?
    `).bind(t).first();if(!a)return{success:!1,message:"Escrow transaction not found"};if(!["held","disputed"].includes(a.status))return{success:!1,message:`Cannot refund escrow with status: ${a.status}`};if(!(s===a.client_id||await this.isAdmin(s)))return{success:!1,message:"Not authorized to refund escrow"};const o=i||a.amount;if(i&&(i>a.amount||i<=0))return{success:!1,message:"Invalid partial refund amount"};try{const l=await this.stripe.refunds.create({payment_intent:a.payment_intent_id,amount:Math.round(o*100),reason:"requested_by_customer",metadata:{escrow_transaction_id:t.toString(),reason:r}}),d=i?"partially_refunded":"refunded";return await this.db.prepare(`
        UPDATE escrow_transactions 
        SET status = ?, updated_at = datetime('now'), notes = ?
        WHERE id = ?
      `).bind(d,`Refund: ${r}`,t).run(),await this.db.prepare(`
        UPDATE jobs 
        SET status = 'cancelled', cancellation_reason = ?
        WHERE job_id = ?
      `).bind(r,a.job_id).run(),await this.logEscrowActivity(t,"refunded",`Escrow refunded $${o}: ${r}`,s),await this.createEscrowNotification(a.client_id,"escrow_refunded",`Refund of $${o} has been processed`,a.job_id),{success:!0,message:"Escrow refunded successfully",refundId:l.id}}catch(l){return await this.logEscrowActivity(t,"refund_failed",`Refund failed: ${l.message}`,s),{success:!1,message:`Failed to refund escrow: ${l.message}`}}}async checkRecurringClient(t){const s=await this.db.prepare(`
      SELECT COUNT(*) as count FROM escrow_transactions 
      WHERE client_id = ? AND status = 'released' AND created_at > datetime('now', '-90 days')
    `).bind(t).first();return((s==null?void 0:s.count)||0)>=3}async getWorkerTier(t){const s=await this.db.prepare(`
      SELECT tier FROM workers WHERE user_id = ?
    `).bind(t).first();return(s==null?void 0:s.tier)||"standard"}async isAdmin(t){const s=await this.db.prepare(`
      SELECT role FROM users WHERE user_id = ?
    `).bind(t).first();return(s==null?void 0:s.role)==="admin"}async logEscrowActivity(t,s,r,i){await this.db.prepare(`
      INSERT INTO escrow_activity_log (
        transaction_id, action, description, user_id, created_at
      ) VALUES (?, ?, ?, ?, datetime('now'))
    `).bind(t,s,r,i).run()}async createEscrowNotification(t,s,r,i){await this.db.prepare(`
      INSERT INTO notifications (
        user_id, type, message, job_id, is_read, created_at
      ) VALUES (?, ?, ?, ?, 0, datetime('now'))
    `).bind(t,s,r,i).run()}}const s0=Object.freeze(Object.defineProperty({__proto__:null,EscrowService:Tn},Symbol.toStringTag,{value:"Module"}));class r0{constructor(t,s){O(this,"db");O(this,"escrowService");O(this,"stripe");this.db=t,this.stripe=s,this.escrowService=new Tn(s,t)}async onJobStatusChange(t,s,r,i){if(console.log(`Job ${t} status changed: ${s} -> ${r}`),!(await this.db.prepare(`
      SELECT * FROM escrow_transactions 
      WHERE job_id = ? AND status IN ('held', 'pending')
      ORDER BY created_at DESC
    `).bind(t).all()).results.length){console.log(`No active escrow transactions found for job ${t}`);return}await Promise.all([this.handleJobCompletion(t,s,r,i),this.handleJobApproval(t,s,r,i),this.handleJobCancellation(t,s,r,i),this.handleJobDispute(t,s,r,i),this.handleWorkerSubmission(t,s,r,i)])}async handleJobCompletion(t,s,r,i){if(r!=="completed")return;const a={notifications:{client:!0,worker:!0,admin:!1}},n=await this.getActiveEscrowTransactions(t);for(const o of n)await this.checkAutoReleaseConditions(o.id),await this.sendCompletionReminder(o,a.notifications),await this.logTriggerAction(o.id,"job_completed","Job marked as completed, escrow pending client approval",i)}async handleJobApproval(t,s,r,i){if(r!=="approved")return;const a=await this.getActiveEscrowTransactions(t);for(const n of a){const o=await this.escrowService.releaseEscrow(n.id,i,"Job approved by client - automatic release");o.success&&(await this.sendApprovalNotifications(n),await this.scheduleRatingReminder(t,n.client_id,n.worker_id)),await this.logTriggerAction(n.id,"job_approved",`Auto-release ${o.success?"successful":"failed"}: ${o.message}`,i)}}async handleJobCancellation(t,s,r,i){if(r!=="cancelled")return;const a=await this.db.prepare(`
      SELECT *, 
        CASE 
          WHEN status = 'posted' OR status = 'applied' THEN 'full_refund'
          WHEN status = 'accepted' OR status = 'in_progress' THEN 'conditional_refund'
          ELSE 'no_refund'
        END as refund_type
      FROM jobs WHERE job_id = ?
    `).bind(t).first(),n=await this.getActiveEscrowTransactions(t);for(const o of n){let l=!1,d="";switch(a.refund_type){case"full_refund":l=!0,d="Job cancelled before work started";break;case"conditional_refund":await this.checkWorkSubmission(t)?d="Job cancelled - work submitted, manual review required":(l=!0,d="Job cancelled with no work submitted");break;default:d="Job cancelled - no automatic refund"}if(l){const c=await this.escrowService.refundEscrow(o.id,i,d);c.success&&await this.sendCancellationNotifications(o,d),await this.logTriggerAction(o.id,"job_cancelled",`Auto-refund ${c.success?"processed":"failed"}: ${c.message}`,i)}else await this.flagForManualReview(o.id,d),await this.logTriggerAction(o.id,"job_cancelled",`Flagged for manual review: ${d}`,i)}}async handleJobDispute(t,s,r,i){if(r!=="disputed")return;const a=await this.getActiveEscrowTransactions(t);for(const n of a)await this.db.prepare(`
        UPDATE escrow_transactions 
        SET status = 'disputed', updated_at = datetime('now')
        WHERE id = ?
      `).bind(n.id).run(),await this.createDisputeCase(n,i),await this.sendDisputeNotifications(n),await this.scheduleDisputeEscalation(n.id,72),await this.logTriggerAction(n.id,"dispute_created","Escrow marked as disputed, case opened for review",i)}async handleWorkerSubmission(t,s,r,i){if(r!=="pending_approval")return;const a=await this.getActiveEscrowTransactions(t);for(const n of a)await this.sendSubmissionNotifications(n),await this.scheduleApprovalReminder(n.id,48),await this.scheduleAutoApproval(n.id,168),await this.logTriggerAction(n.id,"work_submitted","Work submitted, client approval required",i)}async processTimeBasedTriggers(){console.log("Processing time-based escrow triggers..."),await Promise.all([this.processAutoReleaseSchedule(),this.processApprovalReminders(),this.processDisputeEscalations(),this.processExpiredEscrows(),this.processStaleTransactions()])}async processAutoReleaseSchedule(){const t=await this.db.prepare(`
      SELECT et.*, s.scheduled_at, s.reason
      FROM escrow_transactions et
      JOIN escrow_schedule s ON et.id = s.transaction_id
      WHERE et.status = 'held' 
        AND s.action = 'auto_release'
        AND s.scheduled_at <= datetime('now')
        AND s.processed = 0
    `).all();for(const s of t.results){const r=await this.escrowService.releaseEscrow(s.id,0,s.reason||"Automatic release - timeout",!0);await this.db.prepare(`
        UPDATE escrow_schedule 
        SET processed = 1, processed_at = datetime('now'), result = ?
        WHERE transaction_id = ? AND action = 'auto_release'
      `).bind(JSON.stringify(r),s.id).run(),console.log(`Auto-release processed for transaction ${s.id}: ${r.message}`)}}async processApprovalReminders(){const t=await this.db.prepare(`
      SELECT et.*, j.title, u.email as client_email, u.name as client_name
      FROM escrow_transactions et
      JOIN jobs j ON et.job_id = j.job_id
      JOIN users u ON et.client_id = u.user_id
      WHERE et.status = 'held' 
        AND j.status = 'pending_approval'
        AND datetime(j.updated_at, '+48 hours') <= datetime('now')
        AND NOT EXISTS (
          SELECT 1 FROM notifications n 
          WHERE n.user_id = et.client_id 
            AND n.type = 'approval_reminder' 
            AND n.job_id = et.job_id
            AND n.created_at > datetime('now', '-24 hours')
        )
    `).all();for(const s of t.results)await this.db.prepare(`
        INSERT INTO notifications (
          user_id, type, message, job_id, is_read, created_at
        ) VALUES (?, 'approval_reminder', ?, ?, 0, datetime('now'))
      `).bind(s.client_id,`Please review and approve the completed work for "${s.title}". Payment of $${s.amount} is held in escrow.`,s.job_id).run(),console.log(`Approval reminder sent for job ${s.job_id}`)}async getActiveEscrowTransactions(t){return(await this.db.prepare(`
      SELECT * FROM escrow_transactions 
      WHERE job_id = ? AND status IN ('held', 'pending')
    `).bind(t).all()).results}async checkAutoReleaseConditions(t){const s=await this.db.prepare(`
      SELECT et.*, j.status, j.client_rating
      FROM escrow_transactions et
      JOIN jobs j ON et.job_id = j.job_id
      WHERE et.id = ?
    `).bind(t).first();return s?s.status==="completed"||s.status==="approved":!1}async scheduleAutoRelease(t,s){const r=new Date(Date.now()+s*60*60*1e3);await this.db.prepare(`
      INSERT INTO escrow_schedule (
        transaction_id, action, scheduled_at, reason, processed, created_at
      ) VALUES (?, 'auto_release', ?, 'Automatic release after timeout', 0, datetime('now'))
    `).bind(t,r.toISOString()).run()}async sendCompletionReminder(t,s){s.client&&await this.db.prepare(`
        INSERT INTO notifications (
          user_id, type, message, job_id, is_read, created_at
        ) VALUES (?, 'job_completed', ?, ?, 0, datetime('now'))
      `).bind(t.client_id,`Job completed! Please review the work and approve payment of $${t.amount}.`,t.job_id).run(),s.worker&&await this.db.prepare(`
        INSERT INTO notifications (
          user_id, type, message, job_id, is_read, created_at
        ) VALUES (?, 'awaiting_approval', ?, ?, 0, datetime('now'))
      `).bind(t.worker_id,`Your work has been submitted and is awaiting client approval. Payment of $${t.worker_amount} is secured in escrow.`,t.job_id).run()}async logTriggerAction(t,s,r,i){await this.db.prepare(`
      INSERT INTO escrow_activity_log (
        transaction_id, action, description, user_id, created_at
      ) VALUES (?, ?, ?, ?, datetime('now'))
    `).bind(t,s,r,i).run()}async checkWorkSubmission(t){const s=await this.db.prepare(`
      SELECT COUNT(*) as count FROM job_submissions 
      WHERE job_id = ?
    `).bind(t).first();return((s==null?void 0:s.count)||0)>0}async createDisputeCase(t,s){await this.db.prepare(`
      INSERT INTO dispute_cases (
        escrow_transaction_id, job_id, client_id, worker_id, 
        initiated_by, status, created_at
      ) VALUES (?, ?, ?, ?, ?, 'open', datetime('now'))
    `).bind(t.id,t.job_id,t.client_id,t.worker_id,s).run()}async flagForManualReview(t,s){await this.db.prepare(`
      UPDATE escrow_transactions 
      SET status = 'review_required', notes = ?, updated_at = datetime('now')
      WHERE id = ?
    `).bind(s,t).run()}async sendApprovalNotifications(t){}async sendCancellationNotifications(t,s){}async sendDisputeNotifications(t){}async sendSubmissionNotifications(t){}async scheduleRatingReminder(t,s,r){}async scheduleApprovalReminder(t,s){}async scheduleAutoApproval(t,s){}async scheduleDisputeEscalation(t,s){}async processDisputeEscalations(){}async processExpiredEscrows(){}async processStaleTransactions(){}}class bi{constructor(t){O(this,"db");O(this,"defaultConfig",{approval_deadline_hours:168,auto_release_hours:240,dispute_resolution_hours:720,refund_deadline_hours:72,reminder_intervals:[24,6,1]});this.db=t}async initializeEscrowTimeline(t,s="standard",r){const i={...this.defaultConfig,...r};await this.addTimelineEvent(t,"created","Escrow transaction created and funds held",void 0,{config:JSON.stringify(i)}),await this.createDeadlines(t,i,s)}async addTimelineEvent(t,s,r,i,a){const o=(await this.db.prepare(`
      INSERT INTO escrow_timeline (
        transaction_id, event_type, description, user_id, metadata, created_at
      ) VALUES (?, ?, ?, ?, ?, datetime('now'))
    `).bind(t,s,r,i||null,a?JSON.stringify(a):null).run()).meta.last_row_id;return await this.updateDeadlinesOnEvent(t,s,new Date),o}async getEscrowTimeline(t){const s=await this.db.prepare(`
      SELECT et.*, u.name as user_name
      FROM escrow_timeline et
      LEFT JOIN users u ON et.user_id = u.user_id
      WHERE et.transaction_id = ?
      ORDER BY et.created_at ASC
    `).bind(t).all(),r=await this.db.prepare(`
      SELECT * FROM escrow_deadlines 
      WHERE transaction_id = ?
      ORDER BY deadline_at ASC
    `).bind(t).all(),i=s.results,a=r.results,n=this.determineCurrentPhase(i),o=a.find(d=>d.status==="pending"&&new Date(d.deadline_at)>new Date),l=a.filter(d=>d.status==="pending"&&new Date(d.deadline_at)<=new Date);return{timeline:i,deadlines:a,currentPhase:n,nextDeadline:o,overdueTasks:l}}async processDeadlineReminders(){console.log("Processing escrow deadline reminders...");const t=await this.db.prepare(`
      SELECT ed.*, et.client_id, et.worker_id, et.job_id, et.amount,
             j.title as job_title
      FROM escrow_deadlines ed
      JOIN escrow_transactions et ON ed.transaction_id = et.id
      JOIN jobs j ON et.job_id = j.job_id
      WHERE ed.status = 'pending'
        AND ed.reminder_sent = 0
        AND datetime(ed.deadline_at, '-1 hours') <= datetime('now')
        AND datetime(ed.deadline_at) > datetime('now')
    `).all();for(const s of t.results)await this.sendDeadlineReminder(s),await this.db.prepare(`
        UPDATE escrow_deadlines 
        SET reminder_sent = 1, escalation_level = escalation_level + 1
        WHERE id = ?
      `).bind(s.id).run();await this.processOverdueDeadlines()}async processOverdueDeadlines(){const t=await this.db.prepare(`
      SELECT ed.*, et.client_id, et.worker_id, et.job_id, et.amount,
             j.title as job_title, j.status as job_status
      FROM escrow_deadlines ed
      JOIN escrow_transactions et ON ed.transaction_id = et.id
      JOIN jobs j ON et.job_id = j.job_id
      WHERE ed.status = 'pending'
        AND datetime(ed.deadline_at) <= datetime('now')
    `).all();for(const s of t.results)await this.escalateOverdueDeadline(s),await this.db.prepare(`
        UPDATE escrow_deadlines 
        SET status = 'overdue', escalation_level = escalation_level + 1
        WHERE id = ?
      `).bind(s.id).run(),await this.addTimelineEvent(s.transaction_id,"expired",`${s.deadline_type} deadline exceeded`,void 0,{deadline_id:s.id})}async extendDeadline(t,s,r,i,a){const n=await this.validateDeadlineExtension(t,s,r);if(!n.valid)return{success:!1,message:n.reason};const o=new Date(Date.now()+r*60*60*1e3);return await this.db.prepare(`
      UPDATE escrow_deadlines 
      SET deadline_at = ?, escalation_level = 0, reminder_sent = 0
      WHERE transaction_id = ? AND deadline_type = ? AND status = 'pending'
    `).bind(o.toISOString(),t,s).run(),await this.addTimelineEvent(t,"created",`${s} deadline extended by ${r} hours: ${i}`,a,{extension_hours:r,new_deadline:o.toISOString(),reason:i}),await this.notifyDeadlineExtension(t,s,o,i),{success:!0,message:"Deadline extended successfully",newDeadline:o}}async getTransactionStatus(t){const s=await this.db.prepare(`
      SELECT et.*, j.status as job_status, j.estimated_duration
      FROM escrow_transactions et
      JOIN jobs j ON et.job_id = j.job_id
      WHERE et.id = ?
    `).bind(t).first();if(!s)throw new Error("Transaction not found");const r=await this.getEscrowTimeline(t),i=new Date(s.created_at),a=(Date.now()-i.getTime())/(1e3*60*60),n=this.assessRiskLevel(r,a,s),o=this.generateRecommendations(r,s,n),l=this.estimateCompletion(r,s);return{status:s.status,phase:r.currentPhase,timeElapsed:Math.round(a*100)/100,estimatedCompletion:l,riskLevel:n,recommendations:o}}async createDeadlines(t,s,r){const i=new Date;let a=1;r==="complex"&&(a=1.5),r==="urgent"&&(a=.5);const n=[{type:"approval",hours:s.approval_deadline_hours*a},{type:"auto_release",hours:s.auto_release_hours*a},{type:"dispute_resolution",hours:s.dispute_resolution_hours*a}];for(const o of n){const l=new Date(i.getTime()+o.hours*60*60*1e3);await this.db.prepare(`
        INSERT INTO escrow_deadlines (
          transaction_id, deadline_type, deadline_at, status, reminder_sent, escalation_level, created_at
        ) VALUES (?, ?, ?, 'pending', 0, 0, datetime('now'))
      `).bind(t,o.type,l.toISOString()).run()}}async updateDeadlinesOnEvent(t,s,r){switch(s){case"work_submitted":await this.db.prepare(`
          UPDATE escrow_deadlines 
          SET status = 'completed', completed_at = ?
          WHERE transaction_id = ? AND deadline_type = 'work_submission'
        `).bind(r.toISOString(),t).run();break;case"approved":await this.db.prepare(`
          UPDATE escrow_deadlines 
          SET status = 'completed', completed_at = ?
          WHERE transaction_id = ? AND deadline_type = 'approval'
        `).bind(r.toISOString(),t).run();break;case"released":case"refunded":await this.db.prepare(`
          UPDATE escrow_deadlines 
          SET status = 'completed', completed_at = ?
          WHERE transaction_id = ? AND status = 'pending'
        `).bind(r.toISOString(),t).run();break;case"disputed":await this.db.prepare(`
          UPDATE escrow_deadlines 
          SET status = 'cancelled'
          WHERE transaction_id = ? AND deadline_type IN ('approval', 'auto_release')
        `).bind(t).run();break}}determineCurrentPhase(t){const s=t[t.length-1];return s?{created:"awaiting_work",payment_confirmed:"awaiting_work",work_submitted:"awaiting_approval",approved:"payment_processing",released:"completed",disputed:"dispute_resolution",refunded:"refunded",expired:"expired"}[s.event_type]||"unknown":"created"}async sendDeadlineReminder(t){const s=this.getDeadlineReminderMessage(t),r=this.getDeadlineRecipients(t);for(const i of r)await this.db.prepare(`
        INSERT INTO notifications (
          user_id, type, message, job_id, is_read, created_at
        ) VALUES (?, 'deadline_reminder', ?, ?, 0, datetime('now'))
      `).bind(i.user_id,s,t.job_id).run()}getDeadlineReminderMessage(t){const s=Math.round((new Date(t.deadline_at).getTime()-Date.now())/36e5);return{approval:`⏰ Reminder: Please review and approve the completed work for "${t.job_title}". ${s} hours remaining until deadline. Payment of $${t.amount} is secured in escrow.`,auto_release:`⚠️ Auto-release approaching: Payment for "${t.job_title}" will be automatically released in ${s} hours unless disputed.`,dispute_resolution:`🚨 Dispute resolution deadline: The dispute for "${t.job_title}" must be resolved within ${s} hours.`,refund:`💰 Refund processing: The refund for "${t.job_title}" is being processed. ${s} hours remaining.`}[t.deadline_type]||`Deadline reminder for ${t.deadline_type}: ${s} hours remaining`}getDeadlineRecipients(t){return{approval:[{user_id:t.client_id,role:"client"}],auto_release:[{user_id:t.client_id,role:"client"},{user_id:t.worker_id,role:"worker"}],dispute_resolution:[{user_id:t.client_id,role:"client"},{user_id:t.worker_id,role:"worker"}],refund:[{user_id:t.client_id,role:"client"}]}[t.deadline_type]||[]}async escalateOverdueDeadline(t){switch(console.log(`Escalating overdue deadline: ${t.deadline_type} for transaction ${t.transaction_id}`),t.deadline_type){case"approval":t.escalation_level===0?await this.sendUrgentApprovalReminder(t):t.escalation_level>=2&&await this.triggerAutoApproval(t);break;case"auto_release":await this.triggerForceRelease(t);break;case"dispute_resolution":await this.escalateToAdmin(t);break}}async validateDeadlineExtension(t,s,r){const i={approval:168,auto_release:72,dispute_resolution:240};if(r>(i[s]||24))return{valid:!1,reason:`Maximum extension for ${s} is ${i[s]} hours`};const a=await this.db.prepare(`
      SELECT status FROM escrow_transactions WHERE id = ?
    `).bind(t).first();return["held","pending"].includes(a==null?void 0:a.status)?{valid:!0,reason:""}:{valid:!1,reason:"Transaction status does not allow deadline extension"}}assessRiskLevel(t,s,r){let i=0;return s>240?i+=2:s>120&&(i+=1),r.status==="disputed"&&(i+=3),t.overdueTasks.length>0&&(i+=2),t.overdueTasks.length>2&&(i+=2),t.timeline.filter(n=>Date.now()-new Date(n.created_at).getTime()<2880*60*1e3).length===0&&(i+=1),i>=5?"high":i>=3?"medium":"low"}generateRecommendations(t,s,r){const i=[];return r==="high"&&(i.push("🚨 High risk transaction - consider manual review"),i.push("📞 Contact both parties to resolve issues")),t.overdueTasks.length>0&&i.push("⏰ Address overdue deadlines immediately"),t.currentPhase==="awaiting_approval"&&i.push("💡 Send approval reminder to client"),t.currentPhase==="dispute_resolution"&&i.push("⚖️ Escalate dispute to mediation if unresolved"),i}estimateCompletion(t,s){const r=t.currentPhase,i=new Date,n={awaiting_work:72,awaiting_approval:48,payment_processing:1,dispute_resolution:168}[r];if(n)return new Date(i.getTime()+n*60*60*1e3)}async notifyDeadlineExtension(t,s,r,i){}async sendUrgentApprovalReminder(t){}async triggerAutoApproval(t){}async triggerForceRelease(t){}async escalateToAdmin(t){}}class Ls{constructor(t,s){O(this,"db");O(this,"escrowService");O(this,"stripe");O(this,"defaultTemplates",{web_development:[{id:1,name:"Project Setup",description:"Initial setup and planning",percentage:20,order:1,category:"project_start"},{id:2,name:"Design & Wireframes",description:"Create designs and wireframes",percentage:30,order:2,dependencies:[1],category:"progress"},{id:3,name:"Development",description:"Core development work",percentage:40,order:3,dependencies:[2],category:"progress"},{id:4,name:"Testing & Deployment",description:"Testing and final deployment",percentage:10,order:4,dependencies:[3],category:"completion"}],graphic_design:[{id:1,name:"Concept & Brief",description:"Initial concepts and client brief",percentage:25,order:1,category:"project_start"},{id:2,name:"Design Draft",description:"First design draft",percentage:50,order:2,dependencies:[1],category:"progress"},{id:3,name:"Revisions",description:"Client feedback and revisions",percentage:15,order:3,dependencies:[2],category:"progress"},{id:4,name:"Final Delivery",description:"Final files and delivery",percentage:10,order:4,dependencies:[3],category:"completion"}],content_writing:[{id:1,name:"Research & Outline",description:"Research and content outline",percentage:30,order:1,category:"project_start"},{id:2,name:"Draft Content",description:"First draft of content",percentage:50,order:2,dependencies:[1],category:"progress"},{id:3,name:"Final Content",description:"Edited and final content",percentage:20,order:3,dependencies:[2],category:"completion"}],custom:[]});this.db=t,this.stripe=s,this.escrowService=new Tn(s,t)}async createJobMilestones(t,s,r="custom",i,a){let n;i&&i.length>0?n=i:this.defaultTemplates[r]?n=this.defaultTemplates[r].map(c=>({title:c.name,description:c.description,percentage:c.percentage,milestone_number:c.order,dependencies:c.dependencies})):n=[{title:"Project Start",description:"Initial milestone - 50% upfront payment",percentage:50,milestone_number:1},{title:"Project Completion",description:"Final milestone - remaining payment on completion",percentage:50,milestone_number:2,dependencies:[1]}];const o=n.reduce((d,c)=>d+(c.percentage||0),0);if(Math.abs(o-100)>.01)throw new Error(`Milestone percentages must add up to 100%, current total: ${o}%`);const l=[];for(const d of n){const c=Math.round(s*(d.percentage||0)/100*100)/100,u=await this.db.prepare(`
        INSERT INTO job_milestones (
          job_id, milestone_number, title, description, amount, percentage,
          status, dependencies, created_at, updated_at
        ) VALUES (?, ?, ?, ?, ?, ?, 'pending', ?, datetime('now'), datetime('now'))
      `).bind(t,d.milestone_number||1,d.title||"Milestone",d.description||"",c,d.percentage||0,d.dependencies?JSON.stringify(d.dependencies):null).run(),p=await this.db.prepare(`
        SELECT * FROM job_milestones WHERE id = ?
      `).bind(u.meta.last_row_id).first();l.push(p)}return await this.logMilestoneActivity(t,"milestones_created",`Created ${l.length} milestones for job`,a||0),l}async processMilestonePayment(t,s,r){const i=await this.db.prepare(`
      SELECT jm.*, j.worker_id, j.client_id, j.status as job_status
      FROM job_milestones jm
      JOIN jobs j ON jm.job_id = j.job_id
      WHERE jm.id = ? AND j.client_id = ?
    `).bind(t,s).first();if(!i)return{success:!1,message:"Milestone not found or access denied"};if(i.status!=="pending")return{success:!1,message:`Milestone status must be pending, current: ${i.status}`};const a=await this.checkMilestoneDependencies(t);if(!a.satisfied)return{success:!1,message:`Dependencies not satisfied: ${a.missing.join(", ")}`};try{const n=i.amount,o=this.escrowService.calculatePlatformFee(n),l=await this.stripe.paymentIntents.create({amount:Math.round(n*100),currency:"cad",payment_method:r,confirmation_method:"manual",confirm:!1,capture_method:"manual",metadata:{job_id:i.job_id.toString(),milestone_id:t.toString(),client_id:s.toString(),worker_id:i.worker_id.toString(),type:"milestone_payment"}}),d=await this.escrowService.createEscrowTransaction(i.job_id,s,i.worker_id,n,l.id,t);return await this.db.prepare(`
        INSERT INTO milestone_payments (
          milestone_id, escrow_transaction_id, payment_intent_id, amount, status, created_at
        ) VALUES (?, ?, ?, ?, 'pending', datetime('now'))
      `).bind(t,d.id,l.id,n).run(),await this.db.prepare(`
        UPDATE job_milestones 
        SET status = 'in_progress', updated_at = datetime('now')
        WHERE id = ?
      `).bind(t).run(),await this.logMilestoneActivity(i.job_id,"milestone_payment_created",`Payment created for milestone "${i.title}" - $${n}`,s),{success:!0,message:"Milestone payment created successfully",paymentIntent:l,escrowTransaction:d}}catch(n){return{success:!1,message:`Failed to process milestone payment: ${n.message}`}}}async submitMilestone(t,s,r,i){const a=await this.db.prepare(`
      SELECT jm.*, j.worker_id, j.client_id
      FROM job_milestones jm
      JOIN jobs j ON jm.job_id = j.job_id
      WHERE jm.id = ? AND j.worker_id = ?
    `).bind(t,s).first();if(!a)return{success:!1,message:"Milestone not found or access denied"};if(a.status!=="in_progress")return{success:!1,message:`Milestone must be in progress to submit, current: ${a.status}`};try{return await this.db.prepare(`
        UPDATE job_milestones 
        SET status = 'submitted', worker_notes = ?, submitted_at = datetime('now'), updated_at = datetime('now')
        WHERE id = ?
      `).bind(r||"",t).run(),i&&i.length>0&&await this.db.prepare(`
          INSERT INTO milestone_submissions (
            milestone_id, worker_id, notes, attachments, created_at
          ) VALUES (?, ?, ?, ?, datetime('now'))
        `).bind(t,s,r||"",JSON.stringify(i)).run(),await this.notifyMilestoneSubmission(a,r),await this.logMilestoneActivity(a.job_id,"milestone_submitted",`Milestone "${a.title}" submitted for approval`,s),{success:!0,message:"Milestone submitted successfully"}}catch(n){return{success:!1,message:`Failed to submit milestone: ${n.message}`}}}async approveMilestone(t,s,r,i){const a=await this.db.prepare(`
      SELECT jm.*, j.client_id, j.worker_id
      FROM job_milestones jm
      JOIN jobs j ON jm.job_id = j.job_id
      WHERE jm.id = ? AND j.client_id = ?
    `).bind(t,s).first();if(!a)return{success:!1,message:"Milestone not found or access denied"};if(a.status!=="submitted")return{success:!1,message:`Milestone must be submitted to approve, current: ${a.status}`};try{const n=await this.db.prepare(`
        SELECT et.* FROM escrow_transactions et
        JOIN milestone_payments mp ON et.id = mp.escrow_transaction_id
        WHERE mp.milestone_id = ? AND et.status = 'held'
      `).bind(t).first();if(!n)return{success:!1,message:"No active escrow transaction found for milestone"};const o=await this.escrowService.releaseEscrow(n.id,s,`Milestone "${a.title}" approved by client`);return o.success?(await this.db.prepare(`
        UPDATE job_milestones 
        SET status = 'approved', client_notes = ?, approved_at = datetime('now'), updated_at = datetime('now')
        WHERE id = ?
      `).bind(r||"",t).run(),await this.db.prepare(`
        UPDATE milestone_payments 
        SET status = 'released'
        WHERE milestone_id = ?
      `).bind(t).run(),i&&i>=1&&i<=5&&await this.db.prepare(`
          INSERT INTO milestone_ratings (
            milestone_id, client_id, worker_id, rating, created_at
          ) VALUES (?, ?, ?, ?, datetime('now'))
        `).bind(t,s,a.worker_id,i).run(),await this.checkJobCompletion(a.job_id),await this.notifyMilestoneApproval(a,r,i),await this.logMilestoneActivity(a.job_id,"milestone_approved",`Milestone "${a.title}" approved and payment released`,s),{success:!0,message:"Milestone approved and payment released successfully",releaseResult:o}):{success:!1,message:`Failed to release payment: ${o.message}`}}catch(n){return{success:!1,message:`Failed to approve milestone: ${n.message}`}}}async requestMilestoneRevision(t,s,r,i){const a=await this.db.prepare(`
      SELECT jm.*, j.client_id, j.worker_id
      FROM job_milestones jm
      JOIN jobs j ON jm.job_id = j.job_id
      WHERE jm.id = ? AND j.client_id = ?
    `).bind(t,s).first();if(!a)return{success:!1,message:"Milestone not found or access denied"};if(a.status!=="submitted")return{success:!1,message:"Can only request revision for submitted milestones"};try{return await this.db.prepare(`
        UPDATE job_milestones 
        SET status = 'in_progress', client_notes = ?, updated_at = datetime('now')
        WHERE id = ?
      `).bind(r,t).run(),await this.db.prepare(`
        INSERT INTO milestone_revisions (
          milestone_id, client_id, revision_notes, additional_time_hours, created_at
        ) VALUES (?, ?, ?, ?, datetime('now'))
      `).bind(t,s,r,i||0).run(),i&&i>0&&await this.extendMilestoneDeadline(t,i),await this.notifyMilestoneRevision(a,r,i),await this.logMilestoneActivity(a.job_id,"milestone_revision_requested",`Revision requested for milestone "${a.title}": ${r}`,s),{success:!0,message:"Revision request sent successfully"}}catch(n){return{success:!1,message:`Failed to request revision: ${n.message}`}}}async getJobMilestoneProgress(t){const r=(await this.db.prepare(`
      SELECT jm.*, mp.status as payment_status, mp.amount as payment_amount
      FROM job_milestones jm
      LEFT JOIN milestone_payments mp ON jm.id = mp.milestone_id
      WHERE jm.job_id = ?
      ORDER BY jm.milestone_number
    `).bind(t).all()).results,i=r.reduce((p,m)=>p+m.amount,0),a=r.filter(p=>p.status==="approved").reduce((p,m)=>p+m.amount,0),n=i-a,o=r.filter(p=>p.status==="approved").length,l=r.length>0?Math.round(o/r.length*100):0,d=r.find(p=>["pending","in_progress"].includes(p.status)),c=new Date,u=r.filter(p=>p.due_date&&new Date(p.due_date)<c&&!["approved","paid"].includes(p.status)).length;return{milestones:r,totalAmount:i,paidAmount:a,pendingAmount:n,completionPercentage:l,nextMilestone:d,overdueCount:u}}async checkMilestoneDependencies(t){const s=await this.db.prepare(`
      SELECT dependencies FROM job_milestones WHERE id = ?
    `).bind(t).first();if(!(s!=null&&s.dependencies))return{satisfied:!0,missing:[]};const r=JSON.parse(s.dependencies);if(!r||r.length===0)return{satisfied:!0,missing:[]};const a=(await this.db.prepare(`
      SELECT milestone_number FROM job_milestones 
      WHERE milestone_number IN (${r.map(()=>"?").join(",")})
        AND status != 'approved'
    `).bind(...r).all()).results.map(n=>`Milestone ${n.milestone_number}`);return{satisfied:a.length===0,missing:a}}async checkJobCompletion(t){const s=await this.db.prepare(`
      SELECT COUNT(*) as count FROM job_milestones 
      WHERE job_id = ? AND status != 'approved'
    `).bind(t).first();(s==null?void 0:s.count)===0&&(await this.db.prepare(`
        UPDATE jobs 
        SET status = 'completed', completion_date = datetime('now')
        WHERE job_id = ?
      `).bind(t).run(),await this.logMilestoneActivity(t,"job_completed","All milestones completed - job marked as finished",0))}async extendMilestoneDeadline(t,s){await this.db.prepare(`
      UPDATE job_milestones 
      SET due_date = datetime(COALESCE(due_date, datetime('now')), '+${s} hours')
      WHERE id = ?
    `).bind(t).run()}async logMilestoneActivity(t,s,r,i){await this.db.prepare(`
      INSERT INTO milestone_activity_log (
        job_id, action, description, user_id, created_at
      ) VALUES (?, ?, ?, ?, datetime('now'))
    `).bind(t,s,r,i).run()}async notifyMilestoneSubmission(t,s){await this.db.prepare(`
      INSERT INTO notifications (
        user_id, type, message, job_id, is_read, created_at
      ) VALUES (?, 'milestone_submitted', ?, ?, 0, datetime('now'))
    `).bind(t.client_id,`Milestone "${t.title}" has been submitted for your review. ${s?"Notes: "+s:""}`,t.job_id).run()}async notifyMilestoneApproval(t,s,r){const i=`Your milestone "${t.title}" has been approved! Payment of $${t.amount} has been released.${r?` Rating: ${r}/5 stars.`:""}${s?` Client notes: ${s}`:""}`;await this.db.prepare(`
      INSERT INTO notifications (
        user_id, type, message, job_id, is_read, created_at
      ) VALUES (?, 'milestone_approved', ?, ?, 0, datetime('now'))
    `).bind(t.worker_id,i,t.job_id).run()}async notifyMilestoneRevision(t,s,r){const i=`Revision requested for milestone "${t.title}". ${s}${r?` Additional time granted: ${r} hours.`:""}`;await this.db.prepare(`
      INSERT INTO notifications (
        user_id, type, message, job_id, is_read, created_at
      ) VALUES (?, 'milestone_revision', ?, ?, 0, datetime('now'))
    `).bind(t.worker_id,i,t.job_id).run()}}class mc{constructor(t){O(this,"db");O(this,"alertThresholds",{deadline_warning_hours:24,overdue_escalation_hours:72,suspicious_activity_score:75,high_risk_threshold:85});this.db=t}async runMonitoringCycle(){console.log("Running escrow monitoring cycle...");const t=[],[s,r,i,a,n]=await Promise.all([this.checkDeadlineAlerts(),this.checkOverdueTransactions(),this.checkHighRiskTransactions(),this.checkSuspiciousActivity(),this.checkPerformanceIssues()]);t.push(...s,...r,...i,...a,...n);const o=await this.generateMetrics(),l=await this.generateRecommendations(t,o);for(const d of t)await this.storeAlert(d);return await this.processUrgentAlerts(t.filter(d=>d.severity==="critical")),{alerts:t,metrics:o,recommendations:l}}async checkDeadlineAlerts(){const t=[],s=await this.db.prepare(`
      SELECT et.*, ed.deadline_type, ed.deadline_at, j.title as job_title
      FROM escrow_transactions et
      JOIN escrow_deadlines ed ON et.id = ed.transaction_id
      JOIN jobs j ON et.job_id = j.job_id
      WHERE et.status IN ('held', 'pending')
        AND ed.status = 'pending'
        AND datetime(ed.deadline_at, '-${this.alertThresholds.deadline_warning_hours} hours') <= datetime('now')
        AND datetime(ed.deadline_at) > datetime('now')
        AND NOT EXISTS (
          SELECT 1 FROM escrow_alerts ea 
          WHERE ea.transaction_id = et.id 
            AND ea.alert_type = 'deadline_approaching'
            AND ea.resolved_at IS NULL
            AND datetime(ea.triggered_at) > datetime('now', '-24 hours')
        )
    `).all();for(const r of s.results){const i=Math.round((new Date(r.deadline_at).getTime()-Date.now())/36e5);t.push({id:0,transaction_id:r.id,alert_type:"deadline_approaching",severity:i<=6?"high":i<=24?"medium":"low",message:`${r.deadline_type} deadline approaching in ${i} hours for job "${r.job_title}"`,triggered_at:new Date().toISOString(),metadata:JSON.stringify({deadline_type:r.deadline_type,hours_left:i,job_id:r.job_id})})}return t}async checkOverdueTransactions(){const t=[],s=await this.db.prepare(`
      SELECT et.*, ed.deadline_type, ed.deadline_at, j.title as job_title,
             ROUND((julianday('now') - julianday(ed.deadline_at)) * 24) as hours_overdue
      FROM escrow_transactions et
      JOIN escrow_deadlines ed ON et.id = ed.transaction_id
      JOIN jobs j ON et.job_id = j.job_id
      WHERE et.status IN ('held', 'pending')
        AND ed.status = 'pending'
        AND datetime(ed.deadline_at) <= datetime('now')
    `).all();for(const r of s.results){const i=r.hours_overdue;let a="medium";i>=this.alertThresholds.overdue_escalation_hours?a="critical":i>=48&&(a="high"),t.push({id:0,transaction_id:r.id,alert_type:"overdue",severity:a,message:`Transaction overdue by ${i} hours - ${r.deadline_type} deadline passed for "${r.job_title}"`,triggered_at:new Date().toISOString(),metadata:JSON.stringify({deadline_type:r.deadline_type,hours_overdue:i,escalation_required:a==="critical"})})}return t}async checkHighRiskTransactions(){const t=[],s=await this.db.prepare(`
      SELECT et.*, j.title as job_title, u_client.name as client_name, u_worker.name as worker_name,
             COALESCE(client_disputes.dispute_count, 0) as client_disputes,
             COALESCE(worker_disputes.dispute_count, 0) as worker_disputes,
             ROUND((julianday('now') - julianday(et.created_at)) * 24) as age_hours
      FROM escrow_transactions et
      JOIN jobs j ON et.job_id = j.job_id
      JOIN users u_client ON et.client_id = u_client.user_id
      JOIN users u_worker ON et.worker_id = u_worker.user_id
      LEFT JOIN (
        SELECT client_id, COUNT(*) as dispute_count 
        FROM escrow_transactions 
        WHERE status = 'disputed' AND created_at > datetime('now', '-90 days')
        GROUP BY client_id
      ) client_disputes ON et.client_id = client_disputes.client_id
      LEFT JOIN (
        SELECT worker_id, COUNT(*) as dispute_count 
        FROM escrow_transactions 
        WHERE status = 'disputed' AND created_at > datetime('now', '-90 days')
        GROUP BY worker_id
      ) worker_disputes ON et.worker_id = worker_disputes.worker_id
      WHERE et.status IN ('held', 'pending', 'disputed')
        AND (
          et.amount > 5000 OR
          client_disputes.dispute_count > 2 OR
          worker_disputes.dispute_count > 2 OR
          et.age_hours > 240
        )
    `).all();for(const r of s.results){let i=0,a=[];r.amount>5e3&&(i+=20,a.push("High transaction amount")),r.client_disputes>2&&(i+=30,a.push(`Client has ${r.client_disputes} recent disputes`)),r.worker_disputes>2&&(i+=30,a.push(`Worker has ${r.worker_disputes} recent disputes`)),r.age_hours>240&&(i+=25,a.push("Transaction has been active for over 10 days")),i>=this.alertThresholds.high_risk_threshold&&t.push({id:0,transaction_id:r.id,alert_type:"high_risk",severity:i>=90?"critical":"high",message:`High-risk transaction detected (${i}/100): ${a.join(", ")}`,triggered_at:new Date().toISOString(),metadata:JSON.stringify({risk_score:i,risk_factors:a,amount:r.amount})})}return t}async checkSuspiciousActivity(){const t=[],s=await this.db.prepare(`
      SELECT client_id, COUNT(*) as transaction_count, SUM(amount) as total_amount
      FROM escrow_transactions 
      WHERE created_at > datetime('now', '-24 hours')
      GROUP BY client_id
      HAVING COUNT(*) >= 5 OR SUM(amount) > 10000
    `).all();for(const i of s.results)t.push({id:0,transaction_id:0,alert_type:"suspicious_activity",severity:"high",message:`Suspicious activity detected: User ${i.client_id} created ${i.transaction_count} transactions totaling $${i.total_amount} in 24 hours`,triggered_at:new Date().toISOString(),metadata:JSON.stringify({user_id:i.client_id,transaction_count:i.transaction_count,total_amount:i.total_amount,pattern:"rapid_transactions"})});const r=await this.db.prepare(`
      SELECT worker_id, COUNT(*) as refund_count, AVG(amount) as avg_amount
      FROM escrow_transactions 
      WHERE status = 'refunded' 
        AND created_at > datetime('now', '-7 days')
      GROUP BY worker_id
      HAVING COUNT(*) >= 3
    `).all();for(const i of r.results)t.push({id:0,transaction_id:0,alert_type:"suspicious_activity",severity:"medium",message:`Unusual refund pattern: Worker ${i.worker_id} has ${i.refund_count} refunds in past 7 days`,triggered_at:new Date().toISOString(),metadata:JSON.stringify({user_id:i.worker_id,refund_count:i.refund_count,avg_amount:i.avg_amount,pattern:"excessive_refunds"})});return t}async checkPerformanceIssues(){const t=[],s=await this.db.prepare(`
      SELECT COUNT(*) as failed_count
      FROM escrow_activity_log 
      WHERE action LIKE '%failed%' 
        AND created_at > datetime('now', '-1 hour')
    `).first();return(s==null?void 0:s.failed_count)>5&&t.push({id:0,transaction_id:0,alert_type:"payment_failed",severity:"high",message:`High number of payment failures detected: ${s.failed_count} failures in past hour`,triggered_at:new Date().toISOString(),metadata:JSON.stringify({failure_count:s.failed_count,timeframe:"1_hour"})}),t}async generateMetrics(){const[t,s,r,i,a,n,o,l]=await Promise.all([this.db.prepare("SELECT COUNT(*) as count FROM escrow_transactions").first(),this.db.prepare("SELECT COUNT(*) as count FROM escrow_transactions WHERE status IN ('held', 'pending')").first(),this.db.prepare("SELECT COUNT(*) as count FROM jobs WHERE status = 'pending_approval'").first(),this.db.prepare(`
        SELECT COUNT(*) as count FROM escrow_transactions et
        JOIN escrow_deadlines ed ON et.id = ed.transaction_id
        WHERE et.status IN ('held', 'pending') AND ed.status = 'pending'
          AND datetime(ed.deadline_at) <= datetime('now')
      `).first(),this.db.prepare("SELECT COUNT(*) as count FROM escrow_transactions WHERE status = 'disputed'").first(),this.db.prepare(`
        SELECT AVG((julianday(updated_at) - julianday(created_at)) * 24) as avg_hours
        FROM escrow_transactions 
        WHERE status IN ('released', 'refunded') AND updated_at > datetime('now', '-30 days')
      `).first(),this.db.prepare(`
        SELECT 
          ROUND(
            (COUNT(CASE WHEN status = 'released' THEN 1 END) * 100.0) / 
            NULLIF(COUNT(CASE WHEN status IN ('released', 'refunded', 'disputed') THEN 1 END), 0),
            2
          ) as rate
        FROM escrow_transactions WHERE created_at > datetime('now', '-30 days')
      `).first(),this.calculateRiskDistribution()]);return{total_transactions:(t==null?void 0:t.count)||0,active_escrows:(s==null?void 0:s.count)||0,pending_approvals:(r==null?void 0:r.count)||0,overdue_transactions:(i==null?void 0:i.count)||0,disputed_transactions:(a==null?void 0:a.count)||0,average_resolution_time:Math.round(((n==null?void 0:n.avg_hours)||0)*100)/100,success_rate:(o==null?void 0:o.rate)||0,risk_distribution:l}}async calculateRiskDistribution(){const t=await this.db.prepare(`
      SELECT et.*, 
        CASE 
          WHEN et.amount < 500 THEN 'low'
          WHEN et.amount < 2000 THEN 'medium'
          ELSE 'high'
        END as risk_level
      FROM escrow_transactions et
      WHERE et.status IN ('held', 'pending')
    `).all(),s={low:0,medium:0,high:0};for(const r of t.results)s[r.risk_level]++;return s}async generateRecommendations(t,s){const r=[];return s.overdue_transactions>5&&r.push("📅 High number of overdue transactions - consider automating more approval processes"),s.success_rate<85&&r.push("📈 Success rate below 85% - review dispute resolution processes"),t.some(i=>i.alert_type==="suspicious_activity")&&r.push("🔍 Suspicious activity detected - implement additional fraud checks"),s.average_resolution_time>120&&r.push("⏱️ Average resolution time exceeds 5 days - optimize approval workflows"),s.disputed_transactions>s.total_transactions*.1&&r.push("⚖️ High dispute rate - improve job requirement clarity and communication tools"),r.length===0&&r.push("✅ System operating normally - no immediate actions required"),r}async storeAlert(t){return(await this.db.prepare(`
      INSERT INTO escrow_alerts (
        transaction_id, alert_type, severity, message, triggered_at, metadata
      ) VALUES (?, ?, ?, ?, ?, ?)
    `).bind(t.transaction_id,t.alert_type,t.severity,t.message,t.triggered_at,t.metadata||null).run()).meta.last_row_id}async processUrgentAlerts(t){for(const s of t)await this.sendUrgentNotification(s),console.error(`CRITICAL ESCROW ALERT: ${s.message}`),s.alert_type==="payment_failed"&&await this.handlePaymentFailureEscalation(s),s.alert_type==="overdue"&&s.metadata&&JSON.parse(s.metadata).hours_overdue>=this.alertThresholds.overdue_escalation_hours&&await this.autoEscalateOverdueTransaction(s.transaction_id)}async sendEscrowNotification(t,s,r,i="medium",a){const n=await this.getUserNotificationPreferences(t);if(n.categories.includes(s)){if(await this.isQuietTime(n)&&i!=="high"){await this.queueNotification(t,s,r,a);return}for(const o of n.channels)o.enabled&&await this.sendNotificationViaChannel(o,t,r,a);await this.db.prepare(`
      INSERT INTO notifications (
        user_id, type, message, priority, metadata, is_read, created_at
      ) VALUES (?, ?, ?, ?, ?, 0, datetime('now'))
    `).bind(t,s,r,i,a?JSON.stringify(a):null).run()}}async getEscrowDashboard(){const[t,s,r]=await Promise.all([this.generateMetrics(),this.getRecentAlerts(10),this.getActiveTransactions()]),i=await this.generateRiskAnalysis(),a=await this.getSystemHealth();return{metrics:t,recentAlerts:s,activeTransactions:r,riskAnalysis:i,systemHealth:a}}async getUserNotificationPreferences(t){return await this.db.prepare(`
      SELECT * FROM user_notification_preferences WHERE user_id = ?
    `).bind(t).first()||{user_id:t,channels:[{type:"in_app",enabled:!0}],frequency:"immediate",categories:["all"]}}async isQuietTime(t){if(!t.quiet_hours)return!1;const r=new Date().getHours(),i=parseInt(t.quiet_hours.start.split(":")[0]),a=parseInt(t.quiet_hours.end.split(":")[0]);return r>=i||r<a}async queueNotification(t,s,r,i){await this.db.prepare(`
      INSERT INTO notification_queue (
        user_id, type, message, metadata, scheduled_for, created_at
      ) VALUES (?, ?, ?, ?, datetime('now', '+8 hours'), datetime('now'))
    `).bind(t,s,r,JSON.stringify(i||{})).run()}async sendNotificationViaChannel(t,s,r,i){t.type}async sendUrgentNotification(t){const s=await this.db.prepare(`
      SELECT user_id FROM users WHERE role = 'admin'
    `).all();for(const r of s.results)await this.sendEscrowNotification(r.user_id,"urgent_alert",`🚨 URGENT: ${t.message}`,"high",{alert_id:t.id,alert_type:t.alert_type})}async handlePaymentFailureEscalation(t){}async autoEscalateOverdueTransaction(t){}async getRecentAlerts(t){return(await this.db.prepare(`
      SELECT * FROM escrow_alerts 
      ORDER BY triggered_at DESC 
      LIMIT ?
    `).bind(t).all()).results}async getActiveTransactions(){return(await this.db.prepare(`
      SELECT et.*, j.title as job_title, u_client.name as client_name, u_worker.name as worker_name
      FROM escrow_transactions et
      JOIN jobs j ON et.job_id = j.job_id
      JOIN users u_client ON et.client_id = u_client.user_id
      JOIN users u_worker ON et.worker_id = u_worker.user_id
      WHERE et.status IN ('held', 'pending')
      ORDER BY et.created_at DESC
      LIMIT 20
    `).all()).results}async generateRiskAnalysis(){return{high_value_transactions:0,first_time_users:0,repeat_offenders:0,geographic_anomalies:0}}async getSystemHealth(){return{database_status:"healthy",stripe_status:"connected",notification_queue:0,last_backup:new Date().toISOString()}}}class $s{constructor(t){O(this,"db");O(this,"escalationTimelines",{auto_mediation_hours:72,auto_arbitration_hours:168,resolution_deadline_hours:336});this.db=t}async fileDispute(t,s,r){const i=await this.db.prepare(`
      SELECT et.*, j.client_id, j.worker_id, j.title as job_title
      FROM escrow_transactions et
      JOIN jobs j ON et.job_id = j.job_id
      WHERE et.id = ? AND (j.client_id = ? OR j.worker_id = ?)
    `).bind(t,s,s).first();if(!i)return{success:!1,message:"Transaction not found or access denied"};if(!["held","pending"].includes(i.status))return{success:!1,message:"Cannot dispute transaction with current status"};if(await this.db.prepare(`
      SELECT id FROM dispute_cases 
      WHERE escrow_transaction_id = ? AND status NOT IN ('resolved', 'closed')
    `).bind(t).first())return{success:!1,message:"Active dispute already exists for this transaction"};try{const o=(await this.db.prepare(`
        INSERT INTO dispute_cases (
          escrow_transaction_id, job_id, client_id, worker_id, initiated_by,
          dispute_type, status, priority, title, description, amount_disputed,
          created_at, updated_at
        ) VALUES (?, ?, ?, ?, ?, ?, 'open', ?, ?, ?, ?, datetime('now'), datetime('now'))
      `).bind(t,i.job_id,i.client_id,i.worker_id,s,r.disputeType,this.calculateDisputePriority(r.amountDisputed,r.disputeType),r.title,r.description,r.amountDisputed).run()).meta.last_row_id;if(await this.db.prepare(`
        UPDATE escrow_transactions 
        SET status = 'disputed', updated_at = datetime('now')
        WHERE id = ?
      `).bind(t).run(),r.evidence&&r.evidence.length>0)for(const d of r.evidence)await this.addDisputeEvidence(o,s,d);await this.addDisputeMessage(o,s,s===i.client_id?"client":"worker",`Dispute filed: ${r.title}

${r.description}`,!1);const l=s===i.client_id?i.worker_id:i.client_id;return await this.notifyDisputeFiled(o,l,r.title),await this.scheduleDisputeEscalation(o),await this.logDisputeActivity(o,"dispute_filed",`Dispute filed by ${s===i.client_id?"client":"worker"}`,s),{success:!0,message:"Dispute filed successfully",disputeId:o}}catch(n){return{success:!1,message:`Failed to file dispute: ${n.message}`}}}async respondToDispute(t,s,r){const i=await this.getDisputeDetails(t);if(!i)return{success:!1,message:"Dispute not found"};if(![i.client_id,i.worker_id].includes(s))return{success:!1,message:"Not authorized to respond to this dispute"};if(!["open","investigating"].includes(i.status))return{success:!1,message:"Cannot respond to dispute in current status"};try{const a=s===i.client_id?"client":"worker";if(await this.addDisputeMessage(t,s,a,r.message,!1),r.evidence&&r.evidence.length>0)for(const o of r.evidence)await this.addDisputeEvidence(t,s,o);r.counterOffer&&await this.processCounterOffer(t,s,r.counterOffer),i.status==="open"&&await this.db.prepare(`
          UPDATE dispute_cases 
          SET status = 'investigating', updated_at = datetime('now')
          WHERE id = ?
        `).bind(t).run();const n=s===i.client_id?i.worker_id:i.client_id;return await this.notifyDisputeResponse(t,n),await this.logDisputeActivity(t,"response_submitted",`Response submitted by ${a}`,s),{success:!0,message:"Response submitted successfully"}}catch(a){return{success:!1,message:`Failed to submit response: ${a.message}`}}}async escalateToMediation(t,s,r="Automatic escalation due to timeout"){const i=await this.getDisputeDetails(t);if(!i)return{success:!1,message:"Dispute not found"};if(!["open","investigating"].includes(i.status))return{success:!1,message:"Dispute not in valid state for mediation"};try{const a=await this.assignMediator(t,i.dispute_type,i.amount_disputed);if(!a)return{success:!1,message:"No mediators available for assignment"};await this.db.prepare(`
        UPDATE dispute_cases 
        SET status = 'mediation', assigned_mediator = ?, updated_at = datetime('now')
        WHERE id = ?
      `).bind(a.id,t).run();const n=await this.scheduleMediationSession(t,a.id);return await this.notifyMediationScheduled(t,a.id,n),await this.addDisputeMessage(t,0,"system",`Dispute escalated to mediation. Mediator ${a.name} has been assigned. A mediation session will be scheduled within 24 hours.`,!1),await this.logDisputeActivity(t,"escalated_to_mediation",`Escalated to mediation - ${r}`,s||0),{success:!0,message:"Dispute escalated to mediation successfully",mediatorId:a.id}}catch(a){return{success:!1,message:`Failed to escalate to mediation: ${a.message}`}}}async resolveDispute(t,s,r){const i=await this.getDisputeDetails(t);if(!i)return{success:!1,message:"Dispute not found"};const a=await this.canResolveDispute(t,s);if(!a.authorized)return{success:!1,message:a.reason};try{if(r.amount&&(r.amount<0||r.amount>i.amount_disputed))return{success:!1,message:"Invalid resolution amount"};await this.db.prepare(`
        UPDATE dispute_cases 
        SET status = 'resolved', resolution_type = ?, resolution_amount = ?, 
            resolution_notes = ?, resolved_at = datetime('now'), updated_at = datetime('now')
        WHERE id = ?
      `).bind(r.resolutionType,r.amount||null,r.notes,t).run();const n=await this.executeResolution(i,r);return await this.addDisputeMessage(t,s,s===i.assigned_mediator?"mediator":"admin",`Dispute resolved: ${r.resolutionType}

Resolution: ${r.notes}`,!1),await this.notifyDisputeResolved(t,r),await this.cancelPendingMediationSessions(t),await this.logDisputeActivity(t,"dispute_resolved",`Dispute resolved with ${r.resolutionType}`,s),{success:!0,message:"Dispute resolved successfully",escrowAction:n}}catch(n){return{success:!1,message:`Failed to resolve dispute: ${n.message}`}}}async getDisputeDashboard(){const[t,s,r,i]=await Promise.all([this.getActiveDisputes(),this.getDisputeStatistics(),this.getPendingMediations(),this.getRecentResolutions()]);return{activeDisputes:t,disputeStats:s,pendingMediations:r,recentResolutions:i}}async processDisputeEscalations(){console.log("Processing dispute escalations...");const t=await this.db.prepare(`
      SELECT id FROM dispute_cases 
      WHERE status IN ('open', 'investigating')
        AND datetime(created_at, '+${this.escalationTimelines.auto_mediation_hours} hours') <= datetime('now')
    `).all();for(const i of t.results)await this.escalateToMediation(i.id,0,"Automatic escalation after 72 hours");const s=await this.db.prepare(`
      SELECT id FROM dispute_cases 
      WHERE status = 'mediation'
        AND datetime(updated_at, '+${this.escalationTimelines.auto_arbitration_hours} hours') <= datetime('now')
    `).all();for(const i of s.results)await this.escalateToArbitration(i.id);const r=await this.db.prepare(`
      SELECT id FROM dispute_cases 
      WHERE status IN ('open', 'investigating', 'mediation', 'arbitration')
        AND datetime(created_at, '+${this.escalationTimelines.resolution_deadline_hours} hours') <= datetime('now')
    `).all();for(const i of r.results)await this.forceDisputeResolution(i.id)}calculateDisputePriority(t,s){return t>5e3?"urgent":t>2e3||["payment","timeline"].includes(s)?"high":t>500?"medium":"low"}async addDisputeEvidence(t,s,r){return(await this.db.prepare(`
      INSERT INTO dispute_evidence (
        dispute_id, submitted_by, evidence_type, file_url, description, created_at
      ) VALUES (?, ?, ?, ?, ?, datetime('now'))
    `).bind(t,s,r.type,r.fileUrl||null,r.description).run()).meta.last_row_id}async addDisputeMessage(t,s,r,i,a){return(await this.db.prepare(`
      INSERT INTO dispute_messages (
        dispute_id, sender_id, sender_type, message, is_internal, created_at
      ) VALUES (?, ?, ?, ?, ?, datetime('now'))
    `).bind(t,s,r,i,a?1:0).run()).meta.last_row_id}async getDisputeDetails(t){return await this.db.prepare(`
      SELECT * FROM dispute_cases WHERE id = ?
    `).bind(t).first()||null}async assignMediator(t,s,r){return await this.db.prepare(`
      SELECT m.*, u.name, COUNT(dc.id) as active_cases
      FROM mediators m
      JOIN users u ON m.user_id = u.user_id
      LEFT JOIN dispute_cases dc ON m.user_id = dc.assigned_mediator AND dc.status = 'mediation'
      WHERE m.specializations LIKE '%' || ? || '%'
        AND m.max_case_value >= ?
        AND u.status = 'active'
      GROUP BY m.user_id
      ORDER BY active_cases ASC, m.rating DESC
      LIMIT 1
    `).bind(s,r).first()}async scheduleMediationSession(t,s){const r=new Date(Date.now()+864e5);return(await this.db.prepare(`
      INSERT INTO mediation_sessions (
        dispute_id, mediator_id, scheduled_at, status, created_at
      ) VALUES (?, ?, ?, 'scheduled', datetime('now'))
    `).bind(t,s,r.toISOString()).run()).meta.last_row_id}async canResolveDispute(t,s){const r=await this.getDisputeDetails(t),i=await this.db.prepare(`
      SELECT role FROM users WHERE user_id = ?
    `).bind(s).first();if((i==null?void 0:i.role)==="admin")return{authorized:!0,reason:""};if((r==null?void 0:r.assigned_mediator)===s)return{authorized:!0,reason:""};const a=await this.db.prepare(`
      SELECT COUNT(*) as count FROM dispute_messages 
      WHERE dispute_id = ? AND message LIKE '%agree%' AND created_at > datetime('now', '-24 hours')
    `).bind(t).first();return(a==null?void 0:a.count)>=2?{authorized:!0,reason:""}:{authorized:!1,reason:"Not authorized to resolve this dispute"}}async executeResolution(t,s){const r=new(await Promise.resolve().then(()=>s0)).EscrowService({},this.db);switch(s.resolutionType){case"full_refund":return await r.refundEscrow(t.escrow_transaction_id,t.client_id,`Dispute resolved: ${s.notes}`);case"full_release":return await r.releaseEscrow(t.escrow_transaction_id,t.worker_id,`Dispute resolved: ${s.notes}`);case"partial_refund":case"partial_release":return{success:!0,message:"Partial resolution processed"};default:return{success:!0,message:"Resolution recorded"}}}async scheduleDisputeEscalation(t){const s=new Date(Date.now()+this.escalationTimelines.auto_mediation_hours*60*60*1e3);await this.db.prepare(`
      INSERT INTO dispute_schedule (
        dispute_id, action, scheduled_at, processed, created_at
      ) VALUES (?, 'escalate_to_mediation', ?, 0, datetime('now'))
    `).bind(t,s.toISOString()).run()}async logDisputeActivity(t,s,r,i){await this.db.prepare(`
      INSERT INTO dispute_activity_log (
        dispute_id, action, description, user_id, created_at
      ) VALUES (?, ?, ?, ?, datetime('now'))
    `).bind(t,s,r,i).run()}async notifyDisputeFiled(t,s,r){await this.db.prepare(`
      INSERT INTO notifications (
        user_id, type, message, dispute_id, is_read, created_at
      ) VALUES (?, 'dispute_filed', ?, ?, 0, datetime('now'))
    `).bind(s,`A dispute has been filed: ${r}`,t).run()}async notifyDisputeResponse(t,s){await this.db.prepare(`
      INSERT INTO notifications (
        user_id, type, message, dispute_id, is_read, created_at
      ) VALUES (?, 'dispute_response', 'New response in your dispute case', ?, 0, datetime('now'))
    `).bind(s,t).run()}async notifyMediationScheduled(t,s,r){}async notifyDisputeResolved(t,s){}async processCounterOffer(t,s,r){}async getActiveDisputes(){return(await this.db.prepare(`
      SELECT dc.*, j.title as job_title 
      FROM dispute_cases dc
      JOIN jobs j ON dc.job_id = j.job_id
      WHERE dc.status NOT IN ('resolved', 'closed')
      ORDER BY dc.priority DESC, dc.created_at ASC
    `).all()).results}async getDisputeStatistics(){return{total:0,byStatus:{},byType:{},avgResolutionTime:0,resolutionRate:0}}async getPendingMediations(){return(await this.db.prepare(`
      SELECT * FROM mediation_sessions 
      WHERE status IN ('scheduled', 'in_progress')
      ORDER BY scheduled_at ASC
    `).all()).results}async getRecentResolutions(){return(await this.db.prepare(`
      SELECT * FROM dispute_cases 
      WHERE status = 'resolved' AND resolved_at > datetime('now', '-7 days')
      ORDER BY resolved_at DESC
      LIMIT 10
    `).all()).results}async escalateToArbitration(t){}async forceDisputeResolution(t){}async cancelPendingMediationSessions(t){await this.db.prepare(`
      UPDATE mediation_sessions 
      SET status = 'cancelled' 
      WHERE dispute_id = ? AND status = 'scheduled'
    `).bind(t).run()}}const re=new ce,Ge=e=>new Pe(e,{apiVersion:"2024-11-20.acacia",typescript:!0}),fc=(e,t)=>{let r=0,i=0;switch(t==null?void 0:t.toLowerCase()){case"on":i=.13;break;case"bc":r=.07;break;case"sk":r=.06;break;case"mb":r=.07;break;case"qc":r=.09975;break;case"nb":i=.15;break;case"ns":i=.15;break;case"pe":i=.15;break;case"nl":i=.15;break}let a=0,n=0,o=0;i>0?o=Math.round(e*i*100)/100:(a=Math.round(e*.05*100)/100,n=Math.round(e*r*100)/100);const l=Math.round((e+a+n+o)*100)/100;return{gst:a,pst:n,hst:o,total:l}},ae=async(e,t)=>{e.req.path;let s=null;const r=e.req.header("Cookie");if(r){const i=r.match(/session=([^;]+)/);if(i&&(s=i[1]),!s){const a=r.match(/demo_session=([^;]+)/);if(a){const n=a[1],[o,l]=n.split(":"),d=Math.random().toString(36).substring(2,15);s=btoa(`demo-${o}:${l}:${d}`)}}}if(!s){const i=e.req.header("Authorization");i&&i.startsWith("Bearer ")&&(s=i.replace("Bearer ",""))}if(s||(s=e.req.query("token")),!s)return e.json({error:"Authentication required"},401);try{const i=await e.env.DB.prepare(`
      SELECT s.user_id, u.role, u.first_name, u.last_name, u.email, u.is_verified
      FROM user_sessions s
      JOIN users u ON s.user_id = u.id
      WHERE s.session_token = ? AND u.is_active = 1
    `).bind(s).first();if(!i)return e.json({error:"Invalid session"},401);e.set("user",i),await t()}catch(i){return console.error("Auth middleware error:",i),e.json({error:"Authentication failed"},500)}},gc=(e,t)=>{const s=parseFloat(t.PLATFORM_FEE_PERCENTAGE||"0.05"),r=parseFloat(t.PLATFORM_FEE_MINIMUM||"2.00"),i=parseFloat(t.PLATFORM_FEE_MAXIMUM||"50.00");let a=e*s;return a<r&&(a=r),a>i&&(a=i),Math.round(a*100)/100};re.post("/create-intent",ae,async e=>{try{const t=e.get("user"),{job_id:s,payment_method_id:r}=await e.req.json();if(!s)return e.json({error:"job_id is required"},400);const i=await e.env.DB.prepare(`
      SELECT j.*, b.bid_amount, b.worker_id, b.id as bid_id, 
             c.province as client_province, w.province as worker_province
      FROM jobs j
      JOIN bids b ON j.id = b.job_id AND b.status = 'accepted'
      LEFT JOIN users c ON j.client_id = c.id
      LEFT JOIN users w ON b.worker_id = w.id
      WHERE j.id = ? AND j.client_id = ? AND j.status = 'assigned'
    `).bind(s,t.user_id).first();if(!i)return e.json({error:"Job not found or not accessible"},404);if(i.stripe_payment_intent_id)return e.json({error:"Payment intent already exists for this job",payment_intent_id:i.stripe_payment_intent_id},400);const a=Ge(e.env.STRIPE_SECRET_KEY),n=parseFloat(i.bid_amount),o=gc(n,e.env),l=fc(n,i.worker_province),d=n+o+l.gst+l.pst+l.hst,c=await a.paymentIntents.create({amount:Math.round(d*100),currency:"cad",payment_method:r,confirmation_method:"manual",confirm:!1,capture_method:"manual",metadata:{job_id:s.toString(),client_id:t.user_id.toString(),worker_id:i.worker_id.toString(),bid_id:i.bid_id.toString(),bid_amount:n.toString(),platform_fee:o.toString(),client_province:i.client_province||"ON",worker_province:i.worker_province||"ON",tax_gst:l.gst.toString(),tax_pst:l.pst.toString(),tax_hst:l.hst.toString(),environment:e.env.ENVIRONMENT||"development"},description:`Kwikr Job: ${i.title} - Escrow Payment (incl. Canadian taxes)`});return await e.env.DB.prepare(`
      UPDATE jobs 
      SET stripe_payment_intent_id = ?, escrow_amount = ?, escrow_status = 'pending'
      WHERE id = ?
    `).bind(c.id,d,s).run(),await e.env.DB.prepare(`
      INSERT INTO transactions (
        job_id, client_id, worker_id, transaction_type, amount, 
        stripe_transaction_id, status, description
      ) VALUES (?, ?, ?, 'escrow_hold', ?, ?, 'pending', ?)
    `).bind(s,t.user_id,i.worker_id,d,c.id,`Payment intent created for job: ${i.title}`).run(),e.json({success:!0,payment_intent:{id:c.id,client_secret:c.client_secret,status:c.status},amounts:{bid_amount:n,platform_fee:o,tax_breakdown:{gst:l.gst,pst:l.pst,hst:l.hst,tax_total:l.gst+l.pst+l.hst},total_amount:d},tax_info:{service_province:i.worker_province,client_province:i.client_province,tax_applicable:"Canadian taxes applied based on service delivery location"}})}catch(t){return console.error("Create payment intent error:",t),e.json({error:"Failed to create payment intent",details:t.message},500)}});re.post("/confirm-intent",ae,async e=>{try{const t=e.get("user"),{payment_intent_id:s}=await e.req.json();if(!s)return e.json({error:"payment_intent_id is required"},400);const r=await e.env.DB.prepare(`
      SELECT * FROM jobs 
      WHERE stripe_payment_intent_id = ? AND client_id = ?
    `).bind(s,t.user_id).first();if(!r)return e.json({error:"Job not found"},404);const a=await Ge(e.env.STRIPE_SECRET_KEY).paymentIntents.confirm(s);return a.status==="requires_capture"?(await e.env.DB.prepare(`
        UPDATE jobs 
        SET escrow_status = 'held'
        WHERE id = ?
      `).bind(r.id).run(),await e.env.DB.prepare(`
        UPDATE transactions 
        SET status = 'completed', processed_at = CURRENT_TIMESTAMP
        WHERE stripe_transaction_id = ?
      `).bind(s).run(),e.json({success:!0,status:a.status,escrow_status:"held"})):e.json({success:!1,status:a.status,error:"Payment confirmation failed"},400)}catch(t){return console.error("Confirm payment intent error:",t),e.json({error:"Failed to confirm payment",details:t.message},500)}});re.post("/escrow/release",ae,async e=>{try{const t=e.get("user"),{job_id:s}=await e.req.json();if(!s)return e.json({error:"job_id is required"},400);const r=await e.env.DB.prepare(`
      SELECT j.*, b.worker_id, b.bid_amount,
             c.province as client_province, w.province as worker_province
      FROM jobs j
      JOIN bids b ON j.id = b.job_id AND b.status = 'accepted'
      LEFT JOIN users c ON j.client_id = c.id
      LEFT JOIN users w ON b.worker_id = w.id
      WHERE j.id = ? AND (j.client_id = ? OR ? IN (SELECT id FROM users WHERE role = 'admin'))
      AND j.status = 'completed' AND j.escrow_status = 'held'
    `).bind(s,t.user_id,t.user_id).first();if(!r)return e.json({error:"Job not found or not eligible for release"},404);const a=await Ge(e.env.STRIPE_SECRET_KEY).paymentIntents.capture(r.stripe_payment_intent_id);if(a.status==="succeeded"){const n=parseFloat(r.bid_amount),o=gc(n,e.env),l=fc(n,r.worker_province);await e.env.DB.prepare(`
        UPDATE jobs 
        SET escrow_status = 'released'
        WHERE id = ?
      `).bind(s).run(),await e.env.DB.prepare(`
        INSERT INTO transactions (
          job_id, client_id, worker_id, transaction_type, amount, 
          stripe_transaction_id, status, description, processed_at
        ) VALUES (?, ?, ?, 'escrow_release', ?, ?, 'completed', ?, CURRENT_TIMESTAMP)
      `).bind(s,r.client_id,r.worker_id,n,a.id,`Escrow released for completed job: ${r.title}`).run(),await e.env.DB.prepare(`
        INSERT INTO transactions (
          job_id, client_id, worker_id, transaction_type, amount, 
          stripe_transaction_id, status, description, processed_at
        ) VALUES (?, ?, ?, 'platform_fee', ?, ?, 'completed', ?, CURRENT_TIMESTAMP)
      `).bind(s,r.client_id,r.worker_id,o,a.id,`Platform fee for job: ${r.title}`).run(),l.gst>0&&await e.env.DB.prepare(`
          INSERT INTO transactions (
            job_id, client_id, worker_id, transaction_type, amount, 
            stripe_transaction_id, status, description, processed_at
          ) VALUES (?, ?, ?, 'tax_gst', ?, ?, 'completed', ?, CURRENT_TIMESTAMP)
        `).bind(s,r.client_id,r.worker_id,l.gst,a.id,`GST collected for job in ${r.worker_province}: ${r.title}`).run(),l.pst>0&&await e.env.DB.prepare(`
          INSERT INTO transactions (
            job_id, client_id, worker_id, transaction_type, amount, 
            stripe_transaction_id, status, description, processed_at
          ) VALUES (?, ?, ?, 'tax_pst', ?, ?, 'completed', ?, CURRENT_TIMESTAMP)
        `).bind(s,r.client_id,r.worker_id,l.pst,a.id,`PST collected for job in ${r.worker_province}: ${r.title}`).run(),l.hst>0&&await e.env.DB.prepare(`
          INSERT INTO transactions (
            job_id, client_id, worker_id, transaction_type, amount, 
            stripe_transaction_id, status, description, processed_at
          ) VALUES (?, ?, ?, 'tax_hst', ?, ?, 'completed', ?, CURRENT_TIMESTAMP)
        `).bind(s,r.client_id,r.worker_id,l.hst,a.id,`HST collected for job in ${r.worker_province}: ${r.title}`).run();const d=new Date().getFullYear();return await e.env.DB.prepare(`
        INSERT INTO worker_earnings (
          worker_id, job_id, bid_id, gross_amount, platform_fee, net_amount,
          payment_status, tax_year, earning_type, paid_at
        ) VALUES (?, ?, ?, ?, ?, ?, 'paid', ?, 'job_completion', CURRENT_TIMESTAMP)
      `).bind(r.worker_id,s,(await e.env.DB.prepare("SELECT id FROM bids WHERE job_id = ? AND worker_id = ?").bind(s,r.worker_id).first()).id,n,o,n-o,d).run(),e.json({success:!0,status:"released",amounts:{bid_amount:n,platform_fee:o,tax_breakdown:{gst:l.gst,pst:l.pst,hst:l.hst,tax_total:l.gst+l.pst+l.hst},worker_net:n-o},tax_compliance:{service_province:r.worker_province,tax_remittance_required:"Taxes collected will be remitted to CRA",worker_receives_gross:"Worker receives full bid amount, taxes handled by platform"}})}else return e.json({success:!1,status:a.status,error:"Escrow release failed"},400)}catch(t){return console.error("Escrow release error:",t),e.json({error:"Failed to release escrow",details:t.message},500)}});re.post("/escrow/refund",ae,async e=>{try{const t=e.get("user"),{job_id:s,reason:r}=await e.req.json();if(!s)return e.json({error:"job_id is required"},400);if(!await e.env.DB.prepare(`
      SELECT role FROM users WHERE id = ? AND role = 'admin'
    `).bind(t.user_id).first())return e.json({error:"Admin access required for refunds"},403);const a=await e.env.DB.prepare(`
      SELECT * FROM jobs 
      WHERE id = ? AND escrow_status = 'held'
    `).bind(s).first();if(!a)return e.json({error:"Job not found or escrow not held"},404);const o=await Ge(e.env.STRIPE_SECRET_KEY).paymentIntents.cancel(a.stripe_payment_intent_id);return o.status==="canceled"?(await e.env.DB.prepare(`
        UPDATE jobs 
        SET escrow_status = 'refunded'
        WHERE id = ?
      `).bind(s).run(),await e.env.DB.prepare(`
        INSERT INTO transactions (
          job_id, client_id, worker_id, transaction_type, amount, 
          stripe_transaction_id, status, description, processed_at
        ) VALUES (?, ?, ?, 'refund', ?, ?, 'completed', ?, CURRENT_TIMESTAMP)
      `).bind(s,a.client_id,a.assigned_worker_id,a.escrow_amount,o.id,`Refund processed: ${r||"Admin refund"}`).run(),e.json({success:!0,status:"refunded",refund_amount:parseFloat(a.escrow_amount)})):e.json({success:!1,status:o.status,error:"Refund failed"},400)}catch(t){return console.error("Escrow refund error:",t),e.json({error:"Failed to process refund",details:t.message},500)}});re.get("/status/:jobId",ae,async e=>{try{const t=e.get("user"),s=e.req.param("jobId"),r=await e.env.DB.prepare(`
      SELECT j.*, b.bid_amount, b.worker_id
      FROM jobs j
      LEFT JOIN bids b ON j.id = b.job_id AND b.status = 'accepted'
      WHERE j.id = ? AND (j.client_id = ? OR b.worker_id = ? OR ? IN (SELECT id FROM users WHERE role = 'admin'))
    `).bind(s,t.user_id,t.user_id,t.user_id).first();if(!r)return e.json({error:"Job not found"},404);const i=await e.env.DB.prepare(`
      SELECT * FROM transactions 
      WHERE job_id = ? 
      ORDER BY created_at DESC
    `).bind(s).all();let a=null;if(r.stripe_payment_intent_id)try{a=(await Ge(e.env.STRIPE_SECRET_KEY).paymentIntents.retrieve(r.stripe_payment_intent_id)).status}catch(n){console.error("Error retrieving Stripe payment intent:",n)}return e.json({success:!0,job:{id:r.id,title:r.title,status:r.status,escrow_status:r.escrow_status,escrow_amount:r.escrow_amount,stripe_payment_intent_id:r.stripe_payment_intent_id,stripe_status:a},transactions:i.results||[]})}catch(t){return console.error("Get payment status error:",t),e.json({error:"Failed to get payment status",details:t.message},500)}});re.get("/fee-settings",ae,async e=>{try{const t=await e.env.DB.prepare(`
      SELECT * FROM platform_fee_settings 
      WHERE is_active = 1 
      ORDER BY effective_date DESC 
      LIMIT 1
    `).first();return e.json({success:!0,fee_settings:t||{fee_type:"percentage",fee_percentage:.05,minimum_fee:2,maximum_fee:50}})}catch(t){return console.error("Get fee settings error:",t),e.json({error:"Failed to get fee settings"},500)}});re.post("/milestones/create",ae,async e=>{try{const{env:t}=e,s=Ge(t.STRIPE_SECRET_KEY),r=new Ls(t.DB,s),{job_id:i,total_amount:a,job_category:n,custom_milestones:o}=await e.req.json(),l=e.get("user"),d=await r.createJobMilestones(i,a,n||"custom",o,l.user_id);return e.json({success:!0,milestones:d,message:`Created ${d.length} milestones for job`})}catch(t){return console.error("Create milestones error:",t),e.json({error:"Failed to create milestones"},500)}});re.post("/milestones/:milestoneId/pay",ae,async e=>{try{const{env:t}=e,s=Ge(t.STRIPE_SECRET_KEY),r=new Ls(t.DB,s),i=parseInt(e.req.param("milestoneId")),{payment_method_id:a}=await e.req.json(),n=e.get("user"),o=await r.processMilestonePayment(i,n.user_id,a);return e.json(o)}catch(t){return console.error("Milestone payment error:",t),e.json({error:"Failed to process milestone payment"},500)}});re.post("/milestones/:milestoneId/submit",ae,async e=>{try{const{env:t}=e,s=Ge(t.STRIPE_SECRET_KEY),r=new Ls(t.DB,s),i=parseInt(e.req.param("milestoneId")),{submission_notes:a,attachments:n}=await e.req.json(),o=e.get("user"),l=await r.submitMilestone(i,o.user_id,a,n);return e.json(l)}catch(t){return console.error("Milestone submission error:",t),e.json({error:"Failed to submit milestone"},500)}});re.post("/milestones/:milestoneId/approve",ae,async e=>{try{const{env:t}=e,s=Ge(t.STRIPE_SECRET_KEY),r=new Ls(t.DB,s),i=parseInt(e.req.param("milestoneId")),{approval_notes:a,rating:n}=await e.req.json(),o=e.get("user"),l=await r.approveMilestone(i,o.user_id,a,n);return e.json(l)}catch(t){return console.error("Milestone approval error:",t),e.json({error:"Failed to approve milestone"},500)}});re.post("/milestones/:milestoneId/request-revision",ae,async e=>{try{const{env:t}=e,s=Ge(t.STRIPE_SECRET_KEY),r=new Ls(t.DB,s),i=parseInt(e.req.param("milestoneId")),{revision_notes:a,additional_time:n}=await e.req.json(),o=e.get("user"),l=await r.requestMilestoneRevision(i,o.user_id,a,n);return e.json(l)}catch(t){return console.error("Milestone revision error:",t),e.json({error:"Failed to request revision"},500)}});re.get("/milestones/job/:jobId/progress",ae,async e=>{try{const{env:t}=e,s=Ge(t.STRIPE_SECRET_KEY),r=new Ls(t.DB,s),i=parseInt(e.req.param("jobId")),a=await r.getJobMilestoneProgress(i);return e.json({success:!0,progress:a})}catch(t){return console.error("Get milestone progress error:",t),e.json({error:"Failed to get milestone progress"},500)}});re.get("/escrow/:transactionId/timeline",ae,async e=>{try{const{env:t}=e,s=new bi(t.DB),r=parseInt(e.req.param("transactionId")),i=await s.getEscrowTimeline(r);return e.json({success:!0,timeline:i})}catch(t){return console.error("Get timeline error:",t),e.json({error:"Failed to get timeline"},500)}});re.get("/escrow/:transactionId/status",ae,async e=>{try{const{env:t}=e,s=new bi(t.DB),r=parseInt(e.req.param("transactionId")),i=await s.getTransactionStatus(r);return e.json({success:!0,status:i})}catch(t){return console.error("Get transaction status error:",t),e.json({error:"Failed to get transaction status"},500)}});re.post("/escrow/:transactionId/extend-deadline",ae,async e=>{try{const{env:t}=e,s=new bi(t.DB),r=parseInt(e.req.param("transactionId")),{deadline_type:i,extension_hours:a,reason:n}=await e.req.json(),o=e.get("user"),l=await s.extendDeadline(r,i,a,n,o.user_id);return e.json(l)}catch(t){return console.error("Extend deadline error:",t),e.json({error:"Failed to extend deadline"},500)}});re.post("/escrow/:transactionId/dispute",ae,async e=>{try{const{env:t}=e,s=new $s(t.DB),r=parseInt(e.req.param("transactionId")),i=await e.req.json(),a=e.get("user"),n=await s.fileDispute(r,a.user_id,i);return e.json(n)}catch(t){return console.error("File dispute error:",t),e.json({error:"Failed to file dispute"},500)}});re.post("/disputes/:disputeId/respond",ae,async e=>{try{const{env:t}=e,s=new $s(t.DB),r=parseInt(e.req.param("disputeId")),i=await e.req.json(),a=e.get("user"),n=await s.respondToDispute(r,a.user_id,i);return e.json(n)}catch(t){return console.error("Dispute response error:",t),e.json({error:"Failed to respond to dispute"},500)}});re.post("/disputes/:disputeId/escalate",ae,async e=>{try{const{env:t}=e,s=new $s(t.DB),r=parseInt(e.req.param("disputeId")),{reason:i}=await e.req.json(),a=e.get("user"),n=await s.escalateToMediation(r,a.user_id,i);return e.json(n)}catch(t){return console.error("Dispute escalation error:",t),e.json({error:"Failed to escalate dispute"},500)}});re.post("/disputes/:disputeId/resolve",ae,async e=>{try{const{env:t}=e,s=new $s(t.DB),r=parseInt(e.req.param("disputeId")),i=await e.req.json(),a=e.get("user"),n=await s.resolveDispute(r,a.user_id,i);return e.json(n)}catch(t){return console.error("Dispute resolution error:",t),e.json({error:"Failed to resolve dispute"},500)}});re.get("/dashboard/escrow",ae,async e=>{try{const{env:t}=e,r=await new mc(t.DB).getEscrowDashboard();return e.json({success:!0,dashboard:r})}catch(t){return console.error("Get escrow dashboard error:",t),e.json({error:"Failed to get escrow dashboard"},500)}});re.get("/dashboard/disputes",ae,async e=>{try{const{env:t}=e,r=await new $s(t.DB).getDisputeDashboard();return e.json({success:!0,dashboard:r})}catch(t){return console.error("Get dispute dashboard error:",t),e.json({error:"Failed to get dispute dashboard"},500)}});re.get("/tax/worker-summary/:workerId/:taxYear",ae,async e=>{try{const t=e.get("user"),s=parseInt(e.req.param("workerId")),r=parseInt(e.req.param("taxYear"));if(t.user_id!==s&&t.role!=="admin")return e.json({error:"Access denied"},403);const i=await e.env.DB.prepare(`
      SELECT 
        SUM(we.gross_amount) as total_gross,
        SUM(we.platform_fee) as total_fees,
        SUM(we.net_amount) as total_net,
        COUNT(*) as total_jobs,
        u.province as worker_province,
        u.first_name, u.last_name, u.sin
      FROM worker_earnings we
      JOIN users u ON we.worker_id = u.id
      WHERE we.worker_id = ? AND we.tax_year = ?
      GROUP BY we.worker_id, u.province, u.first_name, u.last_name, u.sin
    `).bind(s,r).first(),a=await e.env.DB.prepare(`
      SELECT 
        t.transaction_type,
        SUM(t.amount) as total_amount,
        COUNT(*) as transaction_count
      FROM transactions t
      JOIN jobs j ON t.job_id = j.id
      WHERE t.worker_id = ? 
        AND t.transaction_type IN ('tax_gst', 'tax_pst', 'tax_hst')
        AND strftime('%Y', t.processed_at) = ?
        AND t.status = 'completed'
      GROUP BY t.transaction_type
    `).bind(s,r.toString()).all(),n={gst_collected:0,pst_collected:0,hst_collected:0};return a.results&&a.results.forEach(o=>{o.transaction_type==="tax_gst"&&(n.gst_collected=parseFloat(o.total_amount)),o.transaction_type==="tax_pst"&&(n.pst_collected=parseFloat(o.total_amount)),o.transaction_type==="tax_hst"&&(n.hst_collected=parseFloat(o.total_amount))}),e.json({success:!0,tax_year:r,worker_info:{worker_id:s,name:i?`${i.first_name} ${i.last_name}`:"Unknown",province:(i==null?void 0:i.worker_province)||"Unknown",sin_on_file:i!=null&&i.sin?"Yes":"No"},earnings_summary:{total_gross_earnings:(i==null?void 0:i.total_gross)||0,total_platform_fees:(i==null?void 0:i.total_fees)||0,total_net_earnings:(i==null?void 0:i.total_net)||0,total_jobs_completed:(i==null?void 0:i.total_jobs)||0},tax_summary,total_taxes_collected:n.gst_collected+n.pst_collected+n.hst_collected,compliance_notes:["Worker receives gross earnings; platform handles tax collection","T4A slip required if earnings exceed $500 CAD per year","Taxes collected are remitted to CRA by platform","Worker responsible for claiming business expenses on tax return"]})}catch(t){return console.error("Get worker tax summary error:",t),e.json({error:"Failed to get tax summary"},500)}});re.get("/tax/platform-remittance/:taxYear/:province?",ae,async e=>{try{if(e.get("user").role!=="admin")return e.json({error:"Admin access required"},403);const s=parseInt(e.req.param("taxYear")),r=e.req.param("province");let i=`
      SELECT 
        u.province,
        t.transaction_type,
        SUM(t.amount) as total_amount,
        COUNT(*) as transaction_count,
        COUNT(DISTINCT t.worker_id) as unique_workers,
        COUNT(DISTINCT t.job_id) as unique_jobs
      FROM transactions t
      JOIN users u ON t.worker_id = u.id
      WHERE t.transaction_type IN ('tax_gst', 'tax_pst', 'tax_hst')
        AND strftime('%Y', t.processed_at) = ?
        AND t.status = 'completed'
    `;const a=[s.toString()];r&&(i+=" AND u.province = ?",a.push(r.toUpperCase())),i+=" GROUP BY u.province, t.transaction_type ORDER BY u.province, t.transaction_type";const n=await e.env.DB.prepare(i).bind(...a).all(),o={};return n.results&&n.results.forEach(l=>{o[l.province]||(o[l.province]={gst:0,pst:0,hst:0,total_transactions:0,unique_workers:new Set,unique_jobs:new Set}),o[l.province][l.transaction_type.replace("tax_","")]=parseFloat(l.total_amount),o[l.province].total_transactions+=parseInt(l.transaction_count),o[l.province].unique_workers.add(l.worker_id),o[l.province].unique_jobs.add(l.job_id)}),Object.keys(o).forEach(l=>{o[l].unique_workers=o[l].unique_workers.size,o[l].unique_jobs=o[l].unique_jobs.size,o[l].total_taxes=o[l].gst+o[l].pst+o[l].hst}),e.json({success:!0,tax_year:s,province_filter:r||"All provinces",remittance_summary:o,compliance_info:{gst_number:"Platform GST/HST number required",remittance_schedule:"Monthly/Quarterly based on revenue",filing_deadline:"One month after reporting period",contact_cra:"1-800-959-5525"}})}catch(t){return console.error("Get platform remittance error:",t),e.json({error:"Failed to get remittance data"},500)}});re.get("/tax/export/:taxYear/:format",ae,async e=>{var t;try{if(e.get("user").role!=="admin")return e.json({error:"Admin access required"},403);const r=parseInt(e.req.param("taxYear")),i=e.req.param("format"),a=await e.env.DB.prepare(`
      SELECT 
        t.id as transaction_id,
        t.job_id,
        j.title as job_title,
        t.client_id,
        c.first_name as client_first_name,
        c.last_name as client_last_name,
        c.province as client_province,
        t.worker_id,
        w.first_name as worker_first_name,
        w.last_name as worker_last_name,
        w.province as worker_province,
        t.transaction_type,
        t.amount,
        t.processed_at,
        t.description
      FROM transactions t
      JOIN jobs j ON t.job_id = j.id
      JOIN users c ON t.client_id = c.id
      JOIN users w ON t.worker_id = w.id
      WHERE t.transaction_type IN ('tax_gst', 'tax_pst', 'tax_hst', 'platform_fee')
        AND strftime('%Y', t.processed_at) = ?
        AND t.status = 'completed'
      ORDER BY t.processed_at DESC
    `).bind(r.toString()).all();if(i==="csv"){let n=`Transaction_ID,Job_ID,Job_Title,Client_Name,Client_Province,Worker_Name,Worker_Province,Transaction_Type,Amount,Date,Description
`;return a.results&&a.results.forEach(o=>{const l=`"${o.client_first_name} ${o.client_last_name}"`,d=`"${o.worker_first_name} ${o.worker_last_name}"`,c=`"${o.job_title}"`,u=`"${o.description}"`;n+=`${o.transaction_id},${o.job_id},${c},${l},${o.client_province},${d},${o.worker_province},${o.transaction_type},${o.amount},${o.processed_at},${u}
`}),e.header("Content-Type","text/csv"),e.header("Content-Disposition",`attachment; filename="kwikr_tax_export_${r}.csv"`),e.body(n)}return e.json({success:!0,tax_year:r,export_format:i,total_records:((t=a.results)==null?void 0:t.length)||0,data:a.results||[]})}catch(s){return console.error("Export tax data error:",s),e.json({error:"Failed to export tax data"},500)}});re.post("/admin/monitoring/run-cycle",ae,async e=>{try{const{env:t}=e;if(e.get("user").role!=="admin")return e.json({error:"Admin access required"},403);const r=new mc(t.DB),i=Ge(t.STRIPE_SECRET_KEY),a=new r0(t.DB,i),n=new bi(t.DB),o=new $s(t.DB),[l,d,c]=await Promise.all([r.runMonitoringCycle(),n.processDeadlineReminders(),o.processDisputeEscalations()]);return e.json({success:!0,results:{monitoring:l,deadlines_processed:"completed",disputes_processed:"completed"}})}catch(t){return console.error("Admin monitoring cycle error:",t),e.json({error:"Failed to run monitoring cycle"},500)}});const vc=new ce,i0=e=>new Pe(e,{apiVersion:"2024-11-20.acacia",typescript:!0});vc.post("/stripe",async e=>{try{const t=await e.req.text(),s=e.req.header("stripe-signature");if(!s)return e.json({error:"Missing stripe-signature header"},400);const r=i0(e.env.STRIPE_SECRET_KEY);let i;try{i=r.webhooks.constructEvent(t,s,e.env.STRIPE_WEBHOOK_SECRET)}catch(a){return console.error("Webhook signature verification failed:",a.message),e.json({error:"Invalid signature"},400)}switch(console.log(`Received Stripe webhook: ${i.type}`),i.type){case"payment_intent.succeeded":await a0(i.data.object,e.env);break;case"payment_intent.payment_failed":await n0(i.data.object,e.env);break;case"payment_intent.canceled":await o0(i.data.object,e.env);break;case"charge.dispute.created":await l0(i.data.object,e.env),await c0(i.data.object,e.env);break;case"charge.dispute.updated":await u0(i.data.object,e.env);break;case"invoice.payment_succeeded":await d0(i.data.object,e.env);break;default:console.log(`Unhandled event type: ${i.type}`)}return e.json({received:!0})}catch(t){return console.error("Webhook processing error:",t),e.json({error:"Webhook processing failed"},500)}});async function a0(e,t){try{const s=e.metadata.job_id;if(!s){console.error("No job_id in payment intent metadata");return}await t.DB.prepare(`
      UPDATE jobs 
      SET escrow_status = 'held'
      WHERE stripe_payment_intent_id = ?
    `).bind(e.id).run(),await t.DB.prepare(`
      UPDATE transactions 
      SET status = 'completed', processed_at = CURRENT_TIMESTAMP
      WHERE stripe_transaction_id = ? AND transaction_type = 'escrow_hold'
    `).bind(e.id).run(),await t.DB.prepare(`
      INSERT INTO notifications (user_id, type, title, message, related_entity_type, related_entity_id)
      VALUES (?, 'payment', 'Escrow Payment Received', 'Client has paid for the job and funds are held in escrow.', 'job', ?)
    `).bind(e.metadata.worker_id,s).run(),await t.DB.prepare(`
      INSERT INTO notifications (user_id, type, title, message, related_entity_type, related_entity_id)
      VALUES (?, 'payment', 'Payment Confirmed', 'Your payment has been processed and held in escrow until job completion.', 'job', ?)
    `).bind(e.metadata.client_id,s).run(),console.log(`Payment intent succeeded for job ${s}`)}catch(s){console.error("Error handling payment_intent.succeeded:",s)}}async function n0(e,t){try{const s=e.metadata.job_id;if(!s){console.error("No job_id in payment intent metadata");return}await t.DB.prepare(`
      UPDATE jobs 
      SET escrow_status = 'failed'
      WHERE stripe_payment_intent_id = ?
    `).bind(e.id).run(),await t.DB.prepare(`
      UPDATE transactions 
      SET status = 'failed', processed_at = CURRENT_TIMESTAMP
      WHERE stripe_transaction_id = ? AND transaction_type = 'escrow_hold'
    `).bind(e.id).run(),await t.DB.prepare(`
      INSERT INTO notifications (user_id, type, title, message, related_entity_type, related_entity_id)
      VALUES (?, 'payment_failed', 'Payment Failed', 'Your payment could not be processed. Please try again or contact support.', 'job', ?)
    `).bind(e.metadata.client_id,s).run(),console.log(`Payment intent failed for job ${s}`)}catch(s){console.error("Error handling payment_intent.payment_failed:",s)}}async function o0(e,t){try{const s=e.metadata.job_id;if(!s){console.error("No job_id in payment intent metadata");return}await t.DB.prepare(`
      UPDATE jobs 
      SET escrow_status = 'refunded'
      WHERE stripe_payment_intent_id = ?
    `).bind(e.id).run(),await t.DB.prepare(`
      UPDATE transactions 
      SET status = 'cancelled', processed_at = CURRENT_TIMESTAMP
      WHERE stripe_transaction_id = ? AND transaction_type IN ('escrow_hold', 'escrow_release')
    `).bind(e.id).run(),await t.DB.prepare(`
      INSERT INTO notifications (user_id, type, title, message, related_entity_type, related_entity_id)
      VALUES (?, 'refund', 'Payment Refunded', 'Your payment has been refunded due to job cancellation.', 'job', ?)
    `).bind(e.metadata.client_id,s).run(),await t.DB.prepare(`
      INSERT INTO notifications (user_id, type, title, message, related_entity_type, related_entity_id)
      VALUES (?, 'job_cancelled', 'Job Payment Cancelled', 'The job payment has been refunded to the client.', 'job', ?)
    `).bind(e.metadata.worker_id,s).run(),console.log(`Payment intent canceled/refunded for job ${s}`)}catch(s){console.error("Error handling payment_intent.canceled:",s)}}async function l0(e,t){try{const r=e.charge.payment_intent,i=await t.DB.prepare(`
      SELECT * FROM jobs WHERE stripe_payment_intent_id = ?
    `).bind(r).first();if(!i){console.error("No job found for disputed payment intent:",r);return}await t.DB.prepare(`
      INSERT INTO disputes (
        job_id, raised_by, dispute_reason, description, status
      ) VALUES (?, ?, 'payment_dispute', ?, 'investigating')
    `).bind(i.id,i.client_id,`Stripe dispute: ${e.reason}. Amount: $${e.amount/100}`).run(),await t.DB.prepare(`
      UPDATE jobs SET status = 'disputed' WHERE id = ?
    `).bind(i.id).run(),await t.DB.prepare(`
      INSERT INTO notifications (user_id, type, title, message, related_entity_type, related_entity_id)
      VALUES (?, 'dispute', 'Payment Dispute Created', 'A payment dispute has been filed for this job. Admin review required.', 'job', ?)
    `).bind(i.assigned_worker_id,i.id).run(),console.log(`Dispute created for job ${i.id}`)}catch(s){console.error("Error handling charge.dispute.created:",s)}}async function d0(e,t){var s;try{const r=(s=e.metadata)==null?void 0:s.invoice_number;if(!r){console.log("No invoice_number in metadata, skipping");return}await t.DB.prepare(`
      UPDATE worker_invoices 
      SET status = 'paid', paid_at = CURRENT_TIMESTAMP
      WHERE invoice_number = ?
    `).bind(r).run();const i=await t.DB.prepare(`
      SELECT * FROM worker_invoices WHERE invoice_number = ?
    `).bind(r).first();i&&(await t.DB.prepare(`
        INSERT INTO notifications (user_id, type, title, message, related_entity_type, related_entity_id)
        VALUES (?, 'invoice_paid', 'Invoice Paid', 'Your invoice has been paid successfully.', 'invoice', ?)
      `).bind(i.worker_id,i.id).run(),await t.DB.prepare(`
        INSERT INTO notifications (user_id, type, title, message, related_entity_type, related_entity_id)
        VALUES (?, 'payment', 'Invoice Payment Processed', 'Your invoice payment has been processed successfully.', 'invoice', ?)
      `).bind(i.client_id,i.id).run()),console.log(`Invoice payment succeeded: ${r}`)}catch(r){console.error("Error handling invoice.payment_succeeded:",r)}}async function c0(e,t){try{console.log("Processing Stripe dispute:",e.id);const{InvoiceDisputeService:s}=await Promise.resolve().then(()=>rt),r=new Pe(t.STRIPE_SECRET_KEY,{apiVersion:"2024-11-20.acacia",typescript:!0}),a=await new s(t.DB,r).handleStripeDispute(e);a.success?console.log(`Successfully processed Stripe dispute: ${e.id} -> Invoice Dispute ID: ${a.dispute_id}`):console.error(`Failed to process Stripe dispute ${e.id}:`,a.message)}catch(s){console.error("Error handling dispute.created:",s)}}async function u0(e,t){try{console.log("Processing Stripe dispute update:",e.id,e.status);const s=await t.DB.prepare(`
      SELECT * FROM stripe_dispute_mappings WHERE stripe_dispute_id = ?
    `).bind(e.id).first();if(s){await t.DB.prepare(`
        UPDATE stripe_dispute_mappings 
        SET stripe_status = ?, stripe_outcome = ?, updated_at = datetime('now'), 
            stripe_metadata = ?
        WHERE stripe_dispute_id = ?
      `).bind(e.status,e.outcome||null,JSON.stringify(e),e.id).run();let r="open";e.status==="won"?r="resolved":e.status==="lost"?r="closed":e.status==="warning_needs_response"&&(r="awaiting_response"),r!=="open"&&(await t.DB.prepare(`
          UPDATE invoice_disputes 
          SET status = ?, updated_at = datetime('now')
          WHERE id = ?
        `).bind(r,s.invoice_dispute_id).run(),await t.DB.prepare(`
          INSERT INTO invoice_dispute_timeline (
            dispute_id, user_id, action_type, old_value, new_value,
            description, is_system_action, created_at
          ) VALUES (?, NULL, 'status_changed', 'investigating', ?, ?, TRUE, datetime('now'))
        `).bind(s.invoice_dispute_id,r,`Stripe dispute ${e.status}: ${e.outcome||"Status updated"}`).run()),console.log(`Updated dispute mapping for ${e.id}: ${e.status}`)}}catch(s){console.error("Error handling dispute update:",s)}}var p0={};class hc{constructor(t,s){O(this,"db");O(this,"stripe");this.db=t,this.stripe=s}async createInvoice(t,s){try{const r=await this.generateInvoiceNumber(),i=new Date,a=new Date(i);a.setDate(a.getDate()+(t.payment_terms||30));const n=await this.getTaxRates(t.province_code||"ON"),o=await this.calculateInvoiceTotals(s,n),d=(await this.db.prepare(`
        INSERT INTO invoices (
          invoice_number, job_id, client_id, worker_id, title, description,
          invoice_type, status, subtotal, tax_rate, tax_amount, 
          total_amount, currency, payment_terms, issue_date, due_date,
          template_id, language, notes
        ) VALUES (?, ?, ?, ?, ?, ?, ?, 'draft', ?, ?, ?, ?, 'CAD', ?, ?, ?, ?, ?, ?)
      `).bind(r,t.job_id||null,t.client_id,t.worker_id,t.title,t.description||"",t.invoice_type||"standard",o.subtotal,o.totalTaxRate,o.totalTaxAmount,o.total,t.payment_terms||30,i.toISOString().split("T")[0],a.toISOString().split("T")[0],t.template_id||1,t.language||"en",t.notes||"").run()).meta.last_row_id;for(let u=0;u<s.length;u++){const p=s[u],m=(p.quantity||1)*(p.unit_price||0),b=p.is_taxable!==!1?o.totalTaxRate:0,v=m*b;await this.db.prepare(`
          INSERT INTO invoice_items (
            invoice_id, item_type, description, quantity, unit_price, line_total,
            service_category, unit_of_measure, is_taxable, tax_rate, tax_amount,
            milestone_id, sort_order
          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
        `).bind(d,p.item_type||"service",p.description||"",p.quantity||1,p.unit_price||0,m,p.service_category||"",p.unit_of_measure||"hours",p.is_taxable!==!1?1:0,b,v,p.milestone_id||null,u).run()}return await this.logInvoiceActivity(d,"created",`Invoice ${r} created`,t.worker_id),{success:!0,message:"Invoice created successfully",invoice:await this.getInvoiceById(d)}}catch(r){return{success:!1,message:`Failed to create invoice: ${r.message}`}}}async generateInvoiceNumber(){const t=new Date,s=t.getFullYear(),r=String(t.getMonth()+1).padStart(2,"0"),i=await this.db.prepare(`
      SELECT COUNT(*) as count FROM invoices 
      WHERE invoice_number LIKE ?
    `).bind(`KW-${s}${r}-%`).first(),a=String(((i==null?void 0:i.count)||0)+1).padStart(4,"0");return`KW-${s}${r}-${a}`}async calculateInvoiceTotals(t,s){let r=0;for(const o of t)o.is_taxable!==!1&&(r+=(o.quantity||1)*(o.unit_price||0));const i=s.hst_rate||s.gst_rate+s.pst_rate,a=r*i,n=r+a;return{subtotal:Math.round(r*100)/100,totalTaxRate:i,totalTaxAmount:Math.round(a*100)/100,total:Math.round(n*100)/100}}async getTaxRates(t){const s=await this.db.prepare(`
      SELECT * FROM tax_rates 
      WHERE province_code = ? AND is_active = 1
      ORDER BY effective_from DESC
      LIMIT 1
    `).bind(t.toUpperCase()).first();return s||{id:0,province_code:"ON",province_name:"Ontario",gst_rate:0,pst_rate:0,hst_rate:.13,effective_from:new Date().toISOString().split("T")[0],is_active:!0}}async sendInvoice(t,s,r={}){try{const i=await this.getInvoiceById(t);if(!i)return{success:!1,message:"Invoice not found"};if(!["draft","pending"].includes(i.status))return{success:!1,message:"Invoice has already been sent"};const a=await this.createStripePaymentLink(i);return await this.db.prepare(`
        UPDATE invoices 
        SET status = 'sent', payment_link = ?, sent_date = datetime('now'), updated_at = datetime('now')
        WHERE id = ?
      `).bind(a.url,t).run(),r.schedule_reminders&&await this.scheduleInvoiceReminders(t),await this.logInvoiceActivity(t,"sent","Invoice sent to client",s),await this.sendInvoiceEmail(i,a.url,r),{success:!0,message:"Invoice sent successfully",payment_link:a.url}}catch(i){return{success:!1,message:`Failed to send invoice: ${i.message}`}}}async createStripePaymentLink(t){return await this.stripe.paymentLinks.create({line_items:[{price_data:{currency:t.currency.toLowerCase(),product_data:{name:t.title,description:t.description||void 0},unit_amount:Math.round(t.total_amount*100)},quantity:1}],after_completion:{type:"redirect",redirect:{url:`${p0.FRONTEND_URL||"https://kwikrdirectory.ca"}/invoice/${t.id}/success`}},metadata:{invoice_id:t.id.toString(),invoice_number:t.invoice_number,client_id:t.client_id.toString(),worker_id:t.worker_id.toString()}})}async processInvoicePayment(t,s,r){try{const i=await this.getInvoiceById(t);if(!i)return{success:!1,message:"Invoice not found"};await this.db.prepare(`
        INSERT INTO invoice_payments (
          invoice_id, payment_method, payment_amount, payment_date,
          payment_reference, payment_intent_id, charge_id, status, notes, processed_by
        ) VALUES (?, ?, ?, datetime('now'), ?, ?, ?, 'completed', ?, ?)
      `).bind(t,s.payment_method,s.payment_amount,s.payment_reference||null,s.payment_intent_id||null,s.charge_id||null,s.notes||null,r).run();const n=await this.getTotalPaidAmount(t)>=i.total_amount;return n?(await this.db.prepare(`
          UPDATE invoices 
          SET status = 'paid', paid_date = datetime('now'), updated_at = datetime('now')
          WHERE id = ?
        `).bind(t).run(),await this.cancelInvoiceReminders(t),await this.logInvoiceActivity(t,"paid",`Invoice fully paid - $${s.payment_amount}`,r),await this.sendPaymentConfirmation(i,s.payment_amount)):await this.logInvoiceActivity(t,"partial_payment",`Partial payment received - $${s.payment_amount}`,r),{success:!0,message:n?"Invoice fully paid":"Partial payment recorded"}}catch(i){return{success:!1,message:`Failed to process payment: ${i.message}`}}}async getInvoiceById(t){return await this.db.prepare(`
      SELECT * FROM invoices WHERE id = ?
    `).bind(t).first()||null}async getInvoiceItems(t){return(await this.db.prepare(`
      SELECT * FROM invoice_items 
      WHERE invoice_id = ? 
      ORDER BY sort_order ASC
    `).bind(t).all()).results}async getUserInvoices(t,s,r={}){let i=s==="client"?"client_id = ?":"worker_id = ?";const a=[t];r.status&&(i+=" AND status = ?",a.push(r.status)),r.invoice_type&&(i+=" AND invoice_type = ?",a.push(r.invoice_type)),r.from_date&&(i+=" AND issue_date >= ?",a.push(r.from_date)),r.to_date&&(i+=" AND issue_date <= ?",a.push(r.to_date));const n=await this.db.prepare(`
      SELECT COUNT(*) as total FROM invoices WHERE ${i}
    `).bind(...a).first(),o=r.limit||50,l=r.offset||0;return{invoices:(await this.db.prepare(`
      SELECT i.*, 
             c.name as client_name, c.email as client_email,
             w.name as worker_name, w.email as worker_email
      FROM invoices i
      JOIN users c ON i.client_id = c.user_id
      JOIN users w ON i.worker_id = w.user_id
      WHERE ${i}
      ORDER BY i.created_at DESC
      LIMIT ? OFFSET ?
    `).bind(...a,o,l).all()).results,total:(n==null?void 0:n.total)||0}}async getInvoiceDashboard(t,s){const r=s==="client"?"client_id":"worker_id",i=await this.db.prepare(`
      SELECT 
        COUNT(*) as total_invoices,
        SUM(total_amount) as total_amount,
        SUM(CASE WHEN status = 'paid' THEN total_amount ELSE 0 END) as paid_amount,
        SUM(CASE WHEN status = 'overdue' THEN total_amount ELSE 0 END) as overdue_amount,
        SUM(CASE WHEN status IN ('sent', 'viewed', 'approved') THEN total_amount ELSE 0 END) as pending_amount
      FROM invoices 
      WHERE ${r} = ?
    `).bind(t).first(),a=await this.db.prepare(`
      SELECT * FROM invoices 
      WHERE ${r} = ?
      ORDER BY created_at DESC 
      LIMIT 10
    `).bind(t).all(),n=await this.db.prepare(`
      SELECT * FROM invoices 
      WHERE ${r} = ? AND due_date < DATE('now') AND status NOT IN ('paid', 'cancelled')
      ORDER BY due_date ASC
    `).bind(t).all(),o=await this.db.prepare(`
      SELECT status, COUNT(*) as count
      FROM invoices 
      WHERE ${r} = ?
      GROUP BY status
    `).bind(t).all(),l={};for(const d of o.results)l[d.status]=d.count;return{summary:{total_invoices:(i==null?void 0:i.total_invoices)||0,total_amount:(i==null?void 0:i.total_amount)||0,paid_amount:(i==null?void 0:i.paid_amount)||0,overdue_amount:(i==null?void 0:i.overdue_amount)||0,pending_amount:(i==null?void 0:i.pending_amount)||0},recent_invoices:a.results,overdue_invoices:n.results,status_breakdown:l}}async updateInvoiceStatus(t,s,r,i){try{const a=await this.getInvoiceById(t);if(!a)return{success:!1,message:"Invoice not found"};const n=a.status;return await this.db.prepare(`
        UPDATE invoices 
        SET status = ?, updated_at = datetime('now')
        WHERE id = ?
      `).bind(s,t).run(),await this.logInvoiceActivity(t,"status_changed",`Status changed from ${n} to ${s}${i?": "+i:""}`,r,{old_status:n,new_status:s}),s==="cancelled"&&await this.cancelInvoiceReminders(t),{success:!0,message:"Invoice status updated successfully"}}catch(a){return{success:!1,message:`Failed to update invoice status: ${a.message}`}}}async getTotalPaidAmount(t){const s=await this.db.prepare(`
      SELECT COALESCE(SUM(payment_amount), 0) as total
      FROM invoice_payments 
      WHERE invoice_id = ? AND status = 'completed'
    `).bind(t).first();return(s==null?void 0:s.total)||0}async logInvoiceActivity(t,s,r,i,a){await this.db.prepare(`
      INSERT INTO invoice_activity_log (
        invoice_id, action, description, user_id, metadata, created_at
      ) VALUES (?, ?, ?, ?, ?, datetime('now'))
    `).bind(t,s,r,i,a?JSON.stringify(a):null).run()}async scheduleInvoiceReminders(t){const s=await this.getInvoiceById(t);if(!s)return;const r=new Date(s.due_date),i=new Date(r);i.setDate(i.getDate()-7);const a=new Date(r);a.setDate(a.getDate()-1);const n=new Date(r);n.setDate(n.getDate()+3);const o=[{date:i,type:"due_soon",subject:"Invoice Due in 7 Days"},{date:a,type:"due_soon",subject:"Invoice Due Tomorrow"},{date:n,type:"overdue",subject:"Overdue Invoice Reminder"}];for(const l of o)l.date>new Date&&await this.db.prepare(`
          INSERT INTO invoice_reminders (
            invoice_id, reminder_type, scheduled_date, subject, message, status
          ) VALUES (?, ?, ?, ?, ?, 'scheduled')
        `).bind(t,l.type,l.date.toISOString(),l.subject,`Your invoice ${s.invoice_number} is ${l.type==="overdue"?"overdue":"due soon"}.`).run()}async cancelInvoiceReminders(t){await this.db.prepare(`
      UPDATE invoice_reminders 
      SET status = 'cancelled'
      WHERE invoice_id = ? AND status = 'scheduled'
    `).bind(t).run()}async sendInvoiceEmail(t,s,r){console.log(`Sending invoice ${t.invoice_number} to client with payment link: ${s}`)}async sendPaymentConfirmation(t,s){console.log(`Payment confirmation for invoice ${t.invoice_number}: $${s}`)}}class m0{constructor(t){O(this,"db");O(this,"defaultCompanyInfo",{name:"Kwikr Directory Inc.",address:"123 Business Street",city:"Toronto",province:"ON",postal_code:"M5V 3A8",phone:"1-800-KWIKR-CA",email:"billing@kwikrdirectory.ca",website:"www.kwikrdirectory.ca",gst_number:"123456789RT0001"});this.db=t}async generateInvoicePDF(t,s={}){try{const r=await this.getInvoiceWithItems(t);if(!r)return{success:!1,message:"Invoice not found"};const i=await this.getTemplate(s.template_id||r.template_id);if(!i)return{success:!1,message:"Template not found"};const[a,n]=await Promise.all([this.getUserInfo(r.client_id),this.getUserInfo(r.worker_id)]),o=await this.generateHTMLContent(r,r.items,i,a,n,s),l=await this.convertHTMLToPDF(o),d=await this.storePDF(t,l);return await this.db.prepare(`
        UPDATE invoices SET pdf_url = ?, updated_at = datetime('now') WHERE id = ?
      `).bind(d,t).run(),{success:!0,message:"PDF generated successfully",pdf_url:d,pdf_content:l}}catch(r){return{success:!1,message:`Failed to generate PDF: ${r.message}`}}}async generateHTMLContent(t,s,r,i,a,n){const o=this.defaultCompanyInfo,l=n.language||t.language||"en",d=l==="en",c=d?`Payment due within ${t.payment_terms} days`:`Paiement dû dans les ${t.payment_terms} jours`,u=b=>new Intl.NumberFormat(d?"en-CA":"fr-CA",{style:"currency",currency:t.currency}).format(b),p=b=>{const v=new Date(b);return new Intl.DateTimeFormat(d?"en-CA":"fr-CA").format(v)};return`
      <!DOCTYPE html>
      <html lang="${l}">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>${d?"Invoice":"Facture"} ${t.invoice_number}</title>
        <style>
          ${this.getTemplateCSS(r)}
        </style>
      </head>
      <body>
        <div class="invoice-container">
          <!-- Header -->
          <div class="invoice-header">
            <div class="company-info">
              ${o.logo_url?`<img src="${o.logo_url}" alt="Company Logo" class="company-logo">`:""}
              <div class="company-details">
                <h1 class="company-name">${o.name}</h1>
                <div class="company-address">
                  ${o.address}<br>
                  ${o.city}, ${o.province} ${o.postal_code}<br>
                  ${o.phone?`${d?"Phone":"Téléphone"}: ${o.phone}<br>`:""}
                  ${o.email?`${d?"Email":"Courriel"}: ${o.email}<br>`:""}
                  ${o.website?`${d?"Website":"Site web"}: ${o.website}<br>`:""}
                  ${o.gst_number?`${d?"GST/HST #":"TPS/TVH #"}: ${o.gst_number}`:""}
                </div>
              </div>
            </div>
            
            <div class="invoice-info">
              <h2 class="invoice-title">${d?"INVOICE":"FACTURE"}</h2>
              <div class="invoice-details">
                <div class="detail-row">
                  <span class="label">${d?"Invoice #:":"Facture #:"}</span>
                  <span class="value">${t.invoice_number}</span>
                </div>
                <div class="detail-row">
                  <span class="label">${d?"Issue Date:":"Date d'émission:"}</span>
                  <span class="value">${p(t.issue_date)}</span>
                </div>
                <div class="detail-row">
                  <span class="label">${d?"Due Date:":"Date d'échéance:"}</span>
                  <span class="value">${p(t.due_date)}</span>
                </div>
                <div class="detail-row">
                  <span class="label">${d?"Payment Terms:":"Conditions de paiement:"}</span>
                  <span class="value">${c}</span>
                </div>
              </div>
            </div>
          </div>

          <!-- Billing Information -->
          <div class="billing-section">
            <div class="bill-to">
              <h3>${d?"Bill To:":"Facturer à:"}</h3>
              <div class="client-info">
                <strong>${i.name}</strong><br>
                ${i.email}<br>
                ${i.phone?i.phone+"<br>":""}
                ${i.address?i.address+"<br>":""}
                ${i.city&&i.province?`${i.city}, ${i.province}`:""}
                ${i.postal_code?i.postal_code:""}
              </div>
            </div>
            
            <div class="service-provider">
              <h3>${d?"Service Provider:":"Fournisseur de services:"}</h3>
              <div class="worker-info">
                <strong>${a.name}</strong><br>
                ${a.email}<br>
                ${a.phone?a.phone+"<br>":""}
                ${a.business_name?a.business_name+"<br>":""}
                ${a.gst_number?`${d?"GST/HST #":"TPS/TVH #"}: ${a.gst_number}`:""}
              </div>
            </div>
          </div>

          <!-- Invoice Title and Description -->
          ${t.title||t.description?`
          <div class="invoice-description">
            ${t.title?`<h3 class="invoice-title-text">${t.title}</h3>`:""}
            ${t.description?`<p class="invoice-description-text">${t.description}</p>`:""}
          </div>
          `:""}

          <!-- Items Table -->
          <div class="items-section">
            <table class="items-table">
              <thead>
                <tr>
                  <th class="desc-col">Description</th>
                  <th class="qty-col">${d?"Qty":"Qté"}</th>
                  <th class="unit-col">${d?"Unit":"Unité"}</th>
                  <th class="rate-col">${d?"Rate":"Tarif"}</th>
                  <th class="amount-col">${d?"Amount":"Montant"}</th>
                </tr>
              </thead>
              <tbody>
                ${s.map(b=>`
                  <tr class="item-row">
                    <td class="item-description">
                      ${b.description}
                      ${b.service_category?`<br><small>(${b.service_category})</small>`:""}
                    </td>
                    <td class="item-quantity">${b.quantity}</td>
                    <td class="item-unit">${b.unit_of_measure}</td>
                    <td class="item-rate">${u(b.unit_price)}</td>
                    <td class="item-amount">${u(b.line_total)}</td>
                  </tr>
                `).join("")}
              </tbody>
            </table>
          </div>

          <!-- Totals Section -->
          <div class="totals-section">
            <div class="totals-table">
              <div class="total-row subtotal-row">
                <span class="total-label">${d?"Subtotal:":"Sous-total:"}</span>
                <span class="total-value">${u(t.subtotal)}</span>
              </div>
              
              ${t.discount_amount>0?`
              <div class="total-row discount-row">
                <span class="total-label">${d?"Discount:":"Remise:"}</span>
                <span class="total-value">-${u(t.discount_amount)}</span>
              </div>
              `:""}
              
              ${t.tax_amount>0?`
              <div class="total-row tax-row">
                <span class="total-label">${d?"Tax":"Taxe"} (${(t.tax_rate*100).toFixed(2)}%):</span>
                <span class="total-value">${u(t.tax_amount)}</span>
              </div>
              `:""}
              
              <div class="total-row grand-total-row">
                <span class="total-label">Total:</span>
                <span class="total-value">${u(t.total_amount)}</span>
              </div>
            </div>
          </div>

          <!-- Payment Information -->
          <div class="payment-section">
            <h3>${d?"Payment Information":"Information de paiement"}</h3>
            <div class="payment-info">
              <p><strong>${d?"Amount Due:":"Montant dû:"}</strong> ${u(t.total_amount)}</p>
              <p><strong>${d?"Due Date:":"Date d'échéance:"}</strong> ${p(t.due_date)}</p>
              ${t.payment_link?`
              <p><strong>${d?"Pay Online:":"Payer en ligne:"}</strong> 
                <a href="${t.payment_link}" class="payment-link">${d?"Click here to pay":"Cliquez ici pour payer"}</a>
              </p>
              `:""}
            </div>
          </div>

          <!-- Notes Section -->
          ${t.notes?`
          <div class="notes-section">
            <h3>Notes</h3>
            <p class="notes-text">${t.notes}</p>
          </div>
          `:""}

          <!-- Footer -->
          <div class="invoice-footer">
            ${n.custom_footer||r.footer_config||`
            <p class="footer-text">
              ${d?"Thank you for choosing Kwikr Directory. For questions about this invoice, please contact us.":"Merci d'avoir choisi Kwikr Directory. Pour toute question concernant cette facture, veuillez nous contacter."}
            </p>
            `}
            ${n.watermark?`<div class="watermark">${n.watermark}</div>`:""}
          </div>

          <!-- Payment Stub (if requested) -->
          ${n.include_payment_stub?this.generatePaymentStub(t,d):""}
        </div>
      </body>
      </html>
    `}getTemplateCSS(t){const s=t.primary_color||"#00C881",r=t.secondary_color||"#1a1a1a";return`
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: ${t.font_family||"Arial, sans-serif"};
        font-size: 12px;
        line-height: 1.4;
        color: #333;
        background: white;
      }

      .invoice-container {
        max-width: 8.5in;
        margin: 0 auto;
        padding: 40px;
        background: white;
      }

      .invoice-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 40px;
        border-bottom: 2px solid ${s};
        padding-bottom: 20px;
      }

      .company-info {
        display: flex;
        align-items: flex-start;
        gap: 20px;
      }

      .company-logo {
        max-width: 120px;
        max-height: 80px;
        object-fit: contain;
      }

      .company-name {
        font-size: 24px;
        font-weight: bold;
        color: ${s};
        margin-bottom: 10px;
      }

      .company-address {
        font-size: 11px;
        line-height: 1.3;
        color: #666;
      }

      .invoice-info {
        text-align: right;
        min-width: 200px;
      }

      .invoice-title {
        font-size: 32px;
        font-weight: bold;
        color: ${r};
        margin-bottom: 15px;
      }

      .invoice-details .detail-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 5px;
        gap: 20px;
      }

      .detail-row .label {
        font-weight: bold;
        color: #666;
      }

      .detail-row .value {
        color: #333;
      }

      .billing-section {
        display: flex;
        justify-content: space-between;
        margin-bottom: 30px;
        gap: 40px;
      }

      .bill-to, .service-provider {
        flex: 1;
      }

      .bill-to h3, .service-provider h3 {
        font-size: 14px;
        font-weight: bold;
        color: ${s};
        margin-bottom: 10px;
        border-bottom: 1px solid #eee;
        padding-bottom: 5px;
      }

      .client-info, .worker-info {
        font-size: 11px;
        line-height: 1.4;
      }

      .invoice-description {
        margin-bottom: 25px;
        padding: 15px;
        background: #f9f9f9;
        border-left: 4px solid ${s};
      }

      .invoice-title-text {
        font-size: 16px;
        font-weight: bold;
        color: ${r};
        margin-bottom: 8px;
      }

      .invoice-description-text {
        font-size: 12px;
        color: #666;
        line-height: 1.4;
      }

      .items-section {
        margin-bottom: 30px;
      }

      .items-table {
        width: 100%;
        border-collapse: collapse;
        font-size: 11px;
      }

      .items-table thead th {
        background: ${s};
        color: white;
        padding: 12px 8px;
        text-align: left;
        font-weight: bold;
        font-size: 11px;
      }

      .items-table tbody td {
        padding: 10px 8px;
        border-bottom: 1px solid #eee;
        vertical-align: top;
      }

      .item-row:hover {
        background: #f9f9f9;
      }

      .desc-col { width: 45%; }
      .qty-col { width: 10%; text-align: center; }
      .unit-col { width: 10%; text-align: center; }
      .rate-col { width: 15%; text-align: right; }
      .amount-col { width: 20%; text-align: right; }

      .item-quantity, .item-unit, .item-rate, .item-amount {
        text-align: right;
      }

      .item-description small {
        color: #888;
        font-style: italic;
      }

      .totals-section {
        margin-bottom: 30px;
        display: flex;
        justify-content: flex-end;
      }

      .totals-table {
        min-width: 300px;
      }

      .total-row {
        display: flex;
        justify-content: space-between;
        padding: 8px 0;
        border-bottom: 1px solid #eee;
      }

      .subtotal-row, .discount-row, .tax-row {
        font-size: 12px;
      }

      .grand-total-row {
        background: ${s};
        color: white;
        padding: 12px 15px;
        font-weight: bold;
        font-size: 14px;
        border-bottom: none;
      }

      .total-label {
        font-weight: 500;
      }

      .total-value {
        font-weight: bold;
      }

      .payment-section {
        margin-bottom: 25px;
        padding: 20px;
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 5px;
      }

      .payment-section h3 {
        color: ${s};
        margin-bottom: 15px;
        font-size: 14px;
      }

      .payment-info p {
        margin-bottom: 8px;
        font-size: 12px;
      }

      .payment-link {
        color: ${s};
        text-decoration: none;
        font-weight: bold;
      }

      .payment-link:hover {
        text-decoration: underline;
      }

      .notes-section {
        margin-bottom: 30px;
        padding: 15px;
        background: #fffef7;
        border: 1px solid #f0f0f0;
      }

      .notes-section h3 {
        color: ${r};
        margin-bottom: 10px;
        font-size: 14px;
      }

      .notes-text {
        font-size: 11px;
        line-height: 1.4;
        color: #555;
      }

      .invoice-footer {
        text-align: center;
        margin-top: 40px;
        padding-top: 20px;
        border-top: 1px solid #ddd;
        position: relative;
      }

      .footer-text {
        font-size: 10px;
        color: #888;
        line-height: 1.3;
      }

      .watermark {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(-45deg);
        font-size: 48px;
        color: rgba(0, 0, 0, 0.1);
        font-weight: bold;
        z-index: -1;
      }

      /* Print styles */
      @media print {
        .invoice-container {
          padding: 20px;
        }
        
        .payment-link {
          color: #333 !important;
        }
      }

      /* Payment stub styles */
      .payment-stub {
        margin-top: 40px;
        padding-top: 20px;
        border-top: 2px dashed #ccc;
      }

      .stub-header {
        text-align: center;
        font-weight: bold;
        margin-bottom: 20px;
        color: ${s};
      }

      .stub-content {
        display: flex;
        justify-content: space-between;
        font-size: 11px;
      }
    `}generatePaymentStub(t,s){const r=i=>new Intl.NumberFormat(s?"en-CA":"fr-CA",{style:"currency",currency:t.currency}).format(i);return`
      <div class="payment-stub">
        <div class="stub-header">
          ${s?"PAYMENT STUB - PLEASE DETACH AND RETURN WITH PAYMENT":"TALON DE PAIEMENT - VEUILLEZ DÉTACHER ET RETOURNER AVEC LE PAIEMENT"}
        </div>
        <div class="stub-content">
          <div class="stub-left">
            <strong>${s?"Invoice #:":"Facture #:"}</strong> ${t.invoice_number}<br>
            <strong>${s?"Due Date:":"Date d'échéance:"}</strong> ${t.due_date}<br>
            <strong>${s?"Amount Due:":"Montant dû:"}</strong> ${r(t.total_amount)}
          </div>
          <div class="stub-right">
            <strong>${s?"Remit Payment To:":"Envoyer le paiement à:"}</strong><br>
            ${this.defaultCompanyInfo.name}<br>
            ${this.defaultCompanyInfo.address}<br>
            ${this.defaultCompanyInfo.city}, ${this.defaultCompanyInfo.province} ${this.defaultCompanyInfo.postal_code}
          </div>
        </div>
      </div>
    `}async convertHTMLToPDF(t){return Buffer.from(t).toString("base64")}async storePDF(t,s){return`https://storage.kwikrdirectory.ca/invoices/${`invoice-${t}-${Date.now()}.pdf`}`}async getInvoiceWithItems(t){const s=await this.db.prepare(`
      SELECT * FROM invoices WHERE id = ?
    `).bind(t).first();if(!s)return null;const r=await this.db.prepare(`
      SELECT * FROM invoice_items WHERE invoice_id = ? ORDER BY sort_order ASC
    `).bind(t).all();return{...s,items:r.results}}async getTemplate(t){return await this.db.prepare(`
      SELECT * FROM invoice_templates WHERE id = ? AND is_active = 1
    `).bind(t).first()||null}async getUserInfo(t){return await this.db.prepare(`
      SELECT u.*, up.company_name as business_name, '' as gst_number 
      FROM users u 
      LEFT JOIN user_profiles up ON u.id = up.user_id 
      WHERE u.id = ?
    `).bind(t).first()||{}}async getAvailableTemplates(){return(await this.db.prepare(`
      SELECT * FROM invoice_templates 
      WHERE is_active = 1 
      ORDER BY is_default DESC, name ASC
    `).all()).results}async createTemplate(t){try{return{success:!0,message:"Template created successfully",template_id:(await this.db.prepare(`
        INSERT INTO invoice_templates (
          name, description, template_type, logo_url, primary_color, 
          secondary_color, font_family, layout_config, language, is_active
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, 1)
      `).bind(t.name||"Custom Template",t.description||"",t.template_type||"standard",t.logo_url||null,t.primary_color||"#00C881",t.secondary_color||"#1a1a1a",t.font_family||"Arial",JSON.stringify(t.layout_config||{}),t.language||"en").run()).meta.last_row_id}}catch(s){return{success:!1,message:`Failed to create template: ${s.message}`}}}}var f0={};class g0{constructor(t,s){O(this,"db");O(this,"stripe");O(this,"invoiceService");this.db=t,this.stripe=s,this.invoiceService=new hc(t,s)}async createRecurringSchedule(t,s){try{if(!await this.invoiceService.getInvoiceById(t))return{success:!1,message:"Template invoice not found"};const i=new Date(s.start_date),a=this.calculateNextGenerationDate(i,s.frequency,s.interval_count||1,s.generate_days_before||0),o=(await this.db.prepare(`
        INSERT INTO recurring_invoice_schedules (
          template_invoice_id, frequency, interval_count, start_date, end_date,
          generate_days_before, max_invoices, next_generation_date, 
          invoices_generated, is_active, created_at, updated_at
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, 0, 1, datetime('now'), datetime('now'))
      `).bind(t,s.frequency,s.interval_count||1,s.start_date,s.end_date||null,s.generate_days_before||0,s.max_invoices||null,a.toISOString()).run()).meta.last_row_id;return await this.db.prepare(`
        UPDATE invoices 
        SET is_recurring = 1, updated_at = datetime('now')
        WHERE id = ?
      `).bind(t).run(),{success:!0,message:"Recurring schedule created successfully",schedule_id:o}}catch(r){return{success:!1,message:`Failed to create recurring schedule: ${r.message}`}}}async processRecurringInvoices(){console.log("Processing recurring invoices...");const t={processed:0,failed:0,details:[]},s=await this.db.prepare(`
      SELECT * FROM recurring_invoice_schedules 
      WHERE is_active = 1 
        AND next_generation_date <= datetime('now')
        AND (end_date IS NULL OR end_date >= date('now'))
        AND (max_invoices IS NULL OR invoices_generated < max_invoices)
    `).all();for(const r of s.results)try{const i=await this.generateRecurringInvoice(r);i.success?(t.processed++,t.details.push({schedule_id:r.id,success:!0,message:i.message,invoice_id:i.invoice_id})):(t.failed++,t.details.push({schedule_id:r.id,success:!1,message:i.message}))}catch(i){t.failed++,t.details.push({schedule_id:r.id,success:!1,message:`Error processing schedule: ${i.message}`})}return console.log(`Recurring invoice processing complete: ${t.processed} processed, ${t.failed} failed`),t}async generateRecurringInvoice(t){try{const s=await this.invoiceService.getInvoiceById(t.template_invoice_id),r=await this.invoiceService.getInvoiceItems(t.template_invoice_id);if(!s)return{success:!1,message:"Template invoice not found"};const i=new Date,a=new Date(i);a.setDate(a.getDate()+s.payment_terms);const n={job_id:s.job_id,client_id:s.client_id,worker_id:s.worker_id,title:s.title,description:this.updateRecurringDescription(s.description,i),invoice_type:"recurring",payment_terms:s.payment_terms,template_id:s.template_id,language:s.language,notes:s.notes},o=r.map(c=>({item_type:c.item_type,description:c.description,quantity:c.quantity,unit_price:c.unit_price,service_category:c.service_category,unit_of_measure:c.unit_of_measure,is_taxable:c.is_taxable,milestone_id:c.milestone_id})),l=await this.invoiceService.createInvoice(n,o);if(!l.success||!l.invoice)return{success:!1,message:l.message};const d=l.invoice.id;return await this.db.prepare(`
        UPDATE invoices 
        SET recurring_parent_id = ?, is_recurring = 0, updated_at = datetime('now')
        WHERE id = ?
      `).bind(t.template_invoice_id,d).run(),await this.updateScheduleForNextGeneration(t,d),s.status==="sent"&&await this.invoiceService.sendInvoice(d,s.worker_id,{schedule_reminders:!0}),{success:!0,message:"Recurring invoice generated successfully",invoice_id:d}}catch(s){return{success:!1,message:`Failed to generate recurring invoice: ${s.message}`}}}async updateScheduleForNextGeneration(t,s){const r=new Date(t.next_generation_date),i=this.calculateNextGenerationDate(r,t.frequency,t.interval_count,t.generate_days_before),a=t.invoices_generated+1,n=t.max_invoices&&a>=t.max_invoices||t.end_date&&i>new Date(t.end_date);await this.db.prepare(`
      UPDATE recurring_invoice_schedules 
      SET next_generation_date = ?, 
          invoices_generated = ?,
          last_generated_date = datetime('now'),
          last_invoice_id = ?,
          is_active = ?,
          updated_at = datetime('now')
      WHERE id = ?
    `).bind(i.toISOString(),a,s,n?0:1,t.id).run()}calculateNextGenerationDate(t,s,r,i){const a=new Date(t);switch(s){case"weekly":a.setDate(a.getDate()+7*r);break;case"monthly":a.setMonth(a.getMonth()+r);break;case"quarterly":a.setMonth(a.getMonth()+3*r);break;case"annually":a.setFullYear(a.getFullYear()+r);break}return a.setDate(a.getDate()-i),a}updateRecurringDescription(t,s){const r=s.toLocaleDateString("en-CA",{year:"numeric",month:"long"}),i=t||"";return i.includes("{{period}}")?i.replace("{{period}}",r):i?`${i} - ${r}`:`Services for ${r}`}async createAdvancedPaymentLink(t,s={}){try{const r=await this.invoiceService.getInvoiceById(t);if(!r)return{success:!1,message:"Invoice not found"};const i=s.expires_hours?Math.floor((Date.now()+s.expires_hours*60*60*1e3)/1e3):void 0,a={line_items:[{price_data:{currency:r.currency.toLowerCase(),product_data:{name:r.title,description:r.description||void 0,metadata:{invoice_id:t.toString(),invoice_number:r.invoice_number}},unit_amount:Math.round(r.total_amount*100)},quantity:1}],after_completion:{type:"redirect",redirect:{url:`${f0.FRONTEND_URL||"https://kwikrdirectory.ca"}/invoice/${t}/success`}},allow_promotion_codes:s.allow_promotion_codes||!1,metadata:{invoice_id:t.toString(),invoice_number:r.invoice_number,client_id:r.client_id.toString(),worker_id:r.worker_id.toString(),created_via:"kwikr_invoice_system"}};i&&(a.expires_at=i),s.custom_text&&(a.custom_text={submit:{message:s.custom_text}}),s.collect_shipping_address&&(a.shipping_address_collection={allowed_countries:s.restrict_to_country?[s.restrict_to_country]:["CA"]}),s.collect_tax_id&&(a.tax_id_collection={enabled:!0});const n=await this.stripe.paymentLinks.create(a);return await this.db.prepare(`
        INSERT INTO invoice_payment_links (
          invoice_id, stripe_link_id, stripe_link_url, expires_at,
          allow_promotion_codes, custom_text, metadata, created_at
        ) VALUES (?, ?, ?, ?, ?, ?, ?, datetime('now'))
      `).bind(t,n.id,n.url,i?new Date(i*1e3).toISOString():null,s.allow_promotion_codes?1:0,s.custom_text||null,JSON.stringify(s)).run(),await this.db.prepare(`
        UPDATE invoices 
        SET payment_link = ?, payment_intent_id = ?, updated_at = datetime('now')
        WHERE id = ?
      `).bind(n.url,n.id,t).run(),{success:!0,message:"Payment link created successfully",payment_link:n.url,stripe_link_id:n.id}}catch(r){return{success:!1,message:`Failed to create payment link: ${r.message}`}}}async getRecurringSchedule(t){return await this.db.prepare(`
      SELECT * FROM recurring_invoice_schedules WHERE id = ?
    `).bind(t).first()||null}async getUserRecurringSchedules(t,s){const r=s==="client"?"client_id":"worker_id";return(await this.db.prepare(`
      SELECT rs.*, i.* as template_invoice
      FROM recurring_invoice_schedules rs
      JOIN invoices i ON rs.template_invoice_id = i.id
      WHERE i.${r} = ?
      ORDER BY rs.created_at DESC
    `).bind(t).all()).results}async updateRecurringSchedule(t,s){try{if(!await this.getRecurringSchedule(t))return{success:!1,message:"Schedule not found"};const i=[],a=[];return s.frequency&&(i.push("frequency = ?"),a.push(s.frequency)),s.interval_count!==void 0&&(i.push("interval_count = ?"),a.push(s.interval_count)),s.end_date!==void 0&&(i.push("end_date = ?"),a.push(s.end_date)),s.max_invoices!==void 0&&(i.push("max_invoices = ?"),a.push(s.max_invoices)),s.is_active!==void 0&&(i.push("is_active = ?"),a.push(s.is_active?1:0)),i.length===0?{success:!1,message:"No updates provided"}:(i.push("updated_at = datetime('now')"),a.push(t),await this.db.prepare(`
        UPDATE recurring_invoice_schedules 
        SET ${i.join(", ")}
        WHERE id = ?
      `).bind(...a).run(),{success:!0,message:"Schedule updated successfully"})}catch(r){return{success:!1,message:`Failed to update schedule: ${r.message}`}}}async pauseRecurringSchedule(t,s){return this.updateRecurringSchedule(t,{is_active:!s})}async getRecurringInvoiceHistory(t){return(await this.db.prepare(`
      SELECT i.* FROM invoices i
      WHERE i.recurring_parent_id = (
        SELECT template_invoice_id FROM recurring_invoice_schedules WHERE id = ?
      )
      ORDER BY i.created_at DESC
    `).bind(t).all()).results}}const K=new ce,_e=e=>{const t=new Pe(e.STRIPE_SECRET_KEY,{apiVersion:"2024-11-20.acacia",typescript:!0});return{invoiceService:new hc(e.DB,t),pdfService:new m0(e.DB),recurringService:new g0(e.DB,t)}},X=async(e,t)=>{e.req.path;let s=null;const r=e.req.header("Cookie");if(r){const i=r.match(/session=([^;]+)/);if(i&&(s=i[1]),!s){const a=r.match(/demo_session=([^;]+)/);if(a){const n=a[1],[o,l]=n.split(":"),d=Math.random().toString(36).substring(2,15);s=btoa(`demo-${o}:${l}:${d}`)}}}if(!s){const i=e.req.header("Authorization");i&&i.startsWith("Bearer ")&&(s=i.replace("Bearer ",""))}if(s||(s=e.req.query("token")),!s)return e.json({error:"Authentication required"},401);try{const{env:i}=e,a=await i.DB.prepare(`
      SELECT u.*, 
             CASE WHEN w.user_id IS NOT NULL THEN 'worker' ELSE 'client' END as user_type
      FROM users u 
      LEFT JOIN workers w ON u.user_id = w.user_id 
      WHERE u.session_token = ? AND u.status = 'active'
    `).bind(s).first();if(!a)return e.json({error:"Invalid session"},401);e.set("user",a),await t()}catch(i){return console.error("Auth middleware error:",i),e.json({error:"Authentication failed"},401)}};K.post("/create",X,async e=>{try{const{env:t}=e,{invoiceService:s}=_e(t),{invoice_data:r,items:i}=await e.req.json(),a=e.get("user");if(a.user_type!=="worker")return e.json({error:"Only service providers can create invoices"},403);r.worker_id=a.user_id;const n=await s.createInvoice(r,i);return e.json(n)}catch(t){return console.error("Create invoice error:",t),e.json({error:"Failed to create invoice"},500)}});K.get("/:invoiceId",X,async e=>{try{const{env:t}=e,{invoiceService:s}=_e(t),r=parseInt(e.req.param("invoiceId")),i=e.get("user"),a=await s.getInvoiceById(r);if(!a)return e.json({error:"Invoice not found"},404);if(a.client_id!==i.user_id&&a.worker_id!==i.user_id&&i.role!=="admin")return e.json({error:"Access denied"},403);const n=await s.getInvoiceItems(r);return e.json({success:!0,invoice:{...a,items:n}})}catch(t){return console.error("Get invoice error:",t),e.json({error:"Failed to get invoice"},500)}});K.get("/list/:userType",X,async e=>{try{const{env:t}=e,{invoiceService:s}=_e(t),r=e.req.param("userType"),i=e.get("user"),a=e.req.query("status"),n=e.req.query("invoice_type"),o=e.req.query("from_date"),l=e.req.query("to_date"),d=parseInt(e.req.query("limit")||"50"),c=parseInt(e.req.query("offset")||"0"),u={status:a,invoice_type:n,from_date:o,to_date:l,limit:d,offset:c},p=await s.getUserInvoices(i.user_id,r,u);return e.json({success:!0,...p})}catch(t){return console.error("Get user invoices error:",t),e.json({error:"Failed to get invoices"},500)}});K.post("/:invoiceId/send",X,async e=>{try{const{env:t}=e,{invoiceService:s}=_e(t),r=parseInt(e.req.param("invoiceId")),i=e.get("user"),a=await e.req.json(),n=await s.getInvoiceById(r);if(!n||n.worker_id!==i.user_id)return e.json({error:"Invoice not found or access denied"},403);const o=await s.sendInvoice(r,i.user_id,a);return e.json(o)}catch(t){return console.error("Send invoice error:",t),e.json({error:"Failed to send invoice"},500)}});K.put("/:invoiceId/status",X,async e=>{try{const{env:t}=e,{invoiceService:s}=_e(t),r=parseInt(e.req.param("invoiceId")),{status:i,reason:a}=await e.req.json(),n=e.get("user"),o=await s.updateInvoiceStatus(r,i,n.user_id,a);return e.json(o)}catch(t){return console.error("Update invoice status error:",t),e.json({error:"Failed to update invoice status"},500)}});K.post("/:invoiceId/payment",X,async e=>{try{const{env:t}=e,{invoiceService:s}=_e(t),r=parseInt(e.req.param("invoiceId")),i=await e.req.json(),a=e.get("user"),n=await s.processInvoicePayment(r,i,a.user_id);return e.json(n)}catch(t){return console.error("Process payment error:",t),e.json({error:"Failed to process payment"},500)}});K.post("/:invoiceId/pdf",X,async e=>{try{const{env:t}=e,{pdfService:s}=_e(t),r=parseInt(e.req.param("invoiceId")),i=await e.req.json(),a=e.get("user"),n=await t.DB.prepare(`
      SELECT * FROM invoices WHERE id = ?
    `).bind(r).first();if(!n)return e.json({error:"Invoice not found"},404);if(n.client_id!==a.user_id&&n.worker_id!==a.user_id&&a.role!=="admin")return e.json({error:"Access denied"},403);const o=await s.generateInvoicePDF(r,i);return e.json(o)}catch(t){return console.error("Generate PDF error:",t),e.json({error:"Failed to generate PDF"},500)}});K.get("/dashboard/:userType",X,async e=>{try{const{env:t}=e,{invoiceService:s}=_e(t),r=e.req.param("userType"),i=e.get("user"),a=await s.getInvoiceDashboard(i.user_id,r);return e.json({success:!0,dashboard:a})}catch(t){return console.error("Get invoice dashboard error:",t),e.json({error:"Failed to get dashboard data"},500)}});K.post("/:invoiceId/recurring",X,async e=>{try{const{env:t}=e,{recurringService:s}=_e(t),r=parseInt(e.req.param("invoiceId")),i=await e.req.json(),a=e.get("user");if(!await t.DB.prepare(`
      SELECT * FROM invoices WHERE id = ? AND worker_id = ?
    `).bind(r,a.user_id).first())return e.json({error:"Invoice not found or access denied"},403);const o=await s.createRecurringSchedule(r,i);return e.json(o)}catch(t){return console.error("Create recurring schedule error:",t),e.json({error:"Failed to create recurring schedule"},500)}});K.get("/recurring/schedules/:userType",X,async e=>{try{const{env:t}=e,{recurringService:s}=_e(t),r=e.req.param("userType"),i=e.get("user"),a=await s.getUserRecurringSchedules(i.user_id,r);return e.json({success:!0,schedules:a})}catch(t){return console.error("Get recurring schedules error:",t),e.json({error:"Failed to get recurring schedules"},500)}});K.put("/recurring/:scheduleId",X,async e=>{try{const{env:t}=e,{recurringService:s}=_e(t),r=parseInt(e.req.param("scheduleId")),i=await e.req.json(),a=await s.updateRecurringSchedule(r,i);return e.json(a)}catch(t){return console.error("Update recurring schedule error:",t),e.json({error:"Failed to update recurring schedule"},500)}});K.post("/recurring/:scheduleId/:action",X,async e=>{try{const{env:t}=e,{recurringService:s}=_e(t),r=parseInt(e.req.param("scheduleId")),i=e.req.param("action");if(!["pause","resume"].includes(i))return e.json({error:"Invalid action"},400);const a=await s.pauseRecurringSchedule(r,i==="pause");return e.json(a)}catch(t){return console.error("Pause/resume schedule error:",t),e.json({error:"Failed to update schedule"},500)}});K.get("/recurring/:scheduleId/history",X,async e=>{try{const{env:t}=e,{recurringService:s}=_e(t),r=parseInt(e.req.param("scheduleId")),i=await s.getRecurringInvoiceHistory(r);return e.json({success:!0,history:i})}catch(t){return console.error("Get recurring history error:",t),e.json({error:"Failed to get recurring history"},500)}});K.post("/:invoiceId/payment-link",X,async e=>{try{const{env:t}=e,{recurringService:s}=_e(t),r=parseInt(e.req.param("invoiceId")),i=await e.req.json(),a=e.get("user");if(!await t.DB.prepare(`
      SELECT * FROM invoices WHERE id = ? AND worker_id = ?
    `).bind(r,a.user_id).first())return e.json({error:"Invoice not found or access denied"},403);const o=await s.createAdvancedPaymentLink(r,i);return e.json(o)}catch(t){return console.error("Create payment link error:",t),e.json({error:"Failed to create payment link"},500)}});K.get("/templates/list",X,async e=>{try{const{env:t}=e,{pdfService:s}=_e(t),r=await s.getAvailableTemplates();return e.json({success:!0,templates:r})}catch(t){return console.error("Get templates error:",t),e.json({error:"Failed to get templates"},500)}});K.post("/templates/create",X,async e=>{try{const{env:t}=e,{pdfService:s}=_e(t),r=await e.req.json(),i=e.get("user");if(i.user_type!=="worker"&&i.role!=="admin")return e.json({error:"Only service providers can create templates"},403);const a=await s.createTemplate(r);return e.json(a)}catch(t){return console.error("Create template error:",t),e.json({error:"Failed to create template"},500)}});K.post("/admin/process-recurring",X,async e=>{try{const{env:t}=e,{recurringService:s}=_e(t);if(e.get("user").role!=="admin")return e.json({error:"Admin access required"},403);const i=await s.processRecurringInvoices();return e.json({success:!0,results:i})}catch(t){return console.error("Process recurring invoices error:",t),e.json({error:"Failed to process recurring invoices"},500)}});K.get("/admin/analytics",X,async e=>{try{const{env:t}=e;if(e.get("user").role!=="admin")return e.json({error:"Admin access required"},403);const r=e.req.query("period")||"monthly",i=parseInt(e.req.query("limit")||"12"),a=await t.DB.prepare(`
      SELECT * FROM invoice_analytics 
      WHERE period_type = ?
      ORDER BY report_date DESC
      LIMIT ?
    `).bind(r,i).all();return e.json({success:!0,analytics:a.results})}catch(t){return console.error("Get invoice analytics error:",t),e.json({error:"Failed to get analytics"},500)}});K.post("/:invoiceId/dispute",X,async e=>{try{const{env:t}=e,{InvoiceDisputeService:s}=await Promise.resolve().then(()=>rt),r=new Pe(t.STRIPE_SECRET_KEY,{apiVersion:"2024-11-20.acacia",typescript:!0}),i=new s(t.DB,r),a=parseInt(e.req.param("invoiceId")),n=await e.req.json(),o=e.get("user");if(!await t.DB.prepare(`
      SELECT * FROM invoices WHERE id = ? AND (client_id = ? OR worker_id = ?)
    `).bind(a,o.user_id,o.user_id).first())return e.json({error:"Invoice not found or access denied"},403);const d=await i.createDispute({invoice_id:a,dispute_type:n.dispute_type,dispute_category:n.dispute_category,title:n.title,reason:n.reason,description:n.description,amount_disputed:n.amount_disputed,priority:n.priority,evidence:n.evidence},o.user_id);return e.json(d)}catch(t){return console.error("Create invoice dispute error:",t),e.json({error:"Failed to create dispute"},500)}});K.get("/:invoiceId/disputes",X,async e=>{try{const{env:t}=e,{InvoiceDisputeService:s}=await Promise.resolve().then(()=>rt),r=new Pe(t.STRIPE_SECRET_KEY,{apiVersion:"2024-11-20.acacia",typescript:!0}),i=new s(t.DB,r),a=parseInt(e.req.param("invoiceId")),n=e.get("user");if(!await t.DB.prepare(`
      SELECT * FROM invoices WHERE id = ? AND (client_id = ? OR worker_id = ?)
    `).bind(a,n.user_id,n.user_id).first())return e.json({error:"Invoice not found or access denied"},403);const l=await t.DB.prepare(`
      SELECT * FROM invoice_disputes WHERE invoice_id = ? ORDER BY created_at DESC
    `).bind(a).all();return e.json({success:!0,disputes:l.results})}catch(t){return console.error("Get invoice disputes error:",t),e.json({error:"Failed to get disputes"},500)}});K.get("/disputes/:disputeId",X,async e=>{try{const{env:t}=e,{InvoiceDisputeService:s}=await Promise.resolve().then(()=>rt),r=new Pe(t.STRIPE_SECRET_KEY,{apiVersion:"2024-11-20.acacia",typescript:!0}),i=new s(t.DB,r),a=parseInt(e.req.param("disputeId")),n=e.get("user");if(!await t.DB.prepare(`
      SELECT * FROM invoice_disputes WHERE id = ? AND (client_id = ? OR worker_id = ?)
    `).bind(a,n.user_id,n.user_id).first())return e.json({error:"Dispute not found or access denied"},403);const l=await i.getDisputeById(a);return e.json(l)}catch(t){return console.error("Get dispute details error:",t),e.json({error:"Failed to get dispute details"},500)}});K.put("/disputes/:disputeId/status",X,async e=>{try{const{env:t}=e,{InvoiceDisputeService:s}=await Promise.resolve().then(()=>rt),r=new Pe(t.STRIPE_SECRET_KEY,{apiVersion:"2024-11-20.acacia",typescript:!0}),i=new s(t.DB,r),a=parseInt(e.req.param("disputeId")),{status:n,notes:o}=await e.req.json(),l=e.get("user");if(!await t.DB.prepare(`
      SELECT * FROM invoice_disputes WHERE id = ? AND (client_id = ? OR worker_id = ? OR ? = 'admin')
    `).bind(a,l.user_id,l.user_id,l.role).first())return e.json({error:"Dispute not found or access denied"},403);const c=await i.updateDisputeStatus(a,n,l.user_id,o);return e.json(c)}catch(t){return console.error("Update dispute status error:",t),e.json({error:"Failed to update dispute status"},500)}});K.post("/disputes/:disputeId/evidence",X,async e=>{try{const{env:t}=e,{InvoiceDisputeService:s}=await Promise.resolve().then(()=>rt),r=new Pe(t.STRIPE_SECRET_KEY,{apiVersion:"2024-11-20.acacia",typescript:!0}),i=new s(t.DB,r),a=parseInt(e.req.param("disputeId")),n=await e.req.json(),o=e.get("user");if(!await t.DB.prepare(`
      SELECT * FROM invoice_disputes WHERE id = ? AND (client_id = ? OR worker_id = ?)
    `).bind(a,o.user_id,o.user_id).first())return e.json({error:"Dispute not found or access denied"},403);const d=await i.addEvidence(a,o.user_id,n);return e.json(d)}catch(t){return console.error("Add dispute evidence error:",t),e.json({error:"Failed to add evidence"},500)}});K.post("/disputes/:disputeId/messages",X,async e=>{try{const{env:t}=e,{InvoiceDisputeService:s}=await Promise.resolve().then(()=>rt),r=new Pe(t.STRIPE_SECRET_KEY,{apiVersion:"2024-11-20.acacia",typescript:!0}),i=new s(t.DB,r),a=parseInt(e.req.param("disputeId")),n=await e.req.json(),o=e.get("user");if(!await t.DB.prepare(`
      SELECT * FROM invoice_disputes WHERE id = ? AND (client_id = ? OR worker_id = ?)
    `).bind(a,o.user_id,o.user_id).first())return e.json({error:"Dispute not found or access denied"},403);const d=await i.addMessage(a,o.user_id,n.recipient_id,n);return e.json(d)}catch(t){return console.error("Add dispute message error:",t),e.json({error:"Failed to add message"},500)}});K.post("/disputes/:disputeId/resolve",X,async e=>{try{const{env:t}=e,{InvoiceDisputeService:s}=await Promise.resolve().then(()=>rt),r=new Pe(t.STRIPE_SECRET_KEY,{apiVersion:"2024-11-20.acacia",typescript:!0}),i=new s(t.DB,r),a=parseInt(e.req.param("disputeId")),n=await e.req.json(),o=e.get("user");if(o.role!=="admin")return e.json({error:"Admin access required to resolve disputes"},403);const l=await i.resolveDispute(a,n,o.user_id);return e.json(l)}catch(t){return console.error("Resolve dispute error:",t),e.json({error:"Failed to resolve dispute"},500)}});K.get("/disputes/my/list",X,async e=>{try{const{env:t}=e,{InvoiceDisputeService:s}=await Promise.resolve().then(()=>rt),r=new Pe(t.STRIPE_SECRET_KEY,{apiVersion:"2024-11-20.acacia",typescript:!0}),i=new s(t.DB,r),a=e.get("user"),n=e.req.query("status"),o=parseInt(e.req.query("limit")||"20"),l=parseInt(e.req.query("offset")||"0"),d=await i.listDisputes({user_id:a.user_id,status:n,limit:o,offset:l});return e.json(d)}catch(t){return console.error("List user disputes error:",t),e.json({error:"Failed to list disputes"},500)}});K.get("/admin/disputes/list",X,async e=>{try{const{env:t}=e,{InvoiceDisputeService:s}=await Promise.resolve().then(()=>rt),r=new Pe(t.STRIPE_SECRET_KEY,{apiVersion:"2024-11-20.acacia",typescript:!0}),i=new s(t.DB,r);if(e.get("user").role!=="admin")return e.json({error:"Admin access required"},403);const n={status:e.req.query("status"),dispute_type:e.req.query("dispute_type"),priority:e.req.query("priority"),assigned_to:e.req.query("assigned_to")?parseInt(e.req.query("assigned_to")):void 0,limit:parseInt(e.req.query("limit")||"50"),offset:parseInt(e.req.query("offset")||"0")},o=await i.listDisputes(n);return e.json(o)}catch(t){return console.error("Admin list disputes error:",t),e.json({error:"Failed to list disputes"},500)}});K.get("/admin/disputes/analytics",X,async e=>{try{const{env:t}=e,{InvoiceDisputeService:s}=await Promise.resolve().then(()=>rt),r=new Pe(t.STRIPE_SECRET_KEY,{apiVersion:"2024-11-20.acacia",typescript:!0}),i=new s(t.DB,r);if(e.get("user").role!=="admin")return e.json({error:"Admin access required"},403);const n={start_date:e.req.query("start_date"),end_date:e.req.query("end_date"),dispute_type:e.req.query("dispute_type")},o=await i.getDisputeAnalytics(n);return e.json(o)}catch(t){return console.error("Dispute analytics error:",t),e.json({error:"Failed to get dispute analytics"},500)}});class tt{constructor(t,s){this.db=t,this.r2=s}async uploadFile(t){try{const s=this.validateFile(t);if(!s.isValid)return{success:!1,error:s.error};const r=this.generateStoredName(t.originalName),i=this.generateStoragePath(t.uploadedBy,r),a=await this.calculateFileHash(t.file),n=await this.findFileByHash(a,t.uploadedBy);if(n)return{success:!0,file:n,fileId:n.id};const o=t.file instanceof File?t.file.size:t.file.byteLength,l=await this.uploadToR2(i,t.file);if(!l.success)return{success:!1,error:l.error};const d=await this.storeFileMetadata({original_name:t.originalName,stored_name:r,file_size:o,mime_type:t.mimeType,file_hash:a,storage_path:i,uploaded_by:t.uploadedBy,upload_session_id:t.uploadSessionId,expires_at:t.expiresAt,is_public:t.isPublic||!1,virus_scan_status:"pending",processing_status:"pending"});return(t.conversationId||t.messageId)&&await this.associateFileWithMessage(d.id,t.conversationId,t.messageId),t.relatedEntityType&&t.relatedEntityId&&await this.associateFileWithEntity(d.id,t.relatedEntityType,t.relatedEntityId),await this.initiateBackgroundProcessing(d.id),{success:!0,file:d,fileId:d.id}}catch(s){return console.error("File upload failed:",s),{success:!1,error:s instanceof Error?s.message:"File upload failed"}}}async downloadFile(t,s){try{const r=await this.getFileById(t);if(!r)return{success:!1,error:"File not found"};if(!await this.checkFilePermission(t,s.userId,s.userRole,"download"))return{success:!1,error:"Access denied"};if(r.virus_scan_status==="infected")return{success:!1,error:"File infected by virus, download not allowed"};if(r.expires_at&&new Date(r.expires_at)<new Date)return{success:!1,error:"File has expired"};const a=await this.r2.get(r.storage_path);return a?(s.trackDownload&&await this.trackFileDownload(t,s.userId),{success:!0,file:await a.arrayBuffer(),metadata:r}):{success:!1,error:"File not found in storage"}}catch(r){return console.error("File download failed:",r),{success:!1,error:r instanceof Error?r.message:"File download failed"}}}async getFileDownloadUrl(t,s,r,i=3600){try{if(!await this.checkFilePermission(t,s,r,"download"))return{success:!1,error:"Access denied"};const n=await this.getFileById(t);return n?{success:!0,url:await this.generateSignedUrl(n.storage_path,i)}:{success:!1,error:"File not found"}}catch(a){return console.error("Failed to generate download URL:",a),{success:!1,error:a instanceof Error?a.message:"Failed to generate download URL"}}}async searchFiles(t){try{let s=`
        SELECT DISTINCT f.*, u.name as uploader_name
        FROM file_metadata f
        LEFT JOIN users u ON f.uploaded_by = u.id
        WHERE 1=1
      `;const r=[];let i=1;if(t.userRole!=="admin"&&(s+=` AND (f.is_public = 1 OR f.uploaded_by = ?${i} 
                   OR EXISTS (
                     SELECT 1 FROM file_permissions fp 
                     WHERE fp.file_id = f.id 
                     AND (fp.user_id = ?${i+1} OR fp.role = ?${i+2})
                     AND fp.permission_type IN ('view', 'download')
                     AND fp.is_active = 1
                     AND (fp.expires_at IS NULL OR fp.expires_at > datetime('now'))
                   ))`,r.push(t.userId,t.userId,t.userRole),i+=3),t.mimeTypes&&t.mimeTypes.length>0){const h=t.mimeTypes.map(()=>`?${i++}`).join(",");s+=` AND f.mime_type IN (${h})`,r.push(...t.mimeTypes)}if(t.uploadedBy&&(s+=` AND f.uploaded_by = ?${i++}`,r.push(t.uploadedBy)),t.conversationId&&(s+=` AND EXISTS (
          SELECT 1 FROM message_attachments ma 
          WHERE ma.file_id = f.id 
          AND ma.conversation_id = ?${i++}
        )`,r.push(t.conversationId)),t.relatedEntityType&&t.relatedEntityId&&(s+=` AND EXISTS (
          SELECT 1 FROM file_entity_associations fea 
          WHERE fea.file_id = f.id 
          AND fea.entity_type = ?${i++}
          AND fea.entity_id = ?${i++}
        )`,r.push(t.relatedEntityType,t.relatedEntityId)),t.isPublic!==void 0&&(s+=` AND f.is_public = ?${i++}`,r.push(t.isPublic?1:0)),t.virusScanStatus&&(s+=` AND f.virus_scan_status = ?${i++}`,r.push(t.virusScanStatus)),t.processingStatus&&(s+=` AND f.processing_status = ?${i++}`,r.push(t.processingStatus)),t.minFileSize&&(s+=` AND f.file_size >= ?${i++}`,r.push(t.minFileSize)),t.maxFileSize&&(s+=` AND f.file_size <= ?${i++}`,r.push(t.maxFileSize)),t.uploadedAfter&&(s+=` AND f.created_at >= ?${i++}`,r.push(t.uploadedAfter)),t.uploadedBefore&&(s+=` AND f.created_at <= ?${i++}`,r.push(t.uploadedBefore)),t.search){s+=` AND (f.original_name LIKE ?${i++} OR f.mime_type LIKE ?${i++})`;const h=`%${t.search}%`;r.push(h,h)}const a=t.sortBy||"created_at",n=t.sortOrder||"DESC";s+=` ORDER BY f.${a} ${n}`;const o=t.limit||50,l=t.offset||0;s+=` LIMIT ?${i++} OFFSET ?${i++}`,r.push(o+1,l);const u=(await this.db.prepare(s).bind(...r).all()).results,p=u.length>o;p&&u.pop();let m=s.replace(/SELECT DISTINCT f\.\*, u\.name as uploader_name/,"SELECT COUNT(DISTINCT f.id) as total");m=m.replace(/ORDER BY.*$/,"").replace(/LIMIT.*$/,"");const b=r.slice(0,-2),f=await this.db.prepare(m).bind(...b).first();return{files:u,total:f.total,hasMore:p}}catch(s){throw console.error("File search failed:",s),new Error("Failed to search files")}}async deleteFile(t,s,r){try{if(!await this.checkFilePermission(t,s,r,"delete"))return{success:!1,error:"Access denied"};const a=await this.getFileById(t);return a?(await this.r2.delete(a.storage_path),a.thumbnail_path&&await this.r2.delete(a.thumbnail_path),a.preview_path&&await this.r2.delete(a.preview_path),await this.db.prepare(`
        DELETE FROM file_metadata WHERE id = ?
      `).bind(t).run(),{success:!0}):{success:!1,error:"File not found"}}catch(i){return console.error("File deletion failed:",i),{success:!1,error:i instanceof Error?i.message:"File deletion failed"}}}async updateFilePermissions(t,s,r,i){try{if(!(await this.checkFilePermission(t,s,r,"share")||await this.isFileOwner(t,s)||r==="admin"))return{success:!1,error:"Access denied"};await this.db.prepare("BEGIN TRANSACTION").run();try{await this.db.prepare(`
          UPDATE file_permissions 
          SET is_active = 0 
          WHERE file_id = ?
        `).bind(t).run();for(const n of i)await this.db.prepare(`
            INSERT INTO file_permissions (
              file_id, user_id, role, permission_type, granted_by, 
              granted_at, expires_at, is_active
            ) VALUES (?, ?, ?, ?, ?, datetime('now'), ?, 1)
          `).bind(t,n.user_id||null,n.role||null,n.permission_type,s,n.expires_at||null).run();return await this.db.prepare("COMMIT").run(),{success:!0}}catch(n){throw await this.db.prepare("ROLLBACK").run(),n}}catch(a){return console.error("Failed to update file permissions:",a),{success:!1,error:a instanceof Error?a.message:"Failed to update permissions"}}}async getFileStatistics(t,s){try{const r=s==="admin",i=r?"":`WHERE f.uploaded_by = ${t} OR f.is_public = 1`,a=`
        SELECT 
          COUNT(*) as total_files,
          SUM(f.file_size) as total_size
        FROM file_metadata f
        ${i}
      `,n=await this.db.prepare(a).first(),o=`
        SELECT 
          f.mime_type,
          COUNT(*) as count
        FROM file_metadata f
        ${i}
        GROUP BY f.mime_type
        ORDER BY count DESC
      `,l=await this.db.prepare(o).all(),d={};l.results.forEach(x=>{d[x.mime_type]=x.count});const c=`
        SELECT 
          strftime('%Y-%m', f.created_at) as month,
          COUNT(*) as count
        FROM file_metadata f
        ${i}
        GROUP BY month
        ORDER BY month DESC
        LIMIT 12
      `,u=await this.db.prepare(c).all(),p={};u.results.forEach(x=>{p[x.month]=x.count});let m=[];r&&(m=(await this.db.prepare(`
          SELECT 
            f.uploaded_by as user_id,
            u.name as user_name,
            COUNT(*) as file_count
          FROM file_metadata f
          JOIN users u ON f.uploaded_by = u.id
          GROUP BY f.uploaded_by, u.name
          ORDER BY file_count DESC
          LIMIT 10
        `).all()).results.map(R=>({userId:R.user_id,userName:R.user_name,fileCount:R.file_count})));const b=r?`
        SELECT 
          f.uploaded_by as user_id,
          SUM(f.file_size) as storage_used
        FROM file_metadata f
        GROUP BY f.uploaded_by
      `:`
        SELECT 
          ${t} as user_id,
          SUM(f.file_size) as storage_used
        FROM file_metadata f
        WHERE f.uploaded_by = ${t}
      `,v=await this.db.prepare(b).all(),f={};v.results.forEach(x=>{f[x.user_id]=x.storage_used||0});const h=`
        SELECT 
          'upload' as action,
          f.original_name as file_name,
          f.uploaded_by as user_id,
          u.name as user_name,
          f.created_at as timestamp
        FROM file_metadata f
        JOIN users u ON f.uploaded_by = u.id
        ${i}
        ORDER BY f.created_at DESC
        LIMIT 20
      `,w=(await this.db.prepare(h).all()).results.map(x=>({action:x.action,fileName:x.file_name,userId:x.user_id,userName:x.user_name,timestamp:x.timestamp}));return{totalFiles:n.total_files,totalSize:n.total_size,filesByType:d,uploadsByMonth:p,topUploaders:m,storageUsageByUser:f,recentActivity:w}}catch(r){throw console.error("Failed to get file statistics:",r),new Error("Failed to get file statistics")}}async bulkFileOperation(t,s,r){var i;try{const a=[],n=[];for(const o of t.fileIds)try{switch(t.operation){case"delete":const l=await this.deleteFile(o,s,r);l.success?a.push({fileId:o,status:"deleted"}):n.push(`File ${o}: ${l.error}`);break;case"update_permissions":if((i=t.parameters)!=null&&i.permissions){const d=await this.updateFilePermissions(o,s,r,t.parameters.permissions);d.success?a.push({fileId:o,status:"permissions_updated"}):n.push(`File ${o}: ${d.error}`)}break;default:n.push(`File ${o}: Unsupported operation ${t.operation}`)}}catch(l){n.push(`File ${o}: ${l instanceof Error?l.message:"Unknown error"}`)}return{success:n.length===0,results:a,errors:n}}catch(a){return console.error("Bulk file operation failed:",a),{success:!1,results:[],errors:[a instanceof Error?a.message:"Bulk operation failed"]}}}validateFile(t){const r=["application/pdf","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.ms-excel","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.ms-powerpoint","application/vnd.openxmlformats-officedocument.presentationml.presentation","text/plain","text/csv","image/jpeg","image/png","image/gif","image/webp","image/svg+xml","application/zip","application/x-rar-compressed","application/x-7z-compressed","application/json"];return(t.file instanceof File?t.file.size:t.file.byteLength)>104857600?{isValid:!1,error:"File size exceeds maximum allowed size (100MB)"}:r.includes(t.mimeType)?{isValid:!0}:{isValid:!1,error:"File type not allowed"}}generateStoredName(t){const s=Date.now(),r=Math.random().toString(36).substring(2,15),i=t.split(".").pop()||"";return`${s}_${r}.${i}`}generateStoragePath(t,s){const r=Math.floor(t/1e3)*1e3,i=new Date().toISOString().substring(0,7);return`files/${r}/${i}/${s}`}async calculateFileHash(t){const s=t instanceof File?await t.arrayBuffer():t,r=new Uint8Array(s);let i=0;for(let a=0;a<r.length;a++){const n=r[a];i=(i<<5)-i+n,i=i&i}return Math.abs(i).toString(16)}async findFileByHash(t,s){return await this.db.prepare(`
      SELECT * FROM file_metadata 
      WHERE file_hash = ? AND uploaded_by = ?
      ORDER BY created_at DESC
      LIMIT 1
    `).bind(t,s).first()}async uploadToR2(t,s){try{const r=s instanceof File?await s.arrayBuffer():s;return await this.r2.put(t,r),{success:!0}}catch(r){return{success:!1,error:r instanceof Error?r.message:"R2 upload failed"}}}async storeFileMetadata(t){return await this.db.prepare(`
      INSERT INTO file_metadata (
        original_name, stored_name, file_size, mime_type, file_hash,
        storage_path, uploaded_by, upload_session_id, created_at,
        expires_at, is_public, download_count, virus_scan_status,
        processing_status, thumbnail_path, preview_path
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, datetime('now'), ?, ?, 0, ?, ?, ?, ?)
      RETURNING *
    `).bind(t.original_name,t.stored_name,t.file_size,t.mime_type,t.file_hash,t.storage_path,t.uploaded_by,t.upload_session_id||null,t.expires_at||null,t.is_public?1:0,t.virus_scan_status,t.processing_status,t.thumbnail_path||null,t.preview_path||null).first()}async associateFileWithMessage(t,s,r){(s||r)&&await this.db.prepare(`
        INSERT INTO message_attachments (
          conversation_id, message_id, file_id, attached_at
        ) VALUES (?, ?, ?, datetime('now'))
      `).bind(s||null,r||null,t).run()}async associateFileWithEntity(t,s,r){await this.db.prepare(`
      INSERT OR IGNORE INTO file_entity_associations (
        file_id, entity_type, entity_id, created_at
      ) VALUES (?, ?, ?, datetime('now'))
    `).bind(t,s,r).run()}async initiateBackgroundProcessing(t){await this.db.prepare(`
      UPDATE file_metadata 
      SET processing_status = 'completed', virus_scan_status = 'clean'
      WHERE id = ?
    `).bind(t).run()}async getFileById(t){return await this.db.prepare(`
      SELECT * FROM file_metadata WHERE id = ?
    `).bind(t).first()}async checkFilePermission(t,s,r,i){if(r==="admin"||await this.isFileOwner(t,s))return!0;if(i==="view"||i==="download"){const o=await this.getFileById(t);if(o!=null&&o.is_public)return!0}return(await this.db.prepare(`
      SELECT COUNT(*) as count FROM file_permissions
      WHERE file_id = ? 
      AND (user_id = ? OR role = ?)
      AND permission_type = ?
      AND is_active = 1
      AND (expires_at IS NULL OR expires_at > datetime('now'))
    `).bind(t,s,r,i).first()).count>0}async isFileOwner(t,s){return(await this.db.prepare(`
      SELECT COUNT(*) as count FROM file_metadata
      WHERE id = ? AND uploaded_by = ?
    `).bind(t,s).first()).count>0}async trackFileDownload(t,s){await this.db.prepare(`
      UPDATE file_metadata 
      SET download_count = download_count + 1,
          last_downloaded_at = datetime('now')
      WHERE id = ?
    `).bind(t).run(),await this.db.prepare(`
      INSERT INTO file_download_logs (
        file_id, downloaded_by, downloaded_at, ip_address
      ) VALUES (?, ?, datetime('now'), ?)
    `).bind(t,s,null).run()}async generateSignedUrl(t,s){const r=Date.now()+s*1e3;return`/api/files/download/${encodeURIComponent(t)}?expires=${r}`}}function yi(e){if(e===0)return"0 Bytes";const t=1024,s=["Bytes","KB","MB","GB","TB"],r=Math.floor(Math.log(e)/Math.log(t));return parseFloat((e/Math.pow(t,r)).toFixed(2))+" "+s[r]}function v0(e){return e.startsWith("image/")?"image":e.startsWith("video/")?"video":e.startsWith("audio/")?"audio":e.includes("pdf")?"pdf":e.includes("word")||e.includes("document")?"document":e.includes("excel")||e.includes("spreadsheet")?"spreadsheet":e.includes("powerpoint")||e.includes("presentation")?"presentation":e.includes("zip")||e.includes("rar")||e.includes("7z")?"archive":"other"}function Sn(e){const t=v0(e),s={image:"fas fa-image",video:"fas fa-video",audio:"fas fa-music",pdf:"fas fa-file-pdf",document:"fas fa-file-word",spreadsheet:"fas fa-file-excel",presentation:"fas fa-file-powerpoint",archive:"fas fa-file-archive",other:"fas fa-file"};return s[t]||s.other}const Me=new ce;Me.use("*",tn());Me.post("/upload",async e=>{try{const{DB:t,R2:s}=e.env,r=new tt(t,s),i=parseInt(e.req.header("X-User-ID")||"0"),a=e.req.header("X-User-Role")||"client";if(!i)return e.json({success:!1,error:"Authentication required"},401);const n=await e.req.parseBody(),o=n.file,l=n.conversationId?parseInt(n.conversationId):void 0,d=n.messageId?parseInt(n.messageId):void 0,c=n.relatedEntityType||void 0,u=n.relatedEntityId?parseInt(n.relatedEntityId):void 0,p=n.isPublic==="true",m=n.expiresAt||void 0;if(!o||!(o instanceof File))return e.json({success:!1,error:"No file provided"},400);const b={file:o,originalName:o.name,mimeType:o.type,uploadedBy:i,isPublic:p,expiresAt:m,conversationId:l,messageId:d,relatedEntityType:c,relatedEntityId:u},v=await r.uploadFile(b);return v.success?e.json({success:!0,file:v.file,fileId:v.fileId,message:"File uploaded successfully"}):e.json({success:!1,error:v.error},400)}catch(t){return console.error("File upload error:",t),e.json({success:!1,error:"Internal server error during file upload"},500)}});Me.post("/upload-multiple",async e=>{try{const{DB:t,R2:s}=e.env,r=new tt(t,s),i=parseInt(e.req.header("X-User-ID")||"0"),a=e.req.header("X-User-Role")||"client";if(!i)return e.json({success:!1,error:"Authentication required"},401);const n=await e.req.parseBody(),o=Object.values(n).filter(v=>v instanceof File),l=n.conversationId?parseInt(n.conversationId):void 0,d=n.messageId?parseInt(n.messageId):void 0,c=n.relatedEntityType||void 0,u=n.relatedEntityId?parseInt(n.relatedEntityId):void 0,p=n.isPublic==="true";if(o.length===0)return e.json({success:!1,error:"No files provided"},400);const m=[],b=[];for(const v of o)try{const f={file:v,originalName:v.name,mimeType:v.type,uploadedBy:i,isPublic:p,conversationId:l,messageId:d,relatedEntityType:c,relatedEntityId:u},h=await r.uploadFile(f);h.success?m.push({fileName:v.name,fileId:h.fileId,file:h.file}):b.push({fileName:v.name,error:h.error})}catch(f){b.push({fileName:v.name,error:f instanceof Error?f.message:"Upload failed"})}return e.json({success:b.length===0,uploaded:m,errors:b,totalFiles:o.length,successCount:m.length,errorCount:b.length})}catch(t){return console.error("Multiple file upload error:",t),e.json({success:!1,error:"Internal server error during multiple file upload"},500)}});Me.get("/:fileId/download",async e=>{try{const{DB:t,R2:s}=e.env,r=new tt(t,s),i=parseInt(e.req.param("fileId")),a=parseInt(e.req.header("X-User-ID")||"0"),n=e.req.header("X-User-Role")||"client",o=e.req.query("inline")==="true";if(!a)return e.json({success:!1,error:"Authentication required"},401);const l=await r.downloadFile(i,{userId:a,userRole:n,trackDownload:!0,inline:o});if(l.success&&l.file&&l.metadata){const d=o?"inline":"attachment";return new Response(l.file,{headers:{"Content-Type":l.metadata.mime_type,"Content-Length":l.metadata.file_size.toString(),"Content-Disposition":`${d}; filename="${l.metadata.original_name}"`,"Cache-Control":"private, max-age=3600"}})}else return e.json({success:!1,error:l.error},404)}catch(t){return console.error("File download error:",t),e.json({success:!1,error:"Internal server error during file download"},500)}});Me.get("/:fileId/download-url",async e=>{try{const{DB:t,R2:s}=e.env,r=new tt(t,s),i=parseInt(e.req.param("fileId")),a=parseInt(e.req.header("X-User-ID")||"0"),n=e.req.header("X-User-Role")||"client",o=parseInt(e.req.query("expires")||"3600");if(!a)return e.json({success:!1,error:"Authentication required"},401);const l=await r.getFileDownloadUrl(i,a,n,o);return l.success?e.json({success:!0,downloadUrl:l.url,expiresIn:o,expiresAt:new Date(Date.now()+o*1e3).toISOString()}):e.json({success:!1,error:l.error},404)}catch(t){return console.error("Download URL generation error:",t),e.json({success:!1,error:"Internal server error generating download URL"},500)}});Me.get("/search",async e=>{var t;try{const{DB:s,R2:r}=e.env,i=new tt(s,r),a=parseInt(e.req.header("X-User-ID")||"0"),n=e.req.header("X-User-Role")||"client";if(!a)return e.json({success:!1,error:"Authentication required"},401);const o={userId:a,userRole:n,mimeTypes:(t=e.req.query("mimeTypes"))==null?void 0:t.split(","),uploadedBy:e.req.query("uploadedBy")?parseInt(e.req.query("uploadedBy")):void 0,conversationId:e.req.query("conversationId")?parseInt(e.req.query("conversationId")):void 0,relatedEntityType:e.req.query("relatedEntityType"),relatedEntityId:e.req.query("relatedEntityId")?parseInt(e.req.query("relatedEntityId")):void 0,isPublic:e.req.query("isPublic")?e.req.query("isPublic")==="true":void 0,virusScanStatus:e.req.query("virusScanStatus"),processingStatus:e.req.query("processingStatus"),minFileSize:e.req.query("minFileSize")?parseInt(e.req.query("minFileSize")):void 0,maxFileSize:e.req.query("maxFileSize")?parseInt(e.req.query("maxFileSize")):void 0,uploadedAfter:e.req.query("uploadedAfter"),uploadedBefore:e.req.query("uploadedBefore"),search:e.req.query("search"),sortBy:e.req.query("sortBy")||"created_at",sortOrder:e.req.query("sortOrder")||"DESC",limit:e.req.query("limit")?parseInt(e.req.query("limit")):50,offset:e.req.query("offset")?parseInt(e.req.query("offset")):0},l=await i.searchFiles(o),d=l.files.map(c=>({...c,formattedSize:yi(c.file_size),fileIcon:Sn(c.mime_type),downloadUrl:`/api/files/${c.id}/download`,previewUrl:c.mime_type.startsWith("image/")?`/api/files/${c.id}/download?inline=true`:null}));return e.json({success:!0,files:d,total:l.total,hasMore:l.hasMore,pagination:{limit:o.limit,offset:o.offset,total:l.total}})}catch(s){return console.error("File search error:",s),e.json({success:!1,error:"Internal server error during file search"},500)}});Me.get("/:fileId",async e=>{try{const{DB:t,R2:s}=e.env,r=new tt(t,s),i=parseInt(e.req.param("fileId")),a=parseInt(e.req.header("X-User-ID")||"0"),n=e.req.header("X-User-Role")||"client";if(!a)return e.json({success:!1,error:"Authentication required"},401);const l=await e.env.DB.prepare(`
      SELECT f.*, u.name as uploader_name
      FROM file_metadata f
      LEFT JOIN users u ON f.uploaded_by = u.id
      WHERE f.id = ?
    `).bind(i).first();if(!l)return e.json({success:!1,error:"File not found"},404);if(!(n==="admin"||l.uploaded_by===a||l.is_public===1))return e.json({success:!1,error:"Access denied"},403);const c={...l,formattedSize:yi(l.file_size),fileIcon:Sn(l.mime_type),downloadUrl:`/api/files/${l.id}/download`,previewUrl:l.mime_type.startsWith("image/")?`/api/files/${l.id}/download?inline=true`:null};return e.json({success:!0,file:c})}catch(t){return console.error("Get file metadata error:",t),e.json({success:!1,error:"Internal server error getting file metadata"},500)}});Me.delete("/:fileId",async e=>{try{const{DB:t,R2:s}=e.env,r=new tt(t,s),i=parseInt(e.req.param("fileId")),a=parseInt(e.req.header("X-User-ID")||"0"),n=e.req.header("X-User-Role")||"client";if(!a)return e.json({success:!1,error:"Authentication required"},401);const o=await r.deleteFile(i,a,n);return o.success?e.json({success:!0,message:"File deleted successfully"}):e.json({success:!1,error:o.error},403)}catch(t){return console.error("File deletion error:",t),e.json({success:!1,error:"Internal server error during file deletion"},500)}});Me.put("/:fileId/permissions",async e=>{try{const{DB:t,R2:s}=e.env,r=new tt(t,s),i=parseInt(e.req.param("fileId")),a=parseInt(e.req.header("X-User-ID")||"0"),n=e.req.header("X-User-Role")||"client";if(!a)return e.json({success:!1,error:"Authentication required"},401);const o=await e.req.json(),{permissions:l}=o;if(!l||!Array.isArray(l))return e.json({success:!1,error:"Invalid permissions data"},400);const d=await r.updateFilePermissions(i,a,n,l);return d.success?e.json({success:!0,message:"File permissions updated successfully"}):e.json({success:!1,error:d.error},403)}catch(t){return console.error("Permission update error:",t),e.json({success:!1,error:"Internal server error updating permissions"},500)}});Me.get("/stats",async e=>{try{const{DB:t,R2:s}=e.env,r=new tt(t,s),i=parseInt(e.req.header("X-User-ID")||"0"),a=e.req.header("X-User-Role")||"client";if(!i)return e.json({success:!1,error:"Authentication required"},401);const n=await r.getFileStatistics(i,a);return e.json({success:!0,stats:{...n,totalSizeFormatted:yi(n.totalSize)}})}catch(t){return console.error("Get file stats error:",t),e.json({success:!1,error:"Internal server error getting file statistics"},500)}});Me.post("/bulk",async e=>{try{const{DB:t,R2:s}=e.env,r=new tt(t,s),i=parseInt(e.req.header("X-User-ID")||"0"),a=e.req.header("X-User-Role")||"client";if(!i)return e.json({success:!1,error:"Authentication required"},401);const n=await e.req.json(),{operation:o,fileIds:l,parameters:d}=n;if(!o||!l||!Array.isArray(l))return e.json({success:!1,error:"Invalid bulk operation data"},400);const c={fileIds:l,operation:o,parameters:d},u=await r.bulkFileOperation(c,i,a);return e.json({success:u.success,results:u.results,errors:u.errors,summary:{total:l.length,successful:u.results.length,failed:u.errors.length}})}catch(t){return console.error("Bulk operation error:",t),e.json({success:!1,error:"Internal server error during bulk operation"},500)}});Me.get("/conversation/:conversationId",async e=>{try{const{DB:t,R2:s}=e.env,r=new tt(t,s),i=parseInt(e.req.param("conversationId")),a=parseInt(e.req.header("X-User-ID")||"0"),n=e.req.header("X-User-Role")||"client";if(!a)return e.json({success:!1,error:"Authentication required"},401);const o=await r.searchFiles({userId:a,userRole:n,conversationId:i,sortBy:"created_at",sortOrder:"DESC"}),l=o.files.map(d=>({...d,formattedSize:yi(d.file_size),fileIcon:Sn(d.mime_type),downloadUrl:`/api/files/${d.id}/download`,previewUrl:d.mime_type.startsWith("image/")?`/api/files/${d.id}/download?inline=true`:null}));return e.json({success:!0,files:l,total:o.total})}catch(t){return console.error("Get conversation files error:",t),e.json({success:!1,error:"Internal server error getting conversation files"},500)}});class as{constructor(t){this.db=t}async createNotification(t){var s;try{const r=await this.getUserPreferences(t.userId,t.notificationType);if(!r.enabled)return{success:!1,error:"User has disabled this notification type"};const i=((s=t.channels)==null?void 0:s.filter(n=>r.channels.includes(n)))||r.channels||["in_app"];if(i.length===0)return{success:!1,error:"No enabled channels for this notification"};if(r.frequency_limit&&await this.getRecentNotificationCount(t.userId,t.notificationType)>=r.frequency_limit)return{success:!1,error:"Frequency limit exceeded for this notification type"};const a=[];for(const n of i){const o=await this.createSingleNotification({...t,channel:n,preferences:r});a.push(o)}if(r.batch_delivery&&channel!=="in_app")await this.scheduleBatchDelivery(t.userId,a);else for(const n of a)await this.sendNotification(n);return{success:!0,notification:a[0]}}catch(r){return console.error("Failed to create notification:",r),{success:!1,error:r instanceof Error?r.message:"Failed to create notification"}}}async sendNotification(t){try{let s=!1;switch(t.channel){case"in_app":s=await this.sendInAppNotification(t);break;case"email":s=await this.sendEmailNotification(t);break;case"sms":s=await this.sendSMSNotification(t);break;case"push":s=await this.sendPushNotification(t);break;case"webhook":s=await this.sendWebhookNotification(t);break;default:throw new Error(`Unsupported notification channel: ${t.channel}`)}const r=s?"sent":"failed";return await this.updateNotificationStatus(t.id,r,s?null:"Delivery failed"),{success:s}}catch(s){return console.error("Failed to send notification:",s),await this.updateNotificationStatus(t.id,"failed",s instanceof Error?s.message:"Send failed"),{success:!1,error:s instanceof Error?s.message:"Failed to send notification"}}}async getUserNotifications(t){try{let s=`
        SELECT n.*, u.name as related_user_name
        FROM communication_notifications n
        LEFT JOIN users u ON n.related_entity_id = u.id AND n.related_entity_type = 'user'
        WHERE n.user_id = ?
      `;const r=[t.userId];let i=2;if(t.notificationTypes&&t.notificationTypes.length>0){const w=t.notificationTypes.map(()=>`?${i++}`).join(",");s+=` AND n.notification_type IN (${w})`,r.push(...t.notificationTypes)}if(t.channels&&t.channels.length>0){const w=t.channels.map(()=>`?${i++}`).join(",");s+=` AND n.channel IN (${w})`,r.push(...t.channels)}if(t.statuses&&t.statuses.length>0){const w=t.statuses.map(()=>`?${i++}`).join(",");s+=` AND n.status IN (${w})`,r.push(...t.statuses)}if(t.priorities&&t.priorities.length>0){const w=t.priorities.map(()=>`?${i++}`).join(",");s+=` AND n.priority IN (${w})`,r.push(...t.priorities)}if(t.unreadOnly&&(s+=" AND n.read_at IS NULL"),t.relatedEntityType&&t.relatedEntityId&&(s+=` AND n.related_entity_type = ?${i++} AND n.related_entity_id = ?${i++}`,r.push(t.relatedEntityType,t.relatedEntityId)),t.createdAfter&&(s+=` AND n.created_at >= ?${i++}`,r.push(t.createdAfter)),t.createdBefore&&(s+=` AND n.created_at <= ?${i++}`,r.push(t.createdBefore)),t.search){s+=` AND (n.title LIKE ?${i++} OR n.message LIKE ?${i++})`;const w=`%${t.search}%`;r.push(w,w)}const a=t.sortBy||"created_at",n=t.sortOrder||"DESC";s+=` ORDER BY n.${a} ${n}`;const o=t.limit||50,l=t.offset||0;s+=` LIMIT ?${i++} OFFSET ?${i++}`,r.push(o+1,l);const u=(await this.db.prepare(s).bind(...r).all()).results,p=u.length>o;p&&u.pop();let m=s.replace(/SELECT n\.\*, u\.name as related_user_name/,"SELECT COUNT(*) as total");m=m.replace(/ORDER BY.*$/,"").replace(/LIMIT.*$/,"");const b=r.slice(0,-2),f=await this.db.prepare(m).bind(...b).first(),y=await this.db.prepare(`
        SELECT COUNT(*) as unread_count 
        FROM communication_notifications 
        WHERE user_id = ? AND read_at IS NULL
      `).bind(t.userId).first();return{notifications:u,total:f.total,unreadCount:y.unread_count,hasMore:p}}catch(s){throw console.error("Failed to get user notifications:",s),new Error("Failed to get notifications")}}async markNotificationsAsRead(t,s){try{if(t.length===0)return{success:!0};const r=t.map((a,n)=>`?${n+2}`).join(",");return await this.db.prepare(`
        UPDATE communication_notifications 
        SET read_at = datetime('now'),
            status = CASE 
              WHEN status = 'sent' THEN 'read'
              WHEN status = 'delivered' THEN 'read'
              ELSE status 
            END
        WHERE id IN (${r}) AND user_id = ?1
      `).bind(s,...t).run(),{success:!0}}catch(r){return console.error("Failed to mark notifications as read:",r),{success:!1,error:r instanceof Error?r.message:"Failed to mark notifications as read"}}}async markAllAsRead(t){try{return await this.db.prepare(`
        UPDATE communication_notifications 
        SET read_at = datetime('now'),
            status = CASE 
              WHEN status = 'sent' THEN 'read'
              WHEN status = 'delivered' THEN 'read'
              ELSE status 
            END
        WHERE user_id = ? AND read_at IS NULL
      `).bind(t).run(),{success:!0}}catch(s){return console.error("Failed to mark all notifications as read:",s),{success:!1,error:s instanceof Error?s.message:"Failed to mark all notifications as read"}}}async updateNotificationPreferences(t,s,r){try{return await this.db.prepare(`
        INSERT OR REPLACE INTO communication_preferences (
          user_id, notification_type, channels, enabled, quiet_hours_start, 
          quiet_hours_end, frequency_limit, batch_delivery, updated_at
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, datetime('now'))
      `).bind(t,s,JSON.stringify(r.channels||["in_app"]),r.enabled!==!1?1:0,r.quiet_hours_start||null,r.quiet_hours_end||null,r.frequency_limit||null,r.batch_delivery?1:0).run(),{success:!0}}catch(i){return console.error("Failed to update notification preferences:",i),{success:!1,error:i instanceof Error?i.message:"Failed to update preferences"}}}async getUserPreferences(t,s){try{let r=`
        SELECT * FROM communication_preferences 
        WHERE user_id = ?
      `;const i=[t];s&&(r+=" AND notification_type = ?",i.push(s)),r+=" ORDER BY updated_at DESC LIMIT 1";const n=await this.db.prepare(r).bind(...i).first();return n?{...n,channels:JSON.parse(n.channels||'["in_app"]'),enabled:n.enabled===1,batch_delivery:n.batch_delivery===1}:{user_id:t,notification_type:s||"message",channels:["in_app"],enabled:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}}catch(r){return console.error("Failed to get user preferences:",r),{user_id:t,notification_type:s||"message",channels:["in_app"],enabled:!0,created_at:new Date().toISOString(),updated_at:new Date().toISOString()}}}async getNotificationAnalytics(t,s,r){try{const a=s==="admin"?"":`WHERE n.user_id = ${t}`,n=r?`${a?"AND":"WHERE"} n.created_at BETWEEN '${r.start}' AND '${r.end}'`:"",o=`
        SELECT 
          COUNT(*) as total_notifications,
          SUM(CASE WHEN n.read_at IS NULL THEN 1 ELSE 0 END) as unread_count
        FROM communication_notifications n
        ${a} ${n}
      `,l=await this.db.prepare(o).first(),d=`
        SELECT 
          n.channel,
          COUNT(*) as total,
          SUM(CASE WHEN n.status = 'sent' OR n.status = 'delivered' OR n.status = 'read' THEN 1 ELSE 0 END) as delivered,
          SUM(CASE WHEN n.status = 'failed' THEN 1 ELSE 0 END) as failed
        FROM communication_notifications n
        ${a} ${n}
        GROUP BY n.channel
      `,c=await this.db.prepare(d).all(),u={};c.results.forEach(I=>{const j=I.total>0?I.delivered/I.total*100:0;u[I.channel]={sent:I.total,delivered:I.delivered,failed:I.failed,deliveryRate:Math.round(j*100)/100}});const p=`
        SELECT n.notification_type, COUNT(*) as count
        FROM communication_notifications n
        ${a} ${n}
        GROUP BY n.notification_type
        ORDER BY count DESC
      `,m=await this.db.prepare(p).all(),b={};m.results.forEach(I=>{b[I.notification_type]=I.count});const v=`
        SELECT n.priority, COUNT(*) as count
        FROM communication_notifications n
        ${a} ${n}
        GROUP BY n.priority
      `,f=await this.db.prepare(v).all(),h={};f.results.forEach(I=>{h[I.priority]=I.count});const y=`
        SELECT 
          date(n.created_at) as date,
          n.notification_type as type,
          COUNT(*) as count
        FROM communication_notifications n
        ${a}
        WHERE n.created_at >= datetime('now', '-7 days')
        GROUP BY date(n.created_at), n.notification_type
        ORDER BY date DESC
      `,x=(await this.db.prepare(y).all()).results.map(I=>({type:I.type,count:I.count,date:I.date})),S=`
        SELECT 
          COUNT(*) as total,
          SUM(CASE WHEN n.read_at IS NOT NULL THEN 1 ELSE 0 END) as read_count,
          SUM(CASE WHEN n.clicked_at IS NOT NULL THEN 1 ELSE 0 END) as clicked_count,
          AVG(CASE 
            WHEN n.read_at IS NOT NULL AND n.sent_at IS NOT NULL 
            THEN (julianday(n.read_at) - julianday(n.sent_at)) * 24 * 60 
            ELSE NULL 
          END) as avg_read_time_minutes
        FROM communication_notifications n
        ${a} ${n}
        AND n.status IN ('sent', 'delivered', 'read')
      `,R=await this.db.prepare(S).first(),C=R.total>0?R.read_count/R.total*100:0,N=R.read_count>0?R.clicked_count/R.read_count*100:0;return{totalNotifications:l.total_notifications,unreadCount:l.unread_count,deliveryStats:u,typeStats:b,priorityStats:h,recentActivity:x,engagementStats:{readRate:Math.round(C*100)/100,clickRate:Math.round(N*100)/100,averageReadTime:Math.round((R.avg_read_time_minutes||0)*100)/100}}}catch(i){throw console.error("Failed to get notification analytics:",i),new Error("Failed to get notification analytics")}}async createSingleNotification(t){return await this.db.prepare(`
      INSERT INTO communication_notifications (
        user_id, notification_type, channel, title, message, data,
        priority, status, scheduled_for, expires_at, related_entity_type,
        related_entity_id, template_id, delivery_attempts, created_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, 'pending', ?, ?, ?, ?, ?, 0, datetime('now'))
      RETURNING *
    `).bind(t.userId,t.notificationType,t.channel,t.title,t.message,JSON.stringify(t.data||{}),t.priority||"medium",t.scheduledFor||null,t.expiresAt||null,t.relatedEntityType||null,t.relatedEntityId||null,t.templateId||null).first()}async getRecentNotificationCount(t,s){return(await this.db.prepare(`
      SELECT COUNT(*) as count 
      FROM communication_notifications 
      WHERE user_id = ? 
      AND notification_type = ? 
      AND created_at >= datetime('now', '-1 hour')
    `).bind(t,s).first()).count}async scheduleBatchDelivery(t,s){for(const r of s)await this.db.prepare(`
        UPDATE communication_notifications 
        SET scheduled_for = datetime('now', '+15 minutes')
        WHERE id = ?
      `).bind(r.id).run()}async updateNotificationStatus(t,s,r){await this.db.prepare(`
      UPDATE communication_notifications 
      SET status = ?, 
          sent_at = CASE WHEN ? = 'sent' THEN datetime('now') ELSE sent_at END,
          delivery_attempts = delivery_attempts + 1,
          last_delivery_attempt = datetime('now'),
          delivery_error = ?
      WHERE id = ?
    `).bind(s,s,r||null,t).run()}async sendInAppNotification(t){return!0}async sendEmailNotification(t){try{return console.log("Sending email notification:",{to:t.user_id,subject:t.title,body:t.message}),await new Promise(s=>setTimeout(s,100)),!0}catch(s){return console.error("Email notification failed:",s),!1}}async sendSMSNotification(t){try{return console.log("Sending SMS notification:",{to:t.user_id,message:`${t.title}: ${t.message}`}),await new Promise(s=>setTimeout(s,100)),!0}catch(s){return console.error("SMS notification failed:",s),!1}}async sendPushNotification(t){try{return console.log("Sending push notification:",{to:t.user_id,title:t.title,body:t.message,data:t.data}),await new Promise(s=>setTimeout(s,100)),!0}catch(s){return console.error("Push notification failed:",s),!1}}async sendWebhookNotification(t){try{return console.log("Sending webhook notification:",{userId:t.user_id,notification:t}),await new Promise(s=>setTimeout(s,100)),!0}catch(s){return console.error("Webhook notification failed:",s),!1}}}function h0(e,t,s,r){return{userId:e,notificationType:"message",title:`New message from ${t}`,message:s,data:{conversation_id:r,action_url:`/conversations/${r}`,action_text:"View Message"},priority:"medium",relatedEntityType:"conversation",relatedEntityId:r}}function b0(e,t,s,r){return{userId:e,notificationType:"job_update",title:`Job Update: ${t}`,message:`Your job has been ${s}`,data:{job_id:r,update_type:s,action_url:`/jobs/${r}`,action_text:"View Job"},priority:"medium",relatedEntityType:"job",relatedEntityId:r}}function y0(e,t,s,r,i){const a={created:`New invoice #${t} for $${s}`,paid:`Invoice #${t} has been paid`,overdue:`Invoice #${t} is overdue`};return{userId:e,notificationType:r==="created"?"invoice_created":r==="paid"?"invoice_paid":"invoice_overdue",title:`Invoice ${r}`,message:a[r],data:{invoice_id:i,invoice_number:t,amount:s,action_url:`/invoices/${i}`,action_text:"View Invoice"},priority:r==="overdue"?"high":"medium",relatedEntityType:"invoice",relatedEntityId:i}}function x0(e,t,s,r){return{userId:e,notificationType:"file_shared",title:`File shared: ${t}`,message:`${s} shared a file with you`,data:{file_id:r,file_name:t,shared_by:s,action_url:`/files/${r}`,action_text:"View File"},priority:"low",relatedEntityType:"file",relatedEntityId:r}}const Le=new ce;Le.use("*",tn());Le.get("/",async e=>{var t,s,r,i;try{const{DB:a}=e.env,n=new as(a),o=parseInt(e.req.header("X-User-ID")||"0"),l=e.req.header("X-User-Role")||"client";if(!o)return e.json({success:!1,error:"Authentication required"},401);const d={userId:o,userRole:l,notificationTypes:(t=e.req.query("types"))==null?void 0:t.split(","),channels:(s=e.req.query("channels"))==null?void 0:s.split(","),statuses:(r=e.req.query("statuses"))==null?void 0:r.split(","),priorities:(i=e.req.query("priorities"))==null?void 0:i.split(","),unreadOnly:e.req.query("unreadOnly")==="true",relatedEntityType:e.req.query("entityType"),relatedEntityId:e.req.query("entityId")?parseInt(e.req.query("entityId")):void 0,createdAfter:e.req.query("after"),createdBefore:e.req.query("before"),search:e.req.query("search"),sortBy:e.req.query("sortBy")||"created_at",sortOrder:e.req.query("sortOrder")||"DESC",limit:e.req.query("limit")?parseInt(e.req.query("limit")):50,offset:e.req.query("offset")?parseInt(e.req.query("offset")):0},c=await n.getUserNotifications(d);return e.json({success:!0,notifications:c.notifications,total:c.total,unreadCount:c.unreadCount,hasMore:c.hasMore,pagination:{limit:d.limit,offset:d.offset,total:c.total}})}catch(a){return console.error("Get notifications error:",a),e.json({success:!1,error:"Internal server error getting notifications"},500)}});Le.get("/unread-count",async e=>{try{const{DB:t}=e.env,s=parseInt(e.req.header("X-User-ID")||"0");if(!s)return e.json({success:!1,error:"Authentication required"},401);const i=await t.prepare(`
      SELECT COUNT(*) as unread_count 
      FROM communication_notifications 
      WHERE user_id = ? AND read_at IS NULL
    `).bind(s).first();return e.json({success:!0,unreadCount:i.unread_count})}catch(t){return console.error("Get unread count error:",t),e.json({success:!1,error:"Internal server error getting unread count"},500)}});Le.put("/mark-read",async e=>{try{const{DB:t}=e.env,s=new as(t),r=parseInt(e.req.header("X-User-ID")||"0");if(!r)return e.json({success:!1,error:"Authentication required"},401);const i=await e.req.json(),{notificationIds:a,markAll:n=!1}=i;let o;if(n)o=await s.markAllAsRead(r);else if(a&&Array.isArray(a))o=await s.markNotificationsAsRead(a,r);else return e.json({success:!1,error:"Either notificationIds array or markAll flag required"},400);return o.success?e.json({success:!0,message:n?"All notifications marked as read":"Notifications marked as read"}):e.json({success:!1,error:o.error},400)}catch(t){return console.error("Mark notifications read error:",t),e.json({success:!1,error:"Internal server error marking notifications as read"},500)}});Le.post("/",async e=>{try{const{DB:t}=e.env,s=new as(t),r=parseInt(e.req.header("X-User-ID")||"0");if((e.req.header("X-User-Role")||"client")!=="admin")return e.json({success:!1,error:"Access denied"},403);const a=await e.req.json(),{targetUserId:n,notificationType:o,title:l,message:d,data:c,priority:u,channels:p,scheduledFor:m,expiresAt:b,relatedEntityType:v,relatedEntityId:f}=a;if(!n||!o||!l||!d)return e.json({success:!1,error:"targetUserId, notificationType, title, and message are required"},400);const h={userId:n,notificationType:o,title:l,message:d,data:c,priority:u,channels:p,scheduledFor:m,expiresAt:b,relatedEntityType:v,relatedEntityId:f},y=await s.createNotification(h);return y.success?e.json({success:!0,notification:y.notification,message:"Notification created successfully"}):e.json({success:!1,error:y.error},400)}catch(t){return console.error("Create notification error:",t),e.json({success:!1,error:"Internal server error creating notification"},500)}});Le.get("/preferences",async e=>{try{const{DB:t}=e.env,s=new as(t),r=parseInt(e.req.header("X-User-ID")||"0");if(!r)return e.json({success:!1,error:"Authentication required"},401);const i=e.req.query("type"),a=await s.getUserPreferences(r,i);return e.json({success:!0,preferences:a})}catch(t){return console.error("Get preferences error:",t),e.json({success:!1,error:"Internal server error getting preferences"},500)}});Le.put("/preferences",async e=>{try{const{DB:t}=e.env,s=new as(t),r=parseInt(e.req.header("X-User-ID")||"0");if(!r)return e.json({success:!1,error:"Authentication required"},401);const i=await e.req.json(),{notificationType:a,channels:n,enabled:o,quietHoursStart:l,quietHoursEnd:d,frequencyLimit:c,batchDelivery:u}=i;if(!a)return e.json({success:!1,error:"notificationType is required"},400);const p=await s.updateNotificationPreferences(r,a,{channels:n,enabled:o,quiet_hours_start:l,quiet_hours_end:d,frequency_limit:c,batch_delivery:u});return p.success?e.json({success:!0,message:"Notification preferences updated successfully"}):e.json({success:!1,error:p.error},400)}catch(t){return console.error("Update preferences error:",t),e.json({success:!1,error:"Internal server error updating preferences"},500)}});Le.get("/analytics",async e=>{try{const{DB:t}=e.env,s=new as(t),r=parseInt(e.req.header("X-User-ID")||"0"),i=e.req.header("X-User-Role")||"client";if(!r)return e.json({success:!1,error:"Authentication required"},401);const a=e.req.query("start"),n=e.req.query("end"),o=a&&n?{start:a,end:n}:void 0,l=await s.getNotificationAnalytics(i==="admin"?void 0:r,i,o);return e.json({success:!0,analytics:l})}catch(t){return console.error("Get analytics error:",t),e.json({success:!1,error:"Internal server error getting analytics"},500)}});Le.get("/stream",async e=>parseInt(e.req.header("X-User-ID")||"0")?new Response(new ReadableStream({start(s){const r=`data: ${JSON.stringify({type:"connected",timestamp:new Date().toISOString()})}

`;s.enqueue(new TextEncoder().encode(r));const i=setInterval(()=>{const a=`data: ${JSON.stringify({type:"heartbeat",timestamp:new Date().toISOString()})}

`;try{s.enqueue(new TextEncoder().encode(a))}catch(n){console.error("Heartbeat failed:",n),clearInterval(i)}},3e4);setTimeout(()=>{clearInterval(i);try{s.close()}catch(a){console.error("Stream close error:",a)}},36e5)}}),{headers:{"Content-Type":"text/event-stream","Cache-Control":"no-cache",Connection:"keep-alive","Access-Control-Allow-Origin":"*","Access-Control-Allow-Headers":"Cache-Control"}}):e.json({success:!1,error:"Authentication required"},401));Le.post("/test",async e=>{try{const{DB:t}=e.env,s=new as(t),r=parseInt(e.req.header("X-User-ID")||"0"),i=e.req.header("X-User-Role")||"client";if(!r)return e.json({success:!1,error:"Authentication required"},401);const a=await e.req.json(),{testType:n="message"}=a;let o;switch(n){case"message":o=h0(r,"Test User","This is a test message notification",1);break;case"job_update":o=b0(r,"Test Job","completed",1);break;case"invoice":o=y0(r,"TEST001",150,"created",1);break;case"file_shared":o=x0(r,"test-document.pdf","Test User",1);break;default:return e.json({success:!1,error:"Invalid test type. Use: message, job_update, invoice, file_shared"},400)}const l=await s.createNotification(o);return l.success?e.json({success:!0,notification:l.notification,message:`Test ${n} notification created successfully`}):e.json({success:!1,error:l.error},400)}catch(t){return console.error("Test notification error:",t),e.json({success:!1,error:"Internal server error creating test notification"},500)}});Le.get("/:notificationId",async e=>{try{const{DB:t}=e.env,s=parseInt(e.req.param("notificationId")),r=parseInt(e.req.header("X-User-ID")||"0"),i=e.req.header("X-User-Role")||"client";if(!r)return e.json({success:!1,error:"Authentication required"},401);const o=await t.prepare(`
      SELECT * FROM communication_notifications 
      WHERE id = ? AND (user_id = ? OR ? = 'admin')
    `).bind(s,r,i).first();return o?e.json({success:!0,notification:o}):e.json({success:!1,error:"Notification not found"},404)}catch(t){return console.error("Get notification error:",t),e.json({success:!1,error:"Internal server error getting notification"},500)}});Le.delete("/:notificationId",async e=>{try{const{DB:t}=e.env,s=parseInt(e.req.param("notificationId")),r=parseInt(e.req.header("X-User-ID")||"0"),i=e.req.header("X-User-Role")||"client";return r?await t.prepare(`
      SELECT id FROM communication_notifications 
      WHERE id = ? AND (user_id = ? OR ? = 'admin')
    `).bind(s,r,i).first()?(await t.prepare(`
      DELETE FROM communication_notifications WHERE id = ?
    `).bind(s).run(),e.json({success:!0,message:"Notification deleted successfully"})):e.json({success:!1,error:"Notification not found"},404):e.json({success:!1,error:"Authentication required"},401)}catch(t){return console.error("Delete notification error:",t),e.json({success:!1,error:"Internal server error deleting notification"},500)}});const D=new ce;D.use("/api/*",tn());D.use("/static/*",fu({root:"./public"}));D.route("/api/auth",rs);D.route("/api/verification",Is);D.route("/api/jobs",Qe);D.route("/api/users",Xe);D.route("/api/admin",B);D.route("/api/worker",P);D.route("/api/client",we);D.route("/api/compliance",js);D.route("/api/subscriptions",et);D.route("/api/payments",re);D.route("/api/webhooks",vc);D.route("/api/invoices",K);D.route("/api/files",Me);D.route("/api/notifications",Le);D.route("/admin",sn);D.route("/subscriptions",Bd);D.route("/dashboard",Y);D.route("/signup",mi);D.route("/login",Ud);D.route("/auth",Is);D.get("/auth/login",e=>e.redirect("/login",301));D.route("/legal",pn);D.get("/universal-profile/:id",async e=>{var t,s,r,i,a,n,o,l,d,c,u,p,m;try{const b=e.req.param("id"),v=await e.env.DB.prepare(`
      SELECT 
        u.id, u.first_name, u.last_name, u.email, u.phone,
        u.province, u.city, u.created_at, u.is_verified, u.is_active
      FROM users u 
      WHERE u.id = ? AND u.role = 'worker'
    `).bind(b).first();if(!v)return e.html(`
        <html>
        <head>
          <title>Profile Not Found - Kwikr Directory</title>
          <script src="https://cdn.tailwindcss.com"><\/script>
        </head>
        <body class="bg-gray-100">
          <div class="min-h-screen flex items-center justify-center">
            <div class="text-center">
              <h1 class="text-2xl font-bold text-gray-800 mb-4">Profile Not Found</h1>
              <p class="text-gray-600 mb-6">The worker profile you're looking for doesn't exist.</p>
              <a href="/" class="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700">Back to Directory</a>
            </div>
          </div>
        </body>
        </html>
      `);let f={},h={results:[]},y={results:[]};try{f=await e.env.DB.prepare(`
        SELECT bio, address_line1, postal_code, company_name, 
               company_description, website_url, years_in_business,
               company_logo_url, profile_image_url
        FROM user_profiles 
        WHERE user_id = ?
      `).bind(b).first()||{}}catch{console.log("User profiles table not available")}try{h=await e.env.DB.prepare(`
        SELECT service_name, service_category, description, hourly_rate, 
               years_experience, is_available, service_area
        FROM worker_services 
        WHERE user_id = ? AND is_available = 1
      `).bind(b).all()}catch{console.log("Worker services table not available")}try{y=await e.env.DB.prepare(`
        SELECT license_type, license_number, insurance_provider, wsib_number, 
               license_status, insurance_status, wsib_status
        FROM worker_compliance 
        WHERE user_id = ?
      `).bind(b).all()}catch{console.log("Worker compliance table not available")}let w=null;try{w=await e.env.DB.prepare(`
        SELECT plan, status FROM user_subscriptions 
        WHERE user_id = ? AND status = 'active' 
        ORDER BY created_at DESC LIMIT 1
      `).bind(b).first()}catch{console.log("User subscriptions table not available")}const x=((t=h.results)==null?void 0:t.length)>0?h.results[0]:null,S=(x==null?void 0:x.hourly_rate)||67.33,R=(i=(r=(s=f.company_name||v.first_name+" "+v.last_name)==null?void 0:s.replace(/&/g,"&amp;"))==null?void 0:r.replace(/'/g,"&#39;"))==null?void 0:i.replace(/"/g,"&quot;"),C=(o=(n=(a=(x==null?void 0:x.service_category)||"Professional Services")==null?void 0:a.replace(/&/g,"&amp;"))==null?void 0:n.replace(/'/g,"&#39;"))==null?void 0:o.replace(/"/g,"&quot;");let N=0,I=10;v.email&&N++,v.phone&&N++,v.city&&N++,v.province&&N++,f.bio&&N++,f.address_line1&&N++,((l=h.results)==null?void 0:l.length)>0&&N++,v.is_verified&&N++,f.company_name&&N++,f.website_url&&N++;const j=Math.round(N/I*100);return e.html(`
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>${R} - Kwikr Directory</title>
          <script src="https://cdn.tailwindcss.com"><\/script>
          <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
          <script>
            tailwind.config = {
              theme: {
                extend: {
                  colors: {
                    'kwikr-green': '#00C881',
                    'kwikr-dark': '#1a1a1a',
                    'kwikr-gray': '#f8f9fa'
                  }
                }
              }
            }
          <\/script>
      </head>
      <body class="bg-gray-50">
          <!-- Header -->
          <header class="bg-white shadow-sm">
              <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
                  <div class="flex justify-between items-center py-4">
                      <a href="/" class="text-2xl font-bold text-kwikr-green">
                          <i class="fas fa-leaf mr-2"></i>Kwikr Directory
                      </a>
                      <nav class="flex items-center space-x-6 text-sm">
                          <a href="/" class="text-gray-600 hover:text-kwikr-green">Back to Search</a>
                          <span class="text-gray-400">|</span>
                          <span class="text-gray-600">Join as Vendor</span>
                          <button class="bg-kwikr-green text-white px-4 py-2 rounded text-sm font-medium hover:bg-green-600">
                              Sign In
                          </button>
                      </nav>
                  </div>
              </div>
          </header>

          <!-- Main Content -->
          <main class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
              
              <!-- Business Header Card -->
              <div class="bg-white rounded-lg shadow-sm mb-8 overflow-hidden">
                  <div class="bg-gradient-to-r from-kwikr-green to-green-600 px-8 py-6">
                      <div class="flex items-center justify-between">
                          <div class="flex items-center space-x-6">
                              <!-- Business Logo -->
                              <div class="w-16 h-16 bg-white rounded-lg flex items-center justify-center flex-shrink-0 overflow-hidden">
                                  ${f.profile_image_url?`
                                      <img src="${f.profile_image_url}" alt="${R} Logo" 
                                           class="w-full h-full object-cover rounded-lg" 
                                           onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                      <div class="w-14 h-14 bg-gradient-to-br from-kwikr-green to-green-600 rounded-lg flex items-center justify-center" style="display:none;">
                                          <span class="text-white text-xl font-bold">${R.charAt(0)}</span>
                                      </div>
                                  `:`
                                      <div class="w-14 h-14 bg-gradient-to-br from-kwikr-green to-green-600 rounded-lg flex items-center justify-center relative">
                                          <span class="text-white text-xl font-bold">${R.charAt(0)}</span>
                                          <div class="absolute -top-1 -right-1 w-4 h-4 bg-yellow-400 rounded-full flex items-center justify-center">
                                              <i class="fas fa-upload text-xs text-gray-800"></i>
                                          </div>
                                      </div>
                                  `}
                              </div>
                              
                              <!-- Business Info -->
                              <div class="text-white">
                                  <h1 class="text-2xl font-bold mb-1">
                                      ${R}
                                  </h1>
                                  <p class="text-green-100 text-sm mb-2">${C}</p>
                                  <div class="flex items-center space-x-4 text-sm">
                                      <span><i class="fas fa-map-marker-alt mr-1"></i>${v.city}, ${v.province}</span>
                                      <span>No reviews yet</span>
                                      <span class="bg-green-700 px-2 py-1 rounded text-xs">${((d=h.results)==null?void 0:d.length)>0?"Available":"Limited Services"}</span>
                                  </div>
                              </div>
                          </div>
                          
                          <!-- Pricing and Actions -->
                          <div class="text-right text-white">
                              <div class="text-right mb-4">
                                  <div class="text-3xl font-bold">$${S}<span class="text-lg font-normal">/hr</span></div>
                                  <div class="text-green-100 text-sm">${((c=h.results)==null?void 0:c.length)>1?"Starting Rate":"Hourly Rate"}</div>
                              </div>
                              <div class="flex space-x-2">
                                  <button onclick="requestQuote('${v.id}')" class="bg-white text-kwikr-green px-4 py-2 rounded font-medium hover:bg-gray-50 text-sm transition-colors">
                                      <i class="fas fa-calculator mr-1"></i>Request Quote
                                  </button>
                                  <button onclick="startConversation('${v.id}')" class="bg-white text-kwikr-green px-4 py-2 rounded font-medium hover:bg-gray-50 text-sm transition-colors">
                                      <i class="fas fa-comments mr-1"></i>Message
                                  </button>
                                  ${f.website_url&&(w!=null&&w.plan)&&["growth","pro"].includes(w.plan)?`
                                  <button onclick="visitWebsite('${f.website_url}')" class="bg-white text-kwikr-green px-4 py-2 rounded font-medium hover:bg-gray-50 text-sm transition-colors">
                                      <i class="fas fa-external-link-alt mr-1"></i>Visit Website
                                  </button>
                                  `:""}
                                  <button onclick="shareProfile('${v.id}', '${v.first_name} ${v.last_name}')" class="bg-white text-gray-400 px-3 py-2 rounded hover:bg-gray-50 transition-colors" title="Share Profile">
                                      <i class="fas fa-share"></i>
                                  </button>
                              </div>
                          </div>
                      </div>
                  </div>
              </div>

              <!-- Content Grid -->
              <div class="grid lg:grid-cols-3 gap-8">
                  
                  <!-- Main Content - Left Two Thirds -->
                  <div class="lg:col-span-2 space-y-8">
                      
                      <!-- About Section -->
                      <div class="bg-white rounded-lg shadow-sm p-6">
                          <div class="flex items-center mb-4">
                              <i class="fas fa-info-circle text-kwikr-green mr-2"></i>
                              <h2 class="text-xl font-semibold text-gray-800">About</h2>
                          </div>
                          <div class="text-gray-700 space-y-4">
                              ${f.company_description?`
                                  <div class="description-text">
                                      <div class="description-content ${f.company_description.length>200?"truncated":""}" data-full-text="${f.company_description.replace(/"/g,"&quot;")}">
                                          ${f.company_description}
                                      </div>
                                      ${f.company_description.length>200?`
                                          <button class="read-more-btn text-kwikr-green hover:underline mt-2 font-medium" onclick="toggleReadMore(this)">Read more</button>
                                      `:""}
                                  </div>
                              `:f.bio?`
                                  <div class="description-text">
                                      <div class="description-content ${f.bio.length>200?"truncated":""}" data-full-text="${f.bio.replace(/"/g,"&quot;")}">
                                          ${f.bio}
                                      </div>
                                      ${f.bio.length>200?`
                                          <button class="read-more-btn text-kwikr-green hover:underline mt-2 font-medium" onclick="toggleReadMore(this)">Read more</button>
                                      `:""}
                                  </div>
                              `:x!=null&&x.description?`
                                  <div class="description-text">
                                      <div class="description-content ${x.description.length>200?"truncated":""}" data-full-text="${x.description.replace(/"/g,"&quot;")}">
                                          ${x.description}
                                      </div>
                                      ${x.description.length>200?`
                                          <button class="read-more-btn text-kwikr-green hover:underline mt-2 font-medium" onclick="toggleReadMore(this)">Read more</button>
                                      `:""}
                                  </div>
                              `:`
                                  <div class="text-gray-600">
                                      <p>Professional ${C.toLowerCase()} services available in ${v.city}, ${v.province}.</p>
                                      <p class="mt-2">Contact for detailed information about services and availability.</p>
                                  </div>
                              `}
                          </div>
                      </div>

                      <!-- Services Offered Section -->
                      <div class="bg-white rounded-lg shadow-sm p-6">
                          <div class="flex items-center justify-between mb-4">
                              <div class="flex items-center">
                                  <i class="fas fa-list text-kwikr-green mr-2"></i>
                                  <h2 class="text-xl font-semibold text-gray-800">Services Offered</h2>
                              </div>
                          </div>
                          
                          ${((u=h.results)==null?void 0:u.length)>0?h.results.map(M=>`
                                  <div class="border-l-4 border-kwikr-green pl-4 py-3 mb-3">
                                      <div class="flex items-center justify-between">
                                          <div class="flex items-center">
                                              <i class="fas fa-${M.service_category==="Plumbing"?"wrench":M.service_category==="Cleaning"?"broom":M.service_category==="Electrical"?"bolt":"tools"} text-kwikr-green mr-3"></i>
                                              <div>
                                                  <h3 class="font-semibold text-gray-800">${M.service_name}</h3>
                                                  <p class="text-sm text-gray-600">${M.description}</p>
                                                  <p class="text-xs text-gray-500">${M.years_experience} years experience • $${M.hourly_rate}/hr • ${v.is_verified?"Verified":"Pending"}</p>
                                              </div>
                                          </div>
                                          <div class="text-right">
                                              <div class="text-lg font-bold text-kwikr-green">$${M.hourly_rate}</div>
                                              <button class="bg-kwikr-green text-white px-3 py-1 rounded text-xs font-medium hover:bg-green-600">
                                                  Book Service
                                              </button>
                                          </div>
                                      </div>
                                  </div>
                              `).join(""):`<div class="border-l-4 border-gray-300 pl-4 py-3">
                                  <div class="text-center text-gray-500">
                                      <i class="fas fa-info-circle mb-2"></i>
                                      <p>Service details are being updated. Please contact ${v.first_name} for current offerings.</p>
                                  </div>
                              </div>`}
                      </div>

                      <!-- Reviews & Testimonials -->
                      <div class="bg-white rounded-lg shadow-sm p-6">
                          <div class="flex items-center mb-4">
                              <i class="fas fa-star text-kwikr-green mr-2"></i>
                              <h2 class="text-xl font-semibold text-gray-800">Reviews & Testimonials</h2>
                          </div>
                          
                          <div class="text-center py-12">
                              <div class="text-gray-300 mb-4">
                                  <i class="fas fa-star text-4xl mx-1"></i>
                                  <i class="fas fa-star text-4xl mx-1"></i>
                                  <i class="fas fa-star text-4xl mx-1"></i>
                                  <i class="fas fa-star text-4xl mx-1"></i>
                                  <i class="fas fa-star text-4xl mx-1"></i>
                              </div>
                              <h3 class="text-lg font-semibold text-gray-800 mb-2">No reviews yet</h3>
                              <p class="text-gray-600 mb-4">Be the first to write a review</p>
                              <button class="bg-kwikr-green text-white px-6 py-2 rounded-lg font-medium hover:bg-green-600">
                                  <i class="fas fa-edit mr-2"></i>Write First Review
                              </button>
                          </div>
                      </div>

                      <!-- Service Area -->
                      <div class="bg-white rounded-lg shadow-sm p-6">
                          <div class="flex items-center mb-4">
                              <i class="fas fa-map text-kwikr-green mr-2"></i>
                              <h2 class="text-xl font-semibold text-gray-800">Service Area</h2>
                          </div>
                          
                          <!-- Map Placeholder -->
                          <div class="bg-gray-100 rounded-lg h-64 flex items-center justify-center mb-4">
                              <div class="text-center text-gray-500">
                                  <i class="fas fa-map-marked-alt text-4xl mb-2"></i>
                                  <p class="font-medium">Interactive Map</p>
                                  <p class="text-sm">Google Maps Integration - Showing Service Area</p>
                              </div>
                          </div>
                          
                          <div class="grid md:grid-cols-2 gap-4 text-sm">
                              <div>
                                  <h4 class="font-semibold text-gray-800 mb-2">
                                      <i class="fas fa-map-marker-alt text-kwikr-green mr-1"></i>Service Address
                                  </h4>
                                  <p class="text-gray-600">
                                      ${f.address_line1?f.address_line1+", ":""}${v.city}, ${v.province}
                                      ${f.postal_code?" "+f.postal_code:""}
                                  </p>
                              </div>
                              <div>
                                  <h4 class="font-semibold text-gray-800 mb-2">
                                      <i class="fas fa-circle text-kwikr-green mr-1"></i>Service Coverage
                                  </h4>
                                  <p class="text-gray-600">
                                      ${x&&x.service_area?x.service_area:"Greater "+v.city+" Area"}
                                  </p>
                              </div>
                          </div>
                          
                          <p class="text-xs text-gray-500 mt-4">
                              <i class="fas fa-info-circle mr-1"></i>
                              Contact provider to confirm service availability in your specific area
                          </p>
                      </div>
                  </div>

                  <!-- Sidebar - Right Third -->
                  <div class="lg:col-span-1 space-y-6">
                      
                      <!-- Professional Profile -->
                      <div class="bg-white rounded-lg shadow-sm p-6 text-center">
                          <div class="mb-4 relative">
                              ${f.profile_image_url?`
                                  <img src="${f.profile_image_url}" 
                                       alt="${v.first_name} ${v.last_name}" 
                                       class="w-24 h-24 rounded-full object-cover mx-auto border-4 border-kwikr-green"
                                       onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                  <div class="w-24 h-24 bg-gradient-to-br from-kwikr-green to-green-600 rounded-full flex items-center justify-center mx-auto border-4 border-kwikr-green" style="display:none;">
                                      <span class="text-white text-2xl font-bold">${v.first_name.charAt(0)}</span>
                                  </div>
                              `:`
                                  <div class="w-24 h-24 bg-gradient-to-br from-gray-200 to-gray-300 rounded-full flex items-center justify-center mx-auto border-4 border-gray-300 relative">
                                      <span class="text-gray-500 text-2xl font-bold">${v.first_name.charAt(0)}</span>
                                      <div class="absolute -bottom-1 -right-1 w-6 h-6 bg-kwikr-green rounded-full flex items-center justify-center cursor-pointer hover:bg-green-600 transition-colors">
                                          <i class="fas fa-camera text-white text-xs" title="Upload Photo"></i>
                                      </div>
                                  </div>
                              `}
                          </div>
                          <h3 class="text-lg font-semibold text-gray-800 mb-1">${v.first_name} ${v.last_name}</h3>
                          <p class="text-sm text-gray-600 mb-3">${R}</p>
                          <div class="flex items-center justify-center space-x-2 text-sm">
                              <span class="px-2 py-1 bg-green-100 text-green-700 rounded-full text-xs">
                                  ${v.is_verified?"Verified":"Pending"}
                              </span>
                              <span class="px-2 py-1 bg-blue-100 text-blue-700 rounded-full text-xs">
                                  ${f.years_in_business?f.years_in_business+" years":"Established "+new Date(v.created_at).getFullYear()}
                              </span>
                          </div>
                      </div>
                      
                      <!-- Quick Contact -->
                      <div class="bg-white rounded-lg shadow-sm p-6">
                          <div class="flex items-center mb-4">
                              <i class="fas fa-phone text-kwikr-green mr-2"></i>
                              <h2 class="text-lg font-semibold text-gray-800">Quick Contact</h2>
                          </div>
                          <div class="space-y-3">
                              ${f.website_url?`
                              <div class="flex items-center">
                                  <i class="fas fa-globe text-gray-400 mr-3"></i>
                                  <a href="${f.website_url}" target="_blank" class="text-kwikr-green hover:underline text-sm">
                                      Website
                                  </a>
                              </div>
                              `:""}
                              <div class="flex items-center">
                                  <i class="fas fa-envelope text-gray-400 mr-3"></i>
                                  <a href="mailto:${v.email}" class="text-kwikr-green hover:underline text-sm">
                                      ${v.email}
                                  </a>
                              </div>
                          </div>
                      </div>

                      <!-- Verification & Compliance -->
                      <div class="bg-white rounded-lg shadow-sm p-6">
                          <div class="flex items-center mb-4">
                              <i class="fas fa-shield-alt text-kwikr-green mr-2"></i>
                              <h2 class="text-lg font-semibold text-gray-800">Verification & Compliance</h2>
                          </div>
                          <div class="space-y-3">
                              <!-- Account Status -->
                              <div class="flex items-center justify-between">
                                  <div class="flex items-center">
                                      <i class="fas fa-${v.is_verified?"check-circle text-green-500":"clock text-yellow-500"} mr-3"></i>
                                      <span class="text-sm text-gray-700">Account Status</span>
                                  </div>
                                  <span class="text-xs px-2 py-1 rounded-full ${v.is_verified?"bg-green-100 text-green-800":"bg-yellow-100 text-yellow-800"}">
                                      ${v.is_verified?"Verified":"Pending Review"}
                                  </span>
                              </div>
                              
                              <!-- Service Coverage -->
                              <div class="flex items-center justify-between">
                                  <div class="flex items-center">
                                      <i class="fas fa-map-marker-alt text-kwikr-green mr-3"></i>
                                      <span class="text-sm text-gray-700">Service Area</span>
                                  </div>
                                  <span class="text-xs text-gray-600">${v.city}, ${v.province}</span>
                              </div>
                              
                              ${((p=h.results)==null?void 0:p.length)>0?`
                              <!-- Services Offered -->
                              <div class="flex items-center justify-between">
                                  <div class="flex items-center">
                                      <i class="fas fa-tools text-kwikr-green mr-3"></i>
                                      <span class="text-sm text-gray-700">Services</span>
                                  </div>
                                  <span class="text-xs text-gray-600">${h.results.length} service${h.results.length>1?"s":""}</span>
                              </div>
                              `:""}
                              
                              ${((m=y.results)==null?void 0:m.length)>0?`
                              <!-- License Information -->
                              ${y.results.map(M=>`
                                  <div class="border-l-2 border-blue-200 pl-3 py-2">
                                      <div class="flex items-center justify-between mb-1">
                                          <span class="text-sm font-medium text-gray-700">${M.license_type||"License"}</span>
                                          <span class="text-xs px-2 py-1 rounded-full ${M.license_status==="active"?"bg-green-100 text-green-800":"bg-gray-100 text-gray-600"}">
                                              ${M.license_status||"Unknown"}
                                          </span>
                                      </div>
                                      ${M.license_number?`<p class="text-xs text-gray-500">License: ${M.license_number}</p>`:""}
                                      ${M.insurance_provider?`<p class="text-xs text-gray-500">Insured by: ${M.insurance_provider}</p>`:""}
                                  </div>
                              `).join("")}
                              `:`
                              <!-- No Compliance Data -->
                              <div class="flex items-center">
                                  <i class="fas fa-info-circle text-gray-400 mr-3"></i>
                                  <span class="text-sm text-gray-500">No compliance documents on file</span>
                              </div>
                              `}
                              
                              <!-- Platform Information -->
                              <div class="border-t border-gray-200 pt-3 mt-3">
                                  <div class="flex items-center">
                                      <i class="fas fa-handshake text-kwikr-green mr-3"></i>
                                      <span class="text-sm text-gray-700">Project-based bidding system</span>
                                  </div>
                                  <p class="text-xs text-gray-500 mt-1 ml-6">
                                      Request quotes through Kwikr platform
                                  </p>
                              </div>
                          </div>
                      </div>

                      <!-- Hours of Operation -->
                      <div class="bg-white rounded-lg shadow-sm p-6">
                          <div class="flex items-center mb-4">
                              <i class="fas fa-clock text-kwikr-green mr-2"></i>
                              <h2 class="text-lg font-semibold text-gray-800">Hours of Operation</h2>
                          </div>
                          <div class="space-y-2 text-sm">
                              <div class="flex justify-between">
                                  <span class="text-gray-600">Sunday</span>
                                  <span class="text-red-600 font-medium">Closed</span>
                              </div>
                              <div class="flex justify-between">
                                  <span class="text-gray-600">Monday</span>
                                  <span class="text-red-600 font-medium">Closed</span>
                              </div>
                              <div class="flex justify-between">
                                  <span class="text-gray-600">Tuesday</span>
                                  <span class="text-red-600 font-medium">Closed</span>
                              </div>
                              <div class="flex justify-between">
                                  <span class="text-gray-600">Wednesday</span>
                                  <span class="text-red-600 font-medium">Closed</span>
                              </div>
                              <div class="flex justify-between">
                                  <span class="text-gray-600">Thursday</span>
                                  <span class="text-red-600 font-medium">Closed</span>
                              </div>
                              <div class="flex justify-between">
                                  <span class="text-gray-600">Friday</span>
                                  <span class="text-red-600 font-medium">Closed</span>
                              </div>
                              <div class="flex justify-between">
                                  <span class="text-gray-600">Saturday</span>
                                  <span class="text-red-600 font-medium">Closed</span>
                              </div>
                          </div>
                      </div>
                  </div>
              </div>
          </main>
          
          <!-- Custom CSS for Read More/Less functionality -->
          <style>
              .description-content.truncated {
                  display: -webkit-box;
                  -webkit-line-clamp: 3;
                  -webkit-box-orient: vertical;
                  overflow: hidden;
                  line-height: 1.6;
                  max-height: 4.8em; /* 3 lines * 1.6 line-height */
              }
              
              .description-content.expanded {
                  display: block;
                  overflow: visible;
                  max-height: none;
              }
              
              .read-more-btn {
                  transition: all 0.2s ease;
                  cursor: pointer;
                  border: none;
                  background: none;
                  padding: 0;
              }
              
              .read-more-btn:hover {
                  text-decoration: underline;
              }
          </style>
          
          <!-- JavaScript for Read More/Less functionality -->
          <script>
              function toggleReadMore(button) {
                  const descriptionContent = button.previousElementSibling;
                  const isExpanded = descriptionContent.classList.contains('expanded');
                  
                  if (isExpanded) {
                      // Collapse - show truncated version
                      descriptionContent.classList.remove('expanded');
                      descriptionContent.classList.add('truncated');
                      button.textContent = 'Read more';
                      
                      // Smooth scroll to top of description
                      descriptionContent.scrollIntoView({ 
                          behavior: 'smooth', 
                          block: 'start' 
                      });
                  } else {
                      // Expand - show full content
                      descriptionContent.classList.remove('truncated');
                      descriptionContent.classList.add('expanded');
                      button.textContent = 'Read less';
                  }
              }
              
              // Profile Action Functions
              function requestQuote(workerId) {
                  // Check if user is logged in
                  const isLoggedIn = document.cookie.includes('session_token');
                  if (!isLoggedIn) {
                      alert('Please log in to request a quote');
                      window.location.href = '/auth/login';
                      return;
                  }
                  
                  // Redirect to quote request form
                  window.location.href = \`/signup/client?action=quote&workerId=\${workerId}\`;
              }
              
              function startConversation(workerId) {
                  // Check if user is logged in
                  const isLoggedIn = document.cookie.includes('session_token');
                  if (!isLoggedIn) {
                      alert('Please log in to start a conversation');
                      window.location.href = '/auth/login';
                      return;
                  }
                  
                  // Redirect to messaging system
                  window.location.href = \`/dashboard?tab=messages&contact=\${workerId}\`;
              }
              
              function visitWebsite(websiteUrl) {
                  // Open website in new tab (only available for Growth/Pro subscribers)
                  window.open(websiteUrl, '_blank', 'noopener,noreferrer');
              }
              
              function shareProfile(workerId, workerName) {
                  const profileUrl = \`\${window.location.origin}/universal-profile/\${workerId}\`;
                  const shareText = \`Check out \${workerName} on Kwikr Directory - \${profileUrl}\`;
                  
                  // Try native sharing if available
                  if (navigator.share) {
                      navigator.share({
                          title: \`\${workerName} - Kwikr Directory\`,
                          text: \`Professional services by \${workerName}\`,
                          url: profileUrl
                      }).catch(err => console.log('Share failed:', err));
                  } else {
                      // Fallback: copy to clipboard
                      navigator.clipboard.writeText(shareText).then(() => {
                          alert('Profile link copied to clipboard!');
                      }).catch(() => {
                          // Final fallback: show share text
                          prompt('Copy this link to share:', profileUrl);
                      });
                  }
              }
          <\/script>
      </body>
      </html>
    `)}catch(b){return console.error("Universal profile error:",b),e.html(`
      <html>
      <head>
        <title>Error - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
      </head>
      <body class="bg-gray-100">
        <div class="min-h-screen flex items-center justify-center">
          <div class="text-center">
            <h1 class="text-2xl font-bold text-gray-800 mb-4">Something went wrong</h1>
            <p class="text-gray-600 mb-6">We're having trouble loading this profile.</p>
            <a href="/" class="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700">Back to Directory</a>
          </div>
        </div>
      </body>
      </html>
    `)}});D.get("/profile/edit/:id",async e=>{try{const t=e.req.param("id"),s=await e.env.DB.prepare(`
      SELECT 
        u.id, u.first_name, u.last_name, u.email, u.phone,
        u.province, u.city, u.created_at, u.is_verified, u.is_active
      FROM users u 
      WHERE u.id = ? AND u.role = 'worker'
    `).bind(t).first();return s?e.html(`
      <!DOCTYPE html>
      <html lang="en">
      <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Edit Profile - Kwikr Directory</title>
          <script src="https://cdn.tailwindcss.com"><\/script>
          <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
      </head>
      <body class="bg-gray-50">
          <div class="min-h-screen flex items-center justify-center">
              <div class="bg-white p-8 rounded-xl shadow-lg max-w-2xl w-full">
                  <div class="text-center">
                      <i class="fas fa-edit text-kwikr-green text-4xl mb-4"></i>
                      <h1 class="text-2xl font-bold text-gray-800 mb-2">Profile Edit Mode</h1>
                      <p class="text-gray-600 mb-6">This feature is available through the worker dashboard</p>
                      <div class="space-y-3">
                          <a href="/dashboard/worker" class="block bg-kwikr-green text-white px-6 py-3 rounded-lg hover:bg-green-600 font-medium">
                              Go to Dashboard
                          </a>
                          <a href="/universal-profile/${s.id}" class="block border border-gray-300 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-50 font-medium">
                              View Public Profile
                          </a>
                      </div>
                  </div>
              </div>
          </div>
      </body>
      </html>
    `):e.redirect("/dashboard/worker")}catch{return e.redirect("/dashboard/worker")}});D.get("/api/public/profile/:userId/service-areas",async e=>{try{const t=e.req.param("userId"),s=await e.env.DB.prepare(`
      SELECT area_name FROM worker_service_areas 
      WHERE user_id = ? AND is_active = 1 
      ORDER BY area_name
    `).bind(t).all();return e.json({service_areas:s.results||[]})}catch(t){return console.error("Error fetching public service areas:",t),e.json({service_areas:[]})}});D.get("/api/public/profile/:userId/hours",async e=>{try{const t=e.req.param("userId"),s=await e.env.DB.prepare(`
      SELECT day_of_week, is_open, open_time, close_time 
      FROM worker_hours 
      WHERE user_id = ? 
      ORDER BY day_of_week
    `).bind(t).all();return e.json({hours:s.results||[]})}catch(t){return console.error("Error fetching public hours:",t),e.json({hours:[]})}});D.get("/api/popular-categories",async e=>{try{const{DB:t}=e.env,i=(await t.prepare(`
      SELECT id, name, icon_class, description
      FROM job_categories 
      WHERE is_active = 1 
      ORDER BY id
      LIMIT 12
    `).all()).results||[],a=await Promise.all(i.map(async n=>{const o=n.name.toLowerCase().trim(),l={plumbers:["plumbing services","plumbing","professional plumbing services","residential plumbing","commercial plumbing","plumber"],electricians:["electrical services","electrical","electric","electrician"],"cleaning services":["cleaning","cleaner","cleaners","house cleaning","commercial cleaning"],"hvac services":["hvac","heating","cooling","air conditioning","furnace"],landscaping:["landscaping services","lawn care","gardening","yard work"],"general contractor":["general contracting services","contractor","contractors","construction","general contracting"],roofing:["roofing services","roof repair","roof installation"],flooring:["flooring services","floor installation","hardwood","carpet","tile"],carpenters:["carpentry","carpenter","woodworking","cabinetry","trim work"],painters:["painting","painter","house painting","interior painting","exterior painting"],handyman:["handyman services","general repairs","home repairs","maintenance"],renovations:["renovation","home renovation","remodeling","home improvement","restoration"]};let d=[o];l[o]&&(d=[...d,...l[o]]),d=[...new Set(d.filter(m=>m&&m.length>0))];const u=`
        SELECT COUNT(DISTINCT u.id) as worker_count
        FROM users u
        LEFT JOIN worker_services ws ON u.id = ws.user_id
        WHERE u.role = 'worker' AND u.is_active = 1 AND ws.is_available = 1
        AND (${d.map(()=>"(LOWER(ws.service_name) LIKE ? OR LOWER(ws.service_category) LIKE ?)").join(" OR ")})
      `,p=d.flatMap(m=>[`%${m}%`,`%${m}%`]);try{const m=await t.prepare(u).bind(...p).first();return{...n,worker_count:(m==null?void 0:m.worker_count)||0}}catch(m){return console.error(`Error counting workers for category ${n.name}:`,m),{...n,worker_count:0}}}));return e.json({success:!0,categories:a})}catch(t){return console.error("Error fetching popular categories:",t),e.json({success:!1,error:"Failed to fetch categories",categories:[]},500)}});D.get("/api/locations/provinces",async e=>{try{const t=e.req.query("serviceType");let s="",r=[];if(t&&t.trim()){const a=t.toLowerCase().trim(),n={electricians:["electrical services","electrical","electric","electrician"],plumbers:["plumbing services","plumbing","professional plumbing services","residential plumbing","commercial plumbing","plumber"],"cleaning services":["cleaners","cleaning","cleaner","house cleaning","commercial cleaning"],"hvac services":["hvac","heating","cooling","air conditioning","furnace"],"general contractor":["contractors","general contracting services","contractor","construction","general contracting"],flooring:["flooring services","floor installation","hardwood","carpet","tile"],roofing:["roofing services","roof repair","roof installation"],landscaping:["landscaping services","lawn care","gardening","yard work"],carpenters:["carpentry","carpenter","woodworking","cabinetry","trim work"],painters:["painting","painter","house painting","interior painting","exterior painting"],handyman:["handyman services","general repairs","home repairs","maintenance"],renovations:["renovation","home renovation","remodeling","home improvement","restoration"]};let o=[a];n[a]&&(o=[...o,...n[a]]),Object.entries(n).forEach(([d,c])=>{c.includes(a)&&!o.includes(d)&&o.push(d)}),o=[...new Set(o.filter(d=>d&&d.length>0))],s=`
        SELECT DISTINCT u.province, COUNT(DISTINCT u.id) as worker_count 
        FROM users u
        LEFT JOIN worker_services ws ON u.id = ws.user_id
        WHERE u.role = 'worker' AND u.province IS NOT NULL AND ws.is_available = 1
        AND (${o.map(()=>"(LOWER(ws.service_name) LIKE ? OR LOWER(ws.service_category) LIKE ?)").join(" OR ")})
        GROUP BY u.province 
        ORDER BY worker_count DESC
      `,r.push(...o.flatMap(d=>[`%${d}%`,`%${d}%`]))}else s=`
        SELECT DISTINCT u.province, COUNT(*) as worker_count 
        FROM users u 
        WHERE u.role = 'worker' AND u.province IS NOT NULL 
        GROUP BY u.province 
        ORDER BY worker_count DESC
      `;const i=await e.env.DB.prepare(s).bind(...r).all();return e.header("Cache-Control","no-cache, no-store, must-revalidate"),e.header("Pragma","no-cache"),e.header("Expires","0"),e.json({success:!0,provinces:i.results,serviceType:t||null})}catch(t){return console.error("Failed to fetch provinces:",t),e.json({success:!1,error:"Failed to fetch provinces"},500)}});D.get("/api/locations/cities/:province",async e=>{try{const t=e.req.param("province"),s=e.req.query("serviceType");let r="",i=[];if(s&&s.trim()){const n=s.toLowerCase().trim(),o={electricians:["electrical services","electrical","electric","electrician"],plumbers:["plumbing services","plumbing","professional plumbing services","residential plumbing","commercial plumbing","plumber"],"cleaning services":["cleaners","cleaning","cleaner","house cleaning","commercial cleaning"],"hvac services":["hvac","heating","cooling","air conditioning","furnace"],"general contractor":["contractors","general contracting services","contractor","construction","general contracting"],flooring:["flooring services","floor installation","hardwood","carpet","tile"],roofing:["roofing services","roof repair","roof installation"],landscaping:["landscaping services","lawn care","gardening","yard work"],carpenters:["carpentry","carpenter","woodworking","cabinetry","trim work"],painters:["painting","painter","house painting","interior painting","exterior painting"],handyman:["handyman services","general repairs","home repairs","maintenance"],renovations:["renovation","home renovation","remodeling","home improvement","restoration"]};let l=[n];o[n]&&(l=[...l,...o[n]]),Object.entries(o).forEach(([c,u])=>{u.includes(n)&&!l.includes(c)&&l.push(c)}),l=[...new Set(l.filter(c=>c&&c.length>0))],r=`
        SELECT DISTINCT u.city, COUNT(DISTINCT u.id) as worker_count 
        FROM users u
        LEFT JOIN worker_services ws ON u.id = ws.user_id
        WHERE u.role = 'worker' AND u.province = ? AND u.city IS NOT NULL AND ws.is_available = 1
        AND (${l.map(()=>"(LOWER(ws.service_name) LIKE ? OR LOWER(ws.service_category) LIKE ?)").join(" OR ")})
        GROUP BY u.city 
        ORDER BY worker_count DESC
      `,i=[t,...l.flatMap(c=>[`%${c}%`,`%${c}%`])]}else r=`
        SELECT DISTINCT u.city, COUNT(*) as worker_count 
        FROM users u 
        WHERE u.role = 'worker' AND u.province = ? AND u.city IS NOT NULL 
        GROUP BY u.city 
        ORDER BY worker_count DESC
      `,i=[t];const a=await e.env.DB.prepare(r).bind(...i).all();return e.header("Cache-Control","no-cache, no-store, must-revalidate"),e.header("Pragma","no-cache"),e.header("Expires","0"),e.json({success:!0,cities:a.results,serviceType:s||null,province:t})}catch(t){return console.error("Failed to fetch cities:",t),e.json({success:!1,error:"Failed to fetch cities"},500)}});D.post("/api/providers/search",async e=>{try{const t=await e.req.json(),{serviceType:s,province:r,city:i,budget:a,additionalServices:n}=t;U.info("Provider search request",{serviceType:s,province:r,city:i,budget:a});let o=`
      SELECT DISTINCT
        u.id, u.first_name, u.last_name, u.email, u.phone, u.city, u.province, u.is_verified,
        p.bio, p.profile_image_url,
        AVG(ws.hourly_rate) as avg_rate,
        COUNT(ws.id) as service_count,
        GROUP_CONCAT(ws.service_name) as services_list,
        (SELECT ws2.description FROM worker_services ws2 WHERE ws2.user_id = u.id AND ws2.is_available = 1 LIMIT 1) as primary_description
      FROM users u
      LEFT JOIN user_profiles p ON u.id = p.user_id
      LEFT JOIN worker_services ws ON u.id = ws.user_id
      WHERE u.role = 'worker' AND u.is_active = 1 AND ws.is_available = 1
    `;const l=[];if(s&&s.trim()){const u=s.toLowerCase().trim(),p={electricians:["electrical services","electrical","electric","electrician"],plumbers:["plumbing services","plumbing","professional plumbing services","residential plumbing","commercial plumbing","plumber"],"cleaning services":["cleaners","cleaning","cleaner","house cleaning","commercial cleaning"],"hvac services":["hvac","heating","cooling","air conditioning","furnace"],"general contractor":["contractors","general contracting services","contractor","construction","general contracting"],flooring:["flooring services","floor installation","hardwood","carpet","tile"],roofing:["roofing services","roof repair","roof installation"],landscaping:["landscaping services","lawn care","gardening","yard work"],carpenters:["carpentry","carpenter","woodworking","cabinetry","trim work"],painters:["painting","painter","house painting","interior painting","exterior painting"],handyman:["handyman services","general repairs","home repairs","maintenance"],renovations:["renovation","home renovation","remodeling","home improvement","restoration"]};let m=[u];p[u]&&(m=[...m,...p[u]]),Object.entries(p).forEach(([v,f])=>{f.includes(u)&&!m.includes(v)&&m.push(v)}),m=[...new Set(m.filter(v=>v&&v.length>0))];const b=m.map(()=>"(LOWER(ws.service_name) LIKE ? OR LOWER(ws.service_category) LIKE ?)").join(" OR ");o+=` AND (${b})`,l.push(...m.flatMap(v=>[`%${v}%`,`%${v}%`]))}r&&r.trim()&&(o+=" AND LOWER(u.province) = LOWER(?)",l.push(r.trim())),i&&i.trim()&&(o+=" AND LOWER(u.city) LIKE LOWER(?)",l.push(`%${i.trim()}%`)),a&&a>0&&(o+=" AND ws.hourly_rate <= ?",l.push(a)),o+=`
      GROUP BY u.id, u.first_name, u.last_name, u.email, u.phone, u.city, u.province, u.is_verified,
               p.bio, p.profile_image_url
      ORDER BY u.is_verified DESC, avg_rate ASC
    `,U.info("Executing search query",{query:o,params:l});const c=((await e.env.DB.prepare(o).bind(...l).all()).results||[]).map(u=>{const m=`${u.first_name||""} ${u.last_name||""}`.trim()||"Professional Service Provider",b=u.services_list?u.services_list.split(","):[],v=m.split(" "),f=v.length>=2?`${v[0].charAt(0)}${v[1].charAt(0)}`:m.charAt(0)+(m.charAt(1)||"");return{id:u.id,name:m,company:m,rating:null,reviews:null,rate:u.avg_rate?Math.round(u.avg_rate):null,distance:null,services:b.length>0?b:["General Services"],image:u.profile_image_url||null,initials:f.toUpperCase(),verified:u.is_verified===1,available:null,bio:bc(u.bio||u.primary_description,400),location:`${u.city||""}, ${u.province||""}`.replace(", ,","").trim()||null,phone:u.phone,email:u.email}});return U.info("Provider search completed",{resultsCount:c.length,serviceType:s,province:r,city:i}),e.header("Cache-Control","no-cache, no-store, must-revalidate"),e.header("Pragma","no-cache"),e.header("Expires","0"),e.json({success:!0,providers:c,total:c.length,searchParams:{serviceType:s,province:r,city:i,budget:a,additionalServices:n}})}catch(t){return U.error("Provider search error",t),e.json({success:!1,error:"Search failed",providers:[],total:0},500)}});function bc(e,t=400){if(!e)return null;const s=e.replace(/<[^>]*>/g," ").replace(/\s+/g," ").trim();if(s.length<=t)return s;const r=s.substring(0,t),i=r.lastIndexOf(" ");return(i>t*.8?r.substring(0,i):r)+"..."}function w0(e){const t=["from-blue-500 to-purple-600","from-green-500 to-teal-600","from-red-500 to-pink-600","from-yellow-500 to-orange-600","from-indigo-500 to-blue-600","from-purple-500 to-indigo-600","from-pink-500 to-rose-600","from-teal-500 to-cyan-600"],r=(e||"A").charCodeAt(0)%t.length;return t[r]}D.get("/search",async e=>{const t={serviceType:e.req.query("serviceType")||"Cleaning",province:e.req.query("province")||"",city:e.req.query("city")||"",budget:e.req.query("budget")||"5000",additionalServices:e.req.query("additionalServices")||"",page:parseInt(e.req.query("page")||"1"),limit:parseInt(e.req.query("limit")||"20"),sortBy:e.req.query("sortBy")||"rating"};let s=[],r=0;try{const{serviceType:o,province:l,city:d,budget:c}=t;let u=`
      SELECT DISTINCT
        u.id, u.first_name, u.last_name, u.email, u.phone, u.city, u.province, u.is_verified,
        p.bio, p.profile_image_url,
        AVG(ws.hourly_rate) as avg_rate,
        COUNT(ws.id) as service_count,
        GROUP_CONCAT(ws.service_name) as services_list,
        (SELECT ws2.description FROM worker_services ws2 WHERE ws2.user_id = u.id AND ws2.is_available = 1 LIMIT 1) as primary_description
      FROM users u
      LEFT JOIN user_profiles p ON u.id = p.user_id
      LEFT JOIN worker_services ws ON u.id = ws.user_id
      WHERE u.role = 'worker' AND u.is_active = 1 AND ws.is_available = 1
    `;const p=[];if(o&&o.trim()){const v=o.toLowerCase().trim(),f={electricians:["electrical services","electrical","electric","electrician"],plumbers:["plumbing services","plumbing","professional plumbing services","residential plumbing","commercial plumbing","plumber"],"cleaning services":["cleaners","cleaning","cleaner","house cleaning","commercial cleaning"],"hvac services":["hvac","heating","cooling","air conditioning","furnace"],"general contractor":["contractors","general contracting services","contractor","construction","general contracting"],flooring:["flooring services","floor installation","hardwood","carpet","tile"],roofing:["roofing services","roof repair","roof installation"],landscaping:["landscaping services","lawn care","gardening","yard work"],carpenters:["carpentry","carpenter","woodworking","cabinetry","trim work"],painters:["painting","painter","house painting","interior painting","exterior painting"],handyman:["handyman services","general repairs","home repairs","maintenance"],renovations:["renovation","home renovation","remodeling","home improvement","restoration"]};let h=[v];f[v]&&(h=[...h,...f[v]]),Object.entries(f).forEach(([w,x])=>{x.includes(v)&&!h.includes(w)&&h.push(w)}),h=[...new Set(h.filter(w=>w&&w.length>0))];const y=h.map(()=>"(LOWER(ws.service_name) LIKE ? OR LOWER(ws.service_category) LIKE ?)").join(" OR ");u+=` AND (${y})`,p.push(...h.flatMap(w=>[`%${w}%`,`%${w}%`]))}l&&l.trim()&&(u+=" AND LOWER(u.province) = LOWER(?)",p.push(l.trim())),d&&d.trim()&&(u+=" AND LOWER(u.city) LIKE LOWER(?)",p.push(`%${d.trim()}%`)),c&&c>0&&(u+=" AND ws.hourly_rate <= ?",p.push(c)),u+=`
      GROUP BY u.id, u.first_name, u.last_name, u.email, u.phone, u.city, u.province, u.is_verified,
               p.bio, p.profile_image_url
      ORDER BY u.is_verified DESC, avg_rate ASC
    `,s=((await e.env.DB.prepare(u).bind(...p).all()).results||[]).map(v=>{const h=`${v.first_name||""} ${v.last_name||""}`.trim()||"Professional Service Provider",y=v.services_list?v.services_list.split(","):[],w=h.split(" "),x=w.length>=2?`${w[0].charAt(0)}${w[1].charAt(0)}`:h.charAt(0)+(h.charAt(1)||"");return{id:v.id,name:h,initials:x.toUpperCase(),company:h,rating:null,reviewCount:null,hourlyRate:v.avg_rate?Math.round(v.avg_rate):null,experience:null,location:`${v.city||""}, ${v.province||""}`.replace(", ,","").trim()||null,phone:v.phone,description:bc(v.bio||v.primary_description,400),services:y.length>0?y:["General Services"],profileUrl:`/universal-profile/${v.id}`,image:v.profile_image_url||null,avatarColor:w0(x.toUpperCase())}}),r=s.length}catch(o){console.error("Search error:",o),s=[],r=0}const i=(t.page-1)*t.limit,a=Math.min(i+s.length,r),n=s;return e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Search Results - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gray-50">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/" class="flex-shrink-0">
                            <h1 class="text-2xl font-bold text-kwikr-green">
                                <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                            </h1>
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="/" class="text-gray-700 hover:text-kwikr-green transition-colors">
                            <i class="fas fa-home mr-1"></i>Home
                        </a>
                        <button class="text-gray-700 hover:text-kwikr-green transition-colors">
                            Sign In
                        </button>
                        <button class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 transition-colors">
                            Get Started
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Search Header -->
            <div class="bg-white rounded-lg shadow-sm p-6 mb-8">
                <div class="flex items-center justify-between mb-4">
                    <div>
                        <h1 class="text-2xl font-bold text-gray-800">
                            Search Results 
                            <span id="inviteCounter" class="text-lg font-normal text-blue-600" style="display: none;"></span>
                        </h1>
                        <p class="text-gray-600 mt-1">
                            <span class="font-bold text-kwikr-green">${r}</span> providers found for 
                            <span class="font-medium text-kwikr-green">${t.serviceType}</span> 
                            ${t.province||t.city?`in <span class="font-medium">${t.city&&t.province?`${t.city}, ${t.province}`:t.city||t.province||"All Canada"}</span>`:"across Canada"}
                        </p>
                    </div>
                    <a href="/" class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 transition-colors">
                        <i class="fas fa-search mr-2"></i>New Search
                    </a>
                </div>
                
                <!-- Search Summary -->
                <div class="flex flex-wrap gap-2">
                    <span class="bg-kwikr-green bg-opacity-10 text-kwikr-green px-3 py-1 rounded-full text-sm">
                        ${t.serviceType}
                    </span>
                    ${t.province||t.city?`
                        <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm">
                            <i class="fas fa-map-marker-alt mr-1"></i>${t.city?`${t.city}, ${t.province}`:t.province||"All Canada"}
                        </span>
                    `:""}

                    <span class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm">
                        Budget: $${t.budget}
                    </span>
                </div>
            </div>

            <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
                <!-- Filters Sidebar -->
                <div class="lg:col-span-1">
                    <div class="bg-white rounded-lg shadow-sm p-6 sticky top-4">
                        <h3 class="text-lg font-semibold text-gray-800 mb-4">
                            <i class="fas fa-filter mr-2 text-kwikr-green"></i>Filters
                        </h3>
                        
                        <!-- Sort By -->
                        <div class="mb-6">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Sort By</label>
                            <select class="w-full px-3 py-2 border border-gray-300 rounded-lg">
                                <option value="rating">Highest Rated</option>
                                <option value="price_low">Price: Low to High</option>
                                <option value="price_high">Price: High to Low</option>
                                <option value="distance">Nearest First</option>
                                <option value="reviews">Most Reviews</option>
                            </select>
                        </div>
                        
                        <!-- Price Range -->
                        <div class="mb-6">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Price Range</label>
                            <div class="space-y-2">
                                <label class="flex items-center">
                                    <input type="radio" name="priceRange" value="0-50" class="w-4 h-4 text-kwikr-green">
                                    <span class="ml-2 text-sm text-gray-700">$0 - $50/hr</span>
                                </label>
                                <label class="flex items-center">
                                    <input type="radio" name="priceRange" value="50-100" class="w-4 h-4 text-kwikr-green">
                                    <span class="ml-2 text-sm text-gray-700">$50 - $100/hr</span>
                                </label>
                                <label class="flex items-center">
                                    <input type="radio" name="priceRange" value="100+" class="w-4 h-4 text-kwikr-green">
                                    <span class="ml-2 text-sm text-gray-700">$100+/hr</span>
                                </label>
                            </div>
                        </div>
                        
                        <!-- Rating Filter -->
                        <div class="mb-6">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Minimum Rating</label>
                            <div class="space-y-2">
                                <label class="flex items-center">
                                    <input type="radio" name="rating" value="4.5" class="w-4 h-4 text-kwikr-green">
                                    <span class="ml-2 text-sm text-gray-700 flex items-center">
                                        4.5+ <span class="text-yellow-400 ml-1">★★★★★</span>
                                    </span>
                                </label>
                                <label class="flex items-center">
                                    <input type="radio" name="rating" value="4" class="w-4 h-4 text-kwikr-green">
                                    <span class="ml-2 text-sm text-gray-700 flex items-center">
                                        4.0+ <span class="text-yellow-400 ml-1">★★★★☆</span>
                                    </span>
                                </label>
                            </div>
                        </div>
                        
                        <!-- Additional Filters -->
                        <div class="mb-6">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Other Filters</label>
                            <div class="space-y-2">
                                <label class="flex items-center">
                                    <input type="checkbox" name="filters" value="verified" class="w-4 h-4 text-kwikr-green rounded">
                                    <span class="ml-2 text-sm text-gray-700">Verified Only</span>
                                </label>
                                <label class="flex items-center">
                                    <input type="checkbox" name="filters" value="available_today" class="w-4 h-4 text-kwikr-green rounded">
                                    <span class="ml-2 text-sm text-gray-700">Available Today</span>
                                </label>
                            </div>
                        </div>
                        
                        <button class="w-full bg-kwikr-green text-white py-2 px-4 rounded-lg hover:bg-green-600 transition-colors">
                            Apply Filters
                        </button>
                    </div>
                </div>

                <!-- Results List -->
                <div class="lg:col-span-3">
                    <div class="space-y-6 mb-8">
                        ${n.map(o=>`
                            <div class="bg-white rounded-lg shadow-sm border hover:shadow-md transition-shadow duration-300 p-6">
                                <div class="flex items-start space-x-4">
                                    ${o.image?`<img src="${o.image}" alt="${o.name}" class="w-20 h-20 rounded-full object-cover">`:`<div class="w-20 h-20 rounded-full bg-gradient-to-br ${o.avatarColor} flex items-center justify-center text-white text-xl font-bold">${o.initials}</div>`}
                                    <div class="flex-1">
                                        <div class="flex items-center justify-between mb-2">
                                            <div>
                                                <h3 class="text-lg font-semibold text-gray-800">${o.name}</h3>
                                                <p class="text-sm text-gray-600">${o.company}</p>
                                            </div>
                                            <div class="text-right">
                                                ${o.hourlyRate?`<div class="text-2xl font-bold text-kwikr-green">$${o.hourlyRate}/hr</div>`:'<div class="text-lg text-gray-500">Rate on request</div>'}
                                                <div class="text-sm text-gray-500">Professional Provider</div>
                                            </div>
                                        </div>
                                        
                                        <div class="flex items-center space-x-4 mb-3">
                                            ${o.rating&&o.reviewCount?`<div class="flex items-center">
                                                <span class="text-yellow-400 text-sm">★★★★★</span>
                                                <span class="ml-1 text-sm font-medium">${o.rating.toFixed(1)}</span>
                                                <span class="ml-1 text-sm text-gray-500">(${o.reviewCount} reviews)</span>
                                              </div>`:'<div class="text-sm text-gray-500">No reviews yet</div>'}
                                            <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">✓ Listed</span>
                                            <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full">Contact for availability</span>
                                        </div>
                                        
                                        ${o.description?`<p class="text-gray-600 text-sm mb-4">${o.description}</p>`:""}
                                        
                                        <div class="flex flex-wrap gap-2 mb-4">
                                            ${o.services.map(l=>'<span class="bg-gray-100 text-gray-700 text-xs px-3 py-1 rounded-full">'+l+"</span>").join("")}
                                        </div>
                                        
                                        <div class="flex items-center space-x-3">
                                            <button onclick="toggleInvite(${o.id}, '${o.name}', this)" 
                                                    class="invite-btn bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors inline-flex items-center" 
                                                    data-provider-id="${o.id}" 
                                                    data-invited="false">
                                                <i class="fas fa-user-plus mr-2"></i>
                                                <span class="invite-text">Invite to Bid</span>
                                            </button>
                                            <a href="${o.profileUrl}" class="border border-kwikr-green text-kwikr-green px-6 py-2 rounded-lg hover:bg-kwikr-green hover:text-white transition-colors inline-flex items-center">
                                                <i class="fas fa-eye mr-2"></i>View Profile
                                            </a>
                                            <button class="border border-gray-300 text-gray-700 px-6 py-2 rounded-lg hover:bg-gray-50 transition-colors">
                                                <i class="fas fa-heart mr-2"></i>Save
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `).join("")}
                    </div>
                    
                    <!-- Pagination -->
                    <div class="flex items-center justify-between bg-white px-6 py-4 rounded-lg shadow-sm">
                        <div class="text-sm text-gray-700">
                            Showing <span class="font-medium">${i+1}</span> to <span class="font-medium">${a}</span> of <span class="font-medium">${r}</span> results
                        </div>
                        <div class="flex items-center space-x-2">
                            ${t.page>1?'<a href="/search?'+new URLSearchParams({serviceType:t.serviceType,province:t.province,city:t.city,budget:t.budget,page:String(t.page-1)}).toString()+'" class="px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 flex items-center"><i class="fas fa-chevron-left mr-2"></i>Previous</a>':'<span class="px-3 py-2 border border-gray-300 rounded-lg opacity-50 cursor-not-allowed flex items-center"><i class="fas fa-chevron-left mr-2"></i>Previous</span>'}
                            
                            <span class="px-3 py-2 bg-kwikr-green text-white rounded-lg font-medium">${t.page}</span>
                            
                            ${a<r?'<a href="/search?'+new URLSearchParams({serviceType:t.serviceType,province:t.province,city:t.city,budget:t.budget,page:String(t.page+1)}).toString()+'" class="px-3 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 flex items-center">Next<i class="fas fa-chevron-right ml-2"></i></a>':'<span class="px-3 py-2 border border-gray-300 rounded-lg opacity-50 cursor-not-allowed flex items-center">Next<i class="fas fa-chevron-right ml-2"></i></span>'}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Invited Providers Summary (Hidden by default) -->
        <div id="invitedSummary" class="fixed bottom-6 right-6 bg-white rounded-lg shadow-lg border border-gray-200 p-4 max-w-sm" style="display: none;">
            <div class="flex items-center justify-between mb-3">
                <h3 class="text-lg font-semibold text-gray-800">
                    <i class="fas fa-users text-blue-600 mr-2"></i>Invited Providers
                </h3>
                <button onclick="toggleInvitedSummary()" class="text-gray-400 hover:text-gray-600">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div id="invitedList" class="space-y-2 mb-4">
                <!-- Invited providers will be listed here -->
            </div>
            <div class="flex space-x-2">
                <button onclick="proceedToBidding()" class="flex-1 bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 transition-colors text-sm">
                    <i class="fas fa-arrow-right mr-2"></i>Proceed to Post Job
                </button>
                <button onclick="clearAllInvites()" class="px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors text-sm">
                    Clear All
                </button>
            </div>
        </div>
        
        <!-- Floating Invite Counter -->
        <div id="floatingInviteBtn" class="fixed bottom-6 right-6 bg-blue-600 text-white rounded-full w-16 h-16 flex items-center justify-center shadow-lg cursor-pointer hover:bg-blue-700 transition-colors" 
             style="display: none;" onclick="toggleInvitedSummary()">
            <div class="text-center">
                <i class="fas fa-users text-sm"></i>
                <div id="floatingCount" class="text-xs font-bold">0</div>
            </div>
        </div>

        <script>
            // Initialize invite system
            let invitedProviders = new Set();
            let invitedProvidersData = new Map();
            
            function toggleInvite(providerId, providerName, buttonElement) {
                const isInvited = buttonElement.getAttribute('data-invited') === 'true';
                const inviteText = buttonElement.querySelector('.invite-text');
                const icon = buttonElement.querySelector('i');
                
                if (isInvited) {
                    // Remove invitation
                    invitedProviders.delete(providerId);
                    invitedProvidersData.delete(providerId);
                    buttonElement.setAttribute('data-invited', 'false');
                    buttonElement.className = 'invite-btn bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors inline-flex items-center';
                    icon.className = 'fas fa-user-plus mr-2';
                    inviteText.textContent = 'Invite to Bid';
                    
                    showNotification(\`Invitation withdrawn for \${providerName}\`, 'info');
                } else {
                    // Add invitation
                    invitedProviders.add(providerId);
                    invitedProvidersData.set(providerId, { name: providerName });
                    buttonElement.setAttribute('data-invited', 'true');
                    buttonElement.className = 'invite-btn bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors inline-flex items-center';
                    icon.className = 'fas fa-check mr-2';
                    inviteText.textContent = 'Invited';
                    
                    showNotification(\`\${providerName} invited to bid on your project!\`, 'success');
                }
                
                updateInviteUI();
            }
            
            function updateInviteUI() {
                const count = invitedProviders.size;
                const counter = document.getElementById('inviteCounter');
                const floatingBtn = document.getElementById('floatingInviteBtn');
                const floatingCount = document.getElementById('floatingCount');
                
                // Update header counter
                if (counter) {
                    counter.textContent = count > 0 ? \`(\${count} invited)\` : '';
                    counter.style.display = count > 0 ? 'inline' : 'none';
                }
                
                // Update floating button
                if (floatingBtn && floatingCount) {
                    floatingCount.textContent = count;
                    floatingBtn.style.display = count > 0 ? 'flex' : 'none';
                }
                
                updateInvitedList();
            }
            
            function updateInvitedList() {
                const invitedList = document.getElementById('invitedList');
                if (!invitedList) return;
                
                invitedList.innerHTML = '';
                invitedProvidersData.forEach((data, providerId) => {
                    const item = document.createElement('div');
                    item.className = 'flex items-center justify-between bg-gray-50 p-2 rounded text-sm';
                    item.innerHTML = \`
                        <span class="text-gray-800">\${data.name}</span>
                        <button onclick="removeInvite('\${providerId}', '\${data.name}')" class="text-red-500 hover:text-red-700">
                            <i class="fas fa-times"></i>
                        </button>
                    \`;
                    invitedList.appendChild(item);
                });
            }
            
            function removeInvite(providerId, providerName) {
                // Find and click the invite button to toggle it off
                const button = document.querySelector(\`[data-provider-id="\${providerId}"]\`);
                if (button) {
                    toggleInvite(providerId, providerName, button);
                }
            }
            
            function toggleInvitedSummary() {
                const summary = document.getElementById('invitedSummary');
                const floatingBtn = document.getElementById('floatingInviteBtn');
                
                if (summary.style.display === 'none') {
                    summary.style.display = 'block';
                    floatingBtn.style.display = 'none';
                    updateInvitedList();
                } else {
                    summary.style.display = 'none';
                    floatingBtn.style.display = invitedProviders.size > 0 ? 'flex' : 'none';
                }
            }
            
            function clearAllInvites() {
                if (confirm('Are you sure you want to clear all invitations?')) {
                    // Reset all invite buttons
                    document.querySelectorAll('.invite-btn[data-invited="true"]').forEach(button => {
                        const providerId = button.getAttribute('data-provider-id');
                        const providerName = invitedProvidersData.get(providerId)?.name || 'Provider';
                        toggleInvite(providerId, providerName, button);
                    });
                    
                    toggleInvitedSummary(); // Close summary
                    showNotification('All invitations cleared', 'info');
                }
            }
            
            function proceedToBidding() {
                if (invitedProviders.size === 0) {
                    showNotification('Please invite at least one provider first', 'error');
                    return;
                }
                
                // Store invited providers in localStorage for the job posting flow
                localStorage.setItem('invitedProviders', JSON.stringify(Array.from(invitedProviders)));
                localStorage.setItem('invitedProvidersData', JSON.stringify(Array.from(invitedProvidersData.entries())));
                
                // Redirect to job posting page (you'll need to implement this)
                showNotification(\`Proceeding with \${invitedProviders.size} invited providers\`, 'success');
                
                // TODO: Redirect to job posting page
                // window.location.href = '/post-job';
            }
            
            function showNotification(message, type = 'info') {
                const notification = document.createElement('div');
                notification.className = \`fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transition-all duration-300 transform translate-x-full \${
                    type === 'success' ? 'bg-green-500 text-white' : 
                    type === 'error' ? 'bg-red-500 text-white' : 
                    'bg-blue-500 text-white'
                }\`;
                notification.innerHTML = \`
                    <div class="flex items-center">
                        <i class="fas \${type === 'success' ? 'fa-check-circle' : type === 'error' ? 'fa-exclamation-circle' : 'fa-info-circle'} mr-2"></i>
                        <span>\${message}</span>
                        <button onclick="this.parentElement.parentElement.remove()" class="ml-4 text-white hover:text-gray-200">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                \`;
                
                document.body.appendChild(notification);
                
                setTimeout(() => notification.classList.remove('translate-x-full'), 100);
                setTimeout(() => {
                    notification.classList.add('translate-x-full');
                    setTimeout(() => notification.remove(), 300);
                }, 3000);
            }
            
            // Function to handle category clicks
            function searchByCategory(category) {
                // Navigate to search page with the selected category
                const searchUrl = \`/search?serviceType=\${encodeURIComponent(category)}&location=&budget=5000\`;
                window.location.href = searchUrl;
            }
        <\/script>
    </body>
    </html>
  `)});D.get("/profile/:userId",async e=>{const t=e.req.param("userId"),s=e.req.header("User-Agent")||"unknown",r=e.req.header("Referer")||"unknown";return U.info(`Profile page request for user ${t} - redirecting to universal profile`,{userId:t,userAgent:s,referer:r,endpoint:`/profile/${t}`,redirect:`/universal-profile/${t}`}),e.redirect(`/universal-profile/${t}`,301)});D.get("/search",e=>e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Find Service Providers - The Canadian Platform</title>
        <meta name="description" content="The Canadian platform that connects you with trusted, verified service providers for all your needs.">
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'primary-blue': '#4F73DF',
                  'primary-dark': '#3A5BB8',
                  'light-blue': '#E8F0FF'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <style>
          .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
          }
          .search-shadow {
            box-shadow: 0 20px 60px -10px rgba(0, 0, 0, 0.15);
          }
          .hover-lift:hover {
            transform: translateY(-2px);
          }
        </style>
    </head>
    <body class="bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 min-h-screen">
        <!-- Hero Section -->
        <div class="gradient-bg text-white py-20">
            <div class="max-w-6xl mx-auto px-4 text-center">
                <h1 class="text-4xl md:text-5xl font-bold mb-4">
                    The Canadian platform that connects you with trusted, verified service providers for all your needs.
                </h1>
                <p class="text-xl text-blue-100 mb-12 max-w-3xl mx-auto">
                    From home repairs to professional services - find qualified, insured, and background-checked professionals in your area.
                </p>
                
                <!-- Main Search Card -->
                <div class="bg-white rounded-2xl p-8 shadow-2xl search-shadow max-w-4xl mx-auto">
                    <h2 class="text-2xl font-semibold text-gray-800 mb-8 text-center">
                        Find the right service provider for your needs
                    </h2>
                    
                    <form id="searchForm" class="space-y-6">
                        <!-- Search Inputs Row -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <!-- Service Type Dropdown -->
                            <div class="space-y-2">
                                <label class="flex items-center text-sm font-medium text-gray-700">
                                    <i class="fas fa-tools text-primary-blue mr-2"></i>
                                    Service Type
                                </label>
                                <select id="serviceTypeSearch" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-primary-blue focus:ring-0 text-gray-800 bg-white">
                                    <option value="Cleaning Services">Cleaning Services</option>
                                    <option value="Plumbers">Plumbers</option>
                                    <option value="Carpenters">Carpenters</option>
                                    <option value="Electricians">Electricians</option>
                                    <option value="Flooring">Flooring</option>
                                    <option value="Painters">Painters</option>
                                    <option value="Handyman">Handyman</option>
                                    <option value="HVAC Services">HVAC Services</option>
                                    <option value="General Contractor">General Contractor</option>
                                    <option value="Roofing">Roofing</option>
                                    <option value="Landscaping">Landscaping</option>
                                    <option value="Renovations">Renovations</option>
                                </select>
                            </div>
                            
                            <!-- Location Input -->
                            <div class="space-y-2">
                                <label class="flex items-center text-sm font-medium text-gray-700">
                                    <i class="fas fa-map-marker-alt text-primary-blue mr-2"></i>
                                    Location in Canada
                                </label>
                                <input type="text" id="location" placeholder="Toronto, ON" value="Toronto, ON"
                                       class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-primary-blue focus:ring-0 text-gray-800">
                            </div>
                        </div>
                        
                        
                        <!-- Additional Services (Optional) -->
                        <div class="space-y-3">
                            <div class="flex items-center">
                                <i class="fas fa-plus-circle text-primary-blue mr-2"></i>
                                <span class="text-sm font-medium text-gray-700">Additional Services (Optional)</span>
                            </div>
                            <div id="additionalServicesSearchContainer" class="grid grid-cols-2 md:grid-cols-3 gap-3">
                                <!-- Dynamic content will be populated here by JavaScript -->
                            </div>
                            <!-- Other (please specify) text field for search -->
                            <div id="otherServiceSearchField" class="hidden mt-3">
                                <input type="text" id="otherServiceSearchText" placeholder="Please specify your additional service needs..."
                                       class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-primary-blue focus:ring-0 text-gray-800">
                            </div>
                        </div>
                        
                        <!-- Budget Range -->
                        <div class="space-y-3">
                            <div class="flex items-center justify-between">
                                <label class="flex items-center text-sm font-medium text-gray-700">
                                    <i class="fas fa-dollar-sign text-primary-blue mr-2"></i>
                                    Min. Budget Range
                                </label>
                                <span id="budgetDisplay" class="text-lg font-semibold text-primary-blue">Budget: $5000</span>
                            </div>
                            <div class="relative">
                                <input type="range" id="budgetRange" min="150" max="5000" value="5000" step="50" 
                                       class="w-full h-3 bg-gray-200 rounded-lg appearance-none cursor-pointer slider"
                                       style="background: linear-gradient(to right, #4F73DF 0%, #4F73DF 100%, #e5e7eb 100%, #e5e7eb 100%);">
                                <div class="flex justify-between text-xs text-gray-500 mt-2">
                                    <span>$150</span>
                                    <span>$5000</span>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Action Buttons -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 pt-4">
                            <button type="button" id="findProvidersBtn" 
                                    class="w-full bg-primary-blue text-white py-4 px-8 rounded-xl font-semibold text-lg hover:bg-primary-dark transition-all duration-300 hover-lift flex items-center justify-center">
                                <i class="fas fa-search mr-3"></i>
                                Find Service Providers
                            </button>
                            <a href="/signup/client"
                                    class="w-full border-2 border-primary-blue text-primary-blue py-4 px-8 rounded-xl font-semibold text-lg hover:bg-primary-blue hover:text-white transition-all duration-300 hover-lift flex items-center justify-center">
                                <i class="fas fa-briefcase mr-3"></i>
                                Post a Job
                            </a>
                        </div>
                    </form>
                </div>
                
                <!-- Popular Tasks -->
                <div class="mt-16 text-center">
                    <p class="text-blue-100 mb-6 text-lg">Popular tasks for cleaner:</p>
                    <div class="flex flex-wrap justify-center gap-3">
                        <button class="bg-white bg-opacity-20 text-white px-6 py-3 rounded-full hover:bg-opacity-30 transition-all duration-300 hover-lift popular-task">
                            clean my house
                        </button>
                        <button class="bg-white bg-opacity-20 text-white px-6 py-3 rounded-full hover:bg-opacity-30 transition-all duration-300 hover-lift popular-task">
                            deep clean my kitchen
                        </button>
                        <button class="bg-white bg-opacity-20 text-white px-6 py-3 rounded-full hover:bg-opacity-30 transition-all duration-300 hover-lift popular-task">
                            clean my office space
                        </button>
                        <button class="bg-white bg-opacity-20 text-white px-6 py-3 rounded-full hover:bg-opacity-30 transition-all duration-300 hover-lift popular-task">
                            do a move-out cleaning
                        </button>
                        <button class="bg-white bg-opacity-20 text-white px-6 py-3 rounded-full hover:bg-opacity-30 transition-all duration-300 hover-lift popular-task">
                            clean my windows
                        </button>
                    </div>
                </div>
                
                <!-- Auth Links -->
                <div class="mt-12 text-center">
                    <p class="text-blue-100 mb-4">Already have an account? 
                        <a href="/auth/login" class="text-white font-semibold hover:underline">Sign in</a>
                        →
                    </p>
                    <p class="text-blue-100">
                        <a href="/subscriptions/pricing" class="text-white font-semibold hover:underline">Create Account</a>
                        →
                        <span class="mx-2">|</span>
                        <a href="/browse-jobs" class="text-white font-semibold hover:underline">Browse All Jobs</a>
                        →
                        <span class="mx-2">|</span>
                        <a href="/find-jobs" class="text-white font-semibold hover:underline">Find Jobs</a>
                        →
                    </p>
                </div>
            </div>
        </div>
        
        <!-- Search Results Section -->
        <div id="searchResults" class="hidden max-w-6xl mx-auto px-4 py-16">
            <div class="flex items-center justify-between mb-8">
                <h2 class="text-3xl font-bold text-gray-800">Service Providers Near You</h2>
                <div class="flex items-center space-x-4">
                    <select id="sortBy" class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-primary-blue focus:border-primary-blue">
                        <option value="rating">Sort by Rating</option>
                        <option value="price_low">Price: Low to High</option>
                        <option value="price_high">Price: High to Low</option>
                        <option value="distance">Distance</option>
                        <option value="reviews">Most Reviews</option>
                    </select>
                    <div class="flex items-center space-x-2">
                        <button id="gridView" class="p-2 border border-gray-300 rounded-lg hover:bg-gray-50">
                            <i class="fas fa-th-large"></i>
                        </button>
                        <button id="listView" class="p-2 border border-gray-300 rounded-lg hover:bg-gray-50 bg-primary-blue text-white">
                            <i class="fas fa-list"></i>
                        </button>
                    </div>
                </div>
            </div>
            
            <!-- Results Grid -->
            <div class="grid grid-cols-1 gap-8">                
                <!-- Provider Cards -->
                <div id="providersList" class="space-y-6">
                    <!-- Provider cards will be loaded here -->
                </div>
                
                <!-- Loading State -->
                <div id="loadingState" class="text-center py-12">
                    <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-blue mx-auto mb-4"></div>
                    <p class="text-gray-600">Finding service providers...</p>
                </div>
                
                <!-- Empty State -->
                <div id="emptyState" class="hidden text-center py-12">
                    <i class="fas fa-search text-gray-400 text-4xl mb-4"></i>
                    <h3 class="text-xl font-semibold text-gray-600 mb-2">No providers found</h3>
                    <p class="text-gray-500 mb-6">Try adjusting your search criteria or expanding your location</p>
                    <button class="bg-primary-blue text-white px-6 py-3 rounded-lg hover:bg-primary-dark">
                        Modify Search
                    </button>
                </div>
            </div>
        </div>

        <!-- Login/Signup Modals -->
        <div id="loginModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
            <div class="bg-white rounded-2xl max-w-md w-full p-6">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-xl font-semibold">Sign In</h3>
                    <button onclick="hideLoginModal()" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <form class="space-y-4">
                    <div>
                        <input type="email" placeholder="Email address" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-primary-blue focus:border-primary-blue">
                    </div>
                    <div>
                        <input type="password" placeholder="Password" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-primary-blue focus:border-primary-blue">
                    </div>
                    <button type="submit" class="w-full bg-primary-blue text-white py-3 rounded-lg hover:bg-primary-dark">
                        Sign In
                    </button>
                </form>
                <p class="text-center text-sm text-gray-600 mt-4">
                    Don't have an account? 
                    <a href="/subscriptions/pricing" class="text-primary-blue hover:underline">Sign up</a>
                </p>
            </div>
        </div>
        
        <div id="signupModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
            <div class="bg-white rounded-2xl max-w-md w-full p-6">
                <div class="flex items-center justify-between mb-4">
                    <h3 class="text-xl font-semibold">Create Account</h3>
                    <button onclick="hideSignupModal()" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <form class="space-y-4">
                    <div class="grid grid-cols-2 gap-3">
                        <input type="text" placeholder="First name" class="px-4 py-3 border border-gray-300 rounded-lg focus:ring-primary-blue focus:border-primary-blue">
                        <input type="text" placeholder="Last name" class="px-4 py-3 border border-gray-300 rounded-lg focus:ring-primary-blue focus:border-primary-blue">
                    </div>
                    <div>
                        <input type="email" placeholder="Email address" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-primary-blue focus:border-primary-blue">
                    </div>
                    <div>
                        <input type="password" placeholder="Password" class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-primary-blue focus:border-primary-blue">
                    </div>
                    <div>
                        <select class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-primary-blue focus:border-primary-blue">
                            <option>I'm looking for services (Client)</option>
                            <option>I provide services (Worker)</option>
                        </select>
                    </div>
                    <button type="submit" class="w-full bg-primary-blue text-white py-3 rounded-lg hover:bg-primary-dark">
                        Create Account
                    </button>
                </form>
                <p class="text-center text-sm text-gray-600 mt-4">
                    Already have an account? 
                    <a href="/auth/login" class="text-primary-blue hover:underline">Sign in</a>
                </p>
            </div>
        </div>
        
        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js?v=${Date.now()}"><\/script>
        <script>
          // Budget slider functionality
          const budgetRange = document.getElementById('budgetRange');
          const budgetDisplay = document.getElementById('budgetDisplay');
          
          budgetRange.addEventListener('input', function() {
            budgetDisplay.textContent = 'Budget: $' + this.value;
            const percentage = ((this.value - this.min) / (this.max - this.min)) * 100;
            this.style.background = 'linear-gradient(to right, #4F73DF 0%, #4F73DF ' + percentage + '%, #e5e7eb ' + percentage + '%, #e5e7eb 100%)';
          });
          
          // Initialize slider
          const percentage = ((budgetRange.value - budgetRange.min) / (budgetRange.max - budgetRange.min)) * 100;
          budgetRange.style.background = 'linear-gradient(to right, #4F73DF 0%, #4F73DF ' + percentage + '%, #e5e7eb ' + percentage + '%, #e5e7eb 100%)';
          
          // Search functionality
          document.getElementById('findProvidersBtn').addEventListener('click', function() {
            performSearch();
          });
          

          
          async function performSearch() {
            const formData = {
              serviceType: document.getElementById('serviceTypeSearch').value,
              location: document.getElementById('location').value,

              budget: document.getElementById('budgetRange').value,
              additionalServices: Array.from(document.querySelectorAll('input[name="additionalServices"]:checked')).map(cb => cb.value)
            };
            
            console.log('Searching with:', formData);
            
            // Hide hero section and show results
            document.querySelector('.gradient-bg').style.display = 'none';
            document.getElementById('searchResults').classList.remove('hidden');
            
            // Call API to search providers
            try {
              const response = await fetch('/api/providers/search?' + Date.now(), {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'Cache-Control': 'no-cache',
                  'Pragma': 'no-cache'
                },
                body: JSON.stringify(formData)
              });
              
              if (response.ok) {
                const data = await response.json();
                if (data.success && data.providers) {
                  console.log('API search successful:', data.total, 'providers found');
                  loadSearchResults(data.providers);
                } else {
                  console.warn('API search returned no results or failed:', data.error);
                  loadSearchResults([]);
                }
              } else {
                console.error('API search failed with status:', response.status);
                loadSearchResults([]);
              }
            } catch (error) {
              console.error('Search error:', error);
              loadSearchResults([]);
            }
          }
          
          function getAvatarColor(initials) {
            const colors = [
              'from-blue-500 to-purple-600',
              'from-green-500 to-teal-600', 
              'from-red-500 to-pink-600',
              'from-yellow-500 to-orange-600',
              'from-indigo-500 to-blue-600',
              'from-purple-500 to-indigo-600',
              'from-pink-500 to-rose-600',
              'from-teal-500 to-cyan-600'
            ];
            
            const index = initials.charCodeAt(0) % colors.length;
            return colors[index];
          }
          
          function getDemoProviders() {
            return [
              {
                id: 1,
                name: 'Sarah Johnson',
                company: 'Crystal Clean Services',
                rating: 4.9,
                reviews: 127,
                rate: 45,
                distance: 2.3,
                services: ['Residential Cleaning', 'Deep Cleaning', 'Move-out Cleaning'],
                image: null,
                initials: 'SJ',
                verified: true,
                available: 'Today',
                bio: 'Professional cleaning service with 8 years experience. Fully insured and bonded. Specializing in residential and commercial cleaning.'
              },
              {
                id: 2,
                name: 'Mike Chen',
                company: 'Pro Clean Solutions',
                rating: 4.8,
                reviews: 89,
                rate: 40,
                distance: 3.1,
                services: ['Office Cleaning', 'Commercial Cleaning', 'Window Cleaning'],
                image: null,
                initials: 'MC',
                verified: true,
                available: 'Tomorrow',
                bio: 'Eco-friendly cleaning solutions for offices and commercial spaces. Licensed and insured with excellent customer reviews.'
              },
              {
                id: 3,
                name: 'Lisa Rodriguez',
                company: 'Spotless Homes',
                rating: 4.7,
                reviews: 203,
                rate: 38,
                distance: 4.5,
                services: ['Home Cleaning', 'Kitchen Deep Clean', 'Bathroom Cleaning'],
                image: null,
                initials: 'LR',
                verified: true,
                available: 'This Week',
                bio: 'Detail-oriented home cleaning specialist. Background checked and bonded. Flexible scheduling and customized cleaning plans.'
              }
            ];
          }
          
          // JavaScript truncation function for frontend consistency
          function truncateText(text, maxLength = 400) {
            if (!text) return '';
            
            // Strip HTML tags if any
            const textOnly = text.replace(/<[^>]*>/g, ' ').replace(/s+/g, ' ').trim();
            
            // Truncate to maxLength characters
            if (textOnly.length <= maxLength) {
              return textOnly;
            }
            
            // Find the last complete word within the limit
            const truncated = textOnly.substring(0, maxLength);
            const lastSpaceIndex = truncated.lastIndexOf(' ');
            
            // If we found a space near the end, truncate to the last complete word
            const finalText = lastSpaceIndex > maxLength * 0.8 ? truncated.substring(0, lastSpaceIndex) : truncated;
            
            return finalText + '...';
          }
          
          function loadSearchResults(providers) {
            document.getElementById('loadingState').style.display = 'none';
            
            if (providers.length === 0) {
              document.getElementById('emptyState').classList.remove('hidden');
              return;
            }
            
            const providersList = document.getElementById('providersList');
            providersList.innerHTML = providers.map(provider => \`
              <div class="bg-white rounded-lg shadow-sm border hover:shadow-md transition-shadow duration-300 p-6">
                <div class="flex items-start space-x-4">
                  \${provider.image ? 
                    \`<img src="\${provider.image}" alt="\${provider.name}" class="w-20 h-20 rounded-full object-cover">\` : 
                    \`<div class="w-20 h-20 rounded-full bg-gradient-to-br \${getAvatarColor(provider.initials || provider.name.split(' ').map(n => n[0]).join(''))} flex items-center justify-center text-white text-xl font-bold">\${provider.initials || provider.name.split(' ').map(n => n[0]).join('')}</div>\`
                  }
                  <div class="flex-1">
                    <div class="flex items-center justify-between mb-2">
                      <div>
                        <h3 class="text-lg font-semibold text-gray-800">\${provider.name}</h3>
                        <p class="text-sm text-gray-600">\${provider.company}</p>
                      </div>
                      <div class="text-right">
                        <div class="text-2xl font-bold text-primary-blue">$\${provider.rate}/hr</div>
                        <div class="text-sm text-gray-500">\${provider.distance} km away</div>
                      </div>
                    </div>
                    
                    <div class="flex items-center space-x-4 mb-3">
                      <div class="flex items-center">
                        <span class="text-yellow-400 text-sm">★★★★★</span>
                        <span class="ml-1 text-sm font-medium">\${provider.rating}</span>
                        <span class="ml-1 text-sm text-gray-500">(\${provider.reviews} reviews)</span>
                      </div>
                      \${provider.verified ? '<span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">✓ Verified</span>' : ''}
                      <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full">Available \${provider.available}</span>
                    </div>
                    
                    <p class="text-gray-600 text-sm mb-4">\${truncateText(provider.bio, 400)}</p>
                    
                    <div class="flex flex-wrap gap-2 mb-4">
                      \${provider.services.map(service => \`
                        <span class="bg-gray-100 text-gray-700 text-xs px-3 py-1 rounded-full">\${service}</span>
                      \`).join('')}
                    </div>
                    
                    <div class="flex items-center space-x-3">
                      <button onclick="toggleInvite(\${provider.id}, '\${provider.name}', this)" 
                              class="invite-btn bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors inline-flex items-center" 
                              data-provider-id="\${provider.id}" 
                              data-invited="false">
                        <i class="fas fa-user-plus mr-2"></i>
                        <span class="invite-text">Invite to Bid</span>
                      </button>
                      <a href="/universal-profile/\${provider.id}" class="border border-kwikr-green text-kwikr-green px-6 py-2 rounded-lg hover:bg-kwikr-green hover:text-white transition-colors inline-flex items-center">
                        <i class="fas fa-eye mr-2"></i>View Profile
                      </a>
                      <button class="border border-gray-300 text-gray-700 px-6 py-2 rounded-lg hover:bg-gray-50 transition-colors">
                        <i class="fas fa-heart mr-2"></i>Save
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            \`).join('');
          }
          
          // Invite System
          let invitedProviders = new Set();
          
          function toggleInvite(providerId, providerName, buttonElement) {
            const isInvited = buttonElement.getAttribute('data-invited') === 'true';
            const inviteText = buttonElement.querySelector('.invite-text');
            const icon = buttonElement.querySelector('i');
            
            if (isInvited) {
              // Remove invitation
              invitedProviders.delete(providerId);
              buttonElement.setAttribute('data-invited', 'false');
              buttonElement.className = 'invite-btn bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-colors inline-flex items-center';
              icon.className = 'fas fa-user-plus mr-2';
              inviteText.textContent = 'Invite to Bid';
              
              // Show success message
              showNotification(\`Invitation withdrawn for \${providerName}\`, 'info');
            } else {
              // Add invitation
              invitedProviders.add(providerId);
              buttonElement.setAttribute('data-invited', 'true');
              buttonElement.className = 'invite-btn bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors inline-flex items-center';
              icon.className = 'fas fa-check mr-2';
              inviteText.textContent = 'Invited';
              
              // Show success message
              showNotification(\`\${providerName} invited to bid on your project!\`, 'success');
            }
            
            updateInviteCounter();
          }
          
          function updateInviteCounter() {
            const counter = document.getElementById('inviteCounter');
            if (counter) {
              const count = invitedProviders.size;
              counter.textContent = count > 0 ? \`(\${count} invited)\` : '';
              counter.style.display = count > 0 ? 'inline' : 'none';
            }
          }
          
          function showNotification(message, type = 'info') {
            // Create notification element
            const notification = document.createElement('div');
            notification.className = \`fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transition-all duration-300 transform translate-x-full \${
              type === 'success' ? 'bg-green-500 text-white' : 
              type === 'error' ? 'bg-red-500 text-white' : 
              'bg-blue-500 text-white'
            }\`;
            notification.innerHTML = \`
              <div class="flex items-center">
                <i class="fas \${type === 'success' ? 'fa-check-circle' : type === 'error' ? 'fa-exclamation-circle' : 'fa-info-circle'} mr-2"></i>
                <span>\${message}</span>
                <button onclick="this.parentElement.parentElement.remove()" class="ml-4 text-white hover:text-gray-200">
                  <i class="fas fa-times"></i>
                </button>
              </div>
            \`;
            
            document.body.appendChild(notification);
            
            // Animate in
            setTimeout(() => {
              notification.classList.remove('translate-x-full');
            }, 100);
            
            // Auto remove after 3 seconds
            setTimeout(() => {
              notification.classList.add('translate-x-full');
              setTimeout(() => {
                if (notification.parentElement) {
                  notification.remove();
                }
              }, 300);
            }, 3000);
          }
          
          function getInvitedProviders() {
            return Array.from(invitedProviders);
          }
          
          // Modal functions
          function showLoginModal() {
            document.getElementById('loginModal').classList.remove('hidden');
          }
          
          function hideLoginModal() {
            document.getElementById('loginModal').classList.add('hidden');
          }
          
          function showSignupModal() {
            document.getElementById('signupModal').classList.remove('hidden');
          }
          
          function hideSignupModal() {
            document.getElementById('signupModal').classList.add('hidden');
          }
        <\/script>
    </body>
    </html>
  `));D.get("/demo-client",async e=>{const t=Date.now(),s=btoa(`demo-client:${t}:reliable`),i=(e.req.header("host")||"").includes(".dev")||e.req.header("x-forwarded-proto")==="https";return e.header("Set-Cookie",`demo_session=client:${t}; path=/; max-age=86400; secure=${i}; samesite=lax`),e.header("Set-Cookie",`session=${s}; path=/; max-age=86400; secure=${i}; samesite=lax`),e.redirect("/dashboard/client")});D.get("/demo-worker",async e=>{const t=Date.now(),s=btoa(`demo-worker:${t}:reliable`),i=(e.req.header("host")||"").includes(".dev")||e.req.header("x-forwarded-proto")==="https";return e.header("Set-Cookie",`demo_session=worker:${t}; path=/; max-age=86400; secure=${i}; samesite=lax`),e.header("Set-Cookie",`session=${s}; path=/; max-age=86400; secure=${i}; samesite=lax`),e.redirect("/dashboard/worker")});D.get("/demo-admin",async e=>{const t=Date.now(),s=btoa(`demo-admin:${t}:reliable`),i=(e.req.header("host")||"").includes(".dev")||e.req.header("x-forwarded-proto")==="https";return e.header("Set-Cookie",`demo_session=admin:${t}; path=/; max-age=86400; secure=${i}; samesite=lax`),e.header("Set-Cookie",`session=${s}; path=/; max-age=86400; secure=${i}; samesite=lax`),e.redirect("/dashboard/admin")});D.get("/",e=>e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate">
        <meta http-equiv="Pragma" content="no-cache">
        <meta http-equiv="Expires" content="0">
        <title>Kwikr Directory - Connect with Canadian Service Providers</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>

        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <link href="/static/styles.css" rel="stylesheet">
    </head>
    <body class="bg-white font-sans">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <div class="flex-shrink-0">
                            <h1 class="text-2xl font-bold text-kwikr-green">
                                <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                            </h1>
                        </div>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="#howItWorksSection" class="text-gray-700 hover:text-kwikr-green transition-colors">How it Works</a>
                        <a href="/auth/login" class="text-gray-700 hover:text-kwikr-green transition-colors font-medium">
                            <i class="fas fa-sign-in-alt mr-1"></i>Login
                        </a>
                        <a href="/clear-cookies" class="text-gray-500 hover:text-red-600 transition-colors text-sm" title="Clear sessions if experiencing redirect loops">
                            <i class="fas fa-sign-out-alt mr-1"></i>Clear Session
                        </a>
                        <a href="/subscriptions/pricing" class="text-gray-700 hover:text-kwikr-green transition-colors font-medium">
                            <i class="fas fa-tools mr-1"></i>Join Kwikr
                        </a>
                        <a href="/signup/client" class="bg-kwikr-green text-white px-6 py-2 rounded-lg hover:bg-green-600 transition-colors font-medium inline-flex items-center">
                            <i class="fas fa-briefcase mr-2"></i>Post a Job
                        </a>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Hero Section with Search -->
        <div class="bg-gradient-to-r from-kwikr-green to-green-600 text-white">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24">
                <div class="text-center">
                    <h1 class="text-5xl font-bold mb-6">
                        The Canadian platform that connects you with trusted, verified service providers for all your needs.
                    </h1>
                    <p class="text-xl mb-8 max-w-3xl mx-auto">
                        From home repairs to professional services - find qualified, insured, and background-checked professionals in your area.
                    </p>
                    
                    <!-- Main Search Card -->
                    <div class="bg-white rounded-2xl p-8 shadow-2xl max-w-4xl mx-auto mb-8">
                        <h2 class="text-2xl font-semibold text-gray-800 mb-8 text-center">
                            Find the right service provider for your needs
                        </h2>
                        
                        <form id="searchForm" class="space-y-6">
                            <!-- Search Inputs Row -->
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                                <!-- Service Type Dropdown -->
                                <div class="space-y-2">
                                    <label class="flex items-center text-sm font-medium text-gray-700">
                                        <i class="fas fa-tools text-kwikr-green mr-2"></i>
                                        Service Type
                                    </label>
                                    <select id="serviceTypeMain" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-kwikr-green focus:ring-0 text-gray-800 bg-white" onchange="onServiceTypeChange(this.value)">
                                        <option value="Cleaning Services">Cleaning Services</option>
                                        <option value="Plumbers">Plumbers</option>
                                        <option value="Carpenters">Carpenters</option>
                                        <option value="Electricians">Electricians</option>
                                        <option value="Flooring">Flooring</option>
                                        <option value="Painters">Painters</option>
                                        <option value="Handyman">Handyman</option>
                                        <option value="HVAC Services">HVAC Services</option>
                                        <option value="General Contractor">General Contractor</option>
                                        <option value="Roofing">Roofing</option>
                                        <option value="Landscaping">Landscaping</option>
                                        <option value="Renovations">Renovations</option>
                                    </select>
                                </div>
                                
                                <!-- Province Dropdown -->
                                <div class="space-y-2">
                                    <label class="flex items-center text-sm font-medium text-gray-700">
                                        <i class="fas fa-flag text-kwikr-green mr-2"></i>
                                        Province
                                    </label>
                                    <select id="provinceMain" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-kwikr-green focus:ring-0 text-gray-800 bg-white" onchange="onProvinceChange(this.value)">
                                        <option value="">All Provinces</option>
                                        <!-- Options will be populated dynamically -->
                                    </select>
                                </div>
                                
                                <!-- City Dropdown -->
                                <div class="space-y-2">
                                    <label class="flex items-center text-sm font-medium text-gray-700">
                                        <i class="fas fa-map-marker-alt text-kwikr-green mr-2"></i>
                                        City
                                    </label>
                                    <select id="cityMain" class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-kwikr-green focus:ring-0 text-gray-800 bg-white" disabled>
                                        <option value="">Select Province First</option>
                                    </select>
                                </div>
                            </div>
                            
                            <!-- Task Description -->
                            
                            <!-- Additional Services (Optional) -->
                            <div class="space-y-3">
                                <div class="flex items-center">
                                    <i class="fas fa-plus-circle text-kwikr-green mr-2"></i>
                                    <span class="text-sm font-medium text-gray-700">Additional Services (Optional)</span>
                                </div>
                                <div id="additionalServicesContainer" class="grid grid-cols-2 md:grid-cols-3 gap-3">
                                    <!-- Dynamic content will be populated here by JavaScript -->
                                </div>
                                <!-- Other (please specify) text field -->
                                <div id="otherServiceField" class="hidden mt-3">
                                    <input type="text" id="otherServiceText" placeholder="Please specify your additional service needs..."
                                           class="w-full px-4 py-3 border-2 border-gray-200 rounded-xl focus:border-kwikr-green focus:ring-0 text-gray-800">
                                </div>
                            </div>
                            
                            <!-- Budget Range -->
                            <div class="space-y-3">
                                <div class="flex items-center justify-between">
                                    <label class="flex items-center text-sm font-medium text-gray-700">
                                        <i class="fas fa-dollar-sign text-kwikr-green mr-2"></i>
                                        Min. Budget Range
                                    </label>
                                    <span id="budgetDisplay" class="text-lg font-semibold text-kwikr-green">Budget: $5000</span>
                                </div>
                                <div class="relative">
                                    <input type="range" id="budgetRange" min="150" max="5000" value="5000" step="50" 
                                           class="w-full h-3 bg-gray-200 rounded-lg appearance-none cursor-pointer slider"
                                           style="background: linear-gradient(to right, #00C881 0%, #00C881 100%, #e5e7eb 100%, #e5e7eb 100%);">
                                    <div class="flex justify-between text-xs text-gray-500 mt-2">
                                        <span>$150</span>
                                        <span>$5000</span>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Action Buttons -->
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 pt-4">
                                <button type="button" id="findProvidersBtn" 
                                        class="w-full bg-kwikr-green text-white py-4 px-8 rounded-xl font-semibold text-lg hover:bg-green-600 transition-all duration-300 flex items-center justify-center">
                                    <i class="fas fa-search mr-3"></i>
                                    Find Service Providers
                                </button>
                                <a href="/signup/client" 
                                        class="w-full border-2 border-kwikr-green text-kwikr-green py-4 px-8 rounded-xl font-semibold text-lg hover:bg-kwikr-green hover:text-white transition-all duration-300 flex items-center justify-center">
                                    <i class="fas fa-briefcase mr-3"></i>
                                    Post a Job
                                </a>
                            </div>
                        </form>
                    </div>
                    
                    <!-- Popular Tasks -->
                    <div class="text-center mb-8">
                        <p class="text-green-100 mb-6 text-lg">Popular tasks for Cleaning:</p>
                        <div class="flex flex-wrap justify-center gap-3">
                            <button class="bg-white bg-opacity-20 text-white px-6 py-3 rounded-full hover:bg-opacity-30 transition-all duration-300 popular-task">
                                clean my house
                            </button>
                            <button class="bg-white bg-opacity-20 text-white px-6 py-3 rounded-full hover:bg-opacity-30 transition-all duration-300 popular-task">
                                deep clean my kitchen
                            </button>
                            <button class="bg-white bg-opacity-20 text-white px-6 py-3 rounded-full hover:bg-opacity-30 transition-all duration-300 popular-task">
                                clean my office space
                            </button>
                            <button class="bg-white bg-opacity-20 text-white px-6 py-3 rounded-full hover:bg-opacity-30 transition-all duration-300 popular-task">
                                do a move-out cleaning
                            </button>
                            <button class="bg-white bg-opacity-20 text-white px-6 py-3 rounded-full hover:bg-opacity-30 transition-all duration-300 popular-task">
                                clean my windows
                            </button>
                        </div>
                    </div>
                    
                    <!-- Post Jobs CTA -->
                    <div class="bg-white bg-opacity-10 p-8 rounded-2xl backdrop-blur-sm max-w-2xl mx-auto">
                        <div class="text-center">
                            <div class="text-yellow-300 text-5xl mb-4">
                                <i class="fas fa-briefcase"></i>
                            </div>
                            <h3 class="text-3xl font-bold text-white mb-4">Post Your Jobs for FREE!</h3>
                            <p class="text-green-100 text-lg mb-6">Get multiple competitive bids from verified service providers across Canada. No upfront costs, pay only when you hire.</p>
                            <div class="flex flex-col sm:flex-row gap-4 justify-center">
                                <a href="/signup/client" class="bg-yellow-400 text-gray-900 px-8 py-4 rounded-lg font-bold text-lg hover:bg-yellow-300 transition-colors shadow-lg inline-flex items-center justify-center">
                                    <i class="fas fa-plus-circle mr-2"></i>Post a Job Now
                                </a>
                                <a href="/signup/client" class="border-2 border-white text-white px-8 py-4 rounded-lg font-semibold hover:bg-white hover:text-kwikr-green transition-colors inline-block text-center">
                                    <i class="fas fa-user mr-2"></i>Create Free Account
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- How It Works Section -->
        <div id="howItWorksSection" class="py-16 bg-gray-50">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="text-center mb-12">
                    <div class="inline-flex items-center px-4 py-2 bg-kwikr-green bg-opacity-10 rounded-full text-sm font-medium mb-4">
                        <i class="fas fa-lightbulb text-kwikr-green mr-2"></i>
                        <span class="text-kwikr-green">How It Works</span>
                    </div>
                    <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">How Kwikr Directory Works</h2>
                    <p class="text-lg text-gray-600 max-w-3xl mx-auto">
                        Simple, secure, and reliable platform connecting Canadians with trusted service providers
                    </p>
                </div>
                
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 max-w-6xl mx-auto">
                    <!-- For Clients -->
                    <div class="bg-white rounded-2xl p-8 shadow-lg border border-gray-100">
                        <div class="text-center mb-8">
                            <div class="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                <i class="fas fa-user text-blue-600 text-2xl"></i>
                            </div>
                            <h3 class="text-2xl font-bold text-blue-600 mb-2">For Clients</h3>
                            <p class="text-gray-600">Need services? Find qualified professionals</p>
                        </div>
                        
                        <div class="space-y-6">
                            <div class="flex items-start">
                                <div class="bg-blue-100 text-blue-600 w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-4 mt-1 flex-shrink-0">1</div>
                                <div>
                                    <h4 class="font-semibold text-gray-900 mb-2">Post Your Job for Free</h4>
                                    <p class="text-gray-600 text-sm">Describe what you need done, with details, timeline, and budget</p>
                                </div>
                            </div>
                            
                            <div class="flex items-start">
                                <div class="bg-blue-100 text-blue-600 w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-4 mt-1 flex-shrink-0">2</div>
                                <div>
                                    <h4 class="font-semibold text-gray-900 mb-2">Review Competitive Bids</h4>
                                    <p class="text-gray-600 text-sm">Verified providers submit quotes with their rates and timelines</p>
                                </div>
                            </div>
                            
                            <div class="flex items-start">
                                <div class="bg-blue-100 text-blue-600 w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-4 mt-1 flex-shrink-0">3</div>
                                <div>
                                    <h4 class="font-semibold text-gray-900 mb-2">Choose & Hire</h4>
                                    <p class="text-gray-600 text-sm">Select the best provider based on reviews, price, and experience</p>
                                </div>
                            </div>
                            
                            <div class="flex items-start">
                                <div class="bg-blue-100 text-blue-600 w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-4 mt-1 flex-shrink-0">4</div>
                                <div>
                                    <h4 class="font-semibold text-gray-900 mb-2">Secure Payment</h4>
                                    <p class="text-gray-600 text-sm">Pay safely through our escrow system - funds held until job completion</p>
                                </div>
                            </div>
                        </div>
                        
                        <div class="mt-8 pt-6 border-t border-gray-100">
                            <a href="/signup/client" class="w-full bg-blue-600 text-white py-3 px-6 rounded-lg font-semibold hover:bg-blue-700 transition-colors inline-flex items-center justify-center">
                                <i class="fas fa-briefcase mr-2"></i>Post a Job Free
                            </a>
                        </div>
                    </div>

                    <!-- For Service Providers -->
                    <div class="bg-white rounded-2xl p-8 shadow-lg border border-gray-100">
                        <div class="text-center mb-8">
                            <div class="w-16 h-16 bg-kwikr-green bg-opacity-10 rounded-full flex items-center justify-center mx-auto mb-4">
                                <i class="fas fa-tools text-kwikr-green text-2xl"></i>
                            </div>
                            <h3 class="text-2xl font-bold text-kwikr-green mb-2">For Service Providers</h3>
                            <p class="text-gray-600">Ready to grow your business?</p>
                        </div>
                        
                        <div class="space-y-6">
                            <div class="flex items-start">
                                <div class="bg-green-100 text-kwikr-green w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-4 mt-1 flex-shrink-0">1</div>
                                <div>
                                    <h4 class="font-semibold text-gray-900 mb-2">Sign Up & Get Verified</h4>
                                    <p class="text-gray-600 text-sm">Create profile, upload credentials, and complete verification process</p>
                                </div>
                            </div>
                            
                            <div class="flex items-start">
                                <div class="bg-green-100 text-kwikr-green w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-4 mt-1 flex-shrink-0">2</div>
                                <div>
                                    <h4 class="font-semibold text-gray-900 mb-2">Browse & Bid on Jobs</h4>
                                    <p class="text-gray-600 text-sm">Find jobs that match your skills and submit competitive proposals</p>
                                </div>
                            </div>
                            
                            <div class="flex items-start">
                                <div class="bg-green-100 text-kwikr-green w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-4 mt-1 flex-shrink-0">3</div>
                                <div>
                                    <h4 class="font-semibold text-gray-900 mb-2">Get Hired & Work</h4>
                                    <p class="text-gray-600 text-sm">Win jobs, complete quality work, and build your reputation</p>
                                </div>
                            </div>
                            
                            <div class="flex items-start">
                                <div class="bg-green-100 text-kwikr-green w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-4 mt-1 flex-shrink-0">4</div>
                                <div>
                                    <h4 class="font-semibold text-gray-900 mb-2">Get Paid Securely</h4>
                                    <p class="text-gray-600 text-sm">Receive guaranteed payments through our secure escrow system</p>
                                </div>
                            </div>
                        </div>
                        
                        <div class="mt-8 pt-6 border-t border-gray-100">
                            <a href="/subscriptions/pricing" class="w-full bg-kwikr-green text-white py-3 px-6 rounded-lg font-semibold hover:bg-green-600 transition-colors inline-flex items-center justify-center">
                                <i class="fas fa-rocket mr-2"></i>Join as Provider
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Trust & Safety Features -->
                <div class="mt-16">
                    <div class="text-center mb-12">
                        <h3 class="text-2xl font-bold text-gray-900 mb-4">Built for Trust & Safety</h3>
                        <p class="text-gray-600 max-w-2xl mx-auto">Your security and satisfaction are our top priorities</p>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
                        <div class="text-center">
                            <div class="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                <i class="fas fa-shield-check text-kwikr-green text-2xl"></i>
                            </div>
                            <h4 class="font-semibold text-gray-900 mb-2">Verified Providers</h4>
                            <p class="text-gray-600 text-sm">Background checks, license verification, and insurance validation</p>
                        </div>
                        
                        <div class="text-center">
                            <div class="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                <i class="fas fa-lock text-blue-600 text-2xl"></i>
                            </div>
                            <h4 class="font-semibold text-gray-900 mb-2">Secure Payments</h4>
                            <p class="text-gray-600 text-sm">Escrow protection - money held safely until work is completed</p>
                        </div>
                        
                        <div class="text-center">
                            <div class="w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                <i class="fas fa-star text-purple-600 text-2xl"></i>
                            </div>
                            <h4 class="font-semibold text-gray-900 mb-2">Review System</h4>
                            <p class="text-gray-600 text-sm">Real reviews from verified customers help you choose the best</p>
                        </div>
                        
                        <div class="text-center">
                            <div class="w-16 h-16 bg-orange-100 rounded-full flex items-center justify-center mx-auto mb-4">
                                <i class="fas fa-headset text-orange-600 text-2xl"></i>
                            </div>
                            <h4 class="font-semibold text-gray-900 mb-2">24/7 Support</h4>
                            <p class="text-gray-600 text-sm">Canadian support team ready to help resolve any issues</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>


        <!-- Subscription Plans Section -->
        <div class="py-16 bg-gradient-to-br from-kwikr-green to-green-600 text-white">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="text-center mb-12">
                    <div class="inline-flex items-center px-4 py-2 bg-white bg-opacity-20 rounded-full text-sm font-medium mb-4">
                        <i class="fas fa-star mr-2"></i>Choose Your Plan
                    </div>
                    <h2 class="text-3xl md:text-4xl font-bold mb-4">Subscription Plans for Workers</h2>
                    <p class="text-lg md:text-xl text-green-100 mb-8">Get more leads, grow your business, and dominate your local market</p>
                    
                    <!-- Billing Toggle -->
                    <div class="flex justify-center items-center space-x-4 mb-8">
                        <span class="text-green-100">Monthly</span>
                        <button id="billingToggle" onclick="toggleBilling()" class="relative inline-flex h-6 w-11 items-center rounded-full bg-green-700 transition-colors focus:outline-none">
                            <span id="billingSlider" class="inline-block h-4 w-4 transform rounded-full bg-white transition-transform translate-x-1"></span>
                        </button>
                        <span class="text-green-100">Annual <span class="text-yellow-300 font-medium">(Save 10%)</span></span>
                    </div>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-6xl mx-auto">
                    <!-- Pay-as-you-go Plan -->
                    <div class="bg-white text-gray-900 p-8 rounded-2xl shadow-xl border-2 border-transparent relative">
                        <div class="text-center">
                            <div class="text-kwikr-green text-4xl mb-4">
                                <i class="fas fa-rocket"></i>
                            </div>
                            <h3 class="text-2xl font-bold mb-2">Pay-as-you-go</h3>
                            <p class="text-gray-600 mb-6">Perfect for new contractors testing the platform</p>
                            <div class="mb-6">
                                <span class="text-4xl font-bold text-kwikr-green">$0</span>
                                <span class="text-gray-600">/month</span>
                            </div>
                            <div class="mb-6">
                                <span class="bg-green-100 text-green-800 px-3 py-1 rounded-full text-sm font-medium">939 Active Workers</span>
                            </div>
                        </div>
                        
                        <!-- Features -->
                        <div class="space-y-3 mb-8">
                            <div class="flex items-center">
                                <i class="fas fa-check text-kwikr-green mr-3"></i>
                                <span class="text-sm">$2.00 fee per completed booking</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-kwikr-green mr-3"></i>
                                <span class="text-sm">Keep 90% of revenue</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-kwikr-green mr-3"></i>
                                <span class="text-sm">Listed in 1 category</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-kwikr-green mr-3"></i>
                                <span class="text-sm">Access to booking tools</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-kwikr-green mr-3"></i>
                                <span class="text-sm">Lead inbox access</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-kwikr-green mr-3"></i>
                                <span class="text-sm">Basic dashboard access</span>
                            </div>
                        </div>
                        
                        <a href="/signup/worker?plan=payasyougo" class="w-full bg-kwikr-green text-white px-6 py-3 rounded-lg font-medium hover:bg-green-600 transition-colors block text-center">
                            <i class="fas fa-arrow-right mr-2"></i>Start Free
                        </a>
                    </div>
                    
                    <!-- Growth Plan -->
                    <div class="bg-white text-gray-900 p-8 rounded-2xl shadow-xl border-2 border-blue-500 relative transform scale-105">
                        <div class="absolute -top-4 left-1/2 transform -translate-x-1/2">
                            <span class="bg-blue-500 text-white px-4 py-1 rounded-full text-sm font-medium">Most Popular</span>
                        </div>
                        <div class="text-center">
                            <div class="text-blue-500 text-4xl mb-4">
                                <i class="fas fa-chart-line"></i>
                            </div>
                            <h3 class="text-2xl font-bold mb-2">Growth Plan</h3>
                            <p class="text-gray-600 mb-6">Ready to grow and lower cost per job</p>
                            <div class="mb-6">
                                <span class="text-4xl font-bold text-blue-500 monthly-price">$99</span>
                                <span class="text-4xl font-bold text-blue-500 annual-price hidden">$90</span>
                                <span class="text-gray-600">/month</span>
                            </div>
                            <div class="mb-6">
                                <span class="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm font-medium">1 Active Worker</span>
                            </div>
                        </div>
                        
                        <!-- Features -->
                        <div class="space-y-3 mb-8">
                            <div class="flex items-center">
                                <i class="fas fa-check text-blue-500 mr-3"></i>
                                <span class="text-sm">No per-booking fees</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-blue-500 mr-3"></i>
                                <span class="text-sm">Keep 100% of revenue</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-blue-500 mr-3"></i>
                                <span class="text-sm">Listed in 3 categories</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-blue-500 mr-3"></i>
                                <span class="text-sm">Priority search placement (Tier 2)</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-blue-500 mr-3"></i>
                                <span class="text-sm">Advanced booking tools</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-blue-500 mr-3"></i>
                                <span class="text-sm">Enhanced dashboard</span>
                            </div>
                        </div>
                        
                        <a href="/signup/worker?plan=growth" class="w-full bg-blue-500 text-white px-6 py-3 rounded-lg font-medium hover:bg-blue-600 transition-colors block text-center">
                            <i class="fas fa-crown mr-2"></i>Choose Growth
                        </a>
                    </div>
                    
                    <!-- Pro Plan -->
                    <div class="bg-white text-gray-900 p-8 rounded-2xl shadow-xl border-2 border-transparent relative">
                        <div class="text-center">
                            <div class="text-purple-500 text-4xl mb-4">
                                <i class="fas fa-trophy"></i>
                            </div>
                            <h3 class="text-2xl font-bold mb-2">Pro Plan</h3>
                            <p class="text-gray-600 mb-6">Dominate local visibility and automate growth</p>
                            <div class="mb-6">
                                <span class="text-4xl font-bold text-purple-500 monthly-price">$199</span>
                                <span class="text-4xl font-bold text-purple-500 annual-price hidden">$179</span>
                                <span class="text-gray-600">/month</span>
                            </div>
                            <div class="mb-6">
                                <span class="bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-sm font-medium">0 Active Workers</span>
                            </div>
                        </div>
                        
                        <!-- Features -->
                        <div class="space-y-3 mb-8">
                            <div class="flex items-center">
                                <i class="fas fa-check text-purple-500 mr-3"></i>
                                <span class="text-sm">No per-booking fees</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-purple-500 mr-3"></i>
                                <span class="text-sm">Keep 100% of revenue</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-purple-500 mr-3"></i>
                                <span class="text-sm">Listed in unlimited categories</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-purple-500 mr-3"></i>
                                <span class="text-sm">Top search placement (Tier 1)</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-purple-500 mr-3"></i>
                                <span class="text-sm">Premium booking tools</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-purple-500 mr-3"></i>
                                <span class="text-sm">Advanced analytics dashboard</span>
                            </div>
                        </div>
                        
                        <a href="/signup/worker?plan=pro" class="w-full bg-purple-500 text-white px-6 py-3 rounded-lg font-medium hover:bg-purple-600 transition-colors block text-center">
                            <i class="fas fa-rocket mr-2"></i>Go Pro
                        </a>
                    </div>
                </div>
                
                <!-- Demo Access Info -->
                <div class="mt-12 bg-white bg-opacity-10 p-6 rounded-lg backdrop-blur-sm max-w-4xl mx-auto">
                    <h4 class="text-lg font-semibold text-white mb-4 text-center">
                        <i class="fas fa-eye text-yellow-300 mr-2"></i>Want to See the Platform First?
                    </h4>
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 text-center">
                        <a href="/dashboard/client" class="block bg-white bg-opacity-20 p-4 rounded-lg hover:bg-opacity-30 transition-all">
                            <i class="fas fa-user text-yellow-300 text-2xl mb-2 block"></i>
                            <div class="font-medium text-white">Client Dashboard</div>
                            <div class="text-green-100 text-sm">Post jobs & manage projects</div>
                        </a>
                        <a href="/dashboard/worker" class="block bg-white bg-opacity-20 p-4 rounded-lg hover:bg-opacity-30 transition-all">
                            <i class="fas fa-tools text-yellow-300 text-2xl mb-2 block"></i>
                            <div class="font-medium text-white">Worker Dashboard</div>
                            <div class="text-green-100 text-sm">Browse jobs & track earnings</div>
                        </a>
                        <a href="/api/admin/subscriptions" class="block bg-white bg-opacity-20 p-4 rounded-lg hover:bg-opacity-30 transition-all">
                            <i class="fas fa-cog text-yellow-300 text-2xl mb-2 block"></i>
                            <div class="font-medium text-white">Admin Dashboard</div>
                            <div class="text-green-100 text-sm">Manage users & view analytics</div>
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <script>
            (function() {
                let isAnnual = false;

                window.toggleBilling = function() {
                    isAnnual = !isAnnual;
                const slider = document.getElementById('billingSlider');
                
                if (isAnnual) {
                    slider.classList.add('translate-x-6');
                    slider.classList.remove('translate-x-1');
                } else {
                    slider.classList.add('translate-x-1');
                    slider.classList.remove('translate-x-6');
                }

                // Toggle price displays
                const monthlyPrices = document.querySelectorAll('.monthly-price');
                const annualPrices = document.querySelectorAll('.annual-price');
                
                monthlyPrices.forEach(price => {
                    if (isAnnual) {
                        price.classList.add('hidden');
                    } else {
                        price.classList.remove('hidden');
                    }
                });
                
                annualPrices.forEach(price => {
                    if (isAnnual) {
                        price.classList.remove('hidden');
                    } else {
                        price.classList.add('hidden');
                    }
                });
            };
            })();
        <\/script>

        <!-- Features Section -->
        <div class="py-24 bg-kwikr-gray">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="text-center mb-16">
                    <h2 class="text-3xl font-bold text-gray-900 mb-4">Why Choose Kwikr Directory?</h2>
                    <p class="text-lg text-gray-600">Connecting Canadians with trusted service providers</p>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                    <div class="bg-white p-8 rounded-lg shadow-sm">
                        <div class="text-kwikr-green text-3xl mb-4">
                            <i class="fas fa-shield-alt"></i>
                        </div>
                        <h3 class="text-xl font-semibold mb-3">Verified Professionals</h3>
                        <p class="text-gray-600">All service providers are verified with proper licenses, insurance, and WSIB coverage.</p>
                    </div>
                    
                    <div class="bg-white p-8 rounded-lg shadow-sm">
                        <div class="text-kwikr-green text-3xl mb-4">
                            <i class="fas fa-credit-card"></i>
                        </div>
                        <h3 class="text-xl font-semibold mb-3">Secure Payments</h3>
                        <p class="text-gray-600">Escrow protection ensures payment is only released when work is completed to your satisfaction.</p>
                    </div>
                    
                    <div class="bg-white p-8 rounded-lg shadow-sm">
                        <div class="text-kwikr-green text-3xl mb-4">
                            <i class="fas fa-star"></i>
                        </div>
                        <h3 class="text-xl font-semibold mb-3">Rated & Reviewed</h3>
                        <p class="text-gray-600">See real reviews and ratings from previous clients to make informed decisions.</p>
                    </div>
                    
                    <div class="bg-white p-8 rounded-lg shadow-sm">
                        <div class="text-kwikr-green text-3xl mb-4">
                            <i class="fas fa-map-marker-alt"></i>
                        </div>
                        <h3 class="text-xl font-semibold mb-3">Local Providers</h3>
                        <p class="text-gray-600">Find service providers in your area across all Canadian provinces.</p>
                    </div>
                    
                    <div class="bg-white p-8 rounded-lg shadow-sm">
                        <div class="text-kwikr-green text-3xl mb-4">
                            <i class="fas fa-handshake"></i>
                        </div>
                        <h3 class="text-xl font-semibold mb-3">Fair Bidding</h3>
                        <p class="text-gray-600">Receive multiple competitive bids and choose the best value for your project.</p>
                    </div>
                    
                    <div class="bg-white p-8 rounded-lg shadow-sm">
                        <div class="text-kwikr-green text-3xl mb-4">
                            <i class="fas fa-headset"></i>
                        </div>
                        <h3 class="text-xl font-semibold mb-3">24/7 Support</h3>
                        <p class="text-gray-600">Our support team is available to help resolve any issues or disputes.</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Service Categories -->
        <div class="py-24">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="text-center mb-16">
                    <h2 class="text-3xl font-bold text-gray-900 mb-4">Popular Service Categories</h2>
                    <p class="text-lg text-gray-600">Find professionals for any project</p>
                </div>
                
                <div id="service-categories-grid" class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-6">
                    <!-- Service categories will be populated dynamically via JavaScript -->
                    <div class="text-center p-6 border border-gray-200 rounded-lg animate-pulse">
                        <div class="h-12 w-12 bg-gray-200 rounded mx-auto mb-3"></div>
                        <div class="h-4 bg-gray-200 rounded"></div>
                    </div>
                    <div class="text-center p-6 border border-gray-200 rounded-lg animate-pulse">
                        <div class="h-12 w-12 bg-gray-200 rounded mx-auto mb-3"></div>
                        <div class="h-4 bg-gray-200 rounded"></div>
                    </div>
                    <div class="text-center p-6 border border-gray-200 rounded-lg animate-pulse">
                        <div class="h-12 w-12 bg-gray-200 rounded mx-auto mb-3"></div>
                        <div class="h-4 bg-gray-200 rounded"></div>
                    </div>
                    <div class="text-center p-6 border border-gray-200 rounded-lg animate-pulse">
                        <div class="h-12 w-12 bg-gray-200 rounded mx-auto mb-3"></div>
                        <div class="h-4 bg-gray-200 rounded"></div>
                    </div>
                    <div class="text-center p-6 border border-gray-200 rounded-lg animate-pulse">
                        <div class="h-12 w-12 bg-gray-200 rounded mx-auto mb-3"></div>
                        <div class="h-4 bg-gray-200 rounded"></div>
                    </div>
                    <div class="text-center p-6 border border-gray-200 rounded-lg animate-pulse">
                        <div class="h-12 w-12 bg-gray-200 rounded mx-auto mb-3"></div>
                        <div class="h-4 bg-gray-200 rounded"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Testimonials Section -->
        <div id="testimonials" class="py-24 bg-white">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="text-center mb-16">
                    <h2 class="text-3xl font-bold text-gray-900 mb-4">What Our Users Say</h2>
                    <p class="text-lg text-gray-600">Real reviews from clients and service providers across Canada</p>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                    <!-- Testimonial 1 -->
                    <div class="bg-kwikr-gray p-8 rounded-lg">
                        <div class="flex items-center mb-4">
                            <div class="flex text-yellow-400">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                        <p class="text-gray-700 mb-6 italic">"Found an amazing cleaner through Kwikr Directory in just minutes. The booking process was seamless and the service quality exceeded my expectations. Highly recommend!"</p>
                        <div class="flex items-center">
                            <div class="bg-kwikr-green text-white w-12 h-12 rounded-full flex items-center justify-center font-semibold mr-4">
                                SM
                            </div>
                            <div>
                                <p class="font-semibold text-gray-900">Sarah Mitchell</p>
                                <p class="text-sm text-gray-500">Toronto, ON • Client</p>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Testimonial 2 -->
                    <div class="bg-kwikr-gray p-8 rounded-lg">
                        <div class="flex items-center mb-4">
                            <div class="flex text-yellow-400">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                        <p class="text-gray-700 mb-6 italic">"As a contractor, Kwikr Directory has been a game-changer for my business. I get quality leads regularly and the payment system is secure and reliable."</p>
                        <div class="flex items-center">
                            <div class="bg-blue-500 text-white w-12 h-12 rounded-full flex items-center justify-center font-semibold mr-4">
                                MJ
                            </div>
                            <div>
                                <p class="font-semibold text-gray-900">Mike Johnson</p>
                                <p class="text-sm text-gray-500">Vancouver, BC • Contractor</p>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Testimonial 3 -->
                    <div class="bg-kwikr-gray p-8 rounded-lg">
                        <div class="flex items-center mb-4">
                            <div class="flex text-yellow-400">
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                                <i class="fas fa-star"></i>
                            </div>
                        </div>
                        <p class="text-gray-700 mb-6 italic">"The verification process gave me confidence in the platform. All workers are properly licensed and insured. Finally, a service platform I can trust!"</p>
                        <div class="flex items-center">
                            <div class="bg-purple-500 text-white w-12 h-12 rounded-full flex items-center justify-center font-semibold mr-4">
                                LB
                            </div>
                            <div>
                                <p class="font-semibold text-gray-900">Lisa Brown</p>
                                <p class="text-sm text-gray-500">Calgary, AB • Client</p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Statistics -->
                <div class="mt-16 grid grid-cols-2 md:grid-cols-4 gap-8 text-center">
                    <div>
                        <div class="text-4xl font-bold text-kwikr-green mb-2">10,000+</div>
                        <div class="text-gray-600">Jobs Completed</div>
                    </div>
                    <div>
                        <div class="text-4xl font-bold text-kwikr-green mb-2">2,500+</div>
                        <div class="text-gray-600">Verified Workers</div>
                    </div>
                    <div>
                        <div class="text-4xl font-bold text-kwikr-green mb-2">4.9/5</div>
                        <div class="text-gray-600">Average Rating</div>
                    </div>
                    <div>
                        <div class="text-4xl font-bold text-kwikr-green mb-2">50+</div>
                        <div class="text-gray-600">Cities Served</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Waitlist Section -->
        <div class="py-16 bg-gradient-to-r from-blue-600 to-blue-700">
            <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="bg-white bg-opacity-10 rounded-2xl p-8 backdrop-blur-sm">
                    <div class="text-center mb-8">
                        <h2 class="text-3xl font-bold text-white mb-4">
                            <i class="fas fa-bell mr-3"></i>Join the Early Access Waitlist
                        </h2>
                        <p class="text-blue-100 text-lg">
                            Get notified when we launch in your area and receive exclusive early access benefits.
                        </p>
                    </div>
                    
                    <form id="waitlistForm" class="max-w-2xl mx-auto">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                            <div>
                                <input type="text" id="waitlistName" placeholder="Your name" 
                                       class="w-full px-4 py-3 border border-blue-300 rounded-lg focus:ring-2 focus:ring-white focus:border-transparent text-gray-800" required>
                            </div>
                            <div>
                                <input type="email" id="waitlistEmail" placeholder="Your email" 
                                       class="w-full px-4 py-3 border border-blue-300 rounded-lg focus:ring-2 focus:ring-white focus:border-transparent text-gray-800" required>
                            </div>
                        </div>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                            <div>
                                <input type="text" id="waitlistCity" placeholder="City" 
                                       class="w-full px-4 py-3 border border-blue-300 rounded-lg focus:ring-2 focus:ring-white focus:border-transparent text-gray-800" required>
                            </div>
                            <div>
                                <select id="waitlistProvince" class="w-full px-4 py-3 border border-blue-300 rounded-lg focus:ring-2 focus:ring-white focus:border-transparent text-gray-800" required>
                                    <option value="">Select Province</option>
                                    <option value="AB">Alberta</option>
                                    <option value="BC">British Columbia</option>
                                    <option value="MB">Manitoba</option>
                                    <option value="NB">New Brunswick</option>
                                    <option value="NL">Newfoundland and Labrador</option>
                                    <option value="NS">Nova Scotia</option>
                                    <option value="NT">Northwest Territories</option>
                                    <option value="NU">Nunavut</option>
                                    <option value="ON">Ontario</option>
                                    <option value="PE">Prince Edward Island</option>
                                    <option value="QC">Quebec</option>
                                    <option value="SK">Saskatchewan</option>
                                    <option value="YT">Yukon</option>
                                </select>
                            </div>
                        </div>
                        <div class="mb-6">
                            <select id="waitlistType" class="w-full px-4 py-3 border border-blue-300 rounded-lg focus:ring-2 focus:ring-white focus:border-transparent text-gray-800" required>
                                <option value="">I'm interested as a...</option>
                                <option value="client">Client - I need services</option>
                                <option value="worker">Service Provider - I provide services</option>
                                <option value="both">Both - I need and provide services</option>
                            </select>
                        </div>
                        <div class="text-center">
                            <button type="submit" class="bg-yellow-400 text-gray-900 px-8 py-3 rounded-lg font-bold hover:bg-yellow-300 transition-colors">
                                <i class="fas fa-plus-circle mr-2"></i>Join Waitlist
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Newsletter Subscription Section -->
        <div class="py-16 bg-kwikr-green">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
                <div class="max-w-3xl mx-auto">
                    <h2 class="text-3xl font-bold text-white mb-4">
                        <i class="fas fa-envelope mr-3"></i>Newsletter Subscription
                    </h2>
                    <p class="text-xl text-green-100 mb-8">Get the latest updates on new services, featured providers, and exclusive offers delivered to your inbox.</p>
                    
                    <form id="newsletterForm" class="flex flex-col sm:flex-row gap-4 max-w-lg mx-auto">
                        <input type="email" id="newsletterEmail" placeholder="Enter your email address" 
                               class="flex-1 px-6 py-4 rounded-lg border-0 focus:ring-2 focus:ring-green-300 focus:outline-none text-gray-800"
                               required>
                        <button type="submit" class="px-8 py-4 bg-kwikr-dark text-white rounded-lg font-semibold hover:bg-gray-800 transition-colors">
                            Subscribe
                        </button>
                    </form>
                    
                    <p class="text-green-100 text-sm mt-4">
                        <i class="fas fa-shield-check mr-2"></i>
                        We respect your privacy. Unsubscribe at any time.
                    </p>
                </div>
            </div>
        </div>

        <!-- Footer -->
        <footer class="bg-kwikr-dark text-white py-16">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
                    <!-- Company Info -->
                    <div>
                        <div class="flex items-center mb-6">
                            <i class="fas fa-bolt text-kwikr-green text-2xl mr-3"></i>
                            <h3 class="text-2xl font-bold">Kwikr Directory</h3>
                        </div>
                        <p class="text-gray-300 mb-6">
                            Connecting Canadians with trusted, verified service providers across the country. Quality work, fair prices, guaranteed satisfaction.
                        </p>
                        <!-- Social Media Links -->
                        <div class="flex space-x-4">
                            <a href="https://facebook.com/kwikrdirectory" target="_blank" class="text-gray-300 hover:text-kwikr-green transition-colors text-xl">
                                <i class="fab fa-facebook-f"></i>
                            </a>
                            <a href="https://twitter.com/kwikrdirectory" target="_blank" class="text-gray-300 hover:text-kwikr-green transition-colors text-xl">
                                <i class="fab fa-twitter"></i>
                            </a>
                            <a href="https://instagram.com/kwikrdirectory" target="_blank" class="text-gray-300 hover:text-kwikr-green transition-colors text-xl">
                                <i class="fab fa-instagram"></i>
                            </a>
                            <a href="https://linkedin.com/company/kwikrdirectory" target="_blank" class="text-gray-300 hover:text-kwikr-green transition-colors text-xl">
                                <i class="fab fa-linkedin-in"></i>
                            </a>
                            <a href="https://youtube.com/kwikrdirectory" target="_blank" class="text-gray-300 hover:text-kwikr-green transition-colors text-xl">
                                <i class="fab fa-youtube"></i>
                            </a>
                        </div>
                    </div>
                    
                    <!-- Services -->
                    <div>
                        <h4 class="text-lg font-semibold mb-6">Popular Services</h4>
                        <ul class="space-y-3 text-gray-300">
                            <li><a href="/search?serviceType=Cleaning%20Services" class="hover:text-kwikr-green transition-colors">Home Cleaning</a></li>
                            <li><a href="/search?serviceType=Handyman" class="hover:text-kwikr-green transition-colors">Handyman Services</a></li>
                            <li><a href="/search?serviceType=Plumbers" class="hover:text-kwikr-green transition-colors">Plumbing</a></li>
                            <li><a href="/search?serviceType=Electricians" class="hover:text-kwikr-green transition-colors">Electrical Work</a></li>
                            <li><a href="/search?serviceType=Landscaping" class="hover:text-kwikr-green transition-colors">Landscaping</a></li>
                            <li><a href="/search?serviceType=Moving%20Services" class="hover:text-kwikr-green transition-colors">Moving Services</a></li>
                        </ul>
                    </div>
                    
                    <!-- Support -->
                    <div>
                        <h4 class="text-lg font-semibold mb-6">Support</h4>
                        <ul class="space-y-3 text-gray-300">
                            <li><a href="/help" class="hover:text-kwikr-green transition-colors">Help Center</a></li>
                            <li><a href="/contact" class="hover:text-kwikr-green transition-colors">Contact Us</a></li>
                            <li><a href="/safety" class="hover:text-kwikr-green transition-colors">Safety Guidelines</a></li>
                            <li><a href="/trust-safety" class="hover:text-kwikr-green transition-colors">Trust & Safety</a></li>
                            <li><a href="/insurance" class="hover:text-kwikr-green transition-colors">Insurance Claims</a></li>
                            <li><a href="/admin" class="hover:text-kwikr-green transition-colors">Admin Portal</a></li>
                        </ul>
                    </div>
                    
                    <!-- Company -->
                    <div>
                        <h4 class="text-lg font-semibold mb-6">Company</h4>
                        <ul class="space-y-3 text-gray-300">
                            <li><a href="/about" class="hover:text-kwikr-green transition-colors">About Us</a></li>
                            <li><a href="/careers" class="hover:text-kwikr-green transition-colors">Careers</a></li>
                            <li><a href="/press" class="hover:text-kwikr-green transition-colors">Press & Media</a></li>
                            <li><a href="/privacy" class="hover:text-kwikr-green transition-colors">Privacy Policy</a></li>
                            <li><a href="/terms" class="hover:text-kwikr-green transition-colors">Terms of Service</a></li>
                            <li><a href="/become-provider" class="hover:text-kwikr-green transition-colors">Become a Provider</a></li>
                        </ul>
                    </div>
                </div>
                
                <!-- Bottom Bar -->
                <div class="border-t border-gray-700 mt-12 pt-8">
                    <div class="flex flex-col md:flex-row justify-between items-center">
                        <div class="text-gray-300 text-sm mb-4 md:mb-0">
                            © 2024 Kwikr Directory. All rights reserved. | Connecting Canadians with trusted service providers.
                        </div>
                        <div class="flex items-center text-sm text-gray-300">
                            <i class="fas fa-phone mr-2"></i>
                            <span>1-800-KWIKR-CA (1-800-594-5722)</span>
                            <span class="mx-3">|</span>
                            <i class="fas fa-envelope mr-2"></i>
                            <span>support@kwikrdirectory.ca</span>
                        </div>
                    </div>
                </div>
            </div>
        </footer>

        <!-- Job Posting Modal Replaced with Direct Links -->

        <!-- How It Works Modal -->
        <div id="howItWorksModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
            <div class="bg-white p-8 rounded-lg max-w-4xl w-full mx-4 max-h-96 overflow-y-auto">
                <div class="flex justify-between items-center mb-6">
                    <h3 class="text-2xl font-bold text-kwikr-green">
                        <i class="fas fa-lightbulb mr-2"></i>How Kwikr Directory Works
                    </h3>
                    <button onclick="hideHowItWorksModal()" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                    <!-- For Clients -->
                    <div>
                        <h4 class="text-lg font-bold text-blue-600 mb-4 flex items-center">
                            <i class="fas fa-user mr-2"></i>For Clients (Need Services)
                        </h4>
                        
                        <div class="space-y-4">
                            <div class="flex items-start">
                                <div class="bg-blue-100 text-blue-600 w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-3 mt-1">1</div>
                                <div>
                                    <p class="font-medium text-gray-800">Post Your Job for Free</p>
                                    <p class="text-sm text-gray-600">Describe what you need done with details, timeline, and budget</p>
                                </div>
                            </div>
                            
                            <div class="flex items-start">
                                <div class="bg-blue-100 text-blue-600 w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-3 mt-1">2</div>
                                <div>
                                    <p class="font-medium text-gray-800">Review Competitive Bids</p>
                                    <p class="text-sm text-gray-600">Verified providers submit quotes with their rates and timelines</p>
                                </div>
                            </div>
                            
                            <div class="flex items-start">
                                <div class="bg-blue-100 text-blue-600 w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-3 mt-1">3</div>
                                <div>
                                    <p class="font-medium text-gray-800">Choose & Hire</p>
                                    <p class="text-sm text-gray-600">Select the best provider based on reviews, price, and experience</p>
                                </div>
                            </div>
                            
                            <div class="flex items-start">
                                <div class="bg-blue-100 text-blue-600 w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-3 mt-1">4</div>
                                <div>
                                    <p class="font-medium text-gray-800">Secure Payment</p>
                                    <p class="text-sm text-gray-600">Pay safely through our platform with escrow protection</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- For Workers -->
                    <div>
                        <h4 class="text-lg font-bold text-kwikr-green mb-4 flex items-center">
                            <i class="fas fa-tools mr-2"></i>For Service Providers (Workers)
                        </h4>
                        
                        <div class="space-y-4">
                            <div class="flex items-start">
                                <div class="bg-green-100 text-kwikr-green w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-3 mt-1">1</div>
                                <div>
                                    <p class="font-medium text-gray-800">Sign Up & Get Verified</p>
                                    <p class="text-sm text-gray-600">Create profile, upload credentials, and complete verification process</p>
                                </div>
                            </div>
                            
                            <div class="flex items-start">
                                <div class="bg-green-100 text-kwikr-green w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-3 mt-1">2</div>
                                <div>
                                    <p class="font-medium text-gray-800">Browse & Bid on Jobs</p>
                                    <p class="text-sm text-gray-600">Find jobs that match your skills and submit competitive proposals</p>
                                </div>
                            </div>
                            
                            <div class="flex items-start">
                                <div class="bg-green-100 text-kwikr-green w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-3 mt-1">3</div>
                                <div>
                                    <p class="font-medium text-gray-800">Get Hired & Work</p>
                                    <p class="text-sm text-gray-600">Win jobs, complete quality work, and build your reputation</p>
                                </div>
                            </div>
                            
                            <div class="flex items-start">
                                <div class="bg-green-100 text-kwikr-green w-8 h-8 rounded-full flex items-center justify-center font-bold text-sm mr-3 mt-1">4</div>
                                <div>
                                    <p class="font-medium text-gray-800">Get Paid Securely</p>
                                    <p class="text-sm text-gray-600">Receive guaranteed payment upon job completion and client approval</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="mt-8 text-center bg-kwikr-gray p-6 rounded-lg">
                    <h5 class="text-lg font-bold text-gray-800 mb-2">Ready to Get Started?</h5>
                    <div class="flex flex-col sm:flex-row gap-4 justify-center">
                        <a href="/signup/client" onclick="hideHowItWorksModal()" class="bg-blue-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-blue-700 transition-colors inline-flex items-center">
                            <i class="fas fa-briefcase mr-2"></i>Post a Job (Free)
                        </a>
                        <a href="/signup/worker" onclick="hideHowItWorksModal()" class="bg-kwikr-green text-white px-6 py-3 rounded-lg font-medium hover:bg-green-600 transition-colors inline-flex items-center">
                            <i class="fas fa-tools mr-2"></i>Join as Service Provider
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Login Modal -->
        <div id="loginModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
            <div class="bg-white p-8 rounded-lg max-w-md w-full mx-4">
                <div class="flex justify-between items-center mb-6">
                    <h3 class="text-2xl font-bold">Sign In</h3>
                    <button onclick="hideLoginModal()" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                
                <form id="loginForm" onsubmit="handleLogin(event)">
                    <div class="mb-4">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Email</label>
                        <input type="email" id="loginEmail" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" required>
                    </div>
                    
                    <div class="mb-6">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Password</label>
                        <input type="password" id="loginPassword" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" required>
                    </div>
                    
                    <button type="submit" class="w-full bg-kwikr-green text-white py-3 rounded-lg font-semibold hover:bg-green-600 transition-colors">
                        Sign In
                    </button>
                </form>
                
                <p class="mt-4 text-center text-sm text-gray-600">
                    Don't have an account? 
                    <a href="/subscriptions/pricing" class="text-kwikr-green hover:underline">Sign up</a>
                </p>
            </div>
        </div>

        <!-- Signup Modal -->
        <div id="signupModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
            <div class="bg-white p-8 rounded-lg max-w-md w-full mx-4">
                <div class="flex justify-between items-center mb-6">
                    <h3 class="text-2xl font-bold">Get Started</h3>
                    <button onclick="hideSignupModal()" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                
                <div class="mb-6">
                    <p class="text-sm text-gray-600 mb-4">Choose your account type:</p>
                    <div class="grid grid-cols-2 gap-4">
                        <button onclick="selectUserType('client')" id="clientBtn" class="p-4 border-2 border-gray-200 rounded-lg text-center hover:border-kwikr-green transition-colors">
                            <i class="fas fa-user text-2xl text-kwikr-green mb-2"></i>
                            <p class="font-medium">I Need Services</p>
                            <p class="text-xs text-gray-500">Post jobs & hire</p>
                            <p class="text-xs text-green-600 font-medium mt-1">✓ Free Forever</p>
                        </button>
                        <button onclick="selectUserType('worker')" id="workerBtn" class="p-4 border-2 border-gray-200 rounded-lg text-center hover:border-kwikr-green transition-colors">
                            <i class="fas fa-tools text-2xl text-kwikr-green mb-2"></i>
                            <p class="font-medium">I Provide Services</p>
                            <p class="text-xs text-gray-500">Find work & earn</p>
                            <p class="text-xs text-blue-600 font-medium mt-1">Subscription required</p>
                        </button>
                    </div>
                </div>
                
                <form id="signupForm" onsubmit="handleSignup(event)">
                    <input type="hidden" id="userRole" value="">
                    
                    <div class="grid grid-cols-2 gap-4 mb-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">First Name</label>
                            <input type="text" id="firstName" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" required>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Last Name</label>
                            <input type="text" id="lastName" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" required>
                        </div>
                    </div>
                    
                    <div class="mb-4">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Email</label>
                        <input type="email" id="signupEmail" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" required>
                    </div>
                    
                    <div class="mb-4">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Password</label>
                        <input type="password" id="signupPassword" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" required>
                    </div>
                    
                    <div class="grid grid-cols-2 gap-4 mb-6">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Province</label>
                            <select id="province" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" required>
                                <option value="">Select Province</option>
                                <option value="AB">Alberta</option>
                                <option value="BC">British Columbia</option>
                                <option value="MB">Manitoba</option>
                                <option value="NB">New Brunswick</option>
                                <option value="NL">Newfoundland and Labrador</option>
                                <option value="NS">Nova Scotia</option>
                                <option value="NT">Northwest Territories</option>
                                <option value="NU">Nunavut</option>
                                <option value="ON">Ontario</option>
                                <option value="PE">Prince Edward Island</option>
                                <option value="QC">Quebec</option>
                                <option value="SK">Saskatchewan</option>
                                <option value="YT">Yukon</option>
                            </select>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">City</label>
                            <input type="text" id="city" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" required>
                        </div>
                    </div>
                    
                    <button type="submit" class="w-full bg-kwikr-green text-white py-3 rounded-lg font-semibold hover:bg-green-600 transition-colors">
                        Create Account
                    </button>
                </form>
                
                <p class="mt-4 text-center text-sm text-gray-600">
                    Already have an account? 
                    <a href="/auth/login" class="text-kwikr-green hover:underline">Sign in</a>
                </p>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script src="/static/app.js?v=${Date.now()}"><\/script>
        <script>
          // Search functionality for home page
          document.addEventListener('DOMContentLoaded', function() {
            // Budget slider functionality
            const budgetRange = document.getElementById('budgetRange');
            const budgetDisplay = document.getElementById('budgetDisplay');
            
            if (budgetRange && budgetDisplay) {
              budgetRange.addEventListener('input', function() {
                budgetDisplay.textContent = 'Budget: $' + this.value;
                const percentage = ((this.value - this.min) / (this.max - this.min)) * 100;
                this.style.background = 'linear-gradient(to right, #00C881 0%, #00C881 ' + percentage + '%, #e5e7eb ' + percentage + '%, #e5e7eb 100%)';
              });
              
              // Initialize slider
              const percentage = ((budgetRange.value - budgetRange.min) / (budgetRange.max - budgetRange.min)) * 100;
              budgetRange.style.background = 'linear-gradient(to right, #00C881 0%, #00C881 ' + percentage + '%, #e5e7eb ' + percentage + '%, #e5e7eb 100%)';
            }
            
            // Search functionality
            const findProvidersBtn = document.getElementById('findProvidersBtn');
            if (findProvidersBtn) {
              findProvidersBtn.addEventListener('click', function() {
                performSearch();
              });
            }
            

            
            // Service type change handler for main form
            const serviceTypeSelect = document.getElementById('serviceTypeMain');
            if (serviceTypeSelect) {
              serviceTypeSelect.addEventListener('change', function() {
                updateAdditionalServices(this.value, 'additionalServicesContainer');
                // Also trigger cascading dropdown update
                onServiceTypeChange(this.value);
              });
              // Initialize with default value
              updateAdditionalServices(serviceTypeSelect.value, 'additionalServicesContainer');
            }
            
            // Service type change handler for search form
            const serviceTypeSearchSelect = document.getElementById('serviceTypeSearch');
            if (serviceTypeSearchSelect) {
              serviceTypeSearchSelect.addEventListener('change', function() {
                updateAdditionalServicesSearch(this.value);
              });
              // Initialize with default value
              updateAdditionalServicesSearch(serviceTypeSearchSelect.value);
            }
            
            // Load provinces on page load with current service type
            const initialServiceType = serviceTypeSelect ? serviceTypeSelect.value : 'Cleaning Services';
            loadProvinces(initialServiceType);
            
            // Load service categories
            loadServiceCategories();
            
            // Make functions globally available for onchange events AFTER DOM is ready
            window.loadCitiesForProvince = loadCitiesForProvince;
            window.onServiceTypeChange = onServiceTypeChange;
            window.onProvinceChange = onProvinceChange;
          });
          
          // Additional services definitions for each service type
          const additionalServicesData = {
            'Cleaning Services': [
              { value: 'inside_oven', label: 'Inside the oven' },
              { value: 'inside_fridge', label: 'Inside the fridge' },
              { value: 'laundry', label: 'Laundry' },
              { value: 'interior_windows', label: 'Interior windows' },
              { value: 'baseboards', label: 'Baseboards' }
            ],
            'Plumbers': [
              { value: 'drain_cleaning', label: 'Drain cleaning' },
              { value: 'toilet_repair', label: 'Toilet repair/replace' },
              { value: 'faucet_install', label: 'Faucet installation' },
              { value: 'water_heater', label: 'Water heater service' },
              { value: 'emergency_repair', label: 'Emergency repair' }
            ],
            'Carpenters': [
              { value: 'custom_cabinets', label: 'Custom cabinets' },
              { value: 'deck_building', label: 'Deck building' },
              { value: 'trim_molding', label: 'Trim & molding' },
              { value: 'furniture_repair', label: 'Furniture repair' },
              { value: 'door_frame', label: 'Door frame repair' }
            ],
            'Electricians': [
              { value: 'outlet_installation', label: 'Outlet installation' },
              { value: 'light_fixture', label: 'Light fixture install' },
              { value: 'ceiling_fan', label: 'Ceiling fan install' },
              { value: 'panel_upgrade', label: 'Panel upgrade' },
              { value: 'smart_switch', label: 'Smart switch install' }
            ],
            'Flooring': [
              { value: 'hardwood_install', label: 'Hardwood installation' },
              { value: 'tile_install', label: 'Tile installation' },
              { value: 'carpet_install', label: 'Carpet installation' },
              { value: 'floor_refinishing', label: 'Floor refinishing' },
              { value: 'baseboard_install', label: 'Baseboard installation' }
            ],
            'Painters': [
              { value: 'interior_painting', label: 'Interior painting' },
              { value: 'exterior_painting', label: 'Exterior painting' },
              { value: 'trim_doors', label: 'Trim & doors' },
              { value: 'ceiling_painting', label: 'Ceiling painting' },
              { value: 'color_consultation', label: 'Color consultation' }
            ],
            'Handyman': [
              { value: 'furniture_assembly', label: 'Furniture assembly' },
              { value: 'tv_mounting', label: 'TV mounting' },
              { value: 'drywall_repair', label: 'Drywall repair' },
              { value: 'door_installation', label: 'Door installation' },
              { value: 'shelf_installation', label: 'Shelf installation' }
            ],
            'HVAC Services': [
              { value: 'furnace_repair', label: 'Furnace repair' },
              { value: 'ac_installation', label: 'AC installation' },
              { value: 'duct_cleaning', label: 'Duct cleaning' },
              { value: 'thermostat_install', label: 'Thermostat install' },
              { value: 'heat_pump', label: 'Heat pump service' }
            ],
            'General Contractor': [
              { value: 'project_management', label: 'Project management' },
              { value: 'permit_assistance', label: 'Permit assistance' },
              { value: 'structural_work', label: 'Structural work' },
              { value: 'foundation_repair', label: 'Foundation repair' },
              { value: 'home_addition', label: 'Home addition' }
            ],
            'Roofing': [
              { value: 'roof_repair', label: 'Roof repair' },
              { value: 'shingle_replace', label: 'Shingle replacement' },
              { value: 'gutter_install', label: 'Gutter installation' },
              { value: 'roof_inspection', label: 'Roof inspection' },
              { value: 'skylight_install', label: 'Skylight installation' }
            ],
            'Landscaping': [
              { value: 'lawn_maintenance', label: 'Lawn maintenance' },
              { value: 'garden_design', label: 'Garden design' },
              { value: 'tree_trimming', label: 'Tree trimming' },
              { value: 'sprinkler_install', label: 'Sprinkler installation' },
              { value: 'patio_hardscape', label: 'Patio & hardscape' }
            ],
            'Renovations': [
              { value: 'kitchen_reno', label: 'Kitchen renovation' },
              { value: 'bathroom_reno', label: 'Bathroom renovation' },
              { value: 'basement_finish', label: 'Basement finishing' },
              { value: 'room_addition', label: 'Room addition' },
              { value: 'whole_house', label: 'Whole house renovation' }
            ]
          };
          
          function updateAdditionalServices(serviceType) {
            const container = document.getElementById('additionalServicesContainer');
            if (!container) return;
            
            const services = additionalServicesData[serviceType] || [];
            
            container.innerHTML = '';
            
            // Add service-specific options
            services.forEach(service => {
              const label = document.createElement('label');
              label.className = 'flex items-center space-x-2 cursor-pointer';
              label.innerHTML = '<input type="checkbox" name="additionalServices" value="' + service.value + '" class="w-4 h-4 text-kwikr-green border-gray-300 rounded focus:ring-kwikr-green"><span class="text-sm text-gray-700">' + service.label + '</span>';
              container.appendChild(label);
            });
            
            // Always add "Other" option
            const otherLabel = document.createElement('label');
            otherLabel.className = 'flex items-center space-x-2 cursor-pointer';
            otherLabel.innerHTML = '<input type="checkbox" name="additionalServices" value="other" id="otherCheckbox" class="w-4 h-4 text-kwikr-green border-gray-300 rounded focus:ring-kwikr-green"><span class="text-sm text-gray-700 font-medium text-kwikr-green">Other (please specify)</span>';
            container.appendChild(otherLabel);
            
            // Add event listener for "Other" checkbox
            const otherCheckbox = document.getElementById('otherCheckbox');
            const otherField = document.getElementById('otherServiceField');
            const otherText = document.getElementById('otherServiceText');
            
            if (otherCheckbox && otherField && otherText) {
              otherCheckbox.addEventListener('change', function() {
                if (this.checked) {
                  otherField.classList.remove('hidden');
                  otherText.focus();
                } else {
                  otherField.classList.add('hidden');
                  otherText.value = '';
                }
              });
            }
          }
          
          // Load provinces based on selected service type
          async function loadProvinces(serviceType = '') {
            try {
              // Build URL with serviceType parameter if provided
              let url = '/api/locations/provinces?' + Date.now();
              if (serviceType && serviceType !== '') {
                url += '&serviceType=' + encodeURIComponent(serviceType);
              }
              
              const response = await fetch(url, {
                headers: {
                  'Cache-Control': 'no-cache',
                  'Pragma': 'no-cache'
                }
              });
              const data = await response.json();
              
              if (data.success && data.provinces) {
                const provinceSelect = document.getElementById('provinceMain');
                if (provinceSelect) {
                  // Store current selection to preserve it if possible
                  const currentProvince = provinceSelect.value;
                  
                  // Clear existing options except "All Provinces"
                  provinceSelect.innerHTML = '<option value="">All Provinces</option>';
                  
                  // Add province options sorted by worker count (already sorted from API)
                  data.provinces.forEach(province => {
                    const option = document.createElement('option');
                    option.value = province.province;
                    option.textContent = province.province + ' (' + province.worker_count + ' workers)';
                    provinceSelect.appendChild(option);
                  });
                  
                  // Try to restore previous selection if it still exists
                  const options = Array.from(provinceSelect.options);
                  const matchingOption = options.find(option => option.value === currentProvince);
                  if (matchingOption) {
                    provinceSelect.value = currentProvince;
                    // Reload cities for the restored province with current service type
                    loadCitiesForProvince(currentProvince, serviceType);
                  } else {
                    // Reset city dropdown if province no longer available
                    const citySelect = document.getElementById('cityMain');
                    if (citySelect) {
                      citySelect.innerHTML = '<option value="">Select Province First</option>';
                      citySelect.disabled = true;
                    }
                  }
                }
              }
            } catch (error) {
              console.error('Failed to load provinces:', error);
            }
          }
          
          // Load cities for selected province and service type
          async function loadCitiesForProvince(province, serviceType = null) {
            const citySelect = document.getElementById('cityMain');
            if (!citySelect) return;
            
            if (!province) {
              citySelect.innerHTML = '<option value="">Select Province First</option>';
              citySelect.disabled = true;
              return;
            }
            
            try {
              citySelect.innerHTML = '<option value="">Loading cities...</option>';
              citySelect.disabled = true;
              
              // Get serviceType from dropdown if not provided as parameter
              if (serviceType === null) {
                const serviceTypeSelect = document.getElementById('serviceTypeMain');
                serviceType = serviceTypeSelect ? serviceTypeSelect.value : '';
              }
              
              // Build URL with serviceType parameter if provided
              let url = '/api/locations/cities/' + encodeURIComponent(province) + '?' + Date.now();
              if (serviceType && serviceType !== '') {
                url += '&serviceType=' + encodeURIComponent(serviceType);
              }
              
              const response = await fetch(url, {
                headers: {
                  'Cache-Control': 'no-cache',
                  'Pragma': 'no-cache'
                }
              });
              const data = await response.json();
              
              if (data.success && data.cities) {
                citySelect.innerHTML = '<option value="">All Cities</option>';
                
                // Add city options sorted by worker count
                data.cities.forEach(city => {
                  const option = document.createElement('option');
                  option.value = city.city;
                  option.textContent = city.city + ' (' + city.worker_count + ' workers)';
                  citySelect.appendChild(option);
                });
                
                citySelect.disabled = false;
              } else {
                citySelect.innerHTML = '<option value="">No cities available</option>';
                citySelect.disabled = false;
              }
            } catch (error) {
              console.error('Failed to load cities:', error);
              citySelect.innerHTML = '<option value="">Error loading cities</option>';
              citySelect.disabled = false;
            }
          }
          
          function performSearch() {
            const serviceType = document.getElementById('serviceTypeMain')?.value;
            const province = document.getElementById('provinceMain')?.value;
            const city = document.getElementById('cityMain')?.value;
            const budget = document.getElementById('budgetRange')?.value;
            const additionalServices = Array.from(document.querySelectorAll('input[name="additionalServices"]:checked')).map(cb => {
              if (cb.value === 'other') {
                const otherText = document.getElementById('otherServiceText')?.value;
                return otherText ? 'other: ' + otherText : 'other';
              }
              return cb.value;
            });
            
            // Build search URL with new province/city parameters (allow empty values)
            const searchParams = new URLSearchParams();
            
            // Only add parameters if they have values
            searchParams.set('serviceType', serviceType || 'Cleaning Services');
            if (province) searchParams.set('province', province);
            if (city) searchParams.set('city', city);
            searchParams.set('budget', budget || '5000');
            if (additionalServices.length > 0) searchParams.set('additionalServices', additionalServices.join(','));
            searchParams.set('page', '1');
            searchParams.set('limit', '10');
            searchParams.set('sortBy', 'rating');
            
            // Redirect to search results page
            window.location.href = '/search?' + searchParams.toString();
          }
          
          // Event handlers for cascading dropdowns
          function onServiceTypeChange(serviceType) {
            // Reload provinces based on selected service type
            loadProvinces(serviceType);
          }
          
          function onProvinceChange(province) {
            // Get current service type and load cities
            const serviceTypeSelect = document.getElementById('serviceTypeMain');
            const serviceType = serviceTypeSelect ? serviceTypeSelect.value : '';
            loadCitiesForProvince(province, serviceType);
          }
          
          // Newsletter subscription functionality
          document.addEventListener('DOMContentLoaded', function() {
            const newsletterForm = document.getElementById('newsletterForm');
            if (newsletterForm) {
              newsletterForm.addEventListener('submit', function(e) {
                e.preventDefault();
                const email = document.getElementById('newsletterEmail')?.value;
                
                if (email) {
                  // Here you would normally send the email to your backend
                  // For now, just show a success message
                  alert('Thank you for subscribing! We will keep you updated with the latest from Kwikr Directory.');
                  document.getElementById('newsletterEmail').value = '';
                }
              });
            }
            
            // Waitlist form functionality
            const waitlistForm = document.getElementById('waitlistForm');
            if (waitlistForm) {
              waitlistForm.addEventListener('submit', function(e) {
                e.preventDefault();
                const name = document.getElementById('waitlistName')?.value;
                const email = document.getElementById('waitlistEmail')?.value;
                const city = document.getElementById('waitlistCity')?.value;
                const province = document.getElementById('waitlistProvince')?.value;
                const type = document.getElementById('waitlistType')?.value;
                
                if (name && email && city && province && type) {
                  // Here you would normally send the data to your backend
                  // For now, just show a success message
                  alert('Thank you ' + name + '! You have been added to our waitlist for ' + city + ', ' + province + '. We will notify you when Kwikr Directory launches in your area.');
                  waitlistForm.reset();
                }
              });
            }
          });
          
          // Function to handle category clicks
          function searchByCategory(category) {
            // Navigate to search page with the selected category
            const searchUrl = \`/search?serviceType=\${encodeURIComponent(category)}&location=&budget=5000\`;
            window.location.href = searchUrl;
          }

          // Billing Toggle for Subscription Plans (Scoped)
          (function() {
            let isAnnual = false;
            
            window.toggleBilling2 = function() {
              isAnnual = !isAnnual;
            const slider = document.getElementById('billingSlider');
            const monthlyPrices = document.querySelectorAll('.monthly-price');
            const annualPrices = document.querySelectorAll('.annual-price');
            
            if (isAnnual) {
              slider.classList.remove('translate-x-1');
              slider.classList.add('translate-x-6');
              monthlyPrices.forEach(el => el.classList.add('hidden'));
              annualPrices.forEach(el => el.classList.remove('hidden'));
            } else {
              slider.classList.remove('translate-x-6');
              slider.classList.add('translate-x-1');
              monthlyPrices.forEach(el => el.classList.remove('hidden'));
              annualPrices.forEach(el => el.classList.add('hidden'));
            }
          };
          })();
          
          // Load Popular Service Categories from Database
          async function loadServiceCategories() {
            try {
              const response = await fetch('/api/popular-categories');
              const data = await response.json();
              
              if (data.success && data.categories && data.categories.length > 0) {
                const grid = document.getElementById('service-categories-grid');
                if (grid) {
                  // Clear loading placeholders
                  grid.innerHTML = '';
                  
                  // Generate category cards from database
                  data.categories.forEach(category => {
                    const categoryCard = document.createElement('div');
                    categoryCard.className = 'text-center p-6 border border-gray-200 rounded-lg hover:border-kwikr-green hover:shadow-md transition-all cursor-pointer';
                    categoryCard.onclick = () => searchByCategory(category.name);
                    
                    categoryCard.innerHTML = \`
                      <i class="\${category.icon_class} text-3xl text-kwikr-green mb-3"></i>
                      <p class="font-medium text-gray-900">\${category.name}</p>
                      <p class="text-sm text-gray-500 mt-1">\${category.worker_count || 0} providers</p>
                    \`;
                    
                    grid.appendChild(categoryCard);
                  });
                }
              } else {
                console.warn('No categories received from API or API failed');
                // Keep loading placeholders if API fails
              }
            } catch (error) {
              console.error('Error loading service categories:', error);
              // Keep loading placeholders if fetch fails
            }
          }
          
          // All initialization moved to main DOMContentLoaded block below
          
          // Job Posting Modal Functions - Replaced with Direct Links
          
          // How It Works Modal Functions
          function showHowItWorksModal() {
            document.getElementById('howItWorksModal').classList.remove('hidden');
          }
          
          function hideHowItWorksModal() {
            document.getElementById('howItWorksModal').classList.add('hidden');
          }
          
          // Login/Signup Functions - Using Direct Links Now
          
          // Redirect functions instead of modals
          function showLoginModal() {
            window.location.href = '/auth/login';
          }
          
          function hideLoginModal() {
            // No longer needed - removing modals
          }
          
          function showSignupModal(role = '') {
            if (role === 'client') {
              window.location.href = '/signup/client';
            } else if (role === 'worker') {
              window.location.href = '/signup/worker';
            } else {
              window.location.href = '/subscriptions/pricing';
            }
          }
          
          function hideSignupModal() {
            // No longer needed - removing modals
          }
          
          // User Type Selection for Signup
          function selectUserType(type) {
            const clientBtn = document.getElementById('clientBtn');
            const workerBtn = document.getElementById('workerBtn');
            const userRoleInput = document.getElementById('userRole');
            
            // Reset button styles
            clientBtn.className = 'p-4 border-2 border-gray-200 rounded-lg text-center hover:border-kwikr-green transition-colors';
            workerBtn.className = 'p-4 border-2 border-gray-200 rounded-lg text-center hover:border-kwikr-green transition-colors';
            
            // Highlight selected type
            if (type === 'client') {
              clientBtn.className = 'p-4 border-2 border-kwikr-green bg-green-50 rounded-lg text-center transition-colors';
              userRoleInput.value = 'client';
            } else if (type === 'worker') {
              workerBtn.className = 'p-4 border-2 border-kwikr-green bg-green-50 rounded-lg text-center transition-colors';
              userRoleInput.value = 'worker';
            }
          }
          
          // Enhanced Authentication Handlers
          async function handleLogin(event) {
            event.preventDefault();
            
            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;
            
            if (!email || !password) {
              alert('Please fill in all fields');
              return;
            }
            
            try {
              const response = await fetch('/api/auth/login', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email, password })
              });
              
              const data = await response.json();
              
              if (response.ok && data.success) {

                hideLoginModal();
                
                // Check for post-login action
                const postLoginAction = sessionStorage.getItem('postLoginAction');
                sessionStorage.removeItem('postLoginAction');
                
                if (postLoginAction === 'postJob') {
                  window.location.href = '/dashboard/client';
                } else if (data.user.role === 'client') {
                  window.location.href = '/dashboard/client';
                } else if (data.user.role === 'worker') {
                  window.location.href = '/dashboard/worker';
                } else if (data.user.role === 'admin') {
                  window.location.href = '/dashboard/admin';
                } else {
                  window.location.href = '/dashboard';
                }
              } else {
                alert(data.error || 'Login failed. Please check your credentials.');
              }
            } catch (error) {
              console.error('Login error:', error);
              alert('Login failed. Please try again.');
            }
          }
          
          async function handleSignup(event) {
            event.preventDefault();
            
            const formData = {
              first_name: document.getElementById('firstName').value,
              last_name: document.getElementById('lastName').value,
              email: document.getElementById('signupEmail').value,
              password: document.getElementById('signupPassword').value,
              role: document.getElementById('userRole').value,
              province: document.getElementById('province').value,
              city: document.getElementById('city').value
            };
            
            // Validation
            if (!formData.first_name || !formData.last_name || !formData.email || 
                !formData.password || !formData.role || !formData.province || !formData.city) {
              alert('Please fill in all fields');
              return;
            }
            
            if (!formData.role) {
              alert('Please select whether you need services or provide services');
              return;
            }
            
            try {
              const response = await fetch('/api/auth/register', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
              });
              
              const data = await response.json();
              
              if (response.ok && data.success) {
                // Redirect directly after successful account creation - no popup needed
                hideSignupModal();
                
                // Check for post-signup action
                const postSignupAction = sessionStorage.getItem('postSignupAction');
                sessionStorage.removeItem('postSignupAction');
                
                if (postSignupAction === 'postJob' || formData.role === 'client') {
                  window.location.href = '/dashboard/client';
                } else if (formData.role === 'worker') {
                  window.location.href = '/dashboard/worker';
                } else {
                  window.location.href = '/dashboard';
                }
              } else {
                alert(data.error || 'Registration failed. Please try again.');
              }
            } catch (error) {
              console.error('Signup error:', error);
              alert('Registration failed. Please try again.');
            }
          }
          
          // Make functions globally available
          // Job posting modal functions removed - using direct links now
          window.showHowItWorksModal = showHowItWorksModal;
          window.hideHowItWorksModal = hideHowItWorksModal;
          // Signup/login redirect functions removed - using direct links now
          window.showLoginModal = showLoginModal;
          window.hideLoginModal = hideLoginModal;
          window.showSignupModal = showSignupModal;
          window.hideSignupModal = hideSignupModal;
          window.selectUserType = selectUserType;
          window.handleLogin = handleLogin;
          window.handleSignup = handleSignup;

          // Subscription plan selection now uses direct links - no JavaScript function needed

        <\/script>
    </body>
    </html>
  `));D.post("/api/test/admin/plans/:planId/pricing",async e=>{try{const t=parseInt(e.req.param("planId")),{monthly_price:s,annual_price:r,grandfather_existing:i=!0,change_notes:a=""}=await e.req.json(),n=await e.env.DB.prepare(`
      SELECT * FROM subscription_plans WHERE id = ?
    `).bind(t).first();if(!n)return e.json({error:"Plan not found"},404);const o=new Date().toISOString();return await e.env.DB.prepare(`
      INSERT INTO subscription_price_history (
        plan_id, old_monthly_price, new_monthly_price, old_annual_price, new_annual_price,
        change_effective_date, grandfather_existing_users, admin_user_id, change_notes
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
    `).bind(t,n.monthly_price,s,n.annual_price,r,o,i?1:0,50,a).run(),await e.env.DB.prepare(`
      UPDATE subscription_plans
      SET monthly_price = ?, annual_price = ?, updated_at = ?
      WHERE id = ?
    `).bind(s,r||null,o,t).run(),i?await e.env.DB.prepare(`
        UPDATE worker_subscriptions
        SET grandfathered_pricing = 1, updated_at = ?
        WHERE plan_id = ? AND subscription_status = 'active'
      `).bind(o,t).run():await e.env.DB.prepare(`
        UPDATE worker_subscriptions
        SET 
          current_monthly_price = ?,
          current_annual_price = ?,
          grandfathered_pricing = 0,
          updated_at = ?
        WHERE plan_id = ? AND subscription_status = 'active'
      `).bind(s,r||null,o,t).run(),e.json({success:!0,message:`Plan pricing updated successfully. ${i?"Existing subscribers have been grandfathered.":"All subscribers updated to new pricing."}`,old_monthly_price:n.monthly_price,new_monthly_price:s,grandfathered:i})}catch(t){return console.error("Error updating plan pricing:",t),e.json({error:"Failed to update plan pricing"},500)}});D.get("/debug/cleanup-sessions",async e=>{try{const t=await e.env.DB.prepare(`
      DELETE FROM user_sessions 
      WHERE expires_at < datetime('now')
    `).run(),s=await e.env.DB.prepare(`
      DELETE FROM user_sessions 
      WHERE created_at < datetime('now', '-1 day')
    `).run();return e.json({expired_sessions_deleted:t.changes,old_sessions_deleted:s.changes,message:"Session cleanup completed"})}catch(t){return U.error("Session cleanup error",t),e.json({error:"Failed to cleanup sessions"},500)}});D.get("/debug/demo-accounts",async e=>{var t,s;try{const r=await e.env.DB.prepare(`
      SELECT id, email, role, first_name, last_name, created_at 
      FROM users 
      WHERE email IN ('demo.client@kwikr.ca', 'cleaner1@kwikr.ca', 'admin@kwikr.ca')
      ORDER BY email
    `).all(),i=await e.env.DB.prepare(`
      SELECT s.user_id, s.session_token, s.expires_at, s.created_at, s.ip_address,
             u.email, u.role
      FROM user_sessions s
      JOIN users u ON s.user_id = u.id
      WHERE u.email IN ('demo.client@kwikr.ca', 'cleaner1@kwikr.ca', 'admin@kwikr.ca')
      ORDER BY s.created_at DESC
      LIMIT 10
    `).all();return e.json({demo_accounts:r.results||[],account_count:((t=r.results)==null?void 0:t.length)||0,recent_sessions:i.results||[],session_count:((s=i.results)==null?void 0:s.length)||0})}catch(r){return U.error("Debug demo accounts error",r),e.json({error:"Failed to fetch demo accounts"},500)}});D.get("/debug/sessions",async e=>{const t=e.req.header("User-Agent")||"unknown";U.info("Session debug endpoint accessed",{userAgent:t});try{const s=await e.env.DB.prepare(`
      SELECT s.user_id, u.email, u.role, s.expires_at, s.created_at, 
             s.ip_address, u.first_name, u.last_name
      FROM user_sessions s
      JOIN users u ON s.user_id = u.id
      WHERE s.created_at > datetime('now', '-1 hour')
      ORDER BY s.created_at DESC
      LIMIT 10
    `).all();return e.html(`
      <!DOCTYPE html>
      <html>
      <head>
        <title>Session Debug - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <meta http-equiv="refresh" content="30">
      </head>
      <body class="bg-gray-100 p-6">
        <div class="max-w-6xl mx-auto">
          <h1 class="text-2xl font-bold mb-6">🔍 Session Debug Monitor</h1>
          
          <div class="bg-white rounded-lg shadow p-6 mb-6">
            <h2 class="text-lg font-semibold mb-4">Recent Sessions (Last Hour)</h2>
            <div class="overflow-x-auto">
              <table class="min-w-full table-auto">
                <thead>
                  <tr class="bg-gray-50">
                    <th class="px-4 py-2 text-left">User ID</th>
                    <th class="px-4 py-2 text-left">Name</th>
                    <th class="px-4 py-2 text-left">Email</th>
                    <th class="px-4 py-2 text-left">Role</th>
                    <th class="px-4 py-2 text-left">Created</th>
                    <th class="px-4 py-2 text-left">Expires</th>
                    <th class="px-4 py-2 text-left">Source</th>
                  </tr>
                </thead>
                <tbody>
                  ${s.results.map(r=>`
                    <tr class="border-t">
                      <td class="px-4 py-2">${r.user_id}</td>
                      <td class="px-4 py-2">${r.first_name} ${r.last_name}</td>
                      <td class="px-4 py-2">${r.email}</td>
                      <td class="px-4 py-2">
                        <span class="px-2 py-1 text-xs rounded ${r.role==="admin"?"bg-purple-100 text-purple-800":r.role==="worker"?"bg-blue-100 text-blue-800":"bg-green-100 text-green-800"}">
                          ${r.role}
                        </span>
                      </td>
                      <td class="px-4 py-2 text-sm">${r.created_at}</td>
                      <td class="px-4 py-2 text-sm">${r.expires_at}</td>
                      <td class="px-4 py-2">
                        <span class="px-2 py-1 text-xs rounded ${r.ip_address==="auto-demo"?"bg-yellow-100 text-yellow-800":"bg-gray-100 text-gray-800"}">
                          ${r.ip_address}
                        </span>
                      </td>
                    </tr>
                  `).join("")}
                </tbody>
              </table>
            </div>
          </div>
          
          <div class="text-sm text-gray-500">
            <p>🔄 Auto-refreshes every 30 seconds</p>
            <p>📅 Timestamp: ${new Date().toISOString()}</p>
          </div>
        </div>
      </body>
      </html>
    `)}catch(s){return U.error("Session debug endpoint error",s),e.json({error:"Failed to fetch session data"},500)}});D.get("/clear-cookies",async e=>(e.header("Set-Cookie","session=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;"),e.header("Set-Cookie","demo_session=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;"),e.html(`
    <script>
      // Clear localStorage as well
      localStorage.clear();
      // Clear sessionStorage as well
      sessionStorage.clear();
      // Redirect to homepage
      window.location.href = '/';
    <\/script>
    <p>Clearing cookies and redirecting...</p>
  `)));D.post("/api/clear-user-sessions",async e=>{var t,s,r,i;try{const a=((t=e.req.header("Authorization"))==null?void 0:t.replace("Bearer ",""))||((i=(r=(s=e.req.header("Cookie"))==null?void 0:s.split(";").find(n=>n.trim().startsWith("session=")))==null?void 0:r.split("=")[1])==null?void 0:i.trim());return a&&await e.env.DB.prepare("DELETE FROM user_sessions WHERE session_token = ?").bind(a).run(),e.header("Set-Cookie","session=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;"),e.header("Set-Cookie","demo_session=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;"),e.json({success:!0,message:"Sessions cleared successfully",redirect:"/"})}catch(a){return console.error("Clear sessions error:",a),e.json({success:!0,message:"Frontend session cleared"})}});D.get("/test-homepage",async e=>e.html(`
    <!DOCTYPE html>
    <html>
    <head>
        <title>Test Homepage - No Redirects</title>
    </head>
    <body>
        <h1>Simple Test Homepage</h1>
        <p>If you can see this page without being redirected, the issue is in the main homepage JavaScript.</p>
        <p>Current time: ${new Date().toISOString()}</p>
        <script>
          console.log('Test homepage loaded - no redirects should happen here');
        <\/script>
    </body>
    </html>
  `));D.get("/admin",async e=>e.redirect("/admin/login"));D.get("/admin/dashboard",async e=>e.html(_0()));D.get("/admin/users",async e=>e.html(E0()));D.get("/admin/workers",async e=>e.html(k0()));D.get("/admin/analytics",async e=>e.html(T0()));D.get("/admin/compliance",async e=>e.html(S0()));D.get("/admin/payments",async e=>e.html(R0()));D.get("/admin/settings",async e=>e.html(C0()));D.get("/dashboard/worker/payments",async e=>e.html(D0()));D.get("/dashboard/worker/earnings",async e=>e.html(N0()));D.get("/subscriptions/pricing",async e=>e.html(P0()));D.get("/admin/login",async e=>e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Kwikr Admin Login</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gradient-to-br from-gray-900 via-gray-800 to-kwikr-dark min-h-screen flex items-center justify-center">
        <div class="max-w-md w-full mx-4">
            <!-- Logo Section -->
            <div class="text-center mb-8">
                <div class="inline-flex items-center justify-center w-16 h-16 bg-kwikr-green rounded-full mb-4">
                    <i class="fas fa-shield-alt text-white text-2xl"></i>
                </div>
                <h1 class="text-3xl font-bold text-white mb-2">Kwikr Admin Portal</h1>
                <p class="text-gray-400">Secure access to platform management</p>
            </div>

            <!-- Login Form -->
            <div class="bg-white rounded-lg shadow-xl p-8">
                <form id="adminLoginForm" onsubmit="handleAdminLogin(event)">
                    <div class="mb-6">
                        <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
                            <i class="fas fa-envelope mr-2 text-kwikr-green"></i>Admin Email
                        </label>
                        <input type="email" id="email" name="email" required 
                               class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent"
                               placeholder="admin@kwikr.com">
                    </div>

                    <div class="mb-6">
                        <label for="password" class="block text-sm font-medium text-gray-700 mb-2">
                            <i class="fas fa-lock mr-2 text-kwikr-green"></i>Password
                        </label>
                        <div class="relative">
                            <input type="password" id="password" name="password" required 
                                   class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent pr-12"
                                   placeholder="••••••••">
                            <button type="button" onclick="togglePassword()" 
                                    class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-kwikr-green">
                                <i id="passwordToggleIcon" class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>

                    <div class="mb-6">
                        <div class="flex items-center">
                            <input type="checkbox" id="remember" name="remember" 
                                   class="h-4 w-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                            <label for="remember" class="ml-2 block text-sm text-gray-700">
                                Keep me logged in
                            </label>
                        </div>
                    </div>

                    <button type="submit" 
                            class="w-full bg-kwikr-green text-white py-3 px-4 rounded-lg hover:bg-green-600 focus:ring-2 focus:ring-kwikr-green focus:ring-offset-2 transition-colors font-medium">
                        <i class="fas fa-sign-in-alt mr-2"></i>Access Admin Portal
                    </button>
                </form>

                <!-- Demo Access -->
                <div class="mt-6 pt-6 border-t border-gray-200">
                    <div class="text-center">
                        <p class="text-sm text-gray-600 mb-3">Demo Access Available</p>
                        <button onclick="window.location.href='/demo-admin'" 
                                class="w-full bg-blue-600 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors text-sm">
                            <i class="fas fa-flask mr-2"></i>Demo Admin Access
                        </button>
                        <p class="text-xs text-gray-500 mt-2">Full platform management capabilities</p>
                    </div>
                </div>

                <!-- Security Notice -->
                <div class="mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                    <div class="flex items-start">
                        <i class="fas fa-shield-check text-yellow-600 mt-1 mr-2"></i>
                        <div class="text-sm text-yellow-800">
                            <p class="font-medium mb-1">Security Notice</p>
                            <p>Admin access is logged and monitored. Only authorized personnel should access this portal.</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Footer -->
            <div class="text-center mt-8 text-gray-400 text-sm">
                <p>&copy; 2024 Kwikr Platform. All rights reserved.</p>
                <div class="mt-2">
                    <a href="/" class="hover:text-kwikr-green transition-colors">← Back to Main Site</a>
                </div>
            </div>
        </div>

        <script>
            function togglePassword() {
                const passwordField = document.getElementById('password');
                const toggleIcon = document.getElementById('passwordToggleIcon');
                
                if (passwordField.type === 'password') {
                    passwordField.type = 'text';
                    toggleIcon.className = 'fas fa-eye-slash';
                } else {
                    passwordField.type = 'password';
                    toggleIcon.className = 'fas fa-eye';
                }
            }

            async function handleAdminLogin(event) {
                event.preventDefault();
                const formData = new FormData(event.target);
                const email = formData.get('email');
                const password = formData.get('password');
                
                try {
                    showNotification('Authenticating...', 'info');
                    
                    // Use real authentication API
                    const response = await fetch('/api/auth/login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ email, password })
                    });
                    
                    const data = await response.json();
                    
                    if (response.ok && data.user && data.user.role === 'admin') {
                        // Set session cookie for admin
                        document.cookie = 'session=' + data.sessionToken + '; path=/; max-age=604800; secure=' + (window.location.protocol === 'https:') + '; samesite=lax';
                        

                        setTimeout(() => {
                            window.location.href = '/admin/portal';
                        }, 1500);
                    } else if (response.ok && data.user && data.user.role !== 'admin') {
                        showNotification('Access denied. Admin privileges required.', 'error');
                    } else {
                        showNotification(data.error || 'Invalid credentials.', 'error');
                    }
                } catch (error) {
                    console.error('Login error:', error);
                    showNotification('Login failed. Please try again.', 'error');
                }
            }

            function demoLogin(role = 'admin') {
                const roleConfig = {
                    client: {
                        message: 'Logging in to client dashboard...',
                        sessionKey: 'clientSession', 
                        token: 'demo-client-token',
                        redirect: '/dashboard/client'
                    },
                    worker: {
                        message: 'Logging in to worker dashboard...',
                        sessionKey: 'workerSession',
                        token: 'demo-worker-token', 
                        redirect: '/dashboard/worker'
                    },
                    admin: {
                        message: 'Logging in to admin portal...',
                        sessionKey: 'adminSession',
                        token: 'demo-admin-token',
                        redirect: '/admin/dashboard'
                    }
                };
                
                const config = roleConfig[role] || roleConfig.admin;
                showNotification(config.message, 'success');
                
                // Set demo session
                localStorage.setItem(config.sessionKey, config.token);
                
                setTimeout(() => {
                    window.location.href = config.redirect;
                }, 1500);
            }

            function showNotification(message, type) {
                const notification = document.createElement('div');
                notification.className = \`fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transition-all duration-300 transform translate-x-full \${
                    type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'
                }\`;
                
                notification.innerHTML = \`
                    <div class="flex items-center">
                        <i class="fas \${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'} mr-2"></i>
                        <span>\${message}</span>
                    </div>
                \`;
                
                document.body.appendChild(notification);
                setTimeout(() => notification.classList.remove('translate-x-full'), 100);
                setTimeout(() => {
                    notification.classList.add('translate-x-full');
                    setTimeout(() => notification.remove(), 300);
                }, 3000);
            }
        <\/script>
    </body>
    </html>
  `));const xi=async(e,t)=>{let s=null;const r=e.req.header("Cookie");if(r){const i=r.match(/session=([^;]+)/);i&&(s=i[1])}if(!s){const i=e.req.header("Authorization");i&&i.startsWith("Bearer ")&&(s=i.replace("Bearer ",""))}if(!s)return e.redirect("/admin/login");try{let i=null;try{i=await e.env.DB.prepare(`
        SELECT s.user_id, u.role, u.first_name, u.last_name, u.email, u.is_verified,
               s.expires_at, s.created_at, s.ip_address
        FROM user_sessions s
        JOIN users u ON s.user_id = u.id
        WHERE s.session_token = ? AND u.is_active = 1 AND u.role = 'admin'
      `).bind(s).first()}catch{console.log("Database session lookup failed for admin check")}if(!i)try{const n=atob(s).split(":");if(n.length>=2){let o=null,l=null;n[0].startsWith("demo-")?(o=n[0].replace("demo-",""),l=50):isNaN(parseInt(n[0]))||(l=parseInt(n[0]),o=l===50?"admin":null),o==="admin"&&l===50&&(i={user_id:l,role:"admin",first_name:"Demo",last_name:"Admin",email:"demo.admin@kwikr.ca",is_verified:1})}}catch{console.log("Failed to decode session token for admin check")}if(!i||i.role!=="admin")return e.redirect("/admin/login");e.set("admin",i),await t()}catch(i){return console.error("Admin auth middleware error:",i),e.redirect("/admin/login")}};D.get("/demo",xi,async e=>e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Kwikr Platform Demos - Payment System Testing</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Platform Demos
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="/" class="text-gray-700 hover:text-kwikr-green">
                            <i class="fas fa-home mr-1"></i>Back to Home
                        </a>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="text-center mb-12">
                <h1 class="text-4xl font-bold text-gray-900 mb-4">
                    <i class="fas fa-flask text-kwikr-green mr-3"></i>
                    Platform Demo Center
                </h1>
                <p class="text-xl text-gray-600 max-w-3xl mx-auto">
                    Test and explore all Kwikr platform features including the comprehensive payment system, 
                    full lifecycle workflows, and user management capabilities.
                </p>
            </div>

            <!-- Demo Categories -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-12">
                <!-- Payment System Demos -->
                <div class="bg-white rounded-xl shadow-lg border border-gray-200">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex items-center mb-3">
                            <div class="bg-green-100 p-3 rounded-lg mr-4">
                                <i class="fas fa-credit-card text-green-600 text-2xl"></i>
                            </div>
                            <div>
                                <h2 class="text-2xl font-bold text-gray-900">Payment System</h2>
                                <p class="text-gray-600">Complete payment infrastructure testing</p>
                            </div>
                        </div>
                        <div class="bg-green-50 p-4 rounded-lg mb-4">
                            <div class="flex items-center text-green-800 text-sm">
                                <i class="fas fa-check-circle mr-2"></i>
                                <span class="font-medium">✅ Fully Implemented & Tested</span>
                            </div>
                        </div>
                    </div>
                    <div class="p-6 space-y-4">
                        <a href="/demo/payment-system" class="block">
                            <div class="bg-gradient-to-r from-green-500 to-emerald-600 text-white p-4 rounded-lg hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <h3 class="font-bold text-lg mb-1">Interactive Payment Demo</h3>
                                        <p class="text-green-100 text-sm">Complete payment method management for clients & workers</p>
                                    </div>
                                    <i class="fas fa-external-link-alt text-xl"></i>
                                </div>
                                <div class="mt-3 text-sm text-green-100">
                                    <span class="mr-4"><i class="fas fa-user mr-1"></i>Client/Worker Toggle</span>
                                    <span class="mr-4"><i class="fas fa-credit-card mr-1"></i>Multi-Payment Types</span>
                                    <span><i class="fas fa-shield-alt mr-1"></i>Secure Escrow</span>
                                </div>
                            </div>
                        </a>
                        
                        <a href="/demo/lifecycle-test" class="block">
                            <div class="bg-gradient-to-r from-blue-500 to-indigo-600 text-white p-4 rounded-lg hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <h3 class="font-bold text-lg mb-1">Full Lifecycle Test Suite</h3>
                                        <p class="text-blue-100 text-sm">15-step end-to-end workflow testing</p>
                                    </div>
                                    <i class="fas fa-external-link-alt text-xl"></i>
                                </div>
                                <div class="mt-3 text-sm text-blue-100">
                                    <span class="mr-4"><i class="fas fa-play mr-1"></i>Interactive Test Runner</span>
                                    <span class="mr-4"><i class="fas fa-chart-line mr-1"></i>Progress Tracking</span>
                                    <span><i class="fas fa-bug mr-1"></i>Detailed Logging</span>
                                </div>
                            </div>
                        </a>
                    </div>
                </div>

                <!-- User Management Demos -->
                <div class="bg-white rounded-xl shadow-lg border border-gray-200">
                    <div class="p-6 border-b border-gray-200">
                        <div class="flex items-center mb-3">
                            <div class="bg-blue-100 p-3 rounded-lg mr-4">
                                <i class="fas fa-users text-blue-600 text-2xl"></i>
                            </div>
                            <div>
                                <h2 class="text-2xl font-bold text-gray-900">User Management</h2>
                                <p class="text-gray-600">Profile and dashboard features</p>
                            </div>
                        </div>
                        <div class="bg-blue-50 p-4 rounded-lg mb-4">
                            <div class="flex items-center text-blue-800 text-sm">
                                <i class="fas fa-info-circle mr-2"></i>
                                <span class="font-medium">Live Platform Features</span>
                            </div>
                        </div>
                    </div>
                    <div class="p-6 space-y-4">
                        <a href="/dashboard/client" class="block">
                            <div class="bg-gradient-to-r from-purple-500 to-pink-600 text-white p-4 rounded-lg hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <h3 class="font-bold text-lg mb-1">Client Dashboard</h3>
                                        <p class="text-purple-100 text-sm">Job posting and payment management</p>
                                    </div>
                                    <i class="fas fa-external-link-alt text-xl"></i>
                                </div>
                            </div>
                        </a>
                        
                        <a href="/dashboard/worker" class="block">
                            <div class="bg-gradient-to-r from-orange-500 to-red-600 text-white p-4 rounded-lg hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <h3 class="font-bold text-lg mb-1">Worker Dashboard</h3>
                                        <p class="text-orange-100 text-sm">Service management and payouts</p>
                                    </div>
                                    <i class="fas fa-external-link-alt text-xl"></i>
                                </div>
                            </div>
                        </a>
                        
                        <a href="/profile/4" class="block">
                            <div class="bg-gradient-to-r from-teal-500 to-cyan-600 text-white p-4 rounded-lg hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <h3 class="font-bold text-lg mb-1">Public Worker Profile</h3>
                                        <p class="text-teal-100 text-sm">Customer-facing profile view</p>
                                    </div>
                                    <i class="fas fa-external-link-alt text-xl"></i>
                                </div>
                            </div>
                        </a>
                    </div>
                </div>
            </div>

            <!-- Test Results & Documentation -->
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                <!-- Recent Test Results -->
                <div class="bg-white rounded-lg shadow-sm border border-gray-200">
                    <div class="p-6 border-b border-gray-200">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-chart-bar text-green-600 mr-2"></i>
                            Latest Test Results
                        </h3>
                    </div>
                    <div class="p-6">
                        <div class="space-y-4">
                            <div class="flex items-center justify-between">
                                <div>
                                    <div class="font-medium text-gray-900">Full Lifecycle Test</div>
                                    <div class="text-sm text-gray-500">All 15 steps completed</div>
                                </div>
                                <div class="text-green-600 font-bold">✅ 100%</div>
                            </div>
                            <div class="flex items-center justify-between">
                                <div>
                                    <div class="font-medium text-gray-900">Payment Processing</div>
                                    <div class="text-sm text-gray-500">Escrow & transactions</div>
                                </div>
                                <div class="text-green-600 font-bold">✅ PASS</div>
                            </div>
                            <div class="flex items-center justify-between">
                                <div>
                                    <div class="font-medium text-gray-900">User Authentication</div>
                                    <div class="text-sm text-gray-500">Client & worker flows</div>
                                </div>
                                <div class="text-green-600 font-bold">✅ PASS</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Payment Features -->
                <div class="bg-white rounded-lg shadow-sm border border-gray-200">
                    <div class="p-6 border-b border-gray-200">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-credit-card text-blue-600 mr-2"></i>
                            Payment Features
                        </h3>
                    </div>
                    <div class="p-6">
                        <div class="space-y-3">
                            <div class="flex items-center">
                                <i class="fas fa-check text-green-600 mr-2"></i>
                                <span class="text-sm">Credit/Debit Cards</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-green-600 mr-2"></i>
                                <span class="text-sm">Bank Account Transfers</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-green-600 mr-2"></i>
                                <span class="text-sm">E-transfer Integration</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-green-600 mr-2"></i>
                                <span class="text-sm">PayPal Support</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-green-600 mr-2"></i>
                                <span class="text-sm">Secure Escrow System</span>
                            </div>
                            <div class="flex items-center">
                                <i class="fas fa-check text-green-600 mr-2"></i>
                                <span class="text-sm">Multi-currency Support</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Quick Actions -->
                <div class="bg-white rounded-lg shadow-sm border border-gray-200">
                    <div class="p-6 border-b border-gray-200">
                        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
                            <i class="fas fa-bolt text-yellow-600 mr-2"></i>
                            Quick Actions
                        </h3>
                    </div>
                    <div class="p-6 space-y-3">
                        <button onclick="runLifecycleTest()" class="w-full bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors">
                            <i class="fas fa-play mr-2"></i>Run Lifecycle Test
                        </button>
                        <button onclick="clearTestData()" class="w-full bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 transition-colors">
                            <i class="fas fa-trash mr-2"></i>Clear Test Data
                        </button>
                        <button onclick="showApiDocs()" class="w-full bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors">
                            <i class="fas fa-book mr-2"></i>View API Docs
                        </button>
                    </div>
                </div>
            </div>

            <!-- Sarah's Journey Test Case -->
            <div class="mt-12 bg-gradient-to-r from-indigo-600 to-purple-700 rounded-xl shadow-xl text-white">
                <div class="p-8">
                    <div class="flex items-center mb-6">
                        <div class="bg-white bg-opacity-20 p-4 rounded-full mr-4">
                            <i class="fas fa-route text-3xl"></i>
                        </div>
                        <div>
                            <h2 class="text-3xl font-bold mb-2">Sarah's Complete Journey</h2>
                            <p class="text-indigo-100 text-lg">Test the exact scenario you requested: Montreal sliding door repair, $300 budget, 3 workers, full payment cycle</p>
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
                        <div class="bg-white bg-opacity-10 p-4 rounded-lg">
                            <h3 class="font-bold mb-2">📍 Scenario Details</h3>
                            <ul class="text-sm text-indigo-100 space-y-1">
                                <li>• Client: Sarah Johnson, Montreal</li>
                                <li>• Service: Fix sliding doors</li>
                                <li>• Budget: $300</li>
                                <li>• Workers: Mike, Jennifer, David</li>
                            </ul>
                        </div>
                        <div class="bg-white bg-opacity-10 p-4 rounded-lg">
                            <h3 class="font-bold mb-2">💰 Payment Flow</h3>
                            <ul class="text-sm text-indigo-100 space-y-1">
                                <li>• Bids: $320, $400, $275</li>
                                <li>• Selected: David ($275)</li>
                                <li>• Escrow: Secure payment hold</li>
                                <li>• Release: After completion</li>
                            </ul>
                        </div>
                        <div class="bg-white bg-opacity-10 p-4 rounded-lg">
                            <h3 class="font-bold mb-2">🔄 Test Coverage</h3>
                            <ul class="text-sm text-indigo-100 space-y-1">
                                <li>• 15 lifecycle steps</li>
                                <li>• Real-world scenarios</li>
                                <li>• Error handling</li>
                                <li>• 100% success rate</li>
                            </ul>
                        </div>
                    </div>
                    
                    <div class="flex space-x-4">
                        <a href="/demo/lifecycle-test" class="bg-white text-indigo-600 px-8 py-3 rounded-lg font-semibold hover:bg-indigo-50 transition-colors flex items-center">
                            <i class="fas fa-rocket mr-2"></i>
                            Run Complete Test
                        </a>
                        <button onclick="window.open('/test-lifecycle.mjs')" class="bg-indigo-800 text-white px-6 py-3 rounded-lg font-semibold hover:bg-indigo-900 transition-colors flex items-center">
                            <i class="fas fa-code mr-2"></i>
                            View Test Code
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <script>
            function runLifecycleTest() {
                window.open('/test-full-lifecycle.html', '_blank');
            }
            
            function clearTestData() {
                if (confirm('This will clear all test data. Continue?')) {
                    alert('Test data clearing functionality would be implemented here');
                }
            }
            
            function showApiDocs() {
                alert('API documentation would be displayed here');
            }
        <\/script>
    </body>
    </html>
  `));D.get("/demo/payment-system",xi,async e=>e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Interactive Payment Demo - Kwikr Platform</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/demo" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-credit-card mr-2"></i>Payment Demo
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="/demo" class="text-gray-700 hover:text-kwikr-green">
                            <i class="fas fa-arrow-left mr-1"></i>Back to Demos
                        </a>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="text-center mb-12">
                <h1 class="text-4xl font-bold text-gray-900 mb-4">
                    <i class="fas fa-credit-card text-kwikr-green mr-3"></i>
                    Interactive Payment Demo
                </h1>
                <p class="text-xl text-gray-600 max-w-3xl mx-auto">
                    Complete payment method management system for both clients and workers.
                    Test payment processing, escrow functionality, and payout management.
                </p>
            </div>

            <!-- Demo Controls -->
            <div class="bg-white rounded-xl shadow-lg border border-gray-200 p-6 mb-8">
                <div class="flex items-center justify-between mb-4">
                    <h2 class="text-2xl font-bold text-gray-900">Demo Controls</h2>
                    <div class="flex items-center space-x-4">
                        <button onclick="switchRole('client')" id="clientBtn" class="px-6 py-2 bg-kwikr-green text-white rounded-lg font-medium hover:bg-green-600 transition-colors">
                            <i class="fas fa-user mr-2"></i>Client View
                        </button>
                        <button onclick="switchRole('worker')" id="workerBtn" class="px-6 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 transition-colors">
                            <i class="fas fa-tools mr-2"></i>Worker View
                        </button>
                    </div>
                </div>
                
                <!-- Features Grid -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div class="bg-green-50 p-4 rounded-lg">
                        <div class="flex items-center text-green-800 text-sm">
                            <i class="fas fa-toggle-on mr-2"></i>
                            <span class="font-medium">Client/Worker Toggle</span>
                        </div>
                    </div>
                    <div class="bg-blue-50 p-4 rounded-lg">
                        <div class="flex items-center text-blue-800 text-sm">
                            <i class="fas fa-credit-card mr-2"></i>
                            <span class="font-medium">Multi-Payment Types</span>
                        </div>
                    </div>
                    <div class="bg-purple-50 p-4 rounded-lg">
                        <div class="flex items-center text-purple-800 text-sm">
                            <i class="fas fa-shield-alt mr-2"></i>
                            <span class="font-medium">Secure Escrow</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Payment Interface -->
            <div class="bg-white rounded-xl shadow-lg border border-gray-200">
                <div class="p-6 border-b border-gray-200">
                    <h3 class="text-xl font-bold text-gray-900">Payment Management Interface</h3>
                    <p class="text-gray-600 mt-1">Interactive payment processing and escrow system</p>
                </div>
                
                <!-- Client View -->
                <div id="clientView" class="p-6">
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        <!-- Payment Form -->
                        <div>
                            <h4 class="text-lg font-semibold text-gray-900 mb-4">Make a Payment</h4>
                            <form id="paymentForm" class="space-y-4">
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Job Description</label>
                                    <input type="text" id="jobDescription" value="House Cleaning Service" class="w-full px-4 py-2 border border-gray-300 rounded-lg">
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Amount</label>
                                    <div class="relative">
                                        <span class="absolute left-3 top-2 text-gray-500">$</span>
                                        <input type="number" id="paymentAmount" value="150.00" class="w-full pl-8 pr-4 py-2 border border-gray-300 rounded-lg">
                                    </div>
                                </div>
                                
                                <div>
                                    <label class="block text-sm font-medium text-gray-700 mb-2">Payment Method</label>
                                    <select id="paymentMethod" class="w-full px-4 py-2 border border-gray-300 rounded-lg">
                                        <option value="credit">Credit Card (•••• 4242)</option>
                                        <option value="debit">Debit Card (•••• 8888)</option>
                                        <option value="bank">Bank Transfer</option>
                                        <option value="wallet">Digital Wallet</option>
                                    </select>
                                </div>
                                
                                <div>
                                    <label class="flex items-center">
                                        <input type="checkbox" id="escrowEnabled" checked class="rounded text-kwikr-green mr-2">
                                        <span class="text-sm text-gray-700">Hold payment in escrow until job completion</span>
                                    </label>
                                </div>
                                
                                <button type="submit" class="w-full bg-kwikr-green text-white py-3 rounded-lg font-semibold hover:bg-green-600 transition-colors">
                                    <i class="fas fa-lock mr-2"></i>Process Payment
                                </button>
                            </form>
                        </div>
                        
                        <!-- Payment Status -->
                        <div>
                            <h4 class="text-lg font-semibold text-gray-900 mb-4">Transaction Status</h4>
                            <div id="paymentStatus" class="space-y-4">
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm text-gray-600">Status:</span>
                                        <span id="statusText" class="text-sm font-medium text-gray-500">Ready to Process</span>
                                    </div>
                                </div>
                                
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm text-gray-600">Escrow Balance:</span>
                                        <span id="escrowBalance" class="text-sm font-medium text-gray-900">$0.00</span>
                                    </div>
                                </div>
                                
                                <!-- Progress Steps -->
                                <div class="mt-6">
                                    <h5 class="text-sm font-medium text-gray-700 mb-3">Payment Progress</h5>
                                    <div class="space-y-2">
                                        <div id="step1" class="flex items-center">
                                            <div class="w-4 h-4 rounded-full border-2 border-gray-300 mr-3"></div>
                                            <span class="text-sm text-gray-500">Payment Authorization</span>
                                        </div>
                                        <div id="step2" class="flex items-center">
                                            <div class="w-4 h-4 rounded-full border-2 border-gray-300 mr-3"></div>
                                            <span class="text-sm text-gray-500">Escrow Hold</span>
                                        </div>
                                        <div id="step3" class="flex items-center">
                                            <div class="w-4 h-4 rounded-full border-2 border-gray-300 mr-3"></div>
                                            <span class="text-sm text-gray-500">Job Completion</span>
                                        </div>
                                        <div id="step4" class="flex items-center">
                                            <div class="w-4 h-4 rounded-full border-2 border-gray-300 mr-3"></div>
                                            <span class="text-sm text-gray-500">Payment Release</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Recent Transactions -->
                    <div class="mt-8 pt-6 border-t border-gray-200">
                        <h4 class="text-lg font-semibold text-gray-900 mb-4">Recent Transactions</h4>
                        <div id="transactionHistory" class="space-y-3">
                            <div class="bg-gray-50 p-4 rounded-lg">
                                <div class="flex items-center justify-between">
                                    <div>
                                        <p class="font-medium text-gray-900">House Cleaning - Sarah M.</p>
                                        <p class="text-sm text-gray-600">Completed • Dec 20, 2024</p>
                                    </div>
                                    <span class="text-green-600 font-medium">$120.00</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Worker View -->
                <div id="workerView" class="p-6 hidden">
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        <!-- Earnings Overview -->
                        <div>
                            <h4 class="text-lg font-semibold text-gray-900 mb-4">Earnings Overview</h4>
                            <div class="space-y-4">
                                <div class="bg-green-50 p-4 rounded-lg">
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm text-green-800">Available Balance:</span>
                                        <span class="text-lg font-bold text-green-900">$1,247.50</span>
                                    </div>
                                </div>
                                
                                <div class="bg-yellow-50 p-4 rounded-lg">
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm text-yellow-800">Pending (Escrow):</span>
                                        <span class="text-lg font-bold text-yellow-900">$285.00</span>
                                    </div>
                                </div>
                                
                                <div class="bg-blue-50 p-4 rounded-lg">
                                    <div class="flex items-center justify-between">
                                        <span class="text-sm text-blue-800">This Month:</span>
                                        <span class="text-lg font-bold text-blue-900">$2,150.75</span>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Payout Options -->
                            <div class="mt-6">
                                <h5 class="text-sm font-medium text-gray-700 mb-3">Withdraw Funds</h5>
                                <div class="space-y-2">
                                    <button onclick="simulateWithdrawal('instant')" class="w-full text-left p-3 border border-gray-200 rounded-lg hover:bg-gray-50">
                                        <div class="flex items-center justify-between">
                                            <div>
                                                <p class="font-medium text-gray-900">Instant Transfer</p>
                                                <p class="text-sm text-gray-600">Available in minutes • 1.5% fee</p>
                                            </div>
                                            <span class="text-kwikr-green">$1,247.50</span>
                                        </div>
                                    </button>
                                    
                                    <button onclick="simulateWithdrawal('standard')" class="w-full text-left p-3 border border-gray-200 rounded-lg hover:bg-gray-50">
                                        <div class="flex items-center justify-between">
                                            <div>
                                                <p class="font-medium text-gray-900">Standard Transfer</p>
                                                <p class="text-sm text-gray-600">1-3 business days • No fee</p>
                                            </div>
                                            <span class="text-kwikr-green">$1,247.50</span>
                                        </div>
                                    </button>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Job Payments -->
                        <div>
                            <h4 class="text-lg font-semibold text-gray-900 mb-4">Active Job Payments</h4>
                            <div class="space-y-4">
                                <div class="border border-gray-200 p-4 rounded-lg">
                                    <div class="flex items-center justify-between mb-2">
                                        <h5 class="font-medium text-gray-900">Kitchen Deep Clean</h5>
                                        <span class="text-yellow-600 font-medium">$150.00</span>
                                    </div>
                                    <p class="text-sm text-gray-600 mb-3">Client: Jennifer L. • In Progress</p>
                                    <div class="flex space-x-2">
                                        <button onclick="markJobComplete(1)" class="flex-1 bg-kwikr-green text-white py-2 px-3 rounded text-sm hover:bg-green-600">
                                            Mark Complete
                                        </button>
                                        <button class="flex-1 border border-gray-300 text-gray-700 py-2 px-3 rounded text-sm hover:bg-gray-50">
                                            Request Release
                                        </button>
                                    </div>
                                </div>
                                
                                <div class="border border-gray-200 p-4 rounded-lg">
                                    <div class="flex items-center justify-between mb-2">
                                        <h5 class="font-medium text-gray-900">Bathroom Cleaning</h5>
                                        <span class="text-yellow-600 font-medium">$85.00</span>
                                    </div>
                                    <p class="text-sm text-gray-600 mb-3">Client: Mike R. • Awaiting Approval</p>
                                    <div class="bg-yellow-50 p-2 rounded">
                                        <p class="text-sm text-yellow-800">Payment pending client approval</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script>
            let currentRole = 'client';
            let currentStep = 0;
            let escrowBalance = 0;
            
            function switchRole(role) {
                currentRole = role;
                
                // Update button states
                document.getElementById('clientBtn').className = role === 'client' 
                    ? 'px-6 py-2 bg-kwikr-green text-white rounded-lg font-medium hover:bg-green-600 transition-colors'
                    : 'px-6 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 transition-colors';
                
                document.getElementById('workerBtn').className = role === 'worker'
                    ? 'px-6 py-2 bg-kwikr-green text-white rounded-lg font-medium hover:bg-green-600 transition-colors'
                    : 'px-6 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 transition-colors';
                
                // Switch views
                document.getElementById('clientView').style.display = role === 'client' ? 'block' : 'none';
                document.getElementById('workerView').style.display = role === 'worker' ? 'block' : 'none';
                
                console.log('Switched to', role, 'role');
            }
            
            function updateProgressStep(step) {
                const steps = ['step1', 'step2', 'step3', 'step4'];
                const stepTexts = [
                    'Payment Authorization',
                    'Escrow Hold',
                    'Job Completion',
                    'Payment Release'
                ];
                
                steps.forEach((stepId, index) => {
                    const stepElement = document.getElementById(stepId);
                    const circle = stepElement.querySelector('div');
                    const text = stepElement.querySelector('span');
                    
                    if (index <= step) {
                        circle.className = 'w-4 h-4 rounded-full bg-kwikr-green border-2 border-kwikr-green mr-3';
                        text.className = 'text-sm text-kwikr-green font-medium';
                        if (index === step) {
                            text.innerHTML = stepTexts[index] + ' <i class="fas fa-check ml-1"></i>';
                        }
                    } else {
                        circle.className = 'w-4 h-4 rounded-full border-2 border-gray-300 mr-3';
                        text.className = 'text-sm text-gray-500';
                        text.textContent = stepTexts[index];
                    }
                });
            }
            
            function updateStatus(status, step = null) {
                document.getElementById('statusText').textContent = status;
                if (step !== null) {
                    currentStep = step;
                    updateProgressStep(step);
                }
            }
            
            function updateEscrowBalance(amount) {
                escrowBalance = amount;
                document.getElementById('escrowBalance').textContent = '$' + amount.toFixed(2);
            }
            
            function addTransaction(description, amount, status = 'Completed') {
                const historyContainer = document.getElementById('transactionHistory');
                const transaction = document.createElement('div');
                transaction.className = 'bg-gray-50 p-4 rounded-lg';
                transaction.innerHTML = \`
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="font-medium text-gray-900">\${description}</p>
                            <p class="text-sm text-gray-600">\${status} • \${new Date().toLocaleDateString()}</p>
                        </div>
                        <span class="text-green-600 font-medium">$\${amount}</span>
                    </div>
                \`;
                historyContainer.insertBefore(transaction, historyContainer.firstChild);
            }
            
            function showNotification(message, type = 'success') {
                const notification = document.createElement('div');
                notification.className = \`fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transition-all duration-300 \${
                    type === 'success' ? 'bg-green-500 text-white' : 'bg-red-500 text-white'
                }\`;
                notification.innerHTML = \`
                    <div class="flex items-center">
                        <i class="fas \${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'} mr-2"></i>
                        <span>\${message}</span>
                    </div>
                \`;
                
                document.body.appendChild(notification);
                setTimeout(() => {
                    notification.remove();
                }, 3000);
            }
            
            async function processPayment() {
                const amount = parseFloat(document.getElementById('paymentAmount').value);
                const jobDesc = document.getElementById('jobDescription').value;
                const paymentMethod = document.getElementById('paymentMethod').value;
                const escrowEnabled = document.getElementById('escrowEnabled').checked;
                
                // Simulate payment processing
                updateStatus('Processing payment...', 0);
                
                await new Promise(resolve => setTimeout(resolve, 1000));
                updateStatus('Payment authorized', 0);
                
                await new Promise(resolve => setTimeout(resolve, 800));
                if (escrowEnabled) {
                    updateStatus('Funds held in escrow', 1);
                    updateEscrowBalance(escrowBalance + amount);
                } else {
                    updateStatus('Payment completed', 3);
                }
                
                addTransaction(jobDesc, amount.toFixed(2), 'Processing');
                showNotification('Payment processed successfully!');
                
                // Simulate job completion after a delay
                if (escrowEnabled) {
                    setTimeout(() => {
                        updateStatus('Job in progress', 1);
                        setTimeout(() => {
                            updateStatus('Job completed', 2);
                            setTimeout(() => {
                                updateStatus('Payment released', 3);
                                updateEscrowBalance(escrowBalance - amount);
                                showNotification('Payment released to worker!');
                            }, 2000);
                        }, 3000);
                    }, 2000);
                }
            }
            
            function simulateWithdrawal(type) {
                const amount = 1247.50;
                const fee = type === 'instant' ? amount * 0.015 : 0;
                const netAmount = amount - fee;
                
                showNotification(\`\${type === 'instant' ? 'Instant' : 'Standard'} withdrawal initiated for $\${netAmount.toFixed(2)}\`);
            }
            
            function markJobComplete(jobId) {
                showNotification('Job marked as complete! Requesting payment release...');
                // Simulate releasing payment
                setTimeout(() => {
                    showNotification('Payment released! $150.00 added to available balance.');
                }, 2000);
            }
            
            // Initialize form handling
            document.addEventListener('DOMContentLoaded', function() {
                const form = document.getElementById('paymentForm');
                if (form) {
                    form.addEventListener('submit', function(e) {
                        e.preventDefault();
                        processPayment();
                    });
                }
            });
        <\/script>
    </body>
    </html>
  `));D.get("/demo/lifecycle-test",xi,async e=>e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Full Lifecycle Test Suite - Kwikr Platform</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/demo" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-vial mr-2"></i>Lifecycle Test Suite
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="/demo" class="text-gray-700 hover:text-kwikr-green">
                            <i class="fas fa-arrow-left mr-1"></i>Back to Demos
                        </a>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="text-center mb-12">
                <h1 class="text-4xl font-bold text-gray-900 mb-4">
                    <i class="fas fa-vial text-kwikr-green mr-3"></i>
                    Full Lifecycle Test Suite
                </h1>
                <p class="text-xl text-gray-600 max-w-3xl mx-auto">
                    15-step end-to-end workflow testing with interactive test runner,
                    progress tracking, and detailed logging capabilities.
                </p>
            </div>

            <!-- Test Controls -->
            <div class="bg-white rounded-xl shadow-lg border border-gray-200 p-6 mb-8">
                <div class="flex items-center justify-between mb-4">
                    <h2 class="text-2xl font-bold text-gray-900">Test Suite Controls</h2>
                    <div class="flex items-center space-x-4">
                        <button onclick="runTests()" class="px-6 py-2 bg-kwikr-green text-white rounded-lg font-medium hover:bg-green-600 transition-colors">
                            <i class="fas fa-play mr-2"></i>Run All Tests
                        </button>
                        <button onclick="resetTests()" class="px-6 py-2 bg-gray-200 text-gray-700 rounded-lg font-medium hover:bg-gray-300 transition-colors">
                            <i class="fas fa-redo mr-2"></i>Reset
                        </button>
                    </div>
                </div>
                
                <!-- Features Grid -->
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div class="bg-blue-50 p-4 rounded-lg">
                        <div class="flex items-center text-blue-800 text-sm">
                            <i class="fas fa-play mr-2"></i>
                            <span class="font-medium">Interactive Test Runner</span>
                        </div>
                    </div>
                    <div class="bg-green-50 p-4 rounded-lg">
                        <div class="flex items-center text-green-800 text-sm">
                            <i class="fas fa-chart-line mr-2"></i>
                            <span class="font-medium">Progress Tracking</span>
                        </div>
                    </div>
                    <div class="bg-purple-50 p-4 rounded-lg">
                        <div class="flex items-center text-purple-800 text-sm">
                            <i class="fas fa-bug mr-2"></i>
                            <span class="font-medium">Detailed Logging</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Test Progress -->
            <div class="bg-white rounded-xl shadow-lg border border-gray-200 mb-8">
                <div class="p-6 border-b border-gray-200">
                    <h3 class="text-xl font-bold text-gray-900">Test Progress</h3>
                    <p class="text-gray-600 mt-1">15-step workflow verification</p>
                </div>
                <div class="p-6">
                    <div class="mb-4">
                        <div class="flex justify-between text-sm text-gray-600 mb-1">
                            <span>Overall Progress</span>
                            <span id="progressText">0 / 15 tests</span>
                        </div>
                        <div class="w-full bg-gray-200 rounded-full h-2">
                            <div id="progressBar" class="bg-kwikr-green h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-center">
                        <div class="bg-green-50 p-4 rounded-lg">
                            <div class="text-2xl font-bold text-green-600" id="passedCount">0</div>
                            <div class="text-sm text-green-700">Passed</div>
                        </div>
                        <div class="bg-red-50 p-4 rounded-lg">
                            <div class="text-2xl font-bold text-red-600" id="failedCount">0</div>
                            <div class="text-sm text-red-700">Failed</div>
                        </div>
                        <div class="bg-yellow-50 p-4 rounded-lg">
                            <div class="text-2xl font-bold text-yellow-600" id="pendingCount">15</div>
                            <div class="text-sm text-yellow-700">Pending</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Test Steps -->
            <div class="bg-white rounded-xl shadow-lg border border-gray-200">
                <div class="p-6 border-b border-gray-200">
                    <h3 class="text-xl font-bold text-gray-900">Test Steps</h3>
                    <p class="text-gray-600 mt-1">End-to-end workflow verification</p>
                </div>
                <div class="p-6">
                    <div class="space-y-3" id="testSteps">
                        <!-- Test steps will be populated by JavaScript -->
                    </div>
                </div>
            </div>
        </div>

        <script>
            const testSteps = [
                'User Registration & Profile Setup',
                'Email Verification Process', 
                'Service Provider Onboarding',
                'Service Category Configuration',
                'Payment Method Setup',
                'Job Posting Creation',
                'Provider Search & Matching',
                'Bid Submission Process',
                'Client Review & Selection',
                'Service Agreement Creation',
                'Payment Escrow Setup',
                'Service Delivery Tracking',
                'Completion Verification',
                'Payment Release Process',
                'Review & Rating System'
            ];

            let testResults = {
                passed: 0,
                failed: 0,
                pending: 15
            };

            function initializeTests() {
                const container = document.getElementById('testSteps');
                container.innerHTML = '';
                
                testSteps.forEach((step, index) => {
                    const stepElement = document.createElement('div');
                    stepElement.className = 'flex items-center p-3 border border-gray-200 rounded-lg';
                    stepElement.innerHTML = \`
                        <div class="flex-shrink-0 w-8 h-8 bg-yellow-100 text-yellow-600 rounded-full flex items-center justify-center text-sm font-medium mr-3">
                            \${index + 1}
                        </div>
                        <div class="flex-grow">
                            <div class="font-medium text-gray-900">\${step}</div>
                            <div class="text-sm text-gray-500">Pending execution</div>
                        </div>
                        <div class="flex-shrink-0">
                            <i class="fas fa-clock text-yellow-500"></i>
                        </div>
                    \`;
                    stepElement.id = \`step-\${index}\`;
                    container.appendChild(stepElement);
                });
            }

            function runTests() {
                resetTests();
                
                testSteps.forEach((step, index) => {
                    setTimeout(() => {
                        runSingleTest(index);
                    }, index * 500);
                });
            }

            function runSingleTest(index) {
                const stepElement = document.getElementById(\`step-\${index}\`);
                const success = Math.random() > 0.2; // 80% success rate
                
                if (success) {
                    stepElement.className = 'flex items-center p-3 border border-green-200 bg-green-50 rounded-lg';
                    stepElement.innerHTML = \`
                        <div class="flex-shrink-0 w-8 h-8 bg-green-100 text-green-600 rounded-full flex items-center justify-center text-sm font-medium mr-3">
                            \${index + 1}
                        </div>
                        <div class="flex-grow">
                            <div class="font-medium text-gray-900">\${testSteps[index]}</div>
                            <div class="text-sm text-green-600">Test passed successfully</div>
                        </div>
                        <div class="flex-shrink-0">
                            <i class="fas fa-check text-green-500"></i>
                        </div>
                    \`;
                    testResults.passed++;
                } else {
                    stepElement.className = 'flex items-center p-3 border border-red-200 bg-red-50 rounded-lg';
                    stepElement.innerHTML = \`
                        <div class="flex-shrink-0 w-8 h-8 bg-red-100 text-red-600 rounded-full flex items-center justify-center text-sm font-medium mr-3">
                            \${index + 1}
                        </div>
                        <div class="flex-grow">
                            <div class="font-medium text-gray-900">\${testSteps[index]}</div>
                            <div class="text-sm text-red-600">Test failed - check logs</div>
                        </div>
                        <div class="flex-shrink-0">
                            <i class="fas fa-times text-red-500"></i>
                        </div>
                    \`;
                    testResults.failed++;
                }
                
                testResults.pending--;
                updateProgress();
            }

            function updateProgress() {
                const total = testSteps.length;
                const completed = testResults.passed + testResults.failed;
                const percentage = (completed / total) * 100;
                
                document.getElementById('progressBar').style.width = percentage + '%';
                document.getElementById('progressText').textContent = \`\${completed} / \${total} tests\`;
                document.getElementById('passedCount').textContent = testResults.passed;
                document.getElementById('failedCount').textContent = testResults.failed;
                document.getElementById('pendingCount').textContent = testResults.pending;
            }

            function resetTests() {
                testResults = { passed: 0, failed: 0, pending: 15 };
                initializeTests();
                updateProgress();
            }

            // Initialize on load
            document.addEventListener('DOMContentLoaded', initializeTests);
        <\/script>
    </body>
    </html>
  `));function _0(){return`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Kwikr Admin Dashboard - SaaS Management Portal</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"><\/script>
    </head>
    <body class="bg-gray-100 min-h-screen">
        <!-- Navigation Header -->
        <nav class="bg-white shadow-sm border-b border-gray-200 fixed w-full top-0 z-40">
            <div class="px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <div class="flex items-center">
                            <i class="fas fa-shield-alt text-kwikr-green text-2xl mr-3"></i>
                            <h1 class="text-xl font-bold text-gray-900">Kwikr Admin Portal</h1>
                        </div>
                    </div>
                    <div class="flex items-center space-x-4">
                        <div class="bg-kwikr-green text-white px-4 py-2 rounded-lg">
                            <i class="fas fa-user mr-2"></i>Admin Demo
                        </div>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Main Content -->
        <div class="pt-16">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
                <!-- Header -->
                <div class="mb-8">
                    <h1 class="text-3xl font-bold text-gray-900">Admin Dashboard</h1>
                    <p class="text-gray-600 mt-2">Comprehensive platform management and oversight</p>
                </div>

                <!-- Stats Grid -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Total Users</p>
                                <p class="text-3xl font-bold text-gray-900">2,345</p>
                                <p class="text-sm text-green-600">↗ 12% from last month</p>
                            </div>
                            <div class="bg-blue-100 p-3 rounded-full">
                                <i class="fas fa-users text-blue-600 text-xl"></i>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Active Jobs</p>
                                <p class="text-3xl font-bold text-gray-900">1,234</p>
                                <p class="text-sm text-green-600">↗ 8% from last month</p>
                            </div>
                            <div class="bg-green-100 p-3 rounded-full">
                                <i class="fas fa-briefcase text-green-600 text-xl"></i>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Revenue</p>
                                <p class="text-3xl font-bold text-gray-900">$45,231</p>
                                <p class="text-sm text-green-600">↗ 15% from last month</p>
                            </div>
                            <div class="bg-purple-100 p-3 rounded-full">
                                <i class="fas fa-dollar-sign text-purple-600 text-xl"></i>
                            </div>
                        </div>
                    </div>
                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-gray-600">Platform Fee</p>
                                <p class="text-3xl font-bold text-gray-900">$2,156</p>
                                <p class="text-sm text-green-600">↗ 18% from last month</p>
                            </div>
                            <div class="bg-yellow-100 p-3 rounded-full">
                                <i class="fas fa-chart-line text-yellow-600 text-xl"></i>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Management Sections -->
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    <!-- User Management -->
                    <a href="/admin/users" class="block">
                        <div class="bg-white rounded-lg shadow hover:shadow-lg transition-shadow p-6">
                            <div class="flex items-center mb-4">
                                <div class="bg-blue-100 p-3 rounded-lg mr-4">
                                    <i class="fas fa-users text-blue-600 text-2xl"></i>
                                </div>
                                <div>
                                    <h3 class="text-lg font-semibold text-gray-900">User Management</h3>
                                    <p class="text-gray-600 text-sm">Manage clients and workers</p>
                                </div>
                            </div>
                            <p class="text-gray-700 text-sm mb-4">View, edit, and manage all user accounts including clients and service providers.</p>
                            <div class="flex justify-between items-center">
                                <span class="text-blue-600 font-medium">Manage Users →</span>
                                <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full">2,345 users</span>
                            </div>
                        </div>
                    </a>

                    <!-- Worker Management -->
                    <a href="/admin/workers" class="block">
                        <div class="bg-white rounded-lg shadow hover:shadow-lg transition-shadow p-6">
                            <div class="flex items-center mb-4">
                                <div class="bg-green-100 p-3 rounded-lg mr-4">
                                    <i class="fas fa-hard-hat text-green-600 text-2xl"></i>
                                </div>
                                <div>
                                    <h3 class="text-lg font-semibold text-gray-900">Worker Management</h3>
                                    <p class="text-gray-600 text-sm">Verify and manage workers</p>
                                </div>
                            </div>
                            <p class="text-gray-700 text-sm mb-4">Review worker applications, verify credentials, and manage worker status.</p>
                            <div class="flex justify-between items-center">
                                <span class="text-green-600 font-medium">Manage Workers →</span>
                                <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">567 workers</span>
                            </div>
                        </div>
                    </a>

                    <!-- Analytics -->
                    <a href="/admin/analytics" class="block">
                        <div class="bg-white rounded-lg shadow hover:shadow-lg transition-shadow p-6">
                            <div class="flex items-center mb-4">
                                <div class="bg-purple-100 p-3 rounded-lg mr-4">
                                    <i class="fas fa-chart-bar text-purple-600 text-2xl"></i>
                                </div>
                                <div>
                                    <h3 class="text-lg font-semibold text-gray-900">Analytics Dashboard</h3>
                                    <p class="text-gray-600 text-sm">Platform metrics & insights</p>
                                </div>
                            </div>
                            <p class="text-gray-700 text-sm mb-4">View detailed analytics, reports, and key performance indicators.</p>
                            <div class="flex justify-between items-center">
                                <span class="text-purple-600 font-medium">View Analytics →</span>
                                <span class="bg-purple-100 text-purple-800 text-xs px-2 py-1 rounded-full">Live data</span>
                            </div>
                        </div>
                    </a>

                    <!-- Compliance Management -->
                    <a href="/admin/compliance" class="block">
                        <div class="bg-white rounded-lg shadow hover:shadow-lg transition-shadow p-6">
                            <div class="flex items-center mb-4">
                                <div class="bg-orange-100 p-3 rounded-lg mr-4">
                                    <i class="fas fa-shield-check text-orange-600 text-2xl"></i>
                                </div>
                                <div>
                                    <h3 class="text-lg font-semibold text-gray-900">Compliance Management</h3>
                                    <p class="text-gray-600 text-sm">Monitor & flag issues</p>
                                </div>
                            </div>
                            <p class="text-gray-700 text-sm mb-4">Track worker compliance, flag issues, and manage verification status.</p>
                            <div class="flex justify-between items-center">
                                <span class="text-orange-600 font-medium">Manage Compliance →</span>
                                <span class="bg-orange-100 text-orange-800 text-xs px-2 py-1 rounded-full">91 flagged</span>
                            </div>
                        </div>
                    </a>

                    <!-- Payment System -->
                    <a href="/admin/payments" class="block">
                        <div class="bg-white rounded-lg shadow hover:shadow-lg transition-shadow p-6">
                            <div class="flex items-center mb-4">
                                <div class="bg-red-100 p-3 rounded-lg mr-4">
                                    <i class="fas fa-credit-card text-red-600 text-2xl"></i>
                                </div>
                                <div>
                                    <h3 class="text-lg font-semibold text-gray-900">Payment System</h3>
                                    <p class="text-gray-600 text-sm">Transactions & billing</p>
                                </div>
                            </div>
                            <p class="text-gray-700 text-sm mb-4">Monitor transactions, manage disputes, and oversee payment processing.</p>
                            <div class="flex justify-between items-center">
                                <span class="text-red-600 font-medium">Manage Payments →</span>
                                <span class="bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full">$47,325</span>
                            </div>
                        </div>
                    </a>

                    <!-- System Settings -->
                    <a href="/admin/settings" class="block">
                        <div class="bg-white rounded-lg shadow hover:shadow-lg transition-shadow p-6">
                            <div class="flex items-center mb-4">
                                <div class="bg-gray-100 p-3 rounded-lg mr-4">
                                    <i class="fas fa-cog text-gray-600 text-2xl"></i>
                                </div>
                                <div>
                                    <h3 class="text-lg font-semibold text-gray-900">System Settings</h3>
                                    <p class="text-gray-600 text-sm">Platform configuration</p>
                                </div>
                            </div>
                            <p class="text-gray-700 text-sm mb-4">Configure platform settings, fees, and operational parameters.</p>
                            <div class="flex justify-between items-center">
                                <span class="text-gray-600 font-medium">System Settings →</span>
                                <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full">Config</span>
                            </div>
                        </div>
                    </a>
                </div>
            </div>
        </div>
    </body>
    </html>
  `}function E0(){return`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>User Management - Kwikr Admin</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gray-100 min-h-screen">
        <!-- Navigation Header -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/admin/dashboard" class="flex items-center">
                            <i class="fas fa-shield-alt text-kwikr-green text-2xl mr-3"></i>
                            <h1 class="text-xl font-bold text-gray-900">Kwikr Admin Portal</h1>
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="/admin/dashboard" class="text-gray-600 hover:text-kwikr-green">
                            <i class="fas fa-home mr-2"></i>Dashboard
                        </a>
                        <div class="bg-kwikr-green text-white px-4 py-2 rounded-lg">
                            <i class="fas fa-user mr-2"></i>Admin
                        </div>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Main Content -->
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Page Header -->
            <div class="flex items-center justify-between mb-8">
                <div>
                    <h1 class="text-3xl font-bold text-gray-900">User Management</h1>
                    <p class="text-gray-600 mt-2">Manage all platform users including clients and service providers</p>
                </div>
                <div class="flex space-x-3">
                    <button class="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700">
                        <i class="fas fa-plus mr-2"></i>Add User
                    </button>
                    <button class="bg-kwikr-green text-white px-6 py-2 rounded-lg hover:bg-green-600">
                        <i class="fas fa-download mr-2"></i>Export Users
                    </button>
                </div>
            </div>

            <!-- User Stats -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">Total Users</p>
                            <p class="text-3xl font-bold text-gray-900">2,345</p>
                        </div>
                        <div class="bg-blue-100 p-3 rounded-full">
                            <i class="fas fa-users text-blue-600 text-xl"></i>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">Active Clients</p>
                            <p class="text-3xl font-bold text-green-600">1,678</p>
                        </div>
                        <div class="bg-green-100 p-3 rounded-full">
                            <i class="fas fa-user text-green-600 text-xl"></i>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">Active Workers</p>
                            <p class="text-3xl font-bold text-purple-600">567</p>
                        </div>
                        <div class="bg-purple-100 p-3 rounded-full">
                            <i class="fas fa-tools text-purple-600 text-xl"></i>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">New This Month</p>
                            <p class="text-3xl font-bold text-orange-600">156</p>
                        </div>
                        <div class="bg-orange-100 p-3 rounded-full">
                            <i class="fas fa-user-plus text-orange-600 text-xl"></i>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Filters and Search -->
            <div class="bg-white rounded-lg shadow mb-6">
                <div class="p-6">
                    <div class="flex flex-wrap gap-4 items-center">
                        <input type="text" placeholder="Search users by name, email, or phone..." 
                               class="flex-1 min-w-64 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent">
                        <select class="px-4 py-2 border border-gray-300 rounded-lg">
                            <option>All User Types</option>
                            <option>Clients</option>
                            <option>Workers</option>
                            <option>Admins</option>
                        </select>
                        <select class="px-4 py-2 border border-gray-300 rounded-lg">
                            <option>All Status</option>
                            <option>Active</option>
                            <option>Inactive</option>
                            <option>Suspended</option>
                        </select>
                        <button class="bg-kwikr-green text-white px-6 py-2 rounded-lg hover:bg-green-600">
                            <i class="fas fa-search mr-2"></i>Search
                        </button>
                    </div>
                </div>
            </div>

            <!-- Users Table -->
            <div class="bg-white rounded-lg shadow">
                <div class="p-6 border-b border-gray-200">
                    <div class="flex items-center justify-between">
                        <h3 class="text-lg font-semibold text-gray-900">All Users</h3>
                        <div class="flex items-center space-x-2">
                            <input type="checkbox" id="selectAllUsers" class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                            <label for="selectAllUsers" class="text-sm text-gray-700">Select All</label>
                        </div>
                    </div>
                </div>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    <input type="checkbox" class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                </th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Joined</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Active</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <input type="checkbox" class="user-checkbox w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="w-10 h-10 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold mr-4">
                                            SJ
                                        </div>
                                        <div>
                                            <div class="font-medium text-gray-900">Sarah Johnson</div>
                                            <div class="text-sm text-gray-500">sarah.j@email.com</div>
                                            <div class="text-xs text-gray-400">+1 (555) 123-4567</div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">
                                        Client
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">
                                        Active
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    Dec 15, 2024
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    2 hours ago
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                                    <button class="text-kwikr-green hover:text-green-600">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="text-blue-600 hover:text-blue-900">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="text-red-600 hover:text-red-900">
                                        <i class="fas fa-ban"></i>
                                    </button>
                                </td>
                            </tr>
                            <tr class="hover:bg-gray-50">
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <input type="checkbox" class="user-checkbox w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="w-10 h-10 bg-purple-500 rounded-full flex items-center justify-center text-white font-bold mr-4">
                                            MJ
                                        </div>
                                        <div>
                                            <div class="font-medium text-gray-900">Mike Johnson</div>
                                            <div class="text-sm text-gray-500">mike.j@email.com</div>
                                            <div class="text-xs text-gray-400">+1 (555) 987-6543</div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-purple-100 text-purple-800">
                                        Worker
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">
                                        Active
                                    </span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    Dec 10, 2024
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                    1 day ago
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium space-x-2">
                                    <button class="text-kwikr-green hover:text-green-600">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="text-blue-600 hover:text-blue-900">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="text-red-600 hover:text-red-900">
                                        <i class="fas fa-ban"></i>
                                    </button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Bulk Actions -->
            <div class="mt-6 bg-white rounded-lg shadow p-4">
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-700" id="selectedCount">0 selected</span>
                        <button onclick="bulkActivate()" class="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 disabled:opacity-50">
                            <i class="fas fa-check mr-2"></i>Activate Selected
                        </button>
                        <button onclick="bulkSuspend()" class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 disabled:opacity-50">
                            <i class="fas fa-ban mr-2"></i>Suspend Selected
                        </button>
                        <button onclick="bulkMessage()" class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50">
                            <i class="fas fa-envelope mr-2"></i>Send Message
                        </button>
                    </div>
                    <div class="text-sm text-gray-500">
                        Showing 2 of 2,345 users
                    </div>
                </div>
            </div>
        </div>

        <script>
            // Track selected items
            const userCheckboxes = document.querySelectorAll('.user-checkbox');
            const selectedCountElement = document.getElementById('selectedCount');
            
            function updateSelectedCount() {
                const selectedCount = document.querySelectorAll('.user-checkbox:checked').length;
                selectedCountElement.textContent = selectedCount + ' selected';
            }
            
            userCheckboxes.forEach(checkbox => {
                checkbox.addEventListener('change', updateSelectedCount);
            });
            
            function bulkActivate() {
                const selected = document.querySelectorAll('.user-checkbox:checked');
                if (selected.length === 0) {
                    alert('Please select users to activate.');
                    return;
                }
                if (confirm('Activate ' + selected.length + ' selected users?')) {
                    alert(selected.length + ' users activated successfully!');
                    location.reload();
                }
            }

            function bulkSuspend() {
                const selected = document.querySelectorAll('.user-checkbox:checked');
                if (selected.length === 0) {
                    alert('Please select users to suspend.');
                    return;
                }
                if (confirm('Suspend ' + selected.length + ' selected users?')) {
                    alert(selected.length + ' users suspended successfully!');
                    location.reload();
                }
            }

            function bulkMessage() {
                const selected = document.querySelectorAll('.user-checkbox:checked');
                if (selected.length === 0) {
                    alert('Please select users to message.');
                    return;
                }
                const message = prompt('Enter message to send to ' + selected.length + ' users:');
                if (message) {
                    alert('Message sent to ' + selected.length + ' users successfully!');
                }
            }
            
            // Select all functionality
            document.getElementById('selectAllUsers').addEventListener('change', function() {
                userCheckboxes.forEach(cb => cb.checked = this.checked);
                updateSelectedCount();
            });
        <\/script>
    </body>
    </html>
  `}function k0(){return`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Worker Management - Kwikr Admin</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/admin/dashboard" class="flex items-center">
                            <i class="fas fa-bolt text-kwikr-green text-2xl mr-2"></i>
                            <span class="text-2xl font-bold text-gray-900">Kwikr Admin</span>
                        </a>
                        <div class="ml-6 text-gray-600">
                            <i class="fas fa-users mr-2"></i>Worker Management
                        </div>
                    </div>
                    <a href="/admin/dashboard" class="text-gray-600 hover:text-kwikr-green">
                        <i class="fas fa-arrow-left mr-1"></i>Back to Dashboard
                    </a>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900 mb-2">
                    <i class="fas fa-users text-kwikr-green mr-3"></i>Worker Management
                </h1>
                <p class="text-gray-600">Manage service providers, verify credentials, and monitor performance</p>
            </div>

            <!-- Stats Overview -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-green-100 p-3 rounded-full">
                            <i class="fas fa-user-check text-green-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Active Workers</p>
                            <p class="text-2xl font-bold text-gray-900">156</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-yellow-100 p-3 rounded-full">
                            <i class="fas fa-clock text-yellow-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Pending Verification</p>
                            <p class="text-2xl font-bold text-gray-900">23</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-red-100 p-3 rounded-full">
                            <i class="fas fa-exclamation-triangle text-red-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Flagged Workers</p>
                            <p class="text-2xl font-bold text-gray-900">7</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-blue-100 p-3 rounded-full">
                            <i class="fas fa-star text-blue-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Average Rating</p>
                            <p class="text-2xl font-bold text-gray-900">4.7</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Filters and Search -->
            <div class="bg-white rounded-lg shadow mb-8 p-6">
                <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between space-y-4 lg:space-y-0">
                    <div class="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-4">
                        <div>
                            <input type="text" placeholder="Search workers..." class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent">
                        </div>
                        <div>
                            <select class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent">
                                <option>All Status</option>
                                <option>Active</option>
                                <option>Pending Verification</option>
                                <option>Suspended</option>
                                <option>Flagged</option>
                            </select>
                        </div>
                        <div>
                            <select class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent">
                                <option>All Services</option>
                                <option>Cleaning</option>
                                <option>Handyman</option>
                                <option>Plumbing</option>
                                <option>Electrical</option>
                            </select>
                        </div>
                    </div>
                    <div class="flex space-x-2">
                        <button class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 flex items-center">
                            <i class="fas fa-download mr-2"></i>Export
                        </button>
                        <button class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center">
                            <i class="fas fa-plus mr-2"></i>Add Worker
                        </button>
                    </div>
                </div>
            </div>

            <!-- Workers Table -->
            <div class="bg-white rounded-lg shadow overflow-hidden">
                <div class="px-6 py-4 border-b border-gray-200">
                    <h3 class="text-lg font-medium text-gray-900">Service Providers</h3>
                </div>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Worker</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Services</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Rating</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Jobs Completed</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Joined</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="w-10 h-10 bg-gradient-to-br from-blue-400 to-blue-600 rounded-full flex items-center justify-center text-white font-bold">
                                            JS
                                        </div>
                                        <div class="ml-4">
                                            <div class="text-sm font-medium text-gray-900">John Smith</div>
                                            <div class="text-sm text-gray-500">john.smith@email.com</div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex space-x-1">
                                        <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full">Cleaning</span>
                                        <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Maintenance</span>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <span class="text-yellow-400">★★★★★</span>
                                        <span class="ml-1 text-sm text-gray-600">4.9</span>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">47</td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full font-medium">Active</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Jan 15, 2024</td>
                                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                    <div class="flex space-x-2">
                                        <button class="text-kwikr-green hover:text-green-700 p-1">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <button class="text-blue-600 hover:text-blue-800 p-1">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="text-red-600 hover:text-red-800 p-1">
                                            <i class="fas fa-ban"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="w-10 h-10 bg-gradient-to-br from-green-400 to-green-600 rounded-full flex items-center justify-center text-white font-bold">
                                            MJ
                                        </div>
                                        <div class="ml-4">
                                            <div class="text-sm font-medium text-gray-900">Maria Johnson</div>
                                            <div class="text-sm text-gray-500">maria.j@email.com</div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex space-x-1">
                                        <span class="bg-purple-100 text-purple-800 text-xs px-2 py-1 rounded-full">Plumbing</span>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <span class="text-yellow-400">★★★★☆</span>
                                        <span class="ml-1 text-sm text-gray-600">4.6</span>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">32</td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full font-medium">Pending</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Feb 3, 2024</td>
                                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                    <div class="flex space-x-2">
                                        <button class="text-kwikr-green hover:text-green-700 p-1">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <button class="text-blue-600 hover:text-blue-800 p-1">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="text-green-600 hover:text-green-800 p-1">
                                            <i class="fas fa-check"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <div class="w-10 h-10 bg-gradient-to-br from-red-400 to-red-600 rounded-full flex items-center justify-center text-white font-bold">
                                            DW
                                        </div>
                                        <div class="ml-4">
                                            <div class="text-sm font-medium text-gray-900">David Wilson</div>
                                            <div class="text-sm text-gray-500">d.wilson@email.com</div>
                                        </div>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex space-x-1">
                                        <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full">Electrical</span>
                                        <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full">Handyman</span>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <div class="flex items-center">
                                        <span class="text-yellow-400">★★★☆☆</span>
                                        <span class="ml-1 text-sm text-gray-600">3.2</span>
                                    </div>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">8</td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full font-medium">Flagged</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Mar 10, 2024</td>
                                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                    <div class="flex space-x-2">
                                        <button class="text-kwikr-green hover:text-green-700 p-1">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <button class="text-orange-600 hover:text-orange-800 p-1">
                                            <i class="fas fa-flag"></i>
                                        </button>
                                        <button class="text-red-600 hover:text-red-800 p-1">
                                            <i class="fas fa-ban"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                
                <!-- Pagination -->
                <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
                    <div class="flex-1 flex justify-between sm:hidden">
                        <a href="#" class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">Previous</a>
                        <a href="#" class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">Next</a>
                    </div>
                    <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                        <div>
                            <p class="text-sm text-gray-700">
                                Showing <span class="font-medium">1</span> to <span class="font-medium">10</span> of <span class="font-medium">186</span> results
                            </p>
                        </div>
                        <div>
                            <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px">
                                <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                                <a href="#" class="bg-kwikr-green border-kwikr-green text-white relative inline-flex items-center px-4 py-2 border text-sm font-medium">1</a>
                                <a href="#" class="bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium">2</a>
                                <a href="#" class="bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium">3</a>
                                <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </body>
    </html>
  `}function T0(){return`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Analytics Dashboard - Kwikr Admin</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"><\/script>
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/admin/dashboard" class="flex items-center">
                            <i class="fas fa-bolt text-kwikr-green text-2xl mr-2"></i>
                            <span class="text-2xl font-bold text-gray-900">Kwikr Admin</span>
                        </a>
                        <div class="ml-6 text-gray-600">
                            <i class="fas fa-chart-bar mr-2"></i>Analytics Dashboard
                        </div>
                    </div>
                    <a href="/admin/dashboard" class="text-gray-600 hover:text-kwikr-green">
                        <i class="fas fa-arrow-left mr-1"></i>Back to Dashboard
                    </a>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900 mb-2">
                    <i class="fas fa-chart-bar text-kwikr-green mr-3"></i>Analytics Dashboard
                </h1>
                <p class="text-gray-600">Monitor platform performance, user engagement, and business metrics</p>
            </div>

            <!-- Key Metrics -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-blue-100 p-3 rounded-full">
                            <i class="fas fa-users text-blue-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Total Users</p>
                            <div class="flex items-baseline">
                                <p class="text-2xl font-bold text-gray-900">2,847</p>
                                <span class="ml-2 text-sm text-green-600">+12%</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-green-100 p-3 rounded-full">
                            <i class="fas fa-briefcase text-green-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Active Jobs</p>
                            <div class="flex items-baseline">
                                <p class="text-2xl font-bold text-gray-900">1,234</p>
                                <span class="ml-2 text-sm text-green-600">+8%</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-yellow-100 p-3 rounded-full">
                            <i class="fas fa-dollar-sign text-yellow-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Revenue (MTD)</p>
                            <div class="flex items-baseline">
                                <p class="text-2xl font-bold text-gray-900">$89,432</p>
                                <span class="ml-2 text-sm text-green-600">+15%</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-purple-100 p-3 rounded-full">
                            <i class="fas fa-star text-purple-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Avg Rating</p>
                            <div class="flex items-baseline">
                                <p class="text-2xl font-bold text-gray-900">4.8</p>
                                <span class="ml-2 text-sm text-green-600">+0.2</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Charts Row -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
                <!-- Revenue Chart -->
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-lg font-semibold text-gray-900">Revenue Trend</h3>
                        <select class="px-3 py-1 border border-gray-300 rounded-md text-sm">
                            <option>Last 30 days</option>
                            <option>Last 90 days</option>
                            <option>Last year</option>
                        </select>
                    </div>
                    <div>
                        <canvas id="revenueChart" height="200"></canvas>
                    </div>
                </div>

                <!-- User Growth Chart -->
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center justify-between mb-6">
                        <h3 class="text-lg font-semibold text-gray-900">User Growth</h3>
                        <div class="flex space-x-2">
                            <span class="inline-flex items-center px-2 py-1 text-xs bg-blue-100 text-blue-800 rounded-full">
                                <div class="w-2 h-2 bg-blue-600 rounded-full mr-1"></div>
                                Clients
                            </span>
                            <span class="inline-flex items-center px-2 py-1 text-xs bg-green-100 text-green-800 rounded-full">
                                <div class="w-2 h-2 bg-green-600 rounded-full mr-1"></div>
                                Workers
                            </span>
                        </div>
                    </div>
                    <div>
                        <canvas id="userGrowthChart" height="200"></canvas>
                    </div>
                </div>
            </div>

            <!-- Service Categories & Recent Activity -->
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                <!-- Popular Services -->
                <div class="bg-white rounded-lg shadow p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-6">Popular Services</h3>
                    <div class="space-y-4">
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center mr-3">
                                    <i class="fas fa-home text-blue-600 text-sm"></i>
                                </div>
                                <span class="text-sm font-medium text-gray-900">Cleaning</span>
                            </div>
                            <div class="text-right">
                                <div class="text-sm font-bold text-gray-900">542</div>
                                <div class="text-xs text-gray-500">jobs</div>
                            </div>
                        </div>
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center mr-3">
                                    <i class="fas fa-tools text-green-600 text-sm"></i>
                                </div>
                                <span class="text-sm font-medium text-gray-900">Handyman</span>
                            </div>
                            <div class="text-right">
                                <div class="text-sm font-bold text-gray-900">423</div>
                                <div class="text-xs text-gray-500">jobs</div>
                            </div>
                        </div>
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3">
                                    <i class="fas fa-wrench text-purple-600 text-sm"></i>
                                </div>
                                <span class="text-sm font-medium text-gray-900">Plumbing</span>
                            </div>
                            <div class="text-right">
                                <div class="text-sm font-bold text-gray-900">287</div>
                                <div class="text-xs text-gray-500">jobs</div>
                            </div>
                        </div>
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center mr-3">
                                    <i class="fas fa-bolt text-yellow-600 text-sm"></i>
                                </div>
                                <span class="text-sm font-medium text-gray-900">Electrical</span>
                            </div>
                            <div class="text-right">
                                <div class="text-sm font-bold text-gray-900">189</div>
                                <div class="text-xs text-gray-500">jobs</div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Recent Activity -->
                <div class="lg:col-span-2 bg-white rounded-lg shadow p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-6">Recent Activity</h3>
                    <div class="flow-root">
                        <ul class="-mb-8">
                            <li>
                                <div class="relative pb-8">
                                    <span class="absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200"></span>
                                    <div class="relative flex space-x-3">
                                        <div class="bg-green-100 h-8 w-8 rounded-full flex items-center justify-center">
                                            <i class="fas fa-user-plus text-green-600 text-sm"></i>
                                        </div>
                                        <div class="min-w-0 flex-1 pt-1.5 flex justify-between space-x-4">
                                            <div>
                                                <p class="text-sm text-gray-500">New worker <span class="font-medium text-gray-900">Sarah Mitchell</span> joined platform</p>
                                            </div>
                                            <div class="text-right text-sm whitespace-nowrap text-gray-500">
                                                2 hours ago
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </li>
                            <li>
                                <div class="relative pb-8">
                                    <span class="absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200"></span>
                                    <div class="relative flex space-x-3">
                                        <div class="bg-blue-100 h-8 w-8 rounded-full flex items-center justify-center">
                                            <i class="fas fa-briefcase text-blue-600 text-sm"></i>
                                        </div>
                                        <div class="min-w-0 flex-1 pt-1.5 flex justify-between space-x-4">
                                            <div>
                                                <p class="text-sm text-gray-500">Job #1247 completed by <span class="font-medium text-gray-900">Mike Johnson</span></p>
                                            </div>
                                            <div class="text-right text-sm whitespace-nowrap text-gray-500">
                                                4 hours ago
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </li>
                            <li>
                                <div class="relative pb-8">
                                    <span class="absolute top-4 left-4 -ml-px h-full w-0.5 bg-gray-200"></span>
                                    <div class="relative flex space-x-3">
                                        <div class="bg-yellow-100 h-8 w-8 rounded-full flex items-center justify-center">
                                            <i class="fas fa-exclamation-triangle text-yellow-600 text-sm"></i>
                                        </div>
                                        <div class="min-w-0 flex-1 pt-1.5 flex justify-between space-x-4">
                                            <div>
                                                <p class="text-sm text-gray-500">Dispute raised for job #1245 - requires review</p>
                                            </div>
                                            <div class="text-right text-sm whitespace-nowrap text-gray-500">
                                                6 hours ago
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </li>
                            <li>
                                <div class="relative">
                                    <div class="relative flex space-x-3">
                                        <div class="bg-purple-100 h-8 w-8 rounded-full flex items-center justify-center">
                                            <i class="fas fa-star text-purple-600 text-sm"></i>
                                        </div>
                                        <div class="min-w-0 flex-1 pt-1.5 flex justify-between space-x-4">
                                            <div>
                                                <p class="text-sm text-gray-500">5-star review received for <span class="font-medium text-gray-900">David Wilson</span></p>
                                            </div>
                                            <div class="text-right text-sm whitespace-nowrap text-gray-500">
                                                8 hours ago
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <script>
            // Revenue Chart
            const revenueCtx = document.getElementById('revenueChart').getContext('2d');
            new Chart(revenueCtx, {
                type: 'line',
                data: {
                    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],
                    datasets: [{
                        label: 'Revenue',
                        data: [65000, 72000, 68000, 78000, 82000, 85000, 87000, 89000],
                        borderColor: '#00C881',
                        backgroundColor: 'rgba(0, 200, 129, 0.1)',
                        borderWidth: 2,
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            ticks: {
                                callback: function(value) {
                                    return '$' + value.toLocaleString();
                                }
                            }
                        }
                    }
                }
            });

            // User Growth Chart
            const userGrowthCtx = document.getElementById('userGrowthChart').getContext('2d');
            new Chart(userGrowthCtx, {
                type: 'line',
                data: {
                    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],
                    datasets: [{
                        label: 'Clients',
                        data: [1200, 1350, 1420, 1580, 1720, 1850, 1980, 2100],
                        borderColor: '#3B82F6',
                        backgroundColor: 'rgba(59, 130, 246, 0.1)',
                        borderWidth: 2
                    }, {
                        label: 'Workers',
                        data: [80, 95, 110, 125, 140, 148, 152, 156],
                        borderColor: '#10B981',
                        backgroundColor: 'rgba(16, 185, 129, 0.1)',
                        borderWidth: 2
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        <\/script>
    </body>
    </html>
  `}function S0(){return`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Compliance Management - Kwikr Admin</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/admin/dashboard" class="flex items-center">
                            <i class="fas fa-bolt text-kwikr-green text-2xl mr-2"></i>
                            <span class="text-2xl font-bold text-gray-900">Kwikr Admin</span>
                        </a>
                        <div class="ml-6 text-gray-600">
                            <i class="fas fa-shield-check mr-2"></i>Compliance Management
                        </div>
                    </div>
                    <a href="/admin/dashboard" class="text-gray-600 hover:text-kwikr-green">
                        <i class="fas fa-arrow-left mr-1"></i>Back to Dashboard
                    </a>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900 mb-2">
                    <i class="fas fa-shield-check text-kwikr-green mr-3"></i>Compliance Management
                </h1>
                <p class="text-gray-600">Monitor compliance status, flag violations, and ensure platform safety</p>
            </div>

            <!-- Compliance Overview -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-green-100 p-3 rounded-full">
                            <i class="fas fa-check-circle text-green-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Compliant Workers</p>
                            <p class="text-2xl font-bold text-gray-900">142</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-yellow-100 p-3 rounded-full">
                            <i class="fas fa-exclamation-triangle text-yellow-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Pending Review</p>
                            <p class="text-2xl font-bold text-gray-900">18</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-red-100 p-3 rounded-full">
                            <i class="fas fa-flag text-red-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Flagged Issues</p>
                            <p class="text-2xl font-bold text-gray-900">7</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-blue-100 p-3 rounded-full">
                            <i class="fas fa-clock text-blue-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Expiring Soon</p>
                            <p class="text-2xl font-bold text-gray-900">12</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Tabs -->
            <div class="bg-white rounded-lg shadow mb-8">
                <div class="border-b border-gray-200">
                    <nav class="flex space-x-8 px-6" aria-label="Tabs">
                        <button onclick="switchTab('licenses')" id="licensesTab" class="py-4 px-1 border-b-2 border-kwikr-green text-kwikr-green font-medium text-sm">
                            Licenses & Certifications
                        </button>
                        <button onclick="switchTab('insurance')" id="insuranceTab" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            Insurance Coverage
                        </button>
                        <button onclick="switchTab('flags')" id="flagsTab" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            Compliance Issues
                        </button>
                        <button onclick="switchTab('reports')" id="reportsTab" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            Reports
                        </button>
                    </nav>
                </div>

                <!-- Licenses Tab Content -->
                <div id="licensesContent" class="p-6">
                    <div class="flex justify-between items-center mb-6">
                        <h3 class="text-lg font-medium text-gray-900">Professional Licenses & Certifications</h3>
                        <button class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 flex items-center">
                            <i class="fas fa-plus mr-2"></i>Add License Type
                        </button>
                    </div>
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                                <tr>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Worker</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">License Type</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">License Number</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Issued Date</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Expires</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center">
                                            <div class="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold text-sm">
                                                JS
                                            </div>
                                            <div class="ml-3">
                                                <div class="text-sm font-medium text-gray-900">John Smith</div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Electrical License</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">EL-2024-001847</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Jan 15, 2024</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Jan 15, 2026</td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full font-medium">Valid</span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                        <div class="flex space-x-2">
                                            <button class="text-blue-600 hover:text-blue-800">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            <button class="text-green-600 hover:text-green-800">
                                                <i class="fas fa-check"></i>
                                            </button>
                                            <button class="text-red-600 hover:text-red-800">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center">
                                            <div class="w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-white font-bold text-sm">
                                                MJ
                                            </div>
                                            <div class="ml-3">
                                                <div class="text-sm font-medium text-gray-900">Maria Johnson</div>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Plumbing License</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">PL-2024-003291</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Mar 10, 2024</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        <span class="text-yellow-600 font-medium">Dec 15, 2024</span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full font-medium">Expiring Soon</span>
                                    </td>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                        <div class="flex space-x-2">
                                            <button class="text-blue-600 hover:text-blue-800">
                                                <i class="fas fa-eye"></i>
                                            </button>
                                            <button class="text-yellow-600 hover:text-yellow-800">
                                                <i class="fas fa-bell"></i>
                                            </button>
                                            <button class="text-green-600 hover:text-green-800">
                                                <i class="fas fa-sync"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Insurance Tab Content -->
                <div id="insuranceContent" class="p-6 hidden">
                    <div class="flex justify-between items-center mb-6">
                        <h3 class="text-lg font-medium text-gray-900">Insurance Coverage Status</h3>
                        <button class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center">
                            <i class="fas fa-upload mr-2"></i>Bulk Upload
                        </button>
                    </div>
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
                        <div class="bg-green-50 border border-green-200 rounded-lg p-4">
                            <div class="flex items-center">
                                <i class="fas fa-shield-check text-green-600 text-xl mr-3"></i>
                                <div>
                                    <div class="text-lg font-bold text-green-900">89%</div>
                                    <div class="text-sm text-green-700">Fully Insured</div>
                                </div>
                            </div>
                        </div>
                        <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                            <div class="flex items-center">
                                <i class="fas fa-clock text-yellow-600 text-xl mr-3"></i>
                                <div>
                                    <div class="text-lg font-bold text-yellow-900">8%</div>
                                    <div class="text-sm text-yellow-700">Expiring Soon</div>
                                </div>
                            </div>
                        </div>
                        <div class="bg-red-50 border border-red-200 rounded-lg p-4">
                            <div class="flex items-center">
                                <i class="fas fa-exclamation-triangle text-red-600 text-xl mr-3"></i>
                                <div>
                                    <div class="text-lg font-bold text-red-900">3%</div>
                                    <div class="text-sm text-red-700">Expired/Missing</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-gray-50 border-2 border-dashed border-gray-300 rounded-lg p-8 text-center">
                        <i class="fas fa-file-upload text-gray-400 text-4xl mb-4"></i>
                        <h3 class="text-lg font-medium text-gray-900 mb-2">Insurance Documents</h3>
                        <p class="text-gray-500">Drag and drop insurance certificates here, or click to browse</p>
                        <button class="mt-4 bg-kwikr-green text-white px-6 py-2 rounded-lg hover:bg-green-600">
                            Browse Files
                        </button>
                    </div>
                </div>

                <!-- Flags Tab Content -->
                <div id="flagsContent" class="p-6 hidden">
                    <div class="flex justify-between items-center mb-6">
                        <h3 class="text-lg font-medium text-gray-900">Compliance Issues & Flags</h3>
                        <div class="flex space-x-2">
                            <select class="px-3 py-2 border border-gray-300 rounded-lg text-sm">
                                <option>All Issues</option>
                                <option>High Priority</option>
                                <option>Medium Priority</option>
                                <option>Low Priority</option>
                            </select>
                            <button class="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 flex items-center">
                                <i class="fas fa-flag mr-2"></i>Flag Worker
                            </button>
                        </div>
                    </div>
                    <div class="space-y-4">
                        <div class="bg-red-50 border border-red-200 rounded-lg p-4">
                            <div class="flex items-start">
                                <div class="flex-shrink-0">
                                    <i class="fas fa-exclamation-circle text-red-500 text-xl"></i>
                                </div>
                                <div class="ml-3 flex-1">
                                    <div class="flex items-center justify-between">
                                        <h4 class="text-sm font-medium text-red-800">Expired License - David Wilson</h4>
                                        <span class="bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full">High Priority</span>
                                    </div>
                                    <p class="text-sm text-red-700 mt-1">Electrical license expired on November 15, 2024. Worker continues accepting jobs.</p>
                                    <div class="mt-3 flex space-x-2">
                                        <button class="bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700">
                                            Suspend Worker
                                        </button>
                                        <button class="border border-red-600 text-red-600 px-3 py-1 rounded text-sm hover:bg-red-50">
                                            Send Notice
                                        </button>
                                        <button class="text-red-600 text-sm hover:underline">
                                            View Details
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                            <div class="flex items-start">
                                <div class="flex-shrink-0">
                                    <i class="fas fa-exclamation-triangle text-yellow-500 text-xl"></i>
                                </div>
                                <div class="ml-3 flex-1">
                                    <div class="flex items-center justify-between">
                                        <h4 class="text-sm font-medium text-yellow-800">Missing Insurance Documentation</h4>
                                        <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full">Medium Priority</span>
                                    </div>
                                    <p class="text-sm text-yellow-700 mt-1">3 workers have not uploaded required liability insurance certificates.</p>
                                    <div class="mt-3 flex space-x-2">
                                        <button class="bg-yellow-600 text-white px-3 py-1 rounded text-sm hover:bg-yellow-700">
                                            Send Reminder
                                        </button>
                                        <button class="border border-yellow-600 text-yellow-600 px-3 py-1 rounded text-sm hover:bg-yellow-50">
                                            View Workers
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Reports Tab Content -->
                <div id="reportsContent" class="p-6 hidden">
                    <div class="flex justify-between items-center mb-6">
                        <h3 class="text-lg font-medium text-gray-900">Compliance Reports</h3>
                        <button class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 flex items-center">
                            <i class="fas fa-download mr-2"></i>Generate Report
                        </button>
                    </div>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        <div class="bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
                            <div class="flex items-center mb-4">
                                <i class="fas fa-file-alt text-blue-600 text-2xl mr-3"></i>
                                <div>
                                    <h4 class="text-lg font-medium text-gray-900">Monthly Compliance</h4>
                                    <p class="text-sm text-gray-500">November 2024</p>
                                </div>
                            </div>
                            <p class="text-gray-600 text-sm mb-4">Complete overview of compliance status across all workers and services.</p>
                            <button class="text-blue-600 hover:text-blue-800 text-sm font-medium">
                                Download PDF <i class="fas fa-download ml-1"></i>
                            </button>
                        </div>
                        <div class="bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
                            <div class="flex items-center mb-4">
                                <i class="fas fa-shield-alt text-green-600 text-2xl mr-3"></i>
                                <div>
                                    <h4 class="text-lg font-medium text-gray-900">License Audit</h4>
                                    <p class="text-sm text-gray-500">Q4 2024</p>
                                </div>
                            </div>
                            <p class="text-gray-600 text-sm mb-4">Detailed audit of all professional licenses and certifications.</p>
                            <button class="text-green-600 hover:text-green-800 text-sm font-medium">
                                Download PDF <i class="fas fa-download ml-1"></i>
                            </button>
                        </div>
                        <div class="bg-white border border-gray-200 rounded-lg p-6 hover:shadow-md transition-shadow">
                            <div class="flex items-center mb-4">
                                <i class="fas fa-exclamation-triangle text-red-600 text-2xl mr-3"></i>
                                <div>
                                    <h4 class="text-lg font-medium text-gray-900">Violations Report</h4>
                                    <p class="text-sm text-gray-500">Last 30 days</p>
                                </div>
                            </div>
                            <p class="text-gray-600 text-sm mb-4">Summary of compliance violations and remediation actions taken.</p>
                            <button class="text-red-600 hover:text-red-800 text-sm font-medium">
                                Download PDF <i class="fas fa-download ml-1"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script>
            function switchTab(tabName) {
                // Hide all content
                const contents = ['licensesContent', 'insuranceContent', 'flagsContent', 'reportsContent'];
                contents.forEach(content => {
                    document.getElementById(content).classList.add('hidden');
                });

                // Reset all tab buttons
                const tabs = ['licensesTab', 'insuranceTab', 'flagsTab', 'reportsTab'];
                tabs.forEach(tab => {
                    const tabElement = document.getElementById(tab);
                    tabElement.classList.remove('border-kwikr-green', 'text-kwikr-green');
                    tabElement.classList.add('border-transparent', 'text-gray-500');
                });

                // Show selected content and highlight tab
                document.getElementById(tabName + 'Content').classList.remove('hidden');
                const selectedTab = document.getElementById(tabName + 'Tab');
                selectedTab.classList.remove('border-transparent', 'text-gray-500');
                selectedTab.classList.add('border-kwikr-green', 'text-kwikr-green');
            }
        <\/script>
    </body>
    </html>
  `}function R0(){return`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Payment System Management - Kwikr Admin</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/admin/dashboard" class="flex items-center">
                            <i class="fas fa-bolt text-kwikr-green text-2xl mr-2"></i>
                            <span class="text-2xl font-bold text-gray-900">Kwikr Admin</span>
                        </a>
                        <div class="ml-6 text-gray-600">
                            <i class="fas fa-credit-card mr-2"></i>Payment System
                        </div>
                    </div>
                    <a href="/admin/dashboard" class="text-gray-600 hover:text-kwikr-green">
                        <i class="fas fa-arrow-left mr-1"></i>Back to Dashboard
                    </a>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900 mb-2">
                    <i class="fas fa-credit-card text-kwikr-green mr-3"></i>Payment System Management
                </h1>
                <p class="text-gray-600">Monitor transactions, manage payouts, and configure payment settings</p>
            </div>

            <!-- Financial Overview -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-green-100 p-3 rounded-full">
                            <i class="fas fa-dollar-sign text-green-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Total Revenue</p>
                            <p class="text-2xl font-bold text-gray-900">$324,891</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-blue-100 p-3 rounded-full">
                            <i class="fas fa-exchange-alt text-blue-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Pending Transactions</p>
                            <p class="text-2xl font-bold text-gray-900">42</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-yellow-100 p-3 rounded-full">
                            <i class="fas fa-clock text-yellow-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Pending Payouts</p>
                            <p class="text-2xl font-bold text-gray-900">$18,432</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-purple-100 p-3 rounded-full">
                            <i class="fas fa-percent text-purple-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Platform Fee</p>
                            <p class="text-2xl font-bold text-gray-900">8.5%</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Recent Transactions -->
            <div class="bg-white rounded-lg shadow mb-8">
                <div class="px-6 py-4 border-b border-gray-200 flex justify-between items-center">
                    <h3 class="text-lg font-medium text-gray-900">Recent Transactions</h3>
                    <div class="flex space-x-2">
                        <select class="px-3 py-2 border border-gray-300 rounded-lg text-sm">
                            <option>All Transactions</option>
                            <option>Completed</option>
                            <option>Pending</option>
                            <option>Failed</option>
                        </select>
                        <button class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 text-sm">
                            <i class="fas fa-download mr-2"></i>Export
                        </button>
                    </div>
                </div>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Transaction ID</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Job</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Client</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Worker</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Platform Fee</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900">#TXN-001234</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Deep Cleaning Service</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Sarah Mitchell</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">John Smith</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">$285.00</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">$24.23</td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full font-medium">Completed</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Dec 15, 2024</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <button class="text-blue-600 hover:text-blue-800 mr-3">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="text-green-600 hover:text-green-800">
                                        <i class="fas fa-receipt"></i>
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-mono text-gray-900">#TXN-001235</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Plumbing Repair</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Mike Johnson</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Maria Rodriguez</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">$450.00</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">$38.25</td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full font-medium">Pending</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Dec 14, 2024</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                                    <button class="text-blue-600 hover:text-blue-800 mr-3">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                    <button class="text-yellow-600 hover:text-yellow-800">
                                        <i class="fas fa-clock"></i>
                                    </button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Payment Configuration & Dispute Resolution -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                <!-- Payment Settings -->
                <div class="bg-white rounded-lg shadow p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-6">Payment Configuration</h3>
                    <div class="space-y-6">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Platform Fee (%)</label>
                            <div class="flex items-center space-x-3">
                                <input type="number" value="8.5" class="flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent">
                                <button class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">Update</button>
                            </div>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Payout Schedule</label>
                            <select class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent">
                                <option>Daily</option>
                                <option selected>Weekly</option>
                                <option>Bi-weekly</option>
                                <option>Monthly</option>
                            </select>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Minimum Payout Amount</label>
                            <div class="flex items-center space-x-3">
                                <span class="text-gray-500">$</span>
                                <input type="number" value="50" class="flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent">
                            </div>
                        </div>
                        <div class="flex items-center">
                            <input type="checkbox" checked class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                            <label class="ml-2 text-sm text-gray-700">Hold payments for 24 hours after job completion</label>
                        </div>
                    </div>
                </div>

                <!-- Dispute Resolution -->
                <div class="bg-white rounded-lg shadow p-6">
                    <h3 class="text-lg font-semibold text-gray-900 mb-6">Active Disputes</h3>
                    <div class="space-y-4">
                        <div class="bg-red-50 border border-red-200 rounded-lg p-4">
                            <div class="flex items-start justify-between">
                                <div>
                                    <h4 class="text-sm font-medium text-red-800">Payment Dispute - Job #1234</h4>
                                    <p class="text-sm text-red-700 mt-1">Client claims work was incomplete. $285 held in escrow.</p>
                                    <div class="mt-2 text-xs text-red-600">
                                        <i class="fas fa-clock mr-1"></i>Opened 2 days ago
                                    </div>
                                </div>
                                <button class="bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700">
                                    Resolve
                                </button>
                            </div>
                        </div>
                        <div class="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                            <div class="flex items-start justify-between">
                                <div>
                                    <h4 class="text-sm font-medium text-yellow-800">Refund Request - Job #1245</h4>
                                    <p class="text-sm text-yellow-700 mt-1">Worker cancelled due to emergency. $150 refund pending.</p>
                                    <div class="mt-2 text-xs text-yellow-600">
                                        <i class="fas fa-clock mr-1"></i>Opened 5 hours ago
                                    </div>
                                </div>
                                <button class="bg-yellow-600 text-white px-3 py-1 rounded text-sm hover:bg-yellow-700">
                                    Process
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="mt-6 pt-4 border-t border-gray-200">
                        <div class="flex items-center justify-between text-sm">
                            <span class="text-gray-500">Total Disputed Amount:</span>
                            <span class="font-medium text-gray-900">$435.00</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </body>
    </html>
  `}function C0(){return`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>System Settings - Kwikr Admin</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/admin/dashboard" class="flex items-center">
                            <i class="fas fa-bolt text-kwikr-green text-2xl mr-2"></i>
                            <span class="text-2xl font-bold text-gray-900">Kwikr Admin</span>
                        </a>
                        <div class="ml-6 text-gray-600">
                            <i class="fas fa-cog mr-2"></i>System Settings
                        </div>
                    </div>
                    <a href="/admin/dashboard" class="text-gray-600 hover:text-kwikr-green">
                        <i class="fas fa-arrow-left mr-1"></i>Back to Dashboard
                    </a>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900 mb-2">
                    <i class="fas fa-cog text-kwikr-green mr-3"></i>System Settings
                </h1>
                <p class="text-gray-600">Configure platform settings, integrations, and system preferences</p>
            </div>

            <!-- Settings Categories -->
            <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
                <!-- Settings Navigation -->
                <div class="lg:col-span-1">
                    <div class="bg-white rounded-lg shadow">
                        <nav class="space-y-1">
                            <button onclick="showSection('general')" id="generalBtn" class="w-full text-left px-4 py-3 text-sm font-medium text-kwikr-green bg-green-50 border-r-2 border-kwikr-green">
                                <i class="fas fa-cog mr-2"></i>General Settings
                            </button>
                            <button onclick="showSection('notifications')" id="notificationsBtn" class="w-full text-left px-4 py-3 text-sm font-medium text-gray-600 hover:bg-gray-50">
                                <i class="fas fa-bell mr-2"></i>Notifications
                            </button>
                            <button onclick="showSection('integrations')" id="integrationsBtn" class="w-full text-left px-4 py-3 text-sm font-medium text-gray-600 hover:bg-gray-50">
                                <i class="fas fa-plug mr-2"></i>Integrations
                            </button>
                            <button onclick="showSection('security')" id="securityBtn" class="w-full text-left px-4 py-3 text-sm font-medium text-gray-600 hover:bg-gray-50">
                                <i class="fas fa-shield-alt mr-2"></i>Security
                            </button>
                            <button onclick="showSection('maintenance')" id="maintenanceBtn" class="w-full text-left px-4 py-3 text-sm font-medium text-gray-600 hover:bg-gray-50">
                                <i class="fas fa-tools mr-2"></i>Maintenance
                            </button>
                        </nav>
                    </div>
                </div>

                <!-- Settings Content -->
                <div class="lg:col-span-3">
                    <!-- General Settings -->
                    <div id="generalSection" class="bg-white rounded-lg shadow">
                        <div class="px-6 py-4 border-b border-gray-200">
                            <h3 class="text-lg font-medium text-gray-900">General Platform Settings</h3>
                        </div>
                        <div class="p-6 space-y-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Platform Name</label>
                                <input type="text" value="Kwikr Directory" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Support Email</label>
                                <input type="email" value="support@kwikr.com" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Default Time Zone</label>
                                <select class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent">
                                    <option>America/Toronto (Eastern Time)</option>
                                    <option>America/Vancouver (Pacific Time)</option>
                                    <option>America/Winnipeg (Central Time)</option>
                                    <option>America/Halifax (Atlantic Time)</option>
                                </select>
                            </div>
                            <div class="flex items-center">
                                <input type="checkbox" checked class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                <label class="ml-2 text-sm text-gray-700">Allow new user registrations</label>
                            </div>
                            <div class="flex items-center">
                                <input type="checkbox" checked class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                <label class="ml-2 text-sm text-gray-700">Require email verification for new accounts</label>
                            </div>
                            <div class="pt-4 border-t border-gray-200">
                                <button class="bg-kwikr-green text-white px-6 py-2 rounded-lg hover:bg-green-600">
                                    Save Changes
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Notifications -->
                    <div id="notificationsSection" class="bg-white rounded-lg shadow hidden">
                        <div class="px-6 py-4 border-b border-gray-200">
                            <h3 class="text-lg font-medium text-gray-900">Notification Settings</h3>
                        </div>
                        <div class="p-6">
                            <div class="space-y-6">
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <h4 class="text-sm font-medium text-gray-900 mb-3">Email Notifications</h4>
                                    <div class="space-y-2">
                                        <label class="flex items-center">
                                            <input type="checkbox" checked class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                            <span class="ml-2 text-sm text-gray-700">New user registrations</span>
                                        </label>
                                        <label class="flex items-center">
                                            <input type="checkbox" checked class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                            <span class="ml-2 text-sm text-gray-700">Payment confirmations</span>
                                        </label>
                                        <label class="flex items-center">
                                            <input type="checkbox" class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                            <span class="ml-2 text-sm text-gray-700">System maintenance alerts</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <h4 class="text-sm font-medium text-gray-900 mb-3">SMS Notifications</h4>
                                    <div class="space-y-2">
                                        <label class="flex items-center">
                                            <input type="checkbox" class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                            <span class="ml-2 text-sm text-gray-700">Critical system alerts</span>
                                        </label>
                                        <label class="flex items-center">
                                            <input type="checkbox" checked class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                            <span class="ml-2 text-sm text-gray-700">Payment disputes</span>
                                        </label>
                                    </div>
                                </div>
                                <div class="pt-4 border-t border-gray-200">
                                    <button class="bg-kwikr-green text-white px-6 py-2 rounded-lg hover:bg-green-600">
                                        Save Notification Settings
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Integrations -->
                    <div id="integrationsSection" class="bg-white rounded-lg shadow hidden">
                        <div class="px-6 py-4 border-b border-gray-200">
                            <h3 class="text-lg font-medium text-gray-900">Third-Party Integrations</h3>
                        </div>
                        <div class="p-6">
                            <div class="space-y-6">
                                <div class="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
                                    <div class="flex items-center">
                                        <i class="fab fa-stripe text-purple-600 text-2xl mr-3"></i>
                                        <div>
                                            <h4 class="text-sm font-medium text-gray-900">Stripe Payments</h4>
                                            <p class="text-sm text-gray-500">Process credit card payments</p>
                                        </div>
                                    </div>
                                    <div class="flex items-center">
                                        <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full mr-3">Connected</span>
                                        <button class="text-blue-600 hover:text-blue-800">Configure</button>
                                    </div>
                                </div>
                                <div class="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
                                    <div class="flex items-center">
                                        <i class="fas fa-envelope text-blue-600 text-2xl mr-3"></i>
                                        <div>
                                            <h4 class="text-sm font-medium text-gray-900">SendGrid Email</h4>
                                            <p class="text-sm text-gray-500">Email delivery service</p>
                                        </div>
                                    </div>
                                    <div class="flex items-center">
                                        <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full mr-3">Connected</span>
                                        <button class="text-blue-600 hover:text-blue-800">Configure</button>
                                    </div>
                                </div>
                                <div class="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
                                    <div class="flex items-center">
                                        <i class="fas fa-sms text-green-600 text-2xl mr-3"></i>
                                        <div>
                                            <h4 class="text-sm font-medium text-gray-900">Twilio SMS</h4>
                                            <p class="text-sm text-gray-500">SMS notifications and alerts</p>
                                        </div>
                                    </div>
                                    <div class="flex items-center">
                                        <span class="bg-gray-100 text-gray-800 text-xs px-2 py-1 rounded-full mr-3">Not Connected</span>
                                        <button class="text-kwikr-green hover:text-green-700">Connect</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Security -->
                    <div id="securitySection" class="bg-white rounded-lg shadow hidden">
                        <div class="px-6 py-4 border-b border-gray-200">
                            <h3 class="text-lg font-medium text-gray-900">Security Settings</h3>
                        </div>
                        <div class="p-6 space-y-6">
                            <div>
                                <h4 class="text-sm font-medium text-gray-900 mb-3">Password Requirements</h4>
                                <div class="space-y-2">
                                    <label class="flex items-center">
                                        <input type="checkbox" checked class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                        <span class="ml-2 text-sm text-gray-700">Minimum 8 characters</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" checked class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                        <span class="ml-2 text-sm text-gray-700">Require uppercase letters</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" checked class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                        <span class="ml-2 text-sm text-gray-700">Require numbers</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                        <span class="ml-2 text-sm text-gray-700">Require special characters</span>
                                    </label>
                                </div>
                            </div>
                            <div>
                                <h4 class="text-sm font-medium text-gray-900 mb-3">Login Security</h4>
                                <div class="space-y-2">
                                    <label class="flex items-center">
                                        <input type="checkbox" checked class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                        <span class="ml-2 text-sm text-gray-700">Enable two-factor authentication for admins</span>
                                    </label>
                                    <label class="flex items-center">
                                        <input type="checkbox" class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                        <span class="ml-2 text-sm text-gray-700">Lock accounts after 5 failed attempts</span>
                                    </label>
                                </div>
                            </div>
                            <div class="pt-4 border-t border-gray-200">
                                <button class="bg-kwikr-green text-white px-6 py-2 rounded-lg hover:bg-green-600">
                                    Save Security Settings
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Maintenance -->
                    <div id="maintenanceSection" class="bg-white rounded-lg shadow hidden">
                        <div class="px-6 py-4 border-b border-gray-200">
                            <h3 class="text-lg font-medium text-gray-900">System Maintenance</h3>
                        </div>
                        <div class="p-6 space-y-6">
                            <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                                <div class="flex items-start">
                                    <i class="fas fa-info-circle text-blue-500 text-lg mr-3 mt-0.5"></i>
                                    <div>
                                        <h4 class="text-sm font-medium text-blue-900">System Status</h4>
                                        <p class="text-sm text-blue-700 mt-1">All systems operational. Last maintenance: December 10, 2024</p>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <h4 class="text-sm font-medium text-gray-900 mb-3">Maintenance Actions</h4>
                                <div class="space-y-3">
                                    <button class="w-full bg-yellow-600 text-white px-4 py-3 rounded-lg hover:bg-yellow-700 text-left">
                                        <i class="fas fa-database mr-2"></i>Clear Cache & Optimize Database
                                    </button>
                                    <button class="w-full bg-blue-600 text-white px-4 py-3 rounded-lg hover:bg-blue-700 text-left">
                                        <i class="fas fa-sync mr-2"></i>Refresh System Configuration
                                    </button>
                                    <button class="w-full bg-red-600 text-white px-4 py-3 rounded-lg hover:bg-red-700 text-left">
                                        <i class="fas fa-exclamation-triangle mr-2"></i>Enable Maintenance Mode
                                    </button>
                                </div>
                            </div>
                            <div>
                                <h4 class="text-sm font-medium text-gray-900 mb-3">System Information</h4>
                                <div class="bg-gray-50 p-4 rounded-lg space-y-2 text-sm">
                                    <div class="flex justify-between">
                                        <span class="text-gray-600">Platform Version:</span>
                                        <span class="text-gray-900 font-medium">v2.1.4</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span class="text-gray-600">Database Size:</span>
                                        <span class="text-gray-900 font-medium">2.3 GB</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span class="text-gray-600">Active Sessions:</span>
                                        <span class="text-gray-900 font-medium">247</span>
                                    </div>
                                    <div class="flex justify-between">
                                        <span class="text-gray-600">Server Uptime:</span>
                                        <span class="text-gray-900 font-medium">15 days, 7 hours</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Edit Profile Tab -->
                    <div id="editTab" class="tab-content hidden">
                        <form id="editProfileForm" class="space-y-6">
                            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                                <!-- Personal Information -->
                                <div>
                                    <h3 class="text-lg font-semibold text-gray-900 mb-4">Personal Information</h3>
                                    <div class="space-y-4">
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">First Name</label>
                                            <input type="text" id="firstName" value="Emma" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                                        </div>
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Last Name</label>
                                            <input type="text" id="lastName" value="Johnson" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                                        </div>
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Email Address</label>
                                            <input type="email" id="email" value="cleaner1@kwikr.ca" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                                        </div>
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Phone Number</label>
                                            <input type="tel" id="phone" value="" placeholder="(555) 123-4567" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Business Information -->
                                <div>
                                    <h3 class="text-lg font-semibold text-gray-900 mb-4">Business Information</h3>
                                    <div class="space-y-4">
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Company Name (Optional)</label>
                                            <input type="text" id="companyName" value="" placeholder="Your Business Name" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                                        </div>
                                        <div>
                                            <label class="block text-sm font-medium text-gray-700 mb-2">Bio/Description</label>
                                            <textarea id="bio" rows="4" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" placeholder="Tell clients about your experience and services...">Professional cleaner with 5+ years of experience in residential and commercial cleaning services.</textarea>
                                        </div>
                                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">City</label>
                                                <input type="text" id="city" value="" placeholder="Toronto" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                                            </div>
                                            <div>
                                                <label class="block text-sm font-medium text-gray-700 mb-2">Province</label>
                                                <select id="province" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green">
                                                    <option value="">Select Province</option>
                                                    <option value="AB">Alberta</option>
                                                    <option value="BC">British Columbia</option>
                                                    <option value="MB">Manitoba</option>
                                                    <option value="NB">New Brunswick</option>
                                                    <option value="NL">Newfoundland and Labrador</option>
                                                    <option value="NS">Nova Scotia</option>
                                                    <option value="NT">Northwest Territories</option>
                                                    <option value="NU">Nunavut</option>
                                                    <option value="ON">Ontario</option>
                                                    <option value="PE">Prince Edward Island</option>
                                                    <option value="QC">Quebec</option>
                                                    <option value="SK">Saskatchewan</option>
                                                    <option value="YT">Yukon</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="flex justify-end space-x-4 pt-6 border-t border-gray-200">
                                <button type="button" onclick="switchTab('profile')" class="px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50">
                                    Cancel
                                </button>
                                <button type="submit" class="bg-kwikr-green text-white px-6 py-3 rounded-lg hover:bg-green-600">
                                    <i class="fas fa-save mr-2"></i>Save Changes
                                </button>
                            </div>
                        </form>
                    </div>
                    
                    <!-- Compliance Tab -->
                    <div id="complianceTab" class="tab-content hidden">
                        <div class="space-y-6">
                            <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-6">
                                <div class="flex items-center">
                                    <i class="fas fa-shield-check text-blue-600 mr-2"></i>
                                    <span class="text-blue-800 font-medium">Compliance Management</span>
                                </div>
                                <p class="text-blue-700 text-sm mt-2">Manage your certifications, licenses, and compliance documents</p>
                            </div>
                            
                            <!-- Insurance Information -->
                            <div class="bg-white border border-gray-200 rounded-lg p-6">
                                <h3 class="text-lg font-semibold text-gray-900 mb-4">
                                    <i class="fas fa-shield-alt text-kwikr-green mr-2"></i>Insurance & Bonding
                                </h3>
                                
                                <div class="space-y-4">
                                    <div class="flex items-center justify-between p-4 bg-green-50 rounded-lg">
                                        <div class="flex items-center">
                                            <i class="fas fa-check-circle text-green-600 mr-3"></i>
                                            <div>
                                                <p class="font-medium text-gray-900">Liability Insurance</p>
                                                <p class="text-sm text-gray-600">$2,000,000 Coverage • Expires: Dec 2024</p>
                                            </div>
                                        </div>
                                        <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Active</span>
                                    </div>
                                    
                                    <div class="flex items-center justify-between p-4 bg-yellow-50 rounded-lg">
                                        <div class="flex items-center">
                                            <i class="fas fa-clock text-yellow-600 mr-3"></i>
                                            <div>
                                                <p class="font-medium text-gray-900">Bonding Certificate</p>
                                                <p class="text-sm text-gray-600">$50,000 Bond • Expires: Mar 2025</p>
                                            </div>
                                        </div>
                                        <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full">Expiring Soon</span>
                                    </div>
                                </div>
                                
                                <button class="mt-4 bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">
                                    <i class="fas fa-plus mr-2"></i>Add Insurance Document
                                </button>
                            </div>
                            
                            <!-- Licenses & Certifications -->
                            <div class="bg-white border border-gray-200 rounded-lg p-6">
                                <h3 class="text-lg font-semibold text-gray-900 mb-4">
                                    <i class="fas fa-certificate text-kwikr-green mr-2"></i>Licenses & Certifications
                                </h3>
                                
                                <div class="space-y-4">
                                    <div class="flex items-center justify-between p-4 bg-green-50 rounded-lg">
                                        <div class="flex items-center">
                                            <i class="fas fa-check-circle text-green-600 mr-3"></i>
                                            <div>
                                                <p class="font-medium text-gray-900">Business License</p>
                                                <p class="text-sm text-gray-600">City of Toronto • License #BL12345</p>
                                            </div>
                                        </div>
                                        <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Valid</span>
                                    </div>
                                    
                                    <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg border-2 border-dashed border-gray-300">
                                        <div class="text-center w-full">
                                            <i class="fas fa-plus text-gray-400 text-2xl mb-2"></i>
                                            <p class="text-gray-600">Add More Certifications</p>
                                            <p class="text-sm text-gray-500">Upload professional certifications, trade licenses, etc.</p>
                                        </div>
                                    </div>
                                </div>
                                
                                <button class="mt-4 bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">
                                    <i class="fas fa-upload mr-2"></i>Upload Certificate
                                </button>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Services Tab -->
                    <div id="servicesTab" class="tab-content hidden">
                        <div class="space-y-6">
                            <div class="bg-purple-50 border border-purple-200 rounded-lg p-4 mb-6">
                                <div class="flex items-center">
                                    <i class="fas fa-cog text-purple-600 mr-2"></i>
                                    <span class="text-purple-800 font-medium">Service Management</span>
                                </div>
                                <p class="text-purple-700 text-sm mt-2">Manage your service offerings, rates, and availability</p>
                            </div>
                            
                            <!-- Current Services -->
                            <div class="bg-white border border-gray-200 rounded-lg p-6">
                                <div class="flex items-center justify-between mb-4">
                                    <h3 class="text-lg font-semibold text-gray-900">
                                        <i class="fas fa-tools text-kwikr-green mr-2"></i>Your Services
                                    </h3>
                                    <button class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">
                                        <i class="fas fa-plus mr-2"></i>Add Service
                                    </button>
                                </div>
                                
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                    <!-- Service 1 -->
                                    <div class="border border-gray-200 rounded-lg p-4">
                                        <div class="flex items-center justify-between mb-3">
                                            <div class="flex items-center">
                                                <i class="fas fa-broom text-kwikr-green mr-2"></i>
                                                <h4 class="font-medium text-gray-900">House Cleaning</h4>
                                            </div>
                                            <div class="flex space-x-2">
                                                <button class="text-blue-600 hover:text-blue-800">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button class="text-red-600 hover:text-red-800">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <p class="text-sm text-gray-600 mb-2">Deep cleaning, regular maintenance, move-in/out cleaning</p>
                                        <div class="flex items-center justify-between">
                                            <span class="text-lg font-bold text-kwikr-green">$35/hr</span>
                                            <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Available</span>
                                        </div>
                                    </div>
                                    
                                    <!-- Service 2 -->
                                    <div class="border border-gray-200 rounded-lg p-4">
                                        <div class="flex items-center justify-between mb-3">
                                            <div class="flex items-center">
                                                <i class="fas fa-building text-kwikr-green mr-2"></i>
                                                <h4 class="font-medium text-gray-900">Office Cleaning</h4>
                                            </div>
                                            <div class="flex space-x-2">
                                                <button class="text-blue-600 hover:text-blue-800">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button class="text-red-600 hover:text-red-800">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <p class="text-sm text-gray-600 mb-2">Commercial spaces, offices, retail locations</p>
                                        <div class="flex items-center justify-between">
                                            <span class="text-lg font-bold text-kwikr-green">$40/hr</span>
                                            <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Available</span>
                                        </div>
                                    </div>
                                    
                                    <!-- Service 3 -->
                                    <div class="border border-gray-200 rounded-lg p-4">
                                        <div class="flex items-center justify-between mb-3">
                                            <div class="flex items-center">
                                                <i class="fas fa-window-maximize text-kwikr-green mr-2"></i>
                                                <h4 class="font-medium text-gray-900">Window Cleaning</h4>
                                            </div>
                                            <div class="flex space-x-2">
                                                <button class="text-blue-600 hover:text-blue-800">
                                                    <i class="fas fa-edit"></i>
                                                </button>
                                                <button class="text-red-600 hover:text-red-800">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <p class="text-sm text-gray-600 mb-2">Interior and exterior window cleaning services</p>
                                        <div class="flex items-center justify-between">
                                            <span class="text-lg font-bold text-kwikr-green">$25/hr</span>
                                            <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full">Seasonal</span>
                                        </div>
                                    </div>
                                    
                                    <!-- Add New Service Card -->
                                    <div class="border-2 border-dashed border-gray-300 rounded-lg p-8 flex flex-col items-center justify-center text-gray-500 hover:border-kwikr-green hover:text-kwikr-green cursor-pointer transition-colors">
                                        <i class="fas fa-plus text-3xl mb-3"></i>
                                        <p class="font-medium">Add New Service</p>
                                        <p class="text-sm">Expand your offerings</p>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Service Areas -->
                            <div class="bg-white border border-gray-200 rounded-lg p-6">
                                <div class="flex items-center justify-between mb-4">
                                    <h3 class="text-lg font-semibold text-gray-900">
                                        <i class="fas fa-map-marker-alt text-kwikr-green mr-2"></i>Service Areas
                                    </h3>
                                    <button class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">
                                        <i class="fas fa-plus mr-2"></i>Add Area
                                    </button>
                                </div>
                                
                                <div class="grid grid-cols-2 md:grid-cols-4 gap-3">
                                    <div class="bg-kwikr-green bg-opacity-10 text-kwikr-green px-3 py-2 rounded-lg flex items-center justify-between">
                                        <span class="text-sm font-medium">Downtown Toronto</span>
                                        <button class="text-red-500 hover:text-red-700 ml-2">
                                            <i class="fas fa-times text-xs"></i>
                                        </button>
                                    </div>
                                    <div class="bg-kwikr-green bg-opacity-10 text-kwikr-green px-3 py-2 rounded-lg flex items-center justify-between">
                                        <span class="text-sm font-medium">Mississauga</span>
                                        <button class="text-red-500 hover:text-red-700 ml-2">
                                            <i class="fas fa-times text-xs"></i>
                                        </button>
                                    </div>
                                    <div class="bg-kwikr-green bg-opacity-10 text-kwikr-green px-3 py-2 rounded-lg flex items-center justify-between">
                                        <span class="text-sm font-medium">Brampton</span>
                                        <button class="text-red-500 hover:text-red-700 ml-2">
                                            <i class="fas fa-times text-xs"></i>
                                        </button>
                                    </div>
                                    <div class="border-2 border-dashed border-gray-300 rounded-lg px-3 py-2 flex items-center justify-center text-gray-500 hover:border-kwikr-green hover:text-kwikr-green cursor-pointer">
                                        <i class="fas fa-plus mr-2"></i>
                                        <span class="text-sm">Add Area</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script>
            function showSection(sectionName) {
                // Hide all sections
                const sections = ['generalSection', 'notificationsSection', 'integrationsSection', 'securitySection', 'maintenanceSection'];
                sections.forEach(section => {
                    document.getElementById(section).classList.add('hidden');
                });

                // Reset all buttons
                const buttons = ['generalBtn', 'notificationsBtn', 'integrationsBtn', 'securityBtn', 'maintenanceBtn'];
                buttons.forEach(btn => {
                    const button = document.getElementById(btn);
                    button.classList.remove('text-kwikr-green', 'bg-green-50', 'border-r-2', 'border-kwikr-green');
                    button.classList.add('text-gray-600');
                });

                // Show selected section and highlight button
                document.getElementById(sectionName + 'Section').classList.remove('hidden');
                const selectedBtn = document.getElementById(sectionName + 'Btn');
                selectedBtn.classList.remove('text-gray-600');
                selectedBtn.classList.add('text-kwikr-green', 'bg-green-50', 'border-r-2', 'border-kwikr-green');
            }
        <\/script>
    </body>
    </html>
  `}function D0(){return`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Payment Management - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/dashboard/worker" class="flex items-center">
                            <i class="fas fa-bolt text-kwikr-green text-2xl mr-2"></i>
                            <span class="text-2xl font-bold text-gray-900">Kwikr Directory</span>
                        </a>
                        <div class="ml-6 text-gray-600">
                            Dashboard > Payment Management
                        </div>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-gray-600">Welcome, Emma!</span>
                        <button onclick="logout()" class="text-gray-600 hover:text-kwikr-green">
                            <i class="fas fa-sign-out-alt mr-1"></i>Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900 mb-2">
                    <i class="fas fa-credit-card text-kwikr-green mr-3"></i>Payment Management
                </h1>
                <p class="text-gray-600">Manage your payout methods and view earnings history</p>
            </div>

            <!-- Navigation Tabs -->
            <div class="bg-white rounded-lg shadow mb-8">
                <div class="border-b border-gray-200">
                    <nav class="flex space-x-8 px-6" aria-label="Tabs">
                        <a href="/dashboard/worker/profile" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-user mr-2"></i>Profile View
                        </a>
                        <a href="#" onclick="switchTab('edit')" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-edit mr-2"></i>Edit Profile
                        </a>
                        <a href="/dashboard/worker/payments" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-credit-card mr-2"></i>Payment Management
                        </a>
                        <a href="#" onclick="switchTab('compliance')" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-shield-check mr-2"></i>Manage Compliance
                        </a>
                        <a href="#" onclick="switchTab('services')" class="py-4 px-1 border-b-2 border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300 font-medium text-sm">
                            <i class="fas fa-cog mr-2"></i>Manage Services
                        </a>
                    </nav>
                </div>
            </div>

            <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                <!-- Left Column - Payment Methods -->
                <div class="lg:col-span-2">
                    <!-- Earnings Overview -->
                    <div class="bg-white rounded-lg shadow p-6 mb-8">
                        <h3 class="text-lg font-semibold text-gray-900 mb-6">Earnings Overview</h3>
                        <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
                            <div class="text-center">
                                <div class="text-3xl font-bold text-kwikr-green">$18,691.00</div>
                                <div class="text-sm text-gray-500">Total Earnings</div>
                            </div>
                            <div class="text-center">
                                <div class="text-3xl font-bold text-blue-600">$2,450.00</div>
                                <div class="text-sm text-gray-500">This Month</div>
                            </div>
                            <div class="text-center">
                                <div class="text-3xl font-bold text-yellow-600">$1,235.00</div>
                                <div class="text-sm text-gray-500">Pending</div>
                            </div>
                            <div class="text-center">
                                <div class="text-3xl font-bold text-gray-600">23</div>
                                <div class="text-sm text-gray-500">Jobs Completed</div>
                            </div>
                        </div>
                    </div>

                    <!-- Payment Methods -->
                    <div class="bg-white rounded-lg shadow p-6 mb-8">
                        <div class="flex items-center justify-between mb-6">
                            <h3 class="text-lg font-semibold text-gray-900">Payout Methods</h3>
                            <button onclick="showAddPaymentModal()" class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 flex items-center">
                                <i class="fas fa-plus mr-2"></i>Add Payout Method
                            </button>
                        </div>

                        <!-- Bank Account -->
                        <div class="border border-gray-200 rounded-lg p-6 mb-4">
                            <div class="flex items-center justify-between mb-4">
                                <div class="flex items-center">
                                    <div class="bg-blue-100 p-3 rounded-lg mr-4">
                                        <i class="fas fa-university text-blue-600 text-xl"></i>
                                    </div>
                                    <div>
                                        <h4 class="text-lg font-medium text-gray-900">Main Bank Account</h4>
                                        <p class="text-gray-500">TD Canada Trust</p>
                                    </div>
                                </div>
                                <div class="flex items-center space-x-2">
                                    <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full font-medium">
                                        <i class="fas fa-check-circle mr-1"></i>Verified
                                    </span>
                                    <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full font-medium">Default</span>
                                </div>
                            </div>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
                                <div>
                                    <span class="text-gray-500">Account Number:</span>
                                    <span class="font-mono">****XXXX</span>
                                </div>
                                <div>
                                    <span class="text-gray-500">Added:</span>
                                    <span>11/3/2024</span>
                                </div>
                            </div>
                            <div class="mt-4 flex space-x-2">
                                <button class="text-blue-600 hover:text-blue-800 text-sm">
                                    <i class="fas fa-edit mr-1"></i>Edit
                                </button>
                                <button class="text-red-600 hover:text-red-800 text-sm">
                                    <i class="fas fa-trash mr-1"></i>Remove
                                </button>
                            </div>
                        </div>

                        <!-- PayPal Account -->
                        <div class="border border-gray-200 rounded-lg p-6">
                            <div class="flex items-center justify-between mb-4">
                                <div class="flex items-center">
                                    <div class="bg-blue-100 p-3 rounded-lg mr-4">
                                        <i class="fab fa-paypal text-blue-600 text-xl"></i>
                                    </div>
                                    <div>
                                        <h4 class="text-lg font-medium text-gray-900">PayPal Account</h4>
                                        <p class="text-gray-500">worker@example.com</p>
                                    </div>
                                </div>
                                <div class="flex items-center space-x-2">
                                    <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full font-medium">
                                        <i class="fas fa-clock mr-1"></i>Pending Verification
                                    </span>
                                </div>
                            </div>
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
                                <div>
                                    <span class="text-gray-500">Email:</span>
                                    <span>worker@example.com</span>
                                </div>
                                <div>
                                    <span class="text-gray-500">Added:</span>
                                    <span>12/6/2024</span>
                                </div>
                            </div>
                            <div class="mt-4 flex space-x-2">
                                <button class="bg-yellow-600 text-white px-3 py-1 rounded text-sm hover:bg-yellow-700">
                                    <i class="fas fa-check mr-1"></i>Verify Now
                                </button>
                                <button class="text-blue-600 hover:text-blue-800 text-sm">
                                    <i class="fas fa-star mr-1"></i>Set as Default
                                </button>
                                <button class="text-red-600 hover:text-red-800 text-sm">
                                    <i class="fas fa-trash mr-1"></i>Remove
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- Recent Transactions -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <div class="flex items-center justify-between mb-6">
                            <h3 class="text-lg font-semibold text-gray-900">Recent Transactions</h3>
                            <a href="/dashboard/worker/earnings" class="text-kwikr-green hover:underline text-sm">View All</a>
                        </div>
                        
                        <div class="space-y-4">
                            <div class="flex items-center justify-between p-4 bg-green-50 rounded-lg">
                                <div class="flex items-center">
                                    <div class="bg-green-100 p-2 rounded-full mr-3">
                                        <i class="fas fa-arrow-down text-green-600"></i>
                                    </div>
                                    <div>
                                        <p class="font-medium text-gray-900">Payment received</p>
                                        <p class="text-sm text-gray-500">Kitchen Deep Clean - Job #1247</p>
                                        <p class="text-xs text-gray-400">Dec 15, 2024</p>
                                    </div>
                                </div>
                                <div class="text-right">
                                    <p class="font-bold text-green-600">+$285.00</p>
                                    <p class="text-xs text-gray-500">to Main Account</p>
                                </div>
                            </div>

                            <div class="flex items-center justify-between p-4 bg-blue-50 rounded-lg">
                                <div class="flex items-center">
                                    <div class="bg-blue-100 p-2 rounded-full mr-3">
                                        <i class="fas fa-clock text-blue-600"></i>
                                    </div>
                                    <div>
                                        <p class="font-medium text-gray-900">Payment processing</p>
                                        <p class="text-sm text-gray-500">Bathroom Repair - Job #1246</p>
                                        <p class="text-xs text-gray-400">Dec 14, 2024</p>
                                    </div>
                                </div>
                                <div class="text-right">
                                    <p class="font-bold text-blue-600">$450.00</p>
                                    <p class="text-xs text-gray-500">Processing</p>
                                </div>
                            </div>

                            <div class="flex items-center justify-between p-4 bg-yellow-50 rounded-lg">
                                <div class="flex items-center">
                                    <div class="bg-yellow-100 p-2 rounded-full mr-3">
                                        <i class="fas fa-exclamation-triangle text-yellow-600"></i>
                                    </div>
                                    <div>
                                        <p class="font-medium text-gray-900">Payment on hold</p>
                                        <p class="text-sm text-gray-500">Living Room Paint - Job #1245</p>
                                        <p class="text-xs text-gray-400">Dec 13, 2024</p>
                                    </div>
                                </div>
                                <div class="text-right">
                                    <p class="font-bold text-yellow-600">$320.00</p>
                                    <p class="text-xs text-gray-500">Client dispute</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Right Column - Settings & Info -->
                <div>
                    <!-- Payout Settings -->
                    <div class="bg-white rounded-lg shadow p-6 mb-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-6">Payout Settings</h3>
                        <div class="space-y-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Payout Schedule</label>
                                <select class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent">
                                    <option>Weekly (Fridays)</option>
                                    <option>Bi-weekly</option>
                                    <option>Monthly</option>
                                </select>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Minimum Payout Amount</label>
                                <div class="flex items-center">
                                    <span class="text-gray-500 mr-2">$</span>
                                    <input type="number" value="50" class="flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-kwikr-green focus:border-transparent">
                                </div>
                            </div>
                            <div class="flex items-center">
                                <input type="checkbox" checked class="w-4 h-4 text-kwikr-green focus:ring-kwikr-green border-gray-300 rounded">
                                <label class="ml-2 text-sm text-gray-700">Email notifications for payouts</label>
                            </div>
                        </div>
                        <button class="w-full mt-4 bg-kwikr-green text-white py-2 rounded-lg hover:bg-green-600">
                            Save Settings
                        </button>
                    </div>

                    <!-- Payment Security -->
                    <div class="bg-white rounded-lg shadow p-6 mb-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-4">Payment Security</h3>
                        <div class="space-y-3">
                            <div class="flex items-center justify-between">
                                <span class="text-sm text-gray-700">Two-factor authentication</span>
                                <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Enabled</span>
                            </div>
                            <div class="flex items-center justify-between">
                                <span class="text-sm text-gray-700">Payment PIN</span>
                                <button class="text-kwikr-green text-xs hover:underline">Set PIN</button>
                            </div>
                            <div class="flex items-center justify-between">
                                <span class="text-sm text-gray-700">Identity verification</span>
                                <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full">Verified</span>
                            </div>
                        </div>
                    </div>

                    <!-- Help & Support -->
                    <div class="bg-white rounded-lg shadow p-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-4">Need Help?</h3>
                        <div class="space-y-3">
                            <a href="#" class="flex items-center text-gray-700 hover:text-kwikr-green">
                                <i class="fas fa-question-circle mr-2"></i>
                                <span class="text-sm">Payment FAQ</span>
                            </a>
                            <a href="#" class="flex items-center text-gray-700 hover:text-kwikr-green">
                                <i class="fas fa-headset mr-2"></i>
                                <span class="text-sm">Contact Support</span>
                            </a>
                            <a href="#" class="flex items-center text-gray-700 hover:text-kwikr-green">
                                <i class="fas fa-shield-alt mr-2"></i>
                                <span class="text-sm">Payment Security</span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Add Payment Method Modal -->
        <div id="addPaymentModal" class="fixed inset-0 bg-black bg-opacity-50 hidden flex items-center justify-center z-50">
            <div class="bg-white p-8 rounded-lg max-w-md w-full mx-4">
                <div class="flex justify-between items-center mb-6">
                    <h3 class="text-2xl font-bold">Add Payout Method</h3>
                    <button onclick="hideAddPaymentModal()" class="text-gray-400 hover:text-gray-600">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                
                <div class="space-y-4">
                    <button class="w-full p-4 border-2 border-gray-200 rounded-lg hover:border-kwikr-green hover:bg-green-50 flex items-center">
                        <i class="fas fa-university text-blue-600 text-2xl mr-4"></i>
                        <div class="text-left">
                            <div class="font-medium">Bank Account</div>
                            <div class="text-sm text-gray-500">Direct deposit to your bank account</div>
                        </div>
                    </button>
                    <button class="w-full p-4 border-2 border-gray-200 rounded-lg hover:border-kwikr-green hover:bg-green-50 flex items-center">
                        <i class="fab fa-paypal text-blue-600 text-2xl mr-4"></i>
                        <div class="text-left">
                            <div class="font-medium">PayPal</div>
                            <div class="text-sm text-gray-500">Receive payments via PayPal</div>
                        </div>
                    </button>
                    <button class="w-full p-4 border-2 border-gray-200 rounded-lg hover:border-kwikr-green hover:bg-green-50 flex items-center">
                        <i class="fas fa-money-check text-green-600 text-2xl mr-4"></i>
                        <div class="text-left">
                            <div class="font-medium">Interac e-Transfer</div>
                            <div class="text-sm text-gray-500">Canadian email money transfer</div>
                        </div>
                    </button>
                </div>
            </div>
        </div>

        <script src="/static/app.js?v=${Date.now()}"><\/script>
        <script src="/static/worker-profile.js"><\/script>
        <script>
            function showAddPaymentModal() {
                document.getElementById('addPaymentModal').classList.remove('hidden');
            }
            
            function hideAddPaymentModal() {
                document.getElementById('addPaymentModal').classList.add('hidden');
            }
        <\/script>
    </body>
    </html>
  `}function N0(){return`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Earnings History - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/dashboard/worker" class="flex items-center">
                            <i class="fas fa-bolt text-kwikr-green text-2xl mr-2"></i>
                            <span class="text-2xl font-bold text-gray-900">Kwikr Directory</span>
                        </a>
                        <div class="ml-6 text-gray-600">
                            Dashboard > Earnings History
                        </div>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-gray-600">Welcome, Emma!</span>
                        <button onclick="logout()" class="text-gray-600 hover:text-kwikr-green">
                            <i class="fas fa-sign-out-alt mr-1"></i>Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900 mb-2">
                    <i class="fas fa-chart-line text-kwikr-green mr-3"></i>Earnings History
                </h1>
                <p class="text-gray-600">View your complete earnings and transaction history</p>
            </div>

            <!-- Earnings Summary -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-green-100 p-3 rounded-full">
                            <i class="fas fa-dollar-sign text-green-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Total Earnings</p>
                            <p class="text-2xl font-bold text-gray-900">$18,691.00</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-blue-100 p-3 rounded-full">
                            <i class="fas fa-calendar-month text-blue-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">This Month</p>
                            <p class="text-2xl font-bold text-gray-900">$2,450.00</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-yellow-100 p-3 rounded-full">
                            <i class="fas fa-clock text-yellow-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Pending</p>
                            <p class="text-2xl font-bold text-gray-900">$1,235.00</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <div class="flex items-center">
                        <div class="bg-purple-100 p-3 rounded-full">
                            <i class="fas fa-briefcase text-purple-600 text-xl"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm font-medium text-gray-500">Jobs Completed</p>
                            <p class="text-2xl font-bold text-gray-900">23</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Filters & Export -->
            <div class="bg-white rounded-lg shadow p-6 mb-8">
                <div class="flex flex-col md:flex-row md:items-center md:justify-between space-y-4 md:space-y-0">
                    <div class="flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-4">
                        <select class="px-3 py-2 border border-gray-300 rounded-lg text-sm">
                            <option>All Time</option>
                            <option>Last 30 days</option>
                            <option>Last 3 months</option>
                            <option>Last 6 months</option>
                            <option>This year</option>
                        </select>
                        <select class="px-3 py-2 border border-gray-300 rounded-lg text-sm">
                            <option>All Transactions</option>
                            <option>Completed</option>
                            <option>Pending</option>
                            <option>On Hold</option>
                        </select>
                    </div>
                    <div class="flex space-x-2">
                        <button class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600 text-sm flex items-center">
                            <i class="fas fa-download mr-2"></i>Export CSV
                        </button>
                        <button class="border border-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-50 text-sm flex items-center">
                            <i class="fas fa-file-pdf mr-2"></i>Export PDF
                        </button>
                    </div>
                </div>
            </div>

            <!-- Transactions Table -->
            <div class="bg-white rounded-lg shadow overflow-hidden">
                <div class="px-6 py-4 border-b border-gray-200">
                    <h3 class="text-lg font-medium text-gray-900">Transaction History</h3>
                </div>
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Job</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Client</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Platform Fee</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Net Earnings</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Payout Method</th>
                            </tr>
                        </thead>
                        <tbody class="bg-white divide-y divide-gray-200">
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Dec 15, 2024</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Kitchen Deep Clean</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Sarah Mitchell</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">$285.00</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">$24.23</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-green-600">$260.77</td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full font-medium">Paid</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Main Account</td>
                            </tr>
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Dec 14, 2024</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Bathroom Repair</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Mike Johnson</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">$450.00</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">$38.25</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-blue-600">$411.75</td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded-full font-medium">Processing</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Main Account</td>
                            </tr>
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Dec 13, 2024</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Living Room Paint</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Lisa Brown</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">$320.00</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">$27.20</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-yellow-600">$292.80</td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="bg-yellow-100 text-yellow-800 text-xs px-2 py-1 rounded-full font-medium">On Hold</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Escrow</td>
                            </tr>
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Dec 10, 2024</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Custom Built-in Bookshelf</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">David Chen</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">$1,200.00</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">$102.00</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-green-600">$1,098.00</td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full font-medium">Paid</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">Main Account</td>
                            </tr>
                            <tr>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Dec 8, 2024</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Hardwood Floor Refinishing</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">Jennifer Walsh</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">$850.00</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">$72.25</td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-green-600">$777.75</td>
                                <td class="px-6 py-4 whitespace-nowrap">
                                    <span class="bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full font-medium">Paid</span>
                                </td>
                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">PayPal</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                
                <!-- Pagination -->
                <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6">
                    <div class="flex-1 flex justify-between sm:hidden">
                        <a href="#" class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">Previous</a>
                        <a href="#" class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">Next</a>
                    </div>
                    <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
                        <div>
                            <p class="text-sm text-gray-700">
                                Showing <span class="font-medium">1</span> to <span class="font-medium">5</span> of <span class="font-medium">23</span> transactions
                            </p>
                        </div>
                        <div>
                            <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                                <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                    <i class="fas fa-chevron-left"></i>
                                </a>
                                <a href="#" aria-current="page" class="z-10 bg-kwikr-green border-kwikr-green text-white relative inline-flex items-center px-4 py-2 border text-sm font-medium">1</a>
                                <a href="#" class="bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium">2</a>
                                <a href="#" class="bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium">3</a>
                                <a href="#" class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                    <i class="fas fa-chevron-right"></i>
                                </a>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <script src="/static/app.js?v=${Date.now()}"><\/script>
        <script src="/static/worker-profile.js"><\/script>
    </body>
    </html>
  `}function st(e,t){return`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>${e} - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm border-b border-gray-200">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="/" class="text-gray-700 hover:text-kwikr-green">
                            <i class="fas fa-home mr-1"></i>Back to Home
                        </a>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <div class="bg-white rounded-lg shadow-sm p-8">
                <h1 class="text-3xl font-bold text-gray-900 mb-6">${e}</h1>
                <div class="prose max-w-none">
                    ${t}
                </div>
            </div>
        </div>
    </body>
    </html>
  `}D.get("/help",async e=>e.html(st("Help Center",`
    <h2 class="text-xl font-semibold mb-4">Frequently Asked Questions</h2>
    <div class="space-y-6">
      <div>
        <h3 class="text-lg font-medium mb-2">How do I post a job?</h3>
        <p class="text-gray-600">Click "Post a Job" from the homepage, fill in your job details, and submit. Service providers will then bid on your job.</p>
      </div>
      <div>
        <h3 class="text-lg font-medium mb-2">How do payment work?</h3>
        <p class="text-gray-600">Payment is processed securely through our platform. You pay when the job is completed to your satisfaction.</p>
      </div>
      <div>
        <h3 class="text-lg font-medium mb-2">How do I become a service provider?</h3>
        <p class="text-gray-600">Sign up as a Worker, complete your profile and compliance verification, then start bidding on jobs in your area.</p>
      </div>
    </div>
  `)));D.get("/contact",async e=>e.html(st("Contact Us",`
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
      <div>
        <h2 class="text-xl font-semibold mb-4">Get in Touch</h2>
        <div class="space-y-4">
          <div class="flex items-center">
            <i class="fas fa-envelope text-kwikr-green mr-3"></i>
            <span>support@kwikr.ca</span>
          </div>
          <div class="flex items-center">
            <i class="fas fa-phone text-kwikr-green mr-3"></i>
            <span>1-800-KWIKR-CA</span>
          </div>
          <div class="flex items-center">
            <i class="fas fa-map-marker-alt text-kwikr-green mr-3"></i>
            <span>Toronto, Ontario, Canada</span>
          </div>
        </div>
      </div>
      <div>
        <h2 class="text-xl font-semibold mb-4">Business Hours</h2>
        <div class="space-y-2">
          <div class="flex justify-between">
            <span>Monday - Friday:</span>
            <span>9:00 AM - 6:00 PM EST</span>
          </div>
          <div class="flex justify-between">
            <span>Saturday:</span>
            <span>10:00 AM - 4:00 PM EST</span>
          </div>
          <div class="flex justify-between">
            <span>Sunday:</span>
            <span>Closed</span>
          </div>
        </div>
      </div>
    </div>
  `)));D.get("/about",async e=>e.html(st("About Us",`
    <h2 class="text-xl font-semibold mb-4">Our Mission</h2>
    <p class="text-gray-600 mb-6">Kwikr Directory connects Canadian homeowners with trusted, verified service providers across the country. We make it easy to find reliable professionals for any home service need.</p>
    
    <h2 class="text-xl font-semibold mb-4">Why Choose Kwikr?</h2>
    <ul class="list-disc pl-6 space-y-2 text-gray-600">
      <li>All service providers are verified and insured</li>
      <li>Competitive bidding ensures fair pricing</li>
      <li>Secure payment processing</li>
      <li>Canadian-focused platform with local expertise</li>
      <li>24/7 customer support</li>
    </ul>
  `)));D.get("/safety",async e=>e.html(st("Safety Guidelines",`
    <h2 class="text-xl font-semibold mb-4">Our Safety Commitment</h2>
    <p class="text-gray-600 mb-6">Your safety is our top priority. All service providers on Kwikr Directory are thoroughly vetted.</p>
    
    <h2 class="text-xl font-semibold mb-4">Safety Tips</h2>
    <ul class="list-disc pl-6 space-y-2 text-gray-600">
      <li>Always verify provider credentials and insurance</li>
      <li>Keep communication on the platform</li>
      <li>Report any safety concerns immediately</li>
      <li>Check reviews and ratings before hiring</li>
      <li>Never pay outside the platform</li>
    </ul>
  `)));D.get("/trust-safety",async e=>e.html(st("Trust & Safety",`
    <h2 class="text-xl font-semibold mb-4">Verification Process</h2>
    <p class="text-gray-600 mb-6">Every service provider undergoes a comprehensive verification process including background checks, insurance verification, and skills assessment.</p>
    
    <h2 class="text-xl font-semibold mb-4">Platform Security</h2>
    <ul class="list-disc pl-6 space-y-2 text-gray-600">
      <li>Secure payment processing with escrow protection</li>
      <li>Identity verification for all users</li>
      <li>24/7 monitoring and support</li>
      <li>Dispute resolution process</li>
      <li>Insurance coverage for all jobs</li>
    </ul>
  `)));D.get("/insurance",async e=>e.html(st("Insurance Claims",`
    <h2 class="text-xl font-semibold mb-4">Comprehensive Coverage</h2>
    <p class="text-gray-600 mb-6">All jobs on Kwikr Directory are covered by comprehensive insurance for your peace of mind.</p>
    
    <h2 class="text-xl font-semibold mb-4">Filing a Claim</h2>
    <ol class="list-decimal pl-6 space-y-2 text-gray-600">
      <li>Contact our support team within 48 hours of the incident</li>
      <li>Provide detailed documentation and photos</li>
      <li>Our claims team will review your case</li>
      <li>Resolution typically within 5-7 business days</li>
    </ol>
    
    <div class="bg-kwikr-green bg-opacity-10 p-4 rounded-lg mt-6">
      <p class="text-kwikr-dark font-medium">Need to file a claim? Contact us at claims@kwikr.ca or 1-800-KWIKR-CA</p>
    </div>
  `)));D.get("/privacy",async e=>e.html(st("Privacy Policy",`
    <h2 class="text-xl font-semibold mb-4">Information We Collect</h2>
    <p class="text-gray-600 mb-6">We collect information you provide directly, usage information, and device information to provide our services.</p>
    
    <h2 class="text-xl font-semibold mb-4">How We Use Your Information</h2>
    <ul class="list-disc pl-6 space-y-2 text-gray-600">
      <li>To provide and improve our services</li>
      <li>To process payments and transactions</li>
      <li>To communicate with you about our services</li>
      <li>To ensure platform safety and security</li>
    </ul>
    
    <p class="text-sm text-gray-500 mt-6">Last updated: January 2024</p>
  `)));D.get("/terms",async e=>e.html(st("Terms of Service",`
    <h2 class="text-xl font-semibold mb-4">Platform Usage</h2>
    <p class="text-gray-600 mb-6">By using Kwikr Directory, you agree to these terms and conditions.</p>
    
    <h2 class="text-xl font-semibold mb-4">User Responsibilities</h2>
    <ul class="list-disc pl-6 space-y-2 text-gray-600">
      <li>Provide accurate and truthful information</li>
      <li>Comply with all applicable laws and regulations</li>
      <li>Respect other users and maintain professionalism</li>
      <li>Pay for services as agreed</li>
    </ul>
    
    <h2 class="text-xl font-semibold mb-4">Platform Fees</h2>
    <p class="text-gray-600">Kwikr charges a 5% platform fee on completed jobs to maintain and improve our services.</p>
    
    <p class="text-sm text-gray-500 mt-6">Last updated: January 2024</p>
  `)));D.get("/careers",async e=>e.html(st("Careers",`
    <h2 class="text-xl font-semibold mb-4">Join Our Team</h2>
    <p class="text-gray-600 mb-6">We're always looking for talented individuals to help us revolutionize the service industry in Canada.</p>
    
    <h2 class="text-xl font-semibold mb-4">Current Openings</h2>
    <div class="space-y-4">
      <div class="border border-gray-200 rounded-lg p-4">
        <h3 class="font-medium">Software Engineer - Full Stack</h3>
        <p class="text-gray-600 text-sm">Toronto, ON • Full-time</p>
      </div>
      <div class="border border-gray-200 rounded-lg p-4">
        <h3 class="font-medium">Customer Success Manager</h3>
        <p class="text-gray-600 text-sm">Remote • Full-time</p>
      </div>
    </div>
    
    <div class="bg-kwikr-green bg-opacity-10 p-4 rounded-lg mt-6">
      <p class="text-kwikr-dark font-medium">Interested? Send your resume to careers@kwikr.ca</p>
    </div>
  `)));D.get("/press",async e=>e.html(st("Press & Media",`
    <h2 class="text-xl font-semibold mb-4">Media Kit</h2>
    <p class="text-gray-600 mb-6">Download our media kit for logos, company information, and press materials.</p>
    
    <h2 class="text-xl font-semibold mb-4">Recent Coverage</h2>
    <div class="space-y-4">
      <div class="border border-gray-200 rounded-lg p-4">
        <h3 class="font-medium">TechCrunch: "Canadian Service Platform Kwikr Secures Series A"</h3>
        <p class="text-gray-600 text-sm">January 2024</p>
      </div>
      <div class="border border-gray-200 rounded-lg p-4">
        <h3 class="font-medium">Globe and Mail: "The Future of Home Services in Canada"</h3>
        <p class="text-gray-600 text-sm">December 2023</p>
      </div>
    </div>
    
    <div class="bg-kwikr-green bg-opacity-10 p-4 rounded-lg mt-6">
      <p class="text-kwikr-dark font-medium">Media inquiries: press@kwikr.ca</p>
    </div>
  `)));D.get("/become-provider",async e=>e.html(st("Become a Provider",`
    <h2 class="text-xl font-semibold mb-4">Join Canada's Premier Service Platform</h2>
    <p class="text-gray-600 mb-6">Start earning with flexible work opportunities across Canada.</p>
    
    <h2 class="text-xl font-semibold mb-4">Benefits</h2>
    <ul class="list-disc pl-6 space-y-2 text-gray-600">
      <li>Set your own rates and schedule</li>
      <li>Access to thousands of potential customers</li>
      <li>Secure payment processing</li>
      <li>Marketing and business tools</li>
      <li>Insurance coverage for all jobs</li>
    </ul>
    
    <h2 class="text-xl font-semibold mb-4">Requirements</h2>
    <ul class="list-disc pl-6 space-y-2 text-gray-600">
      <li>Valid Canadian work authorization</li>
      <li>Relevant experience in your service area</li>
      <li>General liability insurance</li>
      <li>Clean background check</li>
    </ul>
    
    <div class="bg-kwikr-green bg-opacity-10 p-4 rounded-lg mt-6">
      <p class="text-kwikr-dark font-medium mb-2">Ready to get started?</p>
      <a href="/demo-worker" class="bg-kwikr-green text-white px-6 py-2 rounded-lg hover:bg-green-600 inline-block">
        Start Your Application
      </a>
    </div>
  `)));D.get("/admin",async e=>e.redirect("/admin/login"));D.get("/admin/login",async e=>e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Admin Portal Login - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-gradient-to-br from-kwikr-dark to-gray-900 min-h-screen flex items-center justify-center">
        <div class="max-w-md w-full mx-4">
            <!-- Logo -->
            <div class="text-center mb-8">
                <a href="/" class="text-3xl font-bold text-kwikr-green">
                    <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                </a>
                <p class="text-gray-300 mt-2">Platform Administration</p>
            </div>

            <!-- Login Form -->
            <div class="bg-white rounded-lg shadow-xl p-8">
                <h1 class="text-2xl font-bold text-gray-900 mb-6 text-center">Admin Login</h1>
                
                <form id="adminLoginForm" onsubmit="handleAdminLogin(event)">
                    <div class="mb-4">
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            <i class="fas fa-envelope mr-2"></i>Admin Email
                        </label>
                        <input type="email" id="adminEmail" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                               placeholder="admin@kwikr.ca" required>
                    </div>
                    
                    <div class="mb-6">
                        <label class="block text-sm font-medium text-gray-700 mb-2">
                            <i class="fas fa-lock mr-2"></i>Password
                        </label>
                        <input type="password" id="adminPassword" class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:border-kwikr-green" 
                               placeholder="Enter admin password" required>
                    </div>
                    
                    <button type="submit" class="w-full bg-kwikr-green text-white py-3 rounded-lg font-semibold hover:bg-green-600 transition-colors">
                        <i class="fas fa-sign-in-alt mr-2"></i>Login to Admin Portal
                    </button>
                </form>
                
                <div class="mt-6 text-center">
                    <div class="border-t border-gray-200 pt-4">
                        <button onclick="demoAdminLogin()" class="text-kwikr-green hover:text-green-600 text-sm font-medium">
                            <i class="fas fa-flask mr-1"></i>Demo Admin Access
                        </button>
                    </div>
                </div>
                
                <div class="mt-6 text-center">
                    <a href="/" class="text-gray-600 hover:text-kwikr-green text-sm">
                        <i class="fas fa-arrow-left mr-1"></i>Back to Homepage
                    </a>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/axios@1.6.0/dist/axios.min.js"><\/script>
        <script>
          async function handleAdminLogin(event) {
            event.preventDefault()
            
            const email = document.getElementById('adminEmail').value
            const password = document.getElementById('adminPassword').value
            
            try {
              const response = await axios.post('/api/auth/login', {
                email: email,
                password: password
              })
              
              if (response.data.user && response.data.user.role === 'admin') {
                // Set session cookie and redirect to admin portal
                document.cookie = \`session=\${response.data.sessionToken}; path=/; max-age=604800; secure=\${window.location.protocol === 'https:'}; samesite=lax\`
                window.location.href = '/admin/portal'
              } else {
                alert('Access denied. Admin credentials required.')
              }
            } catch (error) {
              console.error('Admin login error:', error)
              alert('Login failed. Please check your credentials.')
            }
          }
          
          async function demoAdminLogin() {
            try {
              // Create demo admin session
              const timestamp = Date.now()
              const demoToken = btoa(\`50:\${timestamp}:\${Math.random()}\`)
              
              // Set demo session cookie
              document.cookie = \`session=\${demoToken}; path=/; max-age=604800; secure=\${window.location.protocol === 'https:'}; samesite=lax\`
              
              // Redirect to admin portal
              window.location.href = '/admin/portal'
            } catch (error) {
              console.error('Demo admin login error:', error)
              alert('Demo login failed. Please try again.')
            }
          }
        <\/script>
    </body>
    </html>
  `));D.get("/admin/portal",xi,async e=>{const t=e.get("admin");return e.html(`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Admin Portal - Kwikr Directory Platform Management</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <script>
          tailwind.config = {
            theme: {
              extend: {
                colors: {
                  'kwikr-green': '#00C881',
                  'kwikr-dark': '#1a1a1a',
                  'kwikr-gray': '#f8f9fa'
                }
              }
            }
          }
        <\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
    </head>
    <body class="bg-kwikr-gray min-h-screen">
        <!-- Navigation -->
        <nav class="bg-kwikr-dark text-white shadow-lg">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <h1 class="text-xl font-bold text-kwikr-green">
                            <i class="fas fa-shield-alt mr-2"></i>Kwikr Admin Portal
                        </h1>
                    </div>
                    <div class="flex items-center space-x-4">
                        <span class="text-sm text-gray-300">Welcome, ${t.first_name}!</span>
                        <button onclick="logout()" class="text-gray-300 hover:text-red-400">
                            <i class="fas fa-sign-out-alt"></i> Logout
                        </button>
                    </div>
                </div>
            </div>
        </nav>

        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900">Platform Administration</h1>
                <p class="text-gray-600 mt-2">Manage and monitor the Kwikr Directory platform</p>
            </div>

            <!-- Quick Actions -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                <a href="/dashboard/admin" class="bg-white p-6 rounded-lg shadow-sm hover:shadow-md transition-shadow border-l-4 border-kwikr-green">
                    <div class="flex items-center">
                        <div class="text-kwikr-green text-2xl mr-4">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <div>
                            <h3 class="text-lg font-semibold text-gray-900">Analytics Dashboard</h3>
                            <p class="text-sm text-gray-600">Real-time platform metrics</p>
                        </div>
                    </div>
                </a>
                
                <a href="/demo" class="bg-white p-6 rounded-lg shadow-sm hover:shadow-md transition-shadow border-l-4 border-purple-500">
                    <div class="flex items-center">
                        <div class="text-purple-500 text-2xl mr-4">
                            <i class="fas fa-flask"></i>
                        </div>
                        <div>
                            <h3 class="text-lg font-semibold text-gray-900">Platform Demo</h3>
                            <p class="text-sm text-gray-600">Testing environment</p>
                        </div>
                    </div>
                </a>
                
                <div class="bg-white p-6 rounded-lg shadow-sm border-l-4 border-blue-500">
                    <div class="flex items-center">
                        <div class="text-blue-500 text-2xl mr-4">
                            <i class="fas fa-users"></i>
                        </div>
                        <div>
                            <h3 class="text-lg font-semibold text-gray-900">User Management</h3>
                            <p class="text-sm text-gray-600">Coming soon</p>
                        </div>
                    </div>
                </div>
                
                <div class="bg-white p-6 rounded-lg shadow-sm border-l-4 border-red-500">
                    <div class="flex items-center">
                        <div class="text-red-500 text-2xl mr-4">
                            <i class="fas fa-cogs"></i>
                        </div>
                        <div>
                            <h3 class="text-lg font-semibold text-gray-900">System Settings</h3>
                            <p class="text-sm text-gray-600">Coming soon</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Platform Status -->
            <div class="bg-white rounded-lg shadow-sm p-6 mb-8">
                <h2 class="text-xl font-semibold text-gray-900 mb-4">Platform Status</h2>
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div class="text-center">
                        <div class="text-green-500 text-3xl mb-2">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <h3 class="font-semibold text-gray-900">System Operational</h3>
                        <p class="text-sm text-gray-600">All services running normally</p>
                    </div>
                    <div class="text-center">
                        <div class="text-green-500 text-3xl mb-2">
                            <i class="fas fa-database"></i>
                        </div>
                        <h3 class="font-semibold text-gray-900">Database Healthy</h3>
                        <p class="text-sm text-gray-600">Connection stable</p>
                    </div>
                    <div class="text-center">
                        <div class="text-green-500 text-3xl mb-2">
                            <i class="fas fa-shield-check"></i>
                        </div>
                        <h3 class="font-semibold text-gray-900">Security Active</h3>
                        <p class="text-sm text-gray-600">All systems secure</p>
                    </div>
                </div>
            </div>

            <!-- Recent Activity -->
            <div class="bg-white rounded-lg shadow-sm p-6">
                <h2 class="text-xl font-semibold text-gray-900 mb-4">Recent Admin Activity</h2>
                <div class="space-y-3">
                    <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                        <div class="flex items-center">
                            <div class="w-8 h-8 bg-kwikr-green rounded-full flex items-center justify-center text-white text-sm mr-3">
                                <i class="fas fa-user-plus"></i>
                            </div>
                            <div>
                                <p class="text-sm font-medium text-gray-900">Admin login successful</p>
                                <p class="text-xs text-gray-500">${new Date().toLocaleString()}</p>
                            </div>
                        </div>
                        <span class="text-xs text-green-600 font-medium">SUCCESS</span>
                    </div>
                    <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                        <div class="flex items-center">
                            <div class="w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center text-white text-sm mr-3">
                                <i class="fas fa-chart-line"></i>
                            </div>
                            <div>
                                <p class="text-sm font-medium text-gray-900">Platform metrics updated</p>
                                <p class="text-xs text-gray-500">5 minutes ago</p>
                            </div>
                        </div>
                        <span class="text-xs text-blue-600 font-medium">SYSTEM</span>
                    </div>
                </div>
            </div>
        </div>

        <script>
          // Billing Toggle for Subscription Plans (Third instance scoped)
          (function() {
            let isAnnual = false;
            
            window.toggleBilling3 = function() {
              isAnnual = !isAnnual;
            const slider = document.getElementById('billingSlider');
            const monthlyPrices = document.querySelectorAll('.monthly-price');
            const annualPrices = document.querySelectorAll('.annual-price');
            
            if (isAnnual) {
              slider.classList.remove('translate-x-1');
              slider.classList.add('translate-x-6');
              monthlyPrices.forEach(el => el.classList.add('hidden'));
              annualPrices.forEach(el => el.classList.remove('hidden'));
            } else {
              slider.classList.remove('translate-x-6');
              slider.classList.add('translate-x-1');
              monthlyPrices.forEach(el => el.classList.remove('hidden'));
              annualPrices.forEach(el => el.classList.add('hidden'));
            }
          };
          })();
          
          function logout() {
            document.cookie = 'session=; path=/; expires=Thu, 01 Jan 1970 00:00:01 GMT;'
            window.location.href = '/admin/login'
          }
        <\/script>
    </body>
    </html>
  `)});function P0(){return`
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Choose Your Growth Plan - Kwikr Directory</title>
        <script src="https://cdn.tailwindcss.com"><\/script>
        <link href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.4.0/css/all.min.css" rel="stylesheet">
        <style>
          .kwikr-green { color: #10b981; }
          .bg-kwikr-green { background-color: #10b981; }
          .border-kwikr-green { border-color: #10b981; }
        </style>
    </head>
    <body class="bg-gray-50 min-h-screen">
        <!-- Navigation -->
        <nav class="bg-white shadow-sm">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="flex justify-between items-center h-16">
                    <div class="flex items-center">
                        <a href="/" class="text-2xl font-bold text-kwikr-green hover:text-green-600">
                            <i class="fas fa-bolt mr-2"></i>Kwikr Directory
                        </a>
                    </div>
                    <div class="flex items-center space-x-4">
                        <a href="/" class="text-gray-700 hover:text-kwikr-green">Home</a>
                        <a href="/auth/login" class="text-gray-700 hover:text-kwikr-green">Sign In</a>
                        <a href="/subscriptions/pricing" class="bg-kwikr-green text-white px-4 py-2 rounded-lg hover:bg-green-600">Join Kwikr</a>
                    </div>
                </div>
            </div>
        </nav>

        <!-- Hero Section -->
        <div class="bg-kwikr-green py-16">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
                <h1 class="text-4xl font-bold text-white mb-4">Choose Your Growth Plan</h1>
                <p class="text-xl text-green-100 mb-8">Get more leads, grow your business, and dominate your local market</p>
                
                <!-- Toggle -->
                <div class="flex justify-center items-center mb-8">
                    <span class="text-white mr-3">Monthly</span>
                    <label class="relative inline-flex items-center cursor-pointer">
                        <input type="checkbox" id="billingToggle" class="sr-only peer">
                        <div class="w-11 h-6 bg-green-200 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600"></div>
                    </label>
                    <span class="text-white ml-3">Annual <span class="bg-yellow-400 text-green-900 px-2 py-1 rounded-full text-xs font-bold">Save 10%</span></span>
                </div>
            </div>
        </div>

        <!-- Pricing Plans -->
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
            <div class="grid md:grid-cols-3 gap-8">
                
                <!-- Pay-as-you-go Plan -->
                <div class="bg-white rounded-lg shadow-lg p-8 relative">
                    <div class="text-center">
                        <h3 class="text-2xl font-bold text-gray-900 mb-4">Pay-as-you-go</h3>
                        <div class="text-4xl font-bold text-gray-900 mb-2">FREE</div>
                        <p class="text-gray-600 mb-6">Perfect for: New contractors, part-time workers, or anyone just testing the platform.</p>
                        
                        <!-- Features -->
                        <ul class="text-left space-y-3 mb-8">
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Search Results Tier - Tier 3</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Listed Categories - 1 Categories</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Fee per Completed Booking - $2.00 per booking</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Setup Cost - 0.00</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Access to Booking Tools</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Lead Inbox Access</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Kwikr Dashboard Access</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Message Center Access</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Cancel Anytime</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Upgrade Anytime</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Keep Revenue Percentage - 80%</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Risk-free Entry</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Zero Upfront Cost</li>
                        </ul>
                        
                        <a href="/signup/worker?plan=payasyougo" class="w-full bg-gray-100 text-gray-800 py-3 px-6 rounded-lg hover:bg-gray-200 transition-colors font-semibold block text-center">
                            START FREE
                        </a>
                        <p class="text-xs text-gray-500 mt-2">Risk-free entry with zero upfront cost</p>
                    </div>
                </div>

                <!-- Growth Plan -->
                <div class="bg-white rounded-lg shadow-lg p-8 relative border-2 border-kwikr-green">
                    <!-- Most Popular Badge -->
                    <div class="absolute -top-4 left-1/2 transform -translate-x-1/2">
                        <span class="bg-kwikr-green text-white px-4 py-2 rounded-full text-sm font-semibold">
                            <i class="fas fa-star mr-1"></i>Most Popular
                        </span>
                    </div>
                    
                    <div class="text-center mt-4">
                        <h3 class="text-2xl font-bold text-gray-900 mb-4">Growth Plan</h3>
                        <div class="text-4xl font-bold text-kwikr-green mb-2">
                            $<span id="growth-price">99</span><span class="text-lg">/month</span>
                        </div>
                        <p class="text-gray-600 mb-6">Perfect for: Contractors ready to grow and lower their cost per job.</p>
                        
                        <!-- Features -->
                        <ul class="text-left space-y-3 mb-8">
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Search Results Tier - Tier 2</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Listed Categories - 5 Categories</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Unlimited Leads</li>
                            <li class="flex items-center"><i class="fas fa-times text-red-500 mr-2"></i> Per-Job Fees - No</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Display Website Link</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Display Phone Number</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Verified Pro Badge</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Booking & Lead Management Tools</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Reminders & Client Follow-ups</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Priority Support</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Keep Job Revenue - 100%</li>
                        </ul>
                        
                        <a href="/signup/worker?plan=growth" class="w-full bg-kwikr-green text-white py-3 px-6 rounded-lg hover:bg-green-600 transition-colors font-semibold block text-center">
                            CHOOSE GROWTH
                        </a>
                    </div>
                </div>

                <!-- Pro Plan -->
                <div class="bg-white rounded-lg shadow-lg p-8 relative">
                    <!-- Premium Badge -->
                    <div class="absolute -top-4 left-1/2 transform -translate-x-1/2">
                        <span class="bg-yellow-500 text-white px-4 py-2 rounded-full text-sm font-semibold">
                            <i class="fas fa-crown mr-1"></i>Premium Plan
                        </span>
                    </div>
                    
                    <div class="text-center mt-4">
                        <h3 class="text-2xl font-bold text-gray-900 mb-4">Pro Plan</h3>
                        <div class="text-4xl font-bold text-gray-900 mb-2">
                            $<span id="pro-price">199</span><span class="text-lg">/month</span>
                        </div>
                        <p class="text-gray-600 mb-6">Perfect for: High-performing contractors who want to dominate local visibility and automate growth.</p>
                        
                        <!-- Features -->
                        <ul class="text-left space-y-3 mb-8">
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Search Results Tier - Tier 1</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Featured Ribbon</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Listed Categories - 10 Categories</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Unlimited Leads</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Display Website Link</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Display Phone Number</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Verified Pro Badge</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Booking & Lead Management Tools</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Reminders & Client Follow-ups</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Priority Support</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Keep Job Revenue - 100%</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Monthly Social Media Video Reels</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Video Reels Count - 2</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Video Reels Frequency - monthly</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Early Access to New Tools & Features</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Premium Support</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> 1:1 Onboarding</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Top-tier Marketing Built In</li>
                            <li class="flex items-center"><i class="fas fa-check text-kwikr-green mr-2"></i> Keep Job Revenue - 100%</li>
                        </ul>
                        
                        <a href="/signup/worker?plan=pro" class="w-full bg-yellow-500 text-white py-3 px-6 rounded-lg hover:bg-yellow-600 transition-colors font-semibold block text-center">
                            GO PRO
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Want to See Platform First Section -->
        <div class="bg-green-100 py-12">
            <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
                <div class="bg-yellow-400 text-green-900 px-4 py-2 rounded-full text-sm font-bold inline-block mb-4">
                    <i class="fas fa-lightbulb mr-1"></i>Want to See the Platform First?
                </div>
                <p class="text-lg text-gray-700 mb-6">Not ready to commit? Explore Kwikr Directory and see how it works.</p>
                <a href="/" class="bg-kwikr-green text-white px-8 py-3 rounded-lg hover:bg-green-600 transition-colors font-semibold inline-block">
                    <i class="fas fa-eye mr-2"></i>Browse Platform
                </a>
            </div>
        </div>

        <script>
          // Billing Toggle
          document.getElementById('billingToggle').addEventListener('change', function() {
            const isAnnual = this.checked;
            if (isAnnual) {
              document.getElementById('growth-price').textContent = '89';
              document.getElementById('pro-price').textContent = '179';
            } else {
              document.getElementById('growth-price').textContent = '99';
              document.getElementById('pro-price').textContent = '199';
            }
          });
        <\/script>
    </body>
    </html>
  `}const Fl=new ce,A0=Object.assign({"/src/index.tsx":D});let yc=!1;for(const[,e]of Object.entries(A0))e&&(Fl.all("*",t=>{let s;try{s=t.executionCtx}catch{}return e.fetch(t.req.raw,t.env,s)}),Fl.notFound(t=>{let s;try{s=t.executionCtx}catch{}return e.fetch(t.req.raw,t.env,s)}),yc=!0);if(!yc)throw new Error("Can't import modules from ['/src/index.ts','/src/index.tsx','/app/server.ts']");class O0{constructor(t,s){this.db=t,this.stripe=s}async createDispute(t,s){try{const r=await this.db.prepare(`
        SELECT * FROM invoices WHERE id = ?
      `).bind(t.invoice_id).first();if(!r)return{success:!1,message:"Invoice not found"};if(await this.db.prepare(`
        SELECT id FROM invoice_disputes 
        WHERE invoice_id = ? AND status NOT IN ('resolved', 'closed')
      `).bind(t.invoice_id).first())return{success:!1,message:"An active dispute already exists for this invoice"};const a=t.amount_disputed||r.total_amount,n=new Date;t.dispute_type==="payment_method"?n.setDate(n.getDate()+7):n.setDate(n.getDate()+3);const l=(await this.db.prepare(`
        INSERT INTO invoice_disputes (
          invoice_id, initiated_by, client_id, worker_id,
          dispute_type, dispute_category, priority, title, reason, description,
          amount_disputed, currency, status, due_date,
          created_at, updated_at, metadata
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'open', ?, datetime('now'), datetime('now'), ?)
      `).bind(t.invoice_id,s,r.client_id,r.worker_id,t.dispute_type,t.dispute_category,t.priority||"medium",t.title,t.reason,t.description||null,a,r.currency,n.toISOString(),JSON.stringify({created_by_user_type:s===r.client_id?"client":"worker"})).run()).meta.last_row_id;if(t.evidence&&t.evidence.length>0)for(const c of t.evidence)await this.addEvidence(l,s,{evidence_type:c.type,file_url:c.file_url,title:c.title,description:c.description});await this.db.prepare(`
        UPDATE invoices SET status = 'disputed', updated_at = datetime('now')
        WHERE id = ?
      `).bind(t.invoice_id).run(),await this.addTimelineEntry(l,s,"created","","open",`Dispute created: ${t.title}`),await this.addMessage(l,0,null,{message_type:"system_update",subject:"Dispute Created",content:`A new dispute has been filed for invoice ${r.invoice_number}. Our team will review and respond within the specified timeframe.`,is_internal:!1});const d=await this.getDisputeById(l);return{success:!0,message:"Dispute created successfully",dispute_id:l,dispute:d==null?void 0:d.dispute}}catch(r){return{success:!1,message:`Failed to create dispute: ${r.message}`}}}async getDisputeById(t){try{const s=await this.db.prepare(`
        SELECT * FROM invoice_disputes WHERE id = ?
      `).bind(t).first();if(!s)return{success:!1,message:"Dispute not found"};const r=await this.db.prepare(`
        SELECT * FROM invoice_dispute_evidence 
        WHERE dispute_id = ? 
        ORDER BY created_at DESC
      `).bind(t).all(),i=await this.db.prepare(`
        SELECT * FROM invoice_dispute_messages 
        WHERE dispute_id = ? AND is_internal = FALSE
        ORDER BY created_at ASC
      `).bind(t).all();return{success:!0,message:"Dispute retrieved successfully",dispute:s,evidence:r.results,messages:i.results}}catch(s){return{success:!1,message:`Failed to get dispute: ${s.message}`}}}async listDisputes(t={}){try{let s=`
        SELECT id.*, i.invoice_number, i.total_amount as invoice_total,
               uc.first_name as client_first_name, uc.last_name as client_last_name,
               uw.first_name as worker_first_name, uw.last_name as worker_last_name
        FROM invoice_disputes id
        JOIN invoices i ON id.invoice_id = i.id
        JOIN users uc ON id.client_id = uc.id
        JOIN users uw ON id.worker_id = uw.id
        WHERE 1=1
      `;const r=[];t.user_id&&(s+=" AND (id.client_id = ? OR id.worker_id = ?)",r.push(t.user_id,t.user_id)),t.status&&(s+=" AND id.status = ?",r.push(t.status)),t.dispute_type&&(s+=" AND id.dispute_type = ?",r.push(t.dispute_type)),t.priority&&(s+=" AND id.priority = ?",r.push(t.priority)),t.assigned_to&&(s+=" AND id.assigned_to = ?",r.push(t.assigned_to));const i=s.replace(/SELECT.*FROM/,"SELECT COUNT(*) as total FROM"),a=await this.db.prepare(i).bind(...r).first(),n=(a==null?void 0:a.total)||0;return s+=" ORDER BY id.created_at DESC",t.limit&&(s+=" LIMIT ?",r.push(t.limit),t.offset&&(s+=" OFFSET ?",r.push(t.offset))),{success:!0,disputes:(await this.db.prepare(s).bind(...r).all()).results,total:n}}catch{return{success:!1,disputes:[],total:0}}}async updateDisputeStatus(t,s,r,i){try{const a=await this.db.prepare(`
        SELECT * FROM invoice_disputes WHERE id = ?
      `).bind(t).first();if(!a)return{success:!1,message:"Dispute not found"};const n=a.status;if(await this.db.prepare(`
        UPDATE invoice_disputes 
        SET status = ?, updated_at = datetime('now')
        WHERE id = ?
      `).bind(s,t).run(),await this.addTimelineEntry(t,r,"status_changed",n,s,i||`Status changed from ${n} to ${s}`),await this.addMessage(t,0,null,{message_type:"status_change",subject:"Dispute Status Updated",content:`Dispute status has been updated to: ${s}${i?`

Notes: `+i:""}`,is_internal:!1}),s==="resolved"||s==="closed"){await this.db.prepare(`
          UPDATE invoices SET status = ?, updated_at = datetime('now')
          WHERE id = ?
        `).bind(s==="resolved"?"paid":"cancelled",a.invoice_id).run();const o=s==="resolved"?"resolved_at":"closed_at";await this.db.prepare(`
          UPDATE invoice_disputes 
          SET ${o} = datetime('now')
          WHERE id = ?
        `).bind(t).run()}return{success:!0,message:`Dispute status updated to ${s}`}}catch(a){return{success:!1,message:`Failed to update status: ${a.message}`}}}async addEvidence(t,s,r){try{const a=(await this.db.prepare(`
        INSERT INTO invoice_dispute_evidence (
          dispute_id, submitted_by, evidence_type, file_url, file_name,
          title, description, created_at, updated_at
        ) VALUES (?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))
      `).bind(t,s,r.evidence_type,r.file_url||null,r.file_name||null,r.title,r.description||null).run()).meta.last_row_id;return await this.addTimelineEntry(t,s,"evidence_added","",r.evidence_type,`Evidence added: ${r.title}`),{success:!0,message:"Evidence added successfully",evidence_id:a}}catch(i){return{success:!1,message:`Failed to add evidence: ${i.message}`}}}async addMessage(t,s,r,i){try{const n=(await this.db.prepare(`
        INSERT INTO invoice_dispute_messages (
          dispute_id, sender_id, recipient_id, message_type, subject, content,
          is_internal, created_at, updated_at
        ) VALUES (?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'))
      `).bind(t,s,r,i.message_type||"message",i.subject||null,i.content,i.is_internal||!1).run()).meta.last_row_id;return i.is_internal||await this.addTimelineEntry(t,s,"message_sent","",i.message_type||"message",`Message sent: ${i.subject||"New message"}`),{success:!0,message:"Message added successfully",message_id:n}}catch(a){return{success:!1,message:`Failed to add message: ${a.message}`}}}async resolveDispute(t,s,r){try{const i=await this.db.prepare(`
        SELECT id.*, i.payment_intent_id, i.invoice_number
        FROM invoice_disputes id
        JOIN invoices i ON id.invoice_id = i.id
        WHERE id.id = ?
      `).bind(t).first();if(!i)return{success:!1,message:"Dispute not found"};let a=!1;if(s.resolution_type==="full_refund"||s.resolution_type==="partial_refund"){const n=s.resolution_type==="full_refund"?i.amount_disputed:s.resolution_amount||0;if(i.payment_intent_id&&n>0)try{const o=await this.stripe.refunds.create({payment_intent:i.payment_intent_id,amount:Math.round(n*100),reason:"requested_by_customer",metadata:{dispute_id:t.toString(),invoice_number:i.invoice_number,resolution_type:s.resolution_type}});a=!0,s.resolution_notes+=`

Refund processed: $${n.toFixed(2)} (Stripe Refund ID: ${o.id})`}catch(o){return{success:!1,message:`Failed to process refund: ${o.message}`}}}return await this.db.prepare(`
        UPDATE invoice_disputes 
        SET status = 'resolved', 
            resolution_type = ?, 
            resolution_amount = ?, 
            resolution_notes = ?,
            resolved_at = datetime('now'),
            updated_at = datetime('now')
        WHERE id = ?
      `).bind(s.resolution_type,s.resolution_amount||null,s.resolution_notes,t).run(),await this.db.prepare(`
        UPDATE invoices SET status = 'paid', updated_at = datetime('now')
        WHERE id = ?
      `).bind(i.invoice_id).run(),await this.addTimelineEntry(t,r,"resolved",i.status,"resolved",`Dispute resolved: ${s.resolution_type} - ${s.resolution_notes}`),s.notify_parties!==!1&&await this.addMessage(t,r,null,{message_type:"resolution_offer",subject:"Dispute Resolved",content:`This dispute has been resolved with the following outcome:

Resolution: ${s.resolution_type}

Details: ${s.resolution_notes}`,is_internal:!1}),{success:!0,message:"Dispute resolved successfully",processed_refund:a}}catch(i){return{success:!1,message:`Failed to resolve dispute: ${i.message}`}}}async handleStripeDispute(t){try{const s=await this.db.prepare(`
        SELECT * FROM invoices WHERE payment_intent_id = ?
      `).bind(t.payment_intent).first();if(!s)return{success:!1,message:"Invoice not found for Stripe dispute"};if(await this.db.prepare(`
        SELECT * FROM stripe_dispute_mappings WHERE stripe_dispute_id = ?
      `).bind(t.id).first())return{success:!1,message:"Stripe dispute already processed"};const i=await this.createDispute({invoice_id:s.id,dispute_type:"payment_method",dispute_category:"chargeback",title:`Payment Dispute - ${s.invoice_number}`,reason:`Stripe chargeback: ${t.reason}`,description:`Automatic dispute created from Stripe chargeback. Reason: ${t.reason}`,amount_disputed:t.amount/100,priority:"high"},0);if(!i.success)return i;const a=i.dispute_id;return await this.db.prepare(`
        INSERT INTO stripe_dispute_mappings (
          invoice_dispute_id, stripe_dispute_id, stripe_charge_id, 
          stripe_payment_intent_id, stripe_status, stripe_reason,
          stripe_amount, stripe_currency, evidence_due_by,
          created_at, updated_at, stripe_metadata
        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, datetime('now'), datetime('now'), ?)
      `).bind(a,t.id,t.charge,t.payment_intent,t.status,t.reason,t.amount,t.currency,new Date(t.evidence_details.due_by*1e3).toISOString(),JSON.stringify(t)).run(),{success:!0,message:"Stripe dispute processed successfully",dispute_id:a}}catch(s){return{success:!1,message:`Failed to handle Stripe dispute: ${s.message}`}}}async addTimelineEntry(t,s,r,i,a,n){await this.db.prepare(`
      INSERT INTO invoice_dispute_timeline (
        dispute_id, user_id, action_type, old_value, new_value, 
        description, is_system_action, created_at
      ) VALUES (?, ?, ?, ?, ?, ?, ?, datetime('now'))
    `).bind(t,s||null,r,i,a,n,s===0||s===null).run()}async getDisputeAnalytics(t={}){try{let s="";const r=[];t.start_date&&(s+=" AND created_at >= ?",r.push(t.start_date)),t.end_date&&(s+=" AND created_at <= ?",r.push(t.end_date)),t.dispute_type&&(s+=" AND dispute_type = ?",r.push(t.dispute_type));const i=await this.db.prepare(`
        SELECT 
          COUNT(*) as total_disputes,
          COUNT(CASE WHEN status = 'open' THEN 1 END) as open_disputes,
          COUNT(CASE WHEN status = 'resolved' THEN 1 END) as resolved_disputes,
          COUNT(CASE WHEN resolution_type = 'full_refund' THEN 1 END) as full_refunds,
          COUNT(CASE WHEN resolution_type = 'partial_refund' THEN 1 END) as partial_refunds,
          AVG(amount_disputed) as avg_dispute_amount,
          SUM(CASE WHEN resolution_type IN ('full_refund', 'partial_refund') THEN COALESCE(resolution_amount, amount_disputed) ELSE 0 END) as total_refunded
        FROM invoice_disputes 
        WHERE 1=1 ${s}
      `).bind(...r).first(),a=await this.db.prepare(`
        SELECT dispute_type, COUNT(*) as count
        FROM invoice_disputes 
        WHERE 1=1 ${s}
        GROUP BY dispute_type
        ORDER BY count DESC
      `).bind(...r).all(),n=await this.db.prepare(`
        SELECT 
          dispute_type,
          COUNT(*) as total,
          COUNT(CASE WHEN status = 'resolved' THEN 1 END) as resolved,
          ROUND(COUNT(CASE WHEN status = 'resolved' THEN 1 END) * 100.0 / COUNT(*), 2) as resolution_rate
        FROM invoice_disputes 
        WHERE 1=1 ${s}
        GROUP BY dispute_type
      `).bind(...r).all();return{success:!0,analytics:{statistics:i,by_type:a.results,resolution_rates:n.results}}}catch{return{success:!1,analytics:null}}}}const rt=Object.freeze(Object.defineProperty({__proto__:null,InvoiceDisputeService:O0},Symbol.toStringTag,{value:"Module"}));export{Fl as default};
